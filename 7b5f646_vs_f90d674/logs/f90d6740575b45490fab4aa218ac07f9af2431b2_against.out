cset: moving following pidspec: 23680
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.926039389 seconds)
loading group "string"... done (took 0.580995698 seconds)
loading group "linalg"... done (took 9.146927133 seconds)
loading group "parallel"... done (took 0.17891492 seconds)
loading group "find"... done (took 1.461693589 seconds)
loading group "tuple"... done (took 2.146435729 seconds)
loading group "dates"... done (took 1.423702184 seconds)
loading group "micro"... done (took 0.229617217 seconds)
loading group "io"... done (took 0.615203099 seconds)
loading group "scalar"... done (took 45.879183271 seconds)
loading group "sparse"... done (took 13.882522498 seconds)
loading group "broadcast"... done (took 1.124305687 seconds)
loading group "union"... done (took 12.496303558 seconds)
loading group "simd"... done (took 2.621140441 seconds)
loading group "random"... done (took 10.536051864 seconds)
loading group "problem"... done (took 1831.866166384 seconds)
loading group "array"... done (took 26.367952539 seconds)
loading group "misc"... done (took 1.146135111 seconds)
loading group "sort"... done (took 3.902788997 seconds)
loading group "collection"... done (took 19.38550882 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6754436 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139363856 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.16961304 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.351681735 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19480428 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162601026 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1664129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.561025275 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.986134396 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.219366153 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145410284 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.560342769 seconds)
done (took 6.026801786 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.279651497 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.43828238 seconds)
    (2/2) benchmarking "String"...
    done (took 0.13268841 seconds)
  done (took 1.211060427 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077587985 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177474834 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098997224 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112460524 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114684049 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111972484 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096279333 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114050455 seconds)
  done (took 1.471210571 seconds)
done (took 3.688203879 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500311075 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.838438623 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.49690422 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128405166 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157713127 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.150629379 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.308959587 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.169026412 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120977055 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087915484 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174018964 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.364720586 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475545574 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957210781 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088538588 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130969221 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.095840896 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.713509538 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.087518291 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.136246742 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527069514 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.113366116 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.12278255 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141940462 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190800404 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133307597 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169700884 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097288633 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672709608 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102687201 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185810225 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101919563 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166340323 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.243613929 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098101998 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095346249 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67623461 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.177430231 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112174146 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103360603 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676481976 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080128495 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193364248 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.098732731 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110873082 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182309276 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114511445 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08047849 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104708379 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.093734459 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158342286 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.458700151 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106094475 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147061113 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.10860423 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686311584 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097044047 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156105302 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142062418 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098652132 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09515803 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108982383 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151962405 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110062807 seconds)
  done (took 19.51811668 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118417507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142151875 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096239083 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141773308 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144628906 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098401741 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08490748 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096527564 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111508531 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189284561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13957561 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146249256 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092872818 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081872813 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11959089 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251096913 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107274651 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124529802 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082525514 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108362635 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143691464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097687198 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111435326 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111665729 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172312265 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206754206 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107862869 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123384703 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092962672 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099178216 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143479372 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.162177296 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075501214 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096682929 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18755266 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122071986 seconds)
  done (took 5.189997898 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199328119 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116654118 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18995075 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175657116 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145216049 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161742901 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117907097 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265858928 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.175062742 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181908479 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112695565 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112389383 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078260559 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097010797 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077771215 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.667666799 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183104268 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150072165 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125674514 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102086128 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081937218 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387381603 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102406347 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082363226 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102511281 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073165099 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175363687 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103818916 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.288832764 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12001771 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09044897 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136685682 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212138032 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117608414 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139759505 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102007237 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083399256 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.230115574 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092024489 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.137852295 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096906499 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111637024 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13809106 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137372028 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100574142 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09607486 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.243039498 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0846823 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124226041 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.075907479 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200411052 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098418756 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100286129 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.35556288 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117601967 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085646623 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098915535 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283491298 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133740395 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084427472 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079653209 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104945653 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098756545 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079787934 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.414585981 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10999005 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.908319489 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083535429 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158964313 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102274326 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10834952 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.131169854 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08766047 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10351695 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1019267 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099001869 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080500612 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098196795 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080337002 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102893527 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099698769 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104381489 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079611324 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165842931 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085750802 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117694847 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117919962 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12648683 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087559109 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09719354 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114676494 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099418016 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083504318 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148146833 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107077584 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118378185 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102344823 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129199697 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100104478 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186759928 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082121013 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125769163 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101645979 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115209741 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.124625083 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098793987 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08642461 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097578941 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080792062 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165289846 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08272105 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080162788 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103277209 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112771296 seconds)
  done (took 23.711732517 seconds)
done (took 49.066426466 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.455331076 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098202159 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113493671 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112792445 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110789881 seconds)
  done (took 1.60892066 seconds)
done (took 2.30433281 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.351546265 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.180039859 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101452837 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195357309 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08692174 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202458613 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.170418926 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117496768 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198533333 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10002362 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17578133 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098952812 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086956919 seconds)
  done (took 2.783618446 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093841184 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120564613 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082241817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11196174 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076047955 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110544005 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093022731 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137252918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09199534 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103848603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0768134 seconds)
  done (took 1.789467965 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091430925 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114642442 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08191144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108176967 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077032305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089870017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108641825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11778572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091883514 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104326876 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077395095 seconds)
  done (took 1.756348643 seconds)
done (took 7.012866304 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.044044537 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.151462871 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118916977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167089293 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347221094 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211729806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.522413976 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134958156 seconds)
  done (took 11.569090301 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.133626204 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10275374 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081961979 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100493996 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.080618428 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100054936 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08183474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101179097 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083785461 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098208362 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081466169 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100817844 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084153667 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102483858 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083764718 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0992543 seconds)
  done (took 2.272936889 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120446015 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119059206 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106800738 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111307003 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086131043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104535081 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088949287 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103818432 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084443158 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102670954 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107954693 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091338173 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107253636 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08444376 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105139662 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092481731 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101887057 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104549317 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089532714 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105902235 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091720576 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103318258 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106181165 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09206843 seconds)
  done (took 3.215559898 seconds)
done (took 17.751113621 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170417942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0847959 seconds)
  done (took 0.952570144 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101664896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121280085 seconds)
  done (took 0.923088537 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109039183 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09835263 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137183088 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114429164 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082688542 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098844883 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115972606 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10076624 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083407371 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100796573 seconds)
  done (took 1.74663444 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086701914 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100188444 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089966263 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120385881 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111240692 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085696402 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104464504 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086753183 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105970645 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081417191 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107310452 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118573747 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089894396 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121142334 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08803677 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106750075 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109888586 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08765349 seconds)
  done (took 2.508339962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08027509 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082623025 seconds)
  done (took 0.867933657 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083855769 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097038931 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085413388 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10135552 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081076416 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097068381 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081624537 seconds)
  done (took 1.333178009 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.50624949 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.257940746 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335943894 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101960724 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153390417 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367727493 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135456716 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113236345 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113315299 seconds)
  done (took 2.832155282 seconds)
done (took 11.86864088 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091049708 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.190661614 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.543364068 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118176963 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078256148 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156863455 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.266096884 seconds)
done (took 2.148052256 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349034679 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12442873 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090042501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080964327 seconds)
  done (took 1.346559309 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08123239 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104475775 seconds)
  done (took 0.898951992 seconds)
done (took 2.959686777 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079353761 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133397551 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07835173 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096804633 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077105337 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097787596 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078075273 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077476047 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098952088 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080641164 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097127463 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07836247 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.0969323 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080706542 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077561688 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095903958 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079779123 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097356038 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077990024 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094884209 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078072556 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096604717 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.200696906 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078009106 seconds)
  done (took 2.972386004 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099476854 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09667951 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085305992 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104053214 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085321677 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103730076 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104616231 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08150412 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105265001 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084288594 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102330486 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085315171 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099668347 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085139128 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101104199 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102539984 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086862118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098725456 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083550881 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102694973 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087224954 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098964842 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085586087 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104224582 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101739987 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085819436 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100024481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082073755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103855541 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085258559 seconds)
  done (took 3.546202146 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087717102 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076554217 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097391782 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089604872 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096998995 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083366096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095288094 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078878762 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098552246 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078803771 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097846636 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079065469 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096492842 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080420221 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080177246 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104829106 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11478545 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079152387 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078781401 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09850365 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084081238 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096264805 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082067007 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.096246968 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078736133 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09556326 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080052684 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0783044 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097404875 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0781942 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101369021 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086009542 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096048273 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092722422 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102645766 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078644178 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105350876 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078328972 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097131208 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078808866 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095746262 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078732539 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078142785 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.109063415 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082652374 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096673292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079198443 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097358127 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079880774 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09933034 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078876384 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095947894 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0818749 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097994666 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085507539 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077926006 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098248319 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078101572 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098155868 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078885597 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095712346 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078994533 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10288958 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079790316 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12144256 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091489131 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096797919 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081041755 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100782399 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088227676 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098921908 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098377939 seconds)
  done (took 7.200885232 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082628823 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10529258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079761324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09730199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077997357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079230546 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104683981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097445864 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082774618 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116732839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080335551 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098226497 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081225884 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100797388 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080155731 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098234492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090862674 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094900103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080236369 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100344346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080179272 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103810168 seconds)
  done (took 2.735599078 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225217433 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103806244 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143921223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113779691 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096758776 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111482022 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102989457 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087337035 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104342061 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090497295 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107538595 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087925078 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117743353 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107525972 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089075197 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108170763 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103764711 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090696312 seconds)
  done (took 2.714860379 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093539061 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097670227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105511556 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097609272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080607941 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101822131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088712327 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118349723 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102459174 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083946409 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111348338 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085856943 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102818278 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083266211 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102721454 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083255877 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103046033 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083142529 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111369771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106497308 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090190256 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111105871 seconds)
  done (took 2.869431144 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097158494 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099430969 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113220661 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101218647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076463527 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095867194 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087289802 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097828302 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105521374 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081558894 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09676735 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078482441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.103539898 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080770811 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103592674 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080587875 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10140741 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082842789 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101791936 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078572096 seconds)
  done (took 2.586064205 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123766187 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113862319 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097300227 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12506085 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114300716 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097128675 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12583311 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114325441 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097599395 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127855717 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096719351 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114592942 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124599639 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104745223 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114220659 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126019331 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108455479 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125098364 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114464663 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097480176 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127689757 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114132091 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107999556 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114854116 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097120218 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114985232 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114155413 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105259272 seconds)
  done (took 3.886637121 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080048247 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079132558 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095246706 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077372948 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096114839 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077583012 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096343764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080372664 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081609926 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098520751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080155196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100704516 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082002199 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099624198 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082284485 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099058707 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083620861 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080916948 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097917846 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080555647 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.10061895 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082556293 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100285068 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080844658 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079577776 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100316233 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080135211 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098435367 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082205644 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097805118 seconds)
  done (took 3.380335159 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089159847 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104034283 seconds)
  done (took 0.919066094 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078356411 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114778929 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077809571 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102696215 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087259156 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100556428 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093500555 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107305109 seconds)
  done (took 1.488263993 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105006584 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118468442 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086993648 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110036306 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.101083424 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120980247 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166970242 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086573896 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10581157 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081127007 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118195657 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080724643 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110659585 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105649863 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092775527 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115408686 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081453022 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112546303 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091896057 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10439554 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090366906 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119334128 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094483175 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107569283 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084140108 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110795122 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112328735 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093301703 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10450826 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093613838 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10577234 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07559962 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106622684 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08971599 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100475233 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.104079811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121692986 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089651735 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113872338 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090883237 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112338245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09507988 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095876962 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109457544 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098322218 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108525879 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092079308 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098738696 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085839141 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106421959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080182953 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106225228 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078933427 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112048096 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095077373 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12263606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086979268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108276186 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090298053 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106401366 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092822377 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107742527 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112988265 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089232146 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113769918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103590469 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112476831 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079818279 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09575836 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083407781 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113329812 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111279117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115041832 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090773985 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109290523 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082030227 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108673274 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091646135 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111209161 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114034446 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090951157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111100908 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096190653 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106053625 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089300826 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110755649 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087575524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106194072 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085744721 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124830048 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087885412 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100687676 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086311166 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114644546 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090264299 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.109937205 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086311945 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113312497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078742752 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10938475 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091900904 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110670032 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099113015 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108449738 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088192672 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109799067 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113464827 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089669309 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107065859 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081312206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109752826 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087543215 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111774725 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079562211 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107897536 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089387673 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108724996 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096760253 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.104680492 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090316252 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115224303 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097321109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105872167 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081100191 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108022648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090970125 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112775978 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097300962 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106488814 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080670325 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099348127 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095268407 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108061185 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092119457 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109454193 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091078289 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098208004 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084057633 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10946959 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096963384 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108669284 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110357524 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096831544 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111119156 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089764732 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114628698 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089324978 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104490568 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09628964 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108572577 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080911604 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114187265 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090205544 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.106715896 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091357498 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11364541 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091538975 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110180074 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088504117 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110557591 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092065719 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104654814 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091080106 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.107321095 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.099422204 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110614199 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080561472 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101089827 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093112775 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105217581 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090747922 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104848041 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091244944 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111065856 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084510817 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107956483 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089754286 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122247478 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098590363 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110343237 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107964225 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094021516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104707629 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089927093 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10575341 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091887318 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105786474 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092566477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108578418 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090602657 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108111955 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.085409908 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111398427 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097871625 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105043544 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08494065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104651967 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09165295 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116952167 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091544855 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110365416 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088196874 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112094946 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096886747 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109252972 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090423506 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104839777 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091830185 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115159564 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092889859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111229135 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098776091 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111660712 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114794559 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088078879 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114456395 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081683262 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106391305 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087560599 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11182828 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089485958 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10866714 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080869216 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115538225 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098010845 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111557439 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086156564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.110610968 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101335922 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.109441408 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111442927 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092665572 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112605878 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106290205 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105895874 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092041388 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118571456 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091828738 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099388205 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095757575 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108250376 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086334394 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.108957937 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089044823 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111260838 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094450927 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112484471 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08081111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109852326 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090604894 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106260323 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083446405 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116333027 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093767477 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110353527 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101399477 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112851648 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092688823 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112644499 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090871993 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11342235 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09256589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11359465 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109756941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089059767 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085286844 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.11162784 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08511006 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.105043854 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090778873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112920521 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091798164 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113794773 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089891326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11857377 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110429968 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093684191 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.130946941 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088563206 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10715937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093209749 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113511303 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109232714 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091613332 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100813328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097940451 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.110446367 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09825254 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110133557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083859119 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111410503 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092243189 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11218376 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.094823478 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.11196807 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091280118 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.110129179 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092067544 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120449719 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088966244 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117783042 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094941101 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113368202 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091638654 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111548707 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091421696 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106993724 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092358915 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112708664 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092677587 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.112301981 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094233484 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112723082 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089197974 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107363893 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090046761 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111195438 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108577756 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078461904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084737929 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106582346 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088377043 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114517927 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107890643 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090006164 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087001615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113375631 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087005732 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098571642 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09277224 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111477598 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089366615 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116888798 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101725319 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089251603 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11812451 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07950761 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10807535 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086519529 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107239392 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099330062 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.11215906 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099205007 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111916315 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088622035 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103812363 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.094713369 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109931311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082477519 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085699793 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116680259 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108662879 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091257172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092569753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11566703 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112227456 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096399631 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107860196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090870672 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106567293 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081369691 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104423734 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08559193 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108055989 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094962673 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.1064842 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085395847 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.091882787 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.113869333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111793577 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093356652 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090767811 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118769229 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110644817 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094267565 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116570676 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082470328 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.11179271 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092656693 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111536432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08931754 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113119576 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095322766 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113519976 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098980166 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.111545403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095388363 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112167151 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086753927 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111757107 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.093658858 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112398437 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089456054 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11300007 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101265943 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10418401 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092810431 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112772756 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088701322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111753759 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089580355 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107941372 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09267625 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109108773 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088124248 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110318482 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088924982 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108083447 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089865354 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105759437 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092924925 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103641238 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095704336 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.108470074 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107987714 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087603148 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103221796 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088600641 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086829363 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106366268 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112740836 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090846955 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102199154 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084475817 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082704275 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109284109 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111508274 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096497938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10723964 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090518202 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097956924 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081492241 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108334785 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086471845 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105652034 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091695238 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111200214 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08966516 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104292916 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087902324 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112598518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094120439 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109574324 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084949293 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110418052 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090107951 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108844848 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087063819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107802482 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090499087 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110308416 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087381776 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104108168 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115376435 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09423219 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108186903 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088331333 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109576654 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088570255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099004833 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090624033 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107124893 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092873797 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108047524 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08917496 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118131149 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085404124 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109504549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096364876 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106906963 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09345126 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099744667 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08969111 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111030481 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09040094 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099244828 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084622035 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104133627 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0893018 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103424654 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080513314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120828471 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112389789 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090568246 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105624666 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087886236 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079299663 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099770026 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084656833 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110194072 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08841003 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117241998 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103198537 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085741449 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08020066 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10905818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089954328 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111583134 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080909303 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100034635 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086267167 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109115413 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114562058 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088453073 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088406192 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110338495 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107769426 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083618964 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112690675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081413346 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10873289 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100592827 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108421145 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0923436 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111355105 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095522779 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109261003 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080433626 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109041742 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089502371 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.109216044 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08975175 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109644822 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122604042 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091408232 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103249912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088807765 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107229553 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086619331 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115075263 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09117407 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108931223 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091272103 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105681437 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091597649 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114522825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090793301 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108458456 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089996188 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106727167 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087580257 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106682751 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087976258 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114269689 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092268578 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109714919 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091361684 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104517081 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118842966 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096658861 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109807471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081908052 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103424039 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086647803 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080850417 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.112869268 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083608527 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107656907 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.088321913 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.110065784 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.092664599 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113236323 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089742892 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.112323663 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088706961 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0981273 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092809831 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110894778 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091694184 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101034329 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089749214 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110471602 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09340068 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11523055 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107594709 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092638933 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110510511 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093980191 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098802948 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092816842 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106452987 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087707739 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084925535 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1098553 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.092719142 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112239142 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108733999 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092227112 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.1080275 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094742897 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110874466 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082897631 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100364592 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092755502 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102394421 seconds)
  done (took 60.512518325 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152087731 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087743765 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099373601 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081178198 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126551132 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083053237 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104691601 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083143061 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103289023 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096072838 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102724662 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08042015 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124858728 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129291882 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125340296 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114948753 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080697506 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101068136 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081179344 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100953741 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102927818 seconds)
  done (took 2.937740872 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106494664 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119840861 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117278818 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103275713 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111039719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117794244 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097475881 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119480667 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121703635 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112072645 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103541589 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118705646 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111532513 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093234319 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112867964 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114651674 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102954257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111036744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119232067 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098239946 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115670665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116160482 seconds)
  done (took 3.223853594 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093729621 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087714099 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113055873 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082853591 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107919053 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082288273 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112630563 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084885217 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113287725 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089605797 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105700471 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090298249 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113973289 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083002982 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106445197 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085779956 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112123077 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088405403 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109026964 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082420691 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128413284 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101580192 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.084183644 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086114124 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11753388 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089001955 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108495656 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087972519 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105607901 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08914244 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104130548 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090664998 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110939266 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085801888 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105424014 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088354427 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108248048 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083066215 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104722723 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092785441 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103336706 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089921693 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114681241 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085668501 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104636288 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091604413 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107567795 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083325804 seconds)
  done (took 5.477615662 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12336981 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159791182 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098037788 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156254397 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123982495 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121747998 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090432914 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149526335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105979646 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08866876 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125193934 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123785371 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091066397 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117334438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092427979 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110291765 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10996485 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094349549 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11987105 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089921615 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117672288 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11244776 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104417565 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121375267 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112601618 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089447252 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107754859 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098075034 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123426328 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114930041 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095704273 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116389475 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129739283 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093727361 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111735203 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091200191 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126706686 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109540741 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092603205 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106853002 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091959125 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118569251 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114775174 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106548672 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110464079 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110670705 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.095524506 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111124976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.104725606 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112372849 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118599546 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12309094 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09515851 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109213245 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09590223 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127398668 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111810412 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088768637 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111902839 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.102477137 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.114699602 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11565001 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109214609 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114822709 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118071946 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104558479 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111522076 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113535738 seconds)
  done (took 8.459451199 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096788734 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133876692 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126134913 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105859513 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11531931 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113255089 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095585492 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113652318 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095405032 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122153728 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113767482 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16588791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08949147 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12032356 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09489322 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116117011 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114600476 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095544214 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114256154 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095696999 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115389815 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125802581 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095406553 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126177 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127385979 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106472234 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095821142 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114149586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106438587 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115504878 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127269609 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114172422 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095444336 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124991103 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127751433 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0955236 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104032781 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095386594 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114689385 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114344536 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088618124 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126021626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094293469 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109009539 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113049334 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095317465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126469355 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127330964 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119407202 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102891855 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114138896 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125332406 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095307741 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113772714 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126194127 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.114678124 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126194231 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125575226 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114633232 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107218657 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126647361 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133935158 seconds)
  done (took 7.795873888 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086891751 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085275542 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103900891 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083880529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10531203 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084212763 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104995086 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086459009 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085426962 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106683933 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086171602 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104103633 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083522467 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105211172 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083893751 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102770083 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083838292 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082908894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105786675 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08388269 seconds)
  done (took 2.646764908 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095788834 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126336535 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086949322 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114235006 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089509009 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114515552 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107783111 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090510859 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106800582 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09086287 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119993036 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099401773 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108491249 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113623268 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100196629 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114430383 seconds)
  done (took 2.474066111 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.109517788 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120622146 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133391675 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093217391 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105517134 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.096041818 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1070359 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083121529 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102008423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096321941 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113190132 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098823379 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106843779 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08623058 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107481404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093313738 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102406694 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091765041 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105905326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112753325 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113988655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109716324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089102501 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108803484 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090295735 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112486579 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095009082 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104445087 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085445046 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107174636 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089628533 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115047966 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083361238 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112697911 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084578871 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103852228 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086245491 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107174341 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092482132 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108089975 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083650004 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109520708 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086892279 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109337184 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082420474 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108827043 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08241299 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114823629 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087865825 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.11050051 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105687986 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096775924 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114403569 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100302937 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11775794 seconds)
  done (took 6.371667507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101938526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110685663 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092308133 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104459654 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090796279 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115068842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091896784 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109419699 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089920907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10431486 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090396147 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110924177 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090121564 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11134755 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09010309 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111645994 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082940746 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109188813 seconds)
  done (took 2.603596339 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093637905 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106467582 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095320004 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106711491 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087572334 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088645168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103714441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084626676 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105597549 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086840913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107787003 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089138401 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105975826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089516367 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107424291 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087937934 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109388817 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085680119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107436415 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084012613 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108949322 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086162775 seconds)
  done (took 2.927786548 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105798359 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.141047158 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101661863 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.151643583 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112635473 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091362907 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122407321 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092161968 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131250759 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110820191 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092365572 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110910475 seconds)
  done (took 2.166445872 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115304922 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146525486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084735419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111190998 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120353368 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094233074 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112444925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092837531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126526371 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126778995 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09254807 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125625725 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125808423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124574352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100974786 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121069519 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112919554 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09302981 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108026863 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136150234 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092709044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125775466 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112821411 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093733684 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112697084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123592053 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105648818 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127565564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112825954 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105633083 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121840988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11249324 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105196378 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128375477 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110671045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125170013 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094571269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135747409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121490891 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104821749 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111812531 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120794954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106270599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121095506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12618179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093489519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120461237 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113525913 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093636037 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141720798 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122029985 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124082981 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100965817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126313909 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125755169 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142146667 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127438986 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124911872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102036861 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127756934 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12410408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100864438 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124986721 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126982607 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120751409 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126454802 seconds)
  done (took 8.445402512 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129556221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107319751 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092820752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128268414 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125718676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112791245 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09379979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113789832 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092793935 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109484644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16100244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113084048 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105973003 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125370189 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113103007 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094216382 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114071475 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124295788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089955082 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142161316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11329942 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124676625 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10570415 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124990812 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127701496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12157364 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094418162 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113370987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093849235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114565385 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120112839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094752391 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125720699 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106428524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105226314 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11421909 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092916126 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122081485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113951738 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100821528 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126260665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136876341 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114036092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093773204 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127388018 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113213343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093735265 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109884757 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093970125 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110261177 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127921858 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127080621 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107534224 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125807155 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114181122 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094480695 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114491447 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113194311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094437574 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121913897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125180291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094278441 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143163531 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114156151 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093598555 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125567553 seconds)
  done (took 8.286302263 seconds)
done (took 159.337019236 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107590496 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.146257551 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103089066 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1721026 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087882416 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144004818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121441172 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124924775 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08766411 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108926806 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088575582 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111248899 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154979049 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108974517 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089425296 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111869527 seconds)
  done (took 2.675526512 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186046083 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.289173794 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107558978 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113752522 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094897188 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112357031 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091965668 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116686479 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089240183 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122103189 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110544858 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092614598 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120827095 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091768025 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109874022 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091591329 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122089127 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091607843 seconds)
  done (took 2.965865372 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113914682 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160299198 seconds)
  done (took 1.091258559 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125667462 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188626579 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308349087 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165886802 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118944687 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132184705 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16727929 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128554625 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197710566 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130498744 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110662249 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116892882 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139780507 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101298606 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119612927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095581845 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142642346 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117895075 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097892601 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116635463 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117011463 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117828201 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120610027 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098191744 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185996968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131153905 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095062509 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11741375 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116876937 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098143697 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122112668 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130273034 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109471439 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193761691 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100874199 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187988594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10282998 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115409428 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096625824 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116364499 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119259173 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099922044 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131768731 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09487655 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.118175486 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123682889 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096609678 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117106366 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102744101 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12486322 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123215158 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100930555 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.186830489 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103738121 seconds)
  done (took 7.755530552 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.841950691 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159829078 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115179792 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.949372567 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147409117 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129511882 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.837651914 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116711665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267092147 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.089295678 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134450551 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129356111 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214189515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.282256156 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.151840265 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341479937 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.719675203 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130156648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123689874 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159089766 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123110858 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143318175 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113055315 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.418454542 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11630087 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092477302 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122392308 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127585178 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168273411 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09273603 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119167038 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187928839 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294566526 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185759404 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116259475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092659906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114549371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175793266 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276844623 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222234892 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177898234 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090565486 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113114077 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106717919 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136747655 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089392866 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193940172 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.182201486 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180439483 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118354678 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126794066 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102830902 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126843895 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168861412 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112742551 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34267573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324980197 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115053979 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123607312 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112655662 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272847658 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11423657 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209329611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143034452 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219412798 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092532764 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822584063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174975297 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114547629 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101820523 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124305936 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119279869 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10538535 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172226922 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383138356 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130560199 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118121124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0928711 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230203454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094611759 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113608376 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172012588 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093834 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123994349 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131017172 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106693471 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200356163 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258676651 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13014034 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106180233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120553132 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128152474 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095475712 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.221491772 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22412019 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166047992 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.242619043 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126812301 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172733556 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175015371 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127310964 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179666542 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121838626 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111329495 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128717606 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22080541 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149285153 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093860489 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119697577 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121120233 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131089705 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120205839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121523089 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176855679 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4478138 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193898819 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.093815876 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096279959 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124095541 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169223558 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123004279 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267428569 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103049105 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.195994956 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101503513 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11212411 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10232437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.194113771 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107707553 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125099962 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12767822 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101745823 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278466529 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204028233 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13054715 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240914815 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182032781 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10436811 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201574378 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102181458 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176327287 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12648768 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127156392 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094496704 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811157206 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128483416 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101437769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12086012 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196164345 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092972163 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116283546 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09226795 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111675019 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783821582 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119009416 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090345009 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.116752014 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102831453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12325768 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121733776 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099477522 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190560525 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238243972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106493519 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123081516 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092757952 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.188875926 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096073225 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114326944 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094491304 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093685223 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125711172 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119557429 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095670006 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179463375 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188649047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225596447 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.514920952 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114233618 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094250594 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236676796 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092424877 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312901828 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122774398 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232318097 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176078558 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089894353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344793225 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.198633134 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196156711 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097807613 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.178920728 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11258191 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099814685 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.192396998 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093617826 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123347273 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166388752 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132758326 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108475308 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158698068 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116067502 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235985642 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112032847 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176816145 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095154068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127873495 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313068553 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092561956 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1367148 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168295138 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120271059 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093493443 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.613668852 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093040669 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126383359 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124905908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228802489 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174013816 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101356823 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12457274 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127676192 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.171491324 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.219150906 seconds)
  done (took 45.537052662 seconds)
done (took 60.836513658 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313232165 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279560549 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.316244437 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203309173 seconds)
  done (took 2.030764366 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185619721 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159952154 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131993217 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114338157 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161913649 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092026816 seconds)
  done (took 1.689426107 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498405644 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38448934 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352192494 seconds)
  done (took 2.078696621 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263758672 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.291337184 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367878697 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.459207367 seconds)
  done (took 2.333122683 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212450913 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13167871 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105328085 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145953341 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178088851 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.183747508 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149173103 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159064389 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134489041 seconds)
  done (took 2.291735627 seconds)
done (took 11.269226602 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.14196356 seconds)
    (2/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.299281949 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.269748093 seconds)
    (4/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.137474289 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.22580863 seconds)
    (6/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.169190083 seconds)
    (7/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.256803582 seconds)
    (8/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112652905 seconds)
    (9/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.279261799 seconds)
    (10/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.25367777 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096874678 seconds)
    (12/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.309202558 seconds)
    (13/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.108872559 seconds)
    (14/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.136493516 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096619659 seconds)
    (16/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.126249718 seconds)
    (17/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.207348493 seconds)
    (18/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.237070276 seconds)
    (19/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097777635 seconds)
    (20/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118706227 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.147948911 seconds)
    (22/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.249840982 seconds)
    (23/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.266137376 seconds)
    (24/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.188390028 seconds)
    (25/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22593512 seconds)
    (26/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.123974329 seconds)
    (27/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161309047 seconds)
    (28/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118318473 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.108325226 seconds)
    (30/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.210664618 seconds)
    (31/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.157031763 seconds)
    (32/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.171356074 seconds)
    (33/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081628859 seconds)
    (34/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.131652026 seconds)
    (35/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116893509 seconds)
    (36/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141782652 seconds)
    (37/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106904096 seconds)
    (38/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.207055282 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.145473592 seconds)
    (40/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196733912 seconds)
    (41/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106859421 seconds)
    (42/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114354902 seconds)
    (43/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.133131421 seconds)
    (44/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.153348332 seconds)
    (45/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128942381 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.128424537 seconds)
    (47/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175010857 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117110319 seconds)
    (49/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09769568 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121867737 seconds)
    (51/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095968614 seconds)
    (52/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.109025401 seconds)
    (53/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079897252 seconds)
    (54/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.154984413 seconds)
    (55/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.150670834 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.127014362 seconds)
    (57/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118840163 seconds)
    (58/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094457768 seconds)
    (59/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.102258395 seconds)
    (60/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.181831836 seconds)
    (61/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.19651136 seconds)
    (62/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.222293428 seconds)
    (63/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137416898 seconds)
    (64/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080228343 seconds)
    (65/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111051727 seconds)
    (66/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.253635964 seconds)
    (67/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.198393127 seconds)
    (68/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158869411 seconds)
    (69/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.110657915 seconds)
    (70/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.145770793 seconds)
    (71/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.208832938 seconds)
    (72/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.109781101 seconds)
    (73/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.206192795 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099306538 seconds)
    (75/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.210866244 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117710556 seconds)
    (77/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185700518 seconds)
    (78/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.151128931 seconds)
    (79/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118499804 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109444973 seconds)
    (81/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.154902837 seconds)
    (82/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.195621139 seconds)
    (83/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.106340518 seconds)
    (84/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.138457704 seconds)
    (85/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083016886 seconds)
    (86/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.205538202 seconds)
    (87/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167049567 seconds)
    (88/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.162280596 seconds)
    (89/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.107190301 seconds)
    (90/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114613152 seconds)
    (91/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.230129401 seconds)
    (92/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112681213 seconds)
    (93/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117825456 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123545876 seconds)
    (95/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144716045 seconds)
    (96/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136466209 seconds)
    (97/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111575072 seconds)
    (98/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.102274192 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099434796 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127922336 seconds)
    (101/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0960579 seconds)
    (102/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102184709 seconds)
    (103/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099840282 seconds)
    (104/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.187460763 seconds)
    (105/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.101819668 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099222468 seconds)
    (107/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.101601717 seconds)
    (108/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080710197 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092445754 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119672585 seconds)
    (111/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080113586 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130472475 seconds)
    (113/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079533312 seconds)
    (114/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121094269 seconds)
    (115/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080623907 seconds)
    (116/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130050477 seconds)
    (117/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117184857 seconds)
    (118/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.142393186 seconds)
    (119/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078733293 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123136079 seconds)
    (121/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.192195139 seconds)
    (122/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089312265 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121025746 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099194745 seconds)
    (125/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102691715 seconds)
    (126/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.143776918 seconds)
    (127/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123805004 seconds)
    (128/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079998873 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.152296544 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121778937 seconds)
    (131/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.089002795 seconds)
    (132/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116560256 seconds)
    (133/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171225222 seconds)
    (134/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10288291 seconds)
    (135/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098208297 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.1029157 seconds)
    (137/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.114070843 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118671215 seconds)
    (139/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211629104 seconds)
    (140/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104952326 seconds)
    (141/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101934213 seconds)
    (142/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201487466 seconds)
    (143/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175535491 seconds)
    (144/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134937649 seconds)
    (145/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.078983523 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.220111949 seconds)
    (147/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.135179711 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122006914 seconds)
    (149/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.079774083 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121318726 seconds)
    (151/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.079859244 seconds)
    (152/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.153293438 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099367131 seconds)
    (154/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132347197 seconds)
    (155/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080206478 seconds)
    (156/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119463739 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108538294 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129376347 seconds)
    (159/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079668914 seconds)
    (160/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135525698 seconds)
    (161/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080632094 seconds)
    (162/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10370031 seconds)
    (163/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.08893009 seconds)
    (164/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.131740913 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105647504 seconds)
    (166/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.10260985 seconds)
    (167/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080320834 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118130849 seconds)
    (169/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080099766 seconds)
    (170/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079660474 seconds)
    (171/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19633169 seconds)
    (172/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130005277 seconds)
    (173/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080083537 seconds)
    (174/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.152928601 seconds)
    (175/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093142695 seconds)
    (176/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198428622 seconds)
    (177/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10324694 seconds)
    (178/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097530422 seconds)
    (179/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.102025624 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100364555 seconds)
    (181/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.200718242 seconds)
    (182/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092287115 seconds)
    (183/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.10357391 seconds)
    (184/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.168116838 seconds)
    (185/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081442506 seconds)
    (186/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095491746 seconds)
    (187/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12324031 seconds)
    (188/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.087538623 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118577224 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098530464 seconds)
    (191/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.151068979 seconds)
    (192/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130060686 seconds)
    (193/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.210457618 seconds)
    (194/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080312103 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122506199 seconds)
    (196/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100422799 seconds)
    (197/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122692447 seconds)
    (198/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081401677 seconds)
    (199/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102667857 seconds)
    (200/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081192536 seconds)
    (201/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079001123 seconds)
    (202/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116699211 seconds)
    (203/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.119462259 seconds)
    (204/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.102578019 seconds)
    (205/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079870441 seconds)
    (206/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115291948 seconds)
    (207/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079678801 seconds)
    (208/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.102697598 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.108070632 seconds)
    (210/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132312369 seconds)
    (211/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104108743 seconds)
    (212/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103404449 seconds)
    (213/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093566338 seconds)
    (214/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.103801407 seconds)
    (215/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081320452 seconds)
    (216/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.079190134 seconds)
    (217/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123534034 seconds)
    (218/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.079126035 seconds)
    (219/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103351541 seconds)
    (220/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096165204 seconds)
    (221/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.103394917 seconds)
    (222/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080485183 seconds)
    (223/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133982345 seconds)
    (224/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08156169 seconds)
  done (took 30.634463591 seconds)
done (took 31.484235012 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.407566817 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133680946 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127389948 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103659135 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147801714 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10640571 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.128527788 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106658531 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126244146 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093738326 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.11796057 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12789692 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103798979 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.145928327 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105969194 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12030288 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095494646 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128756522 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103995316 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130814116 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147671615 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097381744 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126394949 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096358489 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147719359 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096484149 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127421018 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104071752 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126727131 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094677947 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128842673 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118702745 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105711533 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131111248 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094970033 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119524738 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095249179 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109879781 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096365763 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120701657 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103142245 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.118971118 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.105953986 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120918046 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098163314 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117939128 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094590234 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130168501 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093672831 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12884524 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096980334 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132657769 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116741531 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094863434 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11742269 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09707104 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127764908 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095293892 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12833458 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095106352 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120024848 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094940665 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122470144 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095132639 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119281861 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096540251 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119742457 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098141069 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117503325 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097851212 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116163778 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097968886 seconds)
done (took 9.350732038 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100627831 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.174339811 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.14963889 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.127273755 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147681104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134126781 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.107649503 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143082148 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127953934 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.118602595 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145669526 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141118348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.132919067 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126098741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.134568605 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099919217 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125450827 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107339711 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153669673 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143328859 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150194058 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102808668 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148541361 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140979373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.102454795 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154213937 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102914511 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123244706 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101953284 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133678754 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143432259 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103029634 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.125879523 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114868413 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132825653 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124507215 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110825954 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122353473 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09998523 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123635187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135839336 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114622798 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122440996 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110757505 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12222945 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104295444 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126127004 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124862824 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103982261 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120655921 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.103883867 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147608299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125197521 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103457409 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125064902 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104200411 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125581577 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104088474 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.12642553 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.126946227 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100863786 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124847548 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105233075 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14440397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12513409 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103064983 seconds)
  done (took 9.069464314 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118811772 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158161682 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133103593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110943909 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.13013829 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09242389 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11594124 seconds)
  done (took 1.763034156 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096271282 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147481844 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127909012 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.152041125 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139688421 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131740233 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134855325 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093777299 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142479257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127616652 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123279759 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174675643 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118809492 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.105991614 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153745913 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117184545 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130776269 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117629961 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102054516 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151475476 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124114176 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11729159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131476244 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095592601 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140894119 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096190995 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18721045 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130706743 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095131623 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124528943 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100240276 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.21365119 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117701954 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128917516 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092976606 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148216119 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.115788599 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124803393 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146122551 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099958236 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.141336123 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101136096 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12581191 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124620164 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102623294 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.13414415 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106761323 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127409618 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100304632 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147638607 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129220108 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117459224 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120181907 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09982068 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12865526 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101455763 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133073915 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099566489 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147550461 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125244571 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122061032 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146004858 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140623956 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122385461 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1362737 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117309886 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.141569584 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124079473 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103455076 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12622259 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122425431 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.123073056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129340788 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110932326 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127677353 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.12388978 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147140566 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099388648 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132339512 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099190122 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121756837 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095058548 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135826205 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098416333 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122094935 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136001971 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10763863 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12422317 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100374571 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141998431 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122837503 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107750663 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130144702 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099084478 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13434365 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147938241 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105970517 seconds)
  done (took 12.964045282 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098064057 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096603097 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.127276684 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120257667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096951026 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096215322 seconds)
  done (took 1.549903822 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127409553 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12546923 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112815115 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129313718 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.180796295 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.146475836 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.126558668 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129667156 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14380795 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114150753 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146716709 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.147717654 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.122382053 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130239588 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.124313185 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129619861 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.149036686 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099521975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13689169 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101158518 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136520982 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129372475 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101406007 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143849601 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.105659149 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129426851 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12888522 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.112834092 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134881639 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105857726 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130362768 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.129115375 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.103614153 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.1292147 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12500644 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127623761 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123550273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108422688 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127910158 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106336408 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148587439 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100366255 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136638982 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132404382 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10555767 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128234727 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.132006191 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105741744 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.148975559 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.106859567 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.132361421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128747606 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106232186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132778575 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103161272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130392278 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1317935 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.125405326 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130897044 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127000101 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103267654 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130523296 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105884176 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132756045 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12738803 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.10853471 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127303075 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10528431 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124593022 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.105155883 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13289468 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125248372 seconds)
  done (took 9.90564341 seconds)
done (took 36.144520483 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.107955689 seconds)
  done (took 2.013559661 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.870069742 seconds)
  done (took 1.777404385 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.458063896 seconds)
  done (took 18.400987966 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.532848021 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.615946684 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980097271 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170514018 seconds)
  done (took 3.203020297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.973205292 seconds)
  done (took 1.899728598 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.321629164 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272138065 seconds)
  done (took 1.509148265 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.83640747 seconds)
  done (took 1.753080664 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.354623794 seconds)
  done (took 3.27356651 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.359601881 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205047657 seconds)
  done (took 1.495967367 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.595281976 seconds)
  done (took 1.520500575 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.493651328 seconds)
  done (took 36.419902411 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238165361 seconds)
  done (took 1.1728407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307017606 seconds)
  done (took 1.232829874 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.611997208 seconds)
  done (took 4.538932889 seconds)
done (took 81.124406581 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107489738 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13353119 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10940951 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130399371 seconds)
  done (took 1.401235494 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111847351 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127065808 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10716303 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128140953 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112166439 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128067152 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101847857 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135229804 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103553449 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131234584 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127722496 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104176454 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129131902 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10281537 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126558184 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104717498 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131858861 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103971614 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128919633 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104644315 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128448161 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128648429 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106978739 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128009552 seconds)
  done (took 3.773575587 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107057628 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100246597 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127402299 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099343775 seconds)
  done (took 1.365269156 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112005422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142747431 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116993419 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135376594 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.1426764 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117512453 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124769042 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099643167 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126630603 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111246212 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125556792 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119660877 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.143917012 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119470976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113229014 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118047053 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097189082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143221051 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111318387 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136896786 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100111828 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135231181 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108361538 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139723747 seconds)
  done (took 3.879994112 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175610067 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.139613601 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149364794 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173536452 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.12542122 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123792075 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124971233 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132788744 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.128528022 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.09984844 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.123990859 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155989222 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129926549 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12886405 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.099548813 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130383045 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.10696283 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130280145 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101783871 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138988845 seconds)
  done (took 3.560402785 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107335281 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12386913 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095882997 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123540326 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107141649 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126762275 seconds)
  done (took 1.624642945 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096088462 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094359039 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119967956 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095053854 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124783475 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095410634 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118261455 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095274632 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095077506 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121407598 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094931463 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118670406 seconds)
  done (took 2.205479253 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.22347168 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123312871 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124729086 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101542646 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129448173 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098880086 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139478235 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09899328 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.179670788 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125311304 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114609912 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.17879835 seconds)
  done (took 2.578718037 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218290538 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104818239 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272946215 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380177849 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141115236 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174034296 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.305969529 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174714412 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194760478 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12001123 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230373177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139019356 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16288191 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187069964 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148418524 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193550793 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184572145 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208298029 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155992074 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214068101 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17205003 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176486198 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190937214 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160537026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145979095 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16552185 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.100652532 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135634775 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182153391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177453601 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181009843 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156441013 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145620885 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209771361 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221505858 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209985551 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310708691 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141702632 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195262506 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191388022 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251440227 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149264393 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202004996 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162575713 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140117378 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189355385 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165486958 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187469617 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113267728 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149389784 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21771383 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1585998 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.215513224 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119284622 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330992248 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128421728 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152897888 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187560678 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222881356 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198644516 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173465697 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105062026 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194679598 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216660363 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188401523 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126620011 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175167919 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132321314 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184194061 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204276252 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185066666 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173919937 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217842596 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113877247 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172271775 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178084847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160595969 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187393741 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167646519 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127678352 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131424865 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143007041 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134286432 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16723908 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131079082 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211025227 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142701117 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.192299211 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214099055 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167372875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168991927 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171902514 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175473705 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155131315 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100424931 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153880322 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.171228135 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165301409 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11217946 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165875943 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152731876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133762034 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158624585 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105374127 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166886599 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.141098017 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174252554 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170888376 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110188464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172693499 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158059801 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168433868 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179816685 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193762116 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113348195 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140522597 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203950906 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165343627 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143416415 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185170632 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195422357 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172353108 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117154744 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202770696 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203635655 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122474939 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22340189 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124445235 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141301727 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158989346 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16772532 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164647063 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136720375 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137143078 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159883105 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20194508 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135145362 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11803834 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181009712 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134313876 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13472706 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124390645 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145273589 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14900409 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131313335 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146326865 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163510189 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167333729 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161085592 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166002016 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12253046 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228724622 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113114033 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168068093 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154916606 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098388867 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.214810809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194300882 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109942441 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193491498 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174602482 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232103029 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172083027 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110967818 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188174739 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138983975 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100574533 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201947424 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142062353 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170117142 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189828957 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228242652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175613606 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161719178 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15683497 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175034182 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181905856 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162526365 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.126963192 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1700505 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173210451 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.130752851 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.104126844 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134936533 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146552083 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11221185 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140358003 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189306848 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172143526 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197233456 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168344613 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147115931 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1926088 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132930033 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17214968 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180429664 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11877193 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191885118 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188601343 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175690999 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151876465 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178280335 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12909283 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106031416 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140986662 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17535206 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11354927 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143584608 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151496703 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191831673 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18277247 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1571522 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210803351 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175219161 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228597428 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102769741 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171306155 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178568616 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164949117 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16906019 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139429122 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1694718 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188564911 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152182723 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201777134 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172232664 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177649651 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20809168 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165923766 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137613317 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130855996 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174313785 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148108225 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172424727 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153758854 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114609001 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161253665 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14491575 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132917971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189183745 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123471829 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215889482 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16526884 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182153001 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106740517 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150432435 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168890939 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153504228 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.098255939 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177624983 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221621259 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123929281 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166267887 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183204332 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139148877 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322293423 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196223517 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192121095 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146716183 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149780851 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17017108 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168059673 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171998717 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19177582 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123521976 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188973128 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167853359 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15209709 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141241972 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129094036 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159359399 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160191061 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141332585 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160854131 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123328345 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217540224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125222516 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167980222 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172903865 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155498678 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.134997051 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149288373 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210125981 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167714151 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184242153 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165346806 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174590491 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195005646 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133109735 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108213047 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135475289 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191669034 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111526315 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167396554 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192852757 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233449387 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168561078 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178485734 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118010289 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132123001 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168984612 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155423487 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207493791 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149872681 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.116665653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228985558 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130600623 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13947184 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173496557 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294132639 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153266966 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182646767 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.098974148 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285818313 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133310745 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139633369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141693556 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179240635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140541211 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191735706 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173433522 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125431942 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171114593 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146925962 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198645345 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243550519 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180970195 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183899335 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150464932 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13874501 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171162376 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211829984 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124669326 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.154008196 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170514798 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192146949 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194421315 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140210128 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142310272 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170970279 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167681544 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182064088 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143715686 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196106898 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139250865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174852805 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146892663 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105622398 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166815234 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191438744 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140558874 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184177457 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166962169 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111401745 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136077518 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159657879 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166972008 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124438688 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.138951092 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186919364 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136751683 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143623979 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189641862 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138808703 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166603704 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153893906 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11183081 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151383523 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151978019 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114452916 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179599114 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191200275 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138022082 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186451773 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181035405 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173409473 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168004451 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124136432 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671347081 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136131758 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192068551 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12825174 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223873291 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12980408 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174660035 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169764661 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157703783 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177159179 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156870528 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227079984 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174536636 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165289924 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112967084 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152277765 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153021971 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112402024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160632774 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171181596 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14788962 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.117224943 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16505223 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154203063 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151845147 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12016217 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193806062 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156291434 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19011619 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192839387 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148105084 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174617748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183413356 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136744302 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.169897396 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182421069 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122471507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159201746 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139200887 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.116319301 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189180269 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133533822 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170196423 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167553113 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142088628 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172811377 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143327549 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168908441 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14997765 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169273536 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106812776 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163965436 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166721598 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111232106 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137160724 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165690037 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167295062 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165514321 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107038064 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.181014816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192046867 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104966196 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142538036 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290315467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16779436 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203043536 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162377623 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142890313 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124923424 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163014782 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162187015 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16855427 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109281146 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142022238 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1398236 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188660604 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136517001 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165778464 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192450588 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169807825 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197890814 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155185907 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.270754623 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119525646 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165372968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138223497 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10859913 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149168045 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142567556 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125477309 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228542893 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18913381 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160105523 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.126229542 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135325844 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104237173 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141610922 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171665281 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16310528 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138287395 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150834148 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.126624324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150887732 seconds)
  done (took 80.416480692 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165795773 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168006594 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171028129 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223119793 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190015754 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282768512 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22881177 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253743652 seconds)
  done (took 2.703091738 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109721873 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14409138 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150209041 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13276754 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133072083 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.359788837 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145027666 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106383211 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.192539132 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144628186 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13072308 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.631000276 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.103846434 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135493767 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121836025 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131981731 seconds)
  done (took 3.893722631 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.328680433 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546141936 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.047577868 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255788902 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236344022 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162878095 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.752925932 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194202132 seconds)
  done (took 12.545222696 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13807071 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15170927 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.268910951 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1839674 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.16834344 seconds)
  done (took 1.941046962 seconds)
done (took 122.811072342 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104103759 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133067506 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104903252 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133990254 seconds)
  done (took 1.492768859 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118461503 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09024167 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.120500188 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087639996 seconds)
  done (took 1.440952718 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.503780747 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088293031 seconds)
  done (took 1.656127853 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129593406 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145630581 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.12713608 seconds)
  done (took 1.438293268 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112274993 seconds)
  done (took 1.145772916 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116351485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111863717 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152151726 seconds)
  done (took 1.413688613 seconds)
done (took 9.615780733 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132203322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436602695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394746721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148062513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.744961435 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388048783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047702945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164505336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173221376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099553293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146424898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680780043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.071877082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3536525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.055277391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.352421975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.711252281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101417357 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134390386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100688407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.025897011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098776729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129195972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100997422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709144678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404376726 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128653527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.391951285 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099702698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131762836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390156481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127076396 seconds)
  done (took 17.196509903 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144009232 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189347551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135262921 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102004462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131608873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101427037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136795523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112798016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18735063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127867056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120266197 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127515938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104471356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128660097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122487886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12745875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102164359 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130238205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106411379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130294879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119368933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127333161 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10184104 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129905492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099610281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141929389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100346045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140530705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099397639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133957759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132324879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100926374 seconds)
  done (took 5.026818987 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149092433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199238281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137407256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135994916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178773932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129171892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214587482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136729717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192280234 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128339753 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119398989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12922467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.166123617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101170831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150835841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099866203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130940017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103153391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135548682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102682881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149367568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099388187 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130259602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101893486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12832705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113686825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129548655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13927125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101272064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132211708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107171881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127589783 seconds)
  done (took 5.340862028 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108964013 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135051787 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118444689 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145506143 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.105795539 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134582156 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108289682 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130611906 seconds)
  done (took 2.020256609 seconds)
done (took 30.615949853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122567194 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14217493 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.11549239 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137952696 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136507684 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126655393 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113032221 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098270423 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13971821 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.11654449 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12854175 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.100996471 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143637091 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104781721 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.144853983 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109530246 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.151027481 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.115895867 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129814962 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110089156 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12977457 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.120682961 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.134466821 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100746466 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.15544257 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130943751 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118751938 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133197474 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.106189441 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.10138077 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.146687003 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105930875 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130557807 seconds)
  done (took 5.132328157 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.129761552 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.175119924 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101012546 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.127494621 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.169614782 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098966495 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.156688451 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099582801 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127167955 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.09928007 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097344049 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.155591025 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161330569 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.131937857 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.179830398 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164675374 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.128396141 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.166785525 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.152067458 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138452986 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.160270896 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100431256 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.162523144 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.169665254 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099835666 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126324636 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.14307452 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.162115461 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.17174188 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.136909629 seconds)
  done (took 5.243106751 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109953557 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145524069 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127781847 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203153516 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171762927 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116996002 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142804596 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119917145 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158333216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100601081 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141175525 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161363159 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119277339 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141381441 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107255022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144443663 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.12195839 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.132265016 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108628203 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149673301 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119264163 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143782559 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116694339 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141668991 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100743608 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139818273 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10741627 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144348348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137040336 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112158028 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133669847 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10648056 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131730151 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112105568 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.13363 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.108893688 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152531065 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111316057 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143853979 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165335033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11180918 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134159277 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124607532 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178799249 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10355871 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137655677 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111516429 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141059758 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099893489 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149909945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116450524 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130713523 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145313562 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101853161 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128385259 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109879512 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102145816 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133403409 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139188849 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106271135 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150067561 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11117621 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138150312 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103461158 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136405785 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101348712 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128641792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107415344 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154419675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10704127 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162813338 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102534011 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.136362527 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110941308 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.137369318 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111228714 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.130104024 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109215171 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138558654 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106539138 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140527529 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104448978 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.135503698 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119970529 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146226048 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138212151 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10747701 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137634121 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104709571 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131810799 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117040701 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132637096 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106324991 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142236145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102551523 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133733784 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108273915 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135835967 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.10122732 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151142592 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107254396 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.130345343 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120131446 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132108783 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105418879 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139222409 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114037367 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130647642 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106701049 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138589432 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101353579 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136836816 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105390801 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130248479 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114551162 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142693653 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.1069542 seconds)
  done (took 15.894752291 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.25357679 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233472469 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204475314 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318179348 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155187929 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.12799737 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.229847427 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.185057108 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132595235 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173144378 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18890746 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.193660274 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101919118 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165365857 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233336865 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.325575991 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.166016741 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173626113 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142798969 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154676959 seconds)
  done (took 4.926910643 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119370995 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171617506 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.161214168 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128676973 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133288495 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116266917 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.133132256 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147956141 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104139873 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138787174 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.10217513 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140734838 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104459299 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135661415 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120291065 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149661053 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106592843 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139626708 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148912296 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1084851 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13192266 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153629861 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113944397 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161584721 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111089516 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147907924 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101117977 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139059893 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099207064 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132148287 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107892205 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148950953 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.139137763 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103516004 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137659152 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102929908 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127384954 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103998885 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.13395321 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106962361 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147079016 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105307152 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.13139296 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10307291 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139620365 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099473616 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106392859 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139670631 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13777662 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11146242 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138195195 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106884266 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13913967 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.114207402 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128781479 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113073458 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144175639 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136119826 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109535215 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129673759 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101097657 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106463889 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130735024 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107260561 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136776227 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.14752354 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112000201 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.132313587 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.110806754 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136393892 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105842595 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150310704 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15147176 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100985879 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128919992 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124937853 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099308075 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120184431 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111868824 seconds)
  done (took 10.982584111 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131521619 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132424687 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122069239 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167148292 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117600956 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.141367939 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102525842 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.152997423 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108856395 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141430349 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109132053 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147280138 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159859761 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116123961 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134036026 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.117766428 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136290029 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.143977612 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151977584 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164009472 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.113653086 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.137957609 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.117061369 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144389066 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135507913 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.145377224 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166194068 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.108513862 seconds)
  done (took 4.844995755 seconds)
done (took 48.059135647 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.244048837 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.363214433 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.139195687 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.137984962 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.167914339 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.173522857 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.142826723 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.332821797 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.91016394 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.130240231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.13696136 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.139176204 seconds)
done (took 27.07729898 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.244860363 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.727910564 seconds)
    (2/2) benchmarking "String"...
    done (took 1.490218966 seconds)
  done (took 4.294174941 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.137517419 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.138845714 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.382917302 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.139697819 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.156695471 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.157018976 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.148459705 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.142893541 seconds)
  done (took 15.328458315 seconds)
done (took 25.068249478 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.146070143 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.470537474 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.424255828 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.161544533 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.138678715 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.145385654 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.126718124 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.199987047 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.153118088 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.129343402 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.140678635 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.428902509 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.135256291 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.549871737 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.128724439 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.154150735 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.157649609 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.457266829 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.150858247 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.130043157 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.160619067 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.128450369 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.160121526 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.190453861 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.158251262 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.142702432 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.159285224 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.132556392 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.448004878 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.151237995 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.194866461 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.143878279 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.187601919 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.148670791 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.255151698 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.169914147 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.43479074 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.141912255 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.133414574 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.151188347 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.430153997 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.548454335 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.141644459 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.132816279 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.14346175 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.157643541 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.137401017 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.866962995 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.1466713 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.13133171 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.160262511 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.555099608 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.148244586 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.162063314 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.155868238 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.464537701 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.147079429 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.218781044 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.19438953 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.168208015 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.143340645 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.15543324 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.156619601 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.152874949 seconds)
  done (took 140.207769129 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.143530957 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.146079801 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.147342396 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.166500229 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.146246311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.148629696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.144860418 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.142611087 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.14808452 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.152167219 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.148561847 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.148016596 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.148574284 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.132354978 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.147278958 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.166702836 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.15029545 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.16357188 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.168531426 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.145132482 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.151361221 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.149390226 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.150271233 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.14931629 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.195870243 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.254061243 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.199181013 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.152958843 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.14613329 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.144898081 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.190329239 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.168178009 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.776751948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.001844301 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.15949398 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.172553101 seconds)
  done (took 78.235351745 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.144819613 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.148799551 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.14773191 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.178197911 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.147960524 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.730082932 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.73200237 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.939228459 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.832856537 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.5488903 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.450972882 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.147611843 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240622255 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.161323975 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.149585494 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.161192283 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.174381013 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.149094664 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.148257459 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.728396647 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.163969914 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.564000293 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.322215333 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.164270487 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.180088227 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.544604248 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.14735303 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.180408937 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.482717329 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.197710767 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.146002313 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.549786352 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.352195871 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2629377 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.149114891 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.17921115 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.147031486 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.432284925 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.147259786 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.148413247 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.147296894 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.151843124 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.846535696 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.152153218 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.732801289 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.152487531 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.14180537 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.152817272 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.150757045 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.241823702 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.898956699 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.168062606 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.149101494 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.151358788 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.149383591 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147957241 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.183077621 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.508136442 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.266045545 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.149110883 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.150860236 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.181645946 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.150362829 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.149543045 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.575574396 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.149891378 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.355556137 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.225211307 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.250456916 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717148988 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.148210888 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.148872258 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24714071 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271217393 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.149776078 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.150611125 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.151998701 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.150023959 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.262076144 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.149105115 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.578969331 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.326779852 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.167503918 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.554909043 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.156365787 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.247841006 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.150958016 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564996085 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.154270122 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.151228012 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89521046 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248372371 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.150894588 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.151233354 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.152234028 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.583441191 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738984638 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.404723887 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.155720532 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.839266819 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.156870634 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.59316949 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711756577 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.871356324 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.156726929 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266303994 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328747741 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.171746058 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.152422856 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.556295571 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.155150045 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.209187604 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.15806581 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.554385556 seconds)
  done (took 362.397178258 seconds)
done (took 581.906910036 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.868791352 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.815203931 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.952708521 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.849941972 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.815234363 seconds)
  done (took 10.37843117 seconds)
done (took 11.453497054 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.345499067 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.345203461 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214608145 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.348018049 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187419269 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.364361332 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.329725807 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.174361574 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.261705346 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.237123831 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.262651477 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207384824 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.189925387 seconds)
  done (took 17.542709561 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.420563865 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.154800976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240034334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.395644501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.19594627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.443110877 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44911243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.156087023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296176742 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.168463157 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.167733519 seconds)
  done (took 17.163891013 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429401485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.154181458 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224396001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.396987341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.196310623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419783409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.462348158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.15831945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303611103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.169504973 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.170773043 seconds)
  done (took 17.161752912 seconds)
done (took 52.943183862 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.197107031 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.327957701 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.185660651 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.169747594 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.164394991 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.164673937 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.171908056 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.165837581 seconds)
  done (took 10.62609852 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.163876726 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.164177277 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.161434258 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.160884865 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.162643979 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.161769911 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.162499445 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.164122592 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.163721478 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.163044881 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.161000504 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.163951403 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.163880423 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.163461153 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.165364477 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.16149483 seconds)
  done (took 19.685378717 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.164427986 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.162674427 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.162176541 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.162157682 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.165368848 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.16317249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.164701718 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.163860021 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.163436048 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.163308267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.163353992 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.16190207 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.161769258 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.164038021 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.16309369 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.163868566 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.163796803 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.162493895 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.167323835 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.162997817 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.162936584 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.163460946 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.165256523 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.16241863 seconds)
  done (took 29.004004868 seconds)
done (took 60.391775431 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.173830161 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.176374975 seconds)
  done (took 5.428922857 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.228284491 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.229136508 seconds)
  done (took 3.539059206 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.167847654 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.166338067 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.167342617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.166756415 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.168196259 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.167401382 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.167879414 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.166339749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.167119485 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.165862577 seconds)
  done (took 12.751064615 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.168328283 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.167499609 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.165656401 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.167792256 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.16917584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.163833984 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.168001759 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.167935135 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.169361364 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.164420011 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.167823732 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.165828988 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.167875369 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.164997736 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.168971957 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.165224538 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.165676365 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.165500456 seconds)
  done (took 22.085835865 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.180267083 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.189784043 seconds)
  done (took 3.453119565 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.306767222 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209461078 seconds)
    (3/7) benchmarking "month"...
    done (took 1.28442468 seconds)
    (4/7) benchmarking "year"...
    done (took 1.271743138 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.206815529 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.186142381 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209191509 seconds)
  done (took 9.75621811 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.171893998 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.367940507 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474190718 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.708048169 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.172289895 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214972234 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.025068719 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.215058114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20415715 seconds)
  done (took 13.63717117 seconds)
done (took 71.731100617 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.162660768 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.23495661 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.187385845 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.175430317 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.505295593 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.188403006 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.164071911 seconds)
done (took 15.699927449 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.15847382 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.170302076 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.163176897 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.169793617 seconds)
  done (took 9.746149326 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.17865758 seconds)
    (2/2) benchmarking "read"...
    done (took 1.5187372 seconds)
  done (took 4.785436733 seconds)
done (took 15.617530274 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173764306 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.174073255 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.171932401 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.170870755 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.170995873 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.170837494 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.17075083 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.169384922 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.17073049 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.172105456 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.175123245 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.171731182 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.173691542 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172269171 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171997887 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172297111 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173202927 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.172639396 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.173520718 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172645042 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171676324 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173618695 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.17113675 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.169983748 seconds)
  done (took 29.219580588 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.174898311 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.173279135 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.175030696 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.176297913 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.172890804 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.175260933 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.173044977 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.172210456 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.176316163 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.174886236 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.173260961 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.174369079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.174944918 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.173629877 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.174506251 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.169944224 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.175120893 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171974243 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174563406 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.1750393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.175217795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171172098 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.17345456 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.173550673 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.170960718 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.172436051 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.176744194 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.17148553 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.175236377 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.174406879 seconds)
  done (took 36.307030536 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.18529299 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.1843868 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.175339248 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.176195592 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.17713691 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.17723295 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.177514181 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.176568435 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.173017475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.174523115 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.178496588 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.174358993 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.175832874 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.174555463 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.174338106 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.17601334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.17379773 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.177714174 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.174385443 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.174333044 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.174738374 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.175727298 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.174724123 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.174936095 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.175858581 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.175160687 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.177818746 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.176557387 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.177396025 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.176062837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.175429108 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.174957452 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.177222633 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.176225253 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.175918086 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.177752873 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.181093846 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.185427575 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.17578162 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.175504583 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.177634448 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.176010518 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.176382615 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.177806062 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.175819578 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.176599191 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.179256777 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.176817659 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.177723254 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.177082448 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.176416571 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.175347348 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.177003042 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.175952998 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.177260732 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.17675725 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.177636256 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.17728516 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.178227433 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.178219887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.17693106 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.177139853 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.178415857 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.17919058 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.178413377 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.178293395 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.179099413 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.176958886 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.177770577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.179530329 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.17897689 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.177350186 seconds)
  done (took 85.835628312 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.179147454 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.176022497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.175354054 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.176369744 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17629623 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.178044414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.175490435 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179064721 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.176058149 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.17833268 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178169298 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.176515214 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175967522 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.179715798 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179114546 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.175847538 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.179930318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.175679814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.180866682 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.180590287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.181830586 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.177619215 seconds)
  done (took 27.002630793 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.179670883 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.180327876 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.177014681 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.182238822 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.179176642 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.181452806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.180281112 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.181607812 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179665292 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178603737 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177238957 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180859385 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.180235654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178827382 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179001918 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.179185348 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180461825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.180076987 seconds)
  done (took 22.328984738 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.180301288 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.179294521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.18300309 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.179597485 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.179916167 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.183362801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180089093 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.182822281 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.181689777 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.179402805 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.18273837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181898791 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.183321089 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179378908 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182293408 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.179714022 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.181906061 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179705999 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.183234777 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180033026 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.180598563 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183286425 seconds)
  done (took 27.082439342 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183213476 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.184420686 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.180329313 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.181554133 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.181320772 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.183182834 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.183906444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.182504503 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.184699805 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.184092498 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180136921 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.18372657 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.18211158 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.183150704 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.181084313 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.181397342 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.183541047 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.181700455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.183969112 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.181964646 seconds)
  done (took 24.74926904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184685378 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18659734 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185263519 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185205028 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184446016 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.185109493 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184968788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.185065415 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184783304 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.187109406 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.185641798 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.187300979 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185187003 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.186774405 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186072757 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185380428 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186005278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.187226773 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.186618398 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.187345844 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185865349 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.187314147 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.18662002 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.185882258 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.185802015 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.186392642 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185694056 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.188614327 seconds)
  done (took 34.305351595 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.187342426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.186685536 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.184471904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.184676581 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.185001986 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.184126324 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.185693256 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.184976117 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.186384181 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.184573718 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.187371896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.187858009 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.18757734 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.189470724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.188541404 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.18819724 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187484741 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.185941551 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.185126226 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185528689 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.187517964 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188659776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.189344552 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.185713317 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185727176 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.188774385 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.187151701 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.188390247 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189362768 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.185538614 seconds)
  done (took 36.701582351 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.232511381 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233843564 seconds)
  done (took 3.566214909 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.187043198 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188888408 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.188954549 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.187167253 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.18670024 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.189534804 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.189924774 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188572596 seconds)
  done (took 10.607456277 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.189379108 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.189812165 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.190815686 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.190925363 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.188994613 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.190618237 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.196879377 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.210613583 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.190366084 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.191164273 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.198990018 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.198521638 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.192900153 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190330961 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.189245338 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195217714 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.19158683 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.190645242 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.191080506 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.192037293 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189471456 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193512002 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191921988 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.190393885 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.192755727 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.202072296 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.195078224 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.191628184 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191113816 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.195006866 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.191755843 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.189210155 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.193244213 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.191012946 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.192159581 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.191381582 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.200022477 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214207023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.198484254 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192470375 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191300565 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.190342317 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.192542723 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.193860913 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.192662557 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.19258964 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.193249736 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.190074596 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.190150346 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.196519963 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.198602164 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192876886 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.19063856 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.195739639 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.193056956 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.199740338 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.212015142 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.196539495 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.203214116 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.202678905 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.207292572 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.218483785 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195885076 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.194296348 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205350049 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.219591253 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.201195102 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.210445386 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.191826819 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.194467784 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.199539225 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206927304 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.22071695 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.19294591 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19502326 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.195749059 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197379653 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.194607069 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.202575917 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.216612366 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.195830035 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.196852318 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205200738 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221345841 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.195750317 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.194126513 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.195281777 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.196930645 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.198567385 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207720393 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.215145089 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.195753438 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.195434086 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.195499832 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.197334981 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.195603821 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.195419569 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196108348 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.192513648 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.196899095 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195577155 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199234358 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.205518962 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195398141 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196281935 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.203510478 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.196808036 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.195489414 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.202326394 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.197080793 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.196369769 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.199402981 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.202825104 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.195441755 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201296777 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.207207092 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.19718605 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.198601863 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.197373998 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.19870409 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.209817831 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.225406844 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.199182661 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.199375224 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.204075034 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.211597744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.19829002 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.202884263 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.199886188 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.196261278 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.195825271 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.199972909 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.199779808 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.199611037 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.200354111 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.200289779 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.197325997 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.200354481 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.199262865 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.200461084 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.200557222 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.20037949 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.200031694 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.202257189 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.199871281 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.201041337 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.205947608 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.199526573 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.200574551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.201219198 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.196380703 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200714172 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.200913979 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.199631884 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.19939719 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.199008464 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.200259526 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.199640871 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201873541 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.201870781 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20175961 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.20150182 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206379127 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.200539331 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.204202255 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.198943113 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.199126145 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.202548473 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.20091272 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.199908396 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.202167841 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.201220972 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.204790715 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.209693606 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.201302882 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.200522816 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.20425812 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.201140471 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.202415615 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20094301 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.206088133 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.210476021 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.201555304 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.208373968 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.201333948 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200909112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.202310872 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.202662347 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.201963503 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.203346676 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.208361032 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.212389102 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.214967738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229111315 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.204945778 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.207790371 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.204127001 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.209040286 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.207865568 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.203124184 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.204730473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.203583764 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202121621 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205968583 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.2047991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.204602874 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.203204203 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.205379048 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.205027793 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.204621733 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.205650647 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.205543064 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.206001263 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.202323526 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.205133601 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.203738644 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.204946516 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.202458234 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.206434813 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.205016763 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.206241671 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.205028363 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.212714091 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.203134512 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.206738117 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207376028 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.206354688 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.206149271 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.206588508 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.207163645 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.207313104 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214086575 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.225560611 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.20697093 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.211866577 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.226161244 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.206189528 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.209131681 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.209249643 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.205467445 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.211278956 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.217628136 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.208112976 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.20900632 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.207587694 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.208334624 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.208587663 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.215423068 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.207305842 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.209072311 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.208295749 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.209900092 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.205549832 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.20737722 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.208408025 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.209788139 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209023267 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208547934 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.209132006 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.209225787 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.2081811 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.207797324 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.208285134 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.21143815 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.216919124 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.213272847 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.20719436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.210676319 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.208475488 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.213122112 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.21657161 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.207866226 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.208916817 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22197194 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.235304303 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213234123 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.230476974 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.21001399 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213498196 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.230289981 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.212159913 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.20982161 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208350224 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.20830414 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.207215769 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.207676334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.208352384 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.21034635 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210723823 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.211989261 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.216115486 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.209156027 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.209092914 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.210668593 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.208812778 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.208322579 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.210291081 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.209031906 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.209743995 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.211235697 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.209790065 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.210919793 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.215798263 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229749962 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.211018019 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.210011462 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.209518994 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.210553959 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.210414516 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.209197182 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.215345851 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.21846357 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.214503868 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.22053612 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.212537372 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220555815 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.20999875 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.214662968 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.218924384 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.20967593 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.210534055 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.211189977 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.211880929 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216980185 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.230719803 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.214456101 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.21720267 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211539617 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.212059921 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.212911976 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.212386809 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213384238 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.21148255 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220348085 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236722872 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.217834604 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.215114035 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.21065627 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.212148687 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.212981132 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.212455297 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.215074177 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.211549486 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.214396451 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.211963801 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.213794744 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.21317396 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.213128714 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.213617378 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.212202304 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.212856592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219331714 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.236900759 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.218782699 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.21439644 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.221386142 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213774778 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220435558 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.235012946 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.214885474 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.21336952 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.215290575 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.213859848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.213499894 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.21517199 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.213835295 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.215185825 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.21822578 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.212962407 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.215586276 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.215765146 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.214783931 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.215714006 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226688337 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23933031 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.216181936 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220433972 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.21254061 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.216911565 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.219536984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.213372654 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.214395623 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.218653543 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227388309 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224866669 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.215663642 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.215874951 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214794766 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.214894712 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.215666753 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.215148743 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.215514135 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.218609321 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.216718465 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.214751191 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219135509 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.215687512 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.215643998 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217990701 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.217477123 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.227600776 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.216705361 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.217903492 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.217428759 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.218982666 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.216661823 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.216937387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.218693061 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218614259 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.216818656 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.219862942 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225543544 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.226700228 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.221342386 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.217854335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.218981813 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.218671418 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.218767409 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217212358 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.217648165 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.74207694 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.218581535 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.218877711 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.217823229 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.217318344 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.219003134 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.217783017 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220711399 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223102826 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.227869844 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218659885 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.218097958 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.219834673 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.21971189 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.218385153 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.217779889 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.226093288 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.223097931 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.231931043 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.229322823 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.224684985 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.219904851 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.223180437 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.22981808 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.21705614 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.220622001 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.22019331 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.220565479 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.22077175 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.22422679 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220836856 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.226352211 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.22028335 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.220533688 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228659223 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.243726601 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219449245 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.222040437 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.225091124 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.219981669 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.218678295 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.221494538 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.221158229 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.226101696 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.241691452 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220882797 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222526434 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.221039839 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.222883271 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226914002 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223098751 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.220845808 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.21967487 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.22128086 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219693789 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221960433 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.21725827 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.221115105 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.221727395 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.225037172 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.230479482 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.219462715 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222638215 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2219211 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.222780316 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222591188 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224910852 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.220897519 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.219055046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.221922464 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222594215 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.221603224 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.225003996 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.221445541 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.223728332 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.226417179 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.223695559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227298122 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.2351876 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.23249877 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.221083942 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.221612197 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.224876379 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.224929238 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223142842 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.224261257 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223137792 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.223872182 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.224441573 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224280237 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.225468675 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.22864573 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24062468 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.246664287 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224464385 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.224701205 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227462121 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.224681998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.222720897 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.22382486 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.226736446 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.22891274 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.232856507 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.225362336 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.230369185 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243931063 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.226234354 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.229230291 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.230082627 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.2333526 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.228807159 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225008787 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.225953524 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.231988769 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.242433838 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225084628 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236515701 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256778664 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.246255272 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.226250459 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.224731908 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226560521 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.22461457 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.227595773 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.225111634 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.226232581 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226723924 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.225375716 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.226868577 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232712296 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.228435053 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.227440818 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.227270558 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.227393888 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.227434779 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.22402112 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.226564501 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.227994422 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.226117286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.227064524 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.227047613 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.228083294 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23992225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.255167507 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.227387601 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.227942261 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.226296953 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.231817688 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.231959093 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24191495 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.237040491 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.228370519 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.229958449 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.229900096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22903643 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.229127728 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.229352358 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.227672031 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229810163 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.227231809 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.241704389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253177498 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.234889067 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.229175046 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2293058 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.230542699 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230121831 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228421042 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230254057 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.230269808 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.234344794 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234719572 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.230301872 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.231264627 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.234744714 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.240338385 seconds)
  done (took 724.467605476 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22917802 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228268296 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.228151691 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228048029 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227275754 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228078079 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227487628 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.228046909 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.229018553 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228014853 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.229096766 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228632048 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228686174 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229995066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228303515 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228878827 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228331471 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228805227 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228770625 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231486598 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22950528 seconds)
  done (took 26.940806942 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.232247199 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.230480468 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229583019 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231562669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230272618 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232446256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23037067 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232638253 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232934519 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229572033 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233866166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233170409 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.230588116 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.23154363 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23082826 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233754825 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234732548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232023805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.232942143 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230449823 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234097373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231199179 seconds)
  done (took 28.241182806 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.234381347 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.234902058 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.233951355 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.230152153 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.235635334 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.23230493 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.233769911 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.233711147 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.235047154 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.235422244 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.232529276 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.236278477 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.241426586 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.240891143 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.235762234 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.233611592 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.23356009 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.234568071 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.235457387 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.231639759 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.239788723 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.253554716 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.23268728 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.233780046 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.234461824 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.234834528 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.236019794 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.234649049 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.237173095 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.240086328 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.236504063 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.234924208 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.23743011 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.235518263 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.237370181 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.242204951 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.235363011 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.234379602 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.236605044 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.247227752 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.261150741 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.234847558 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.241559578 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.256392219 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.235019531 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.241596342 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.245564861 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.236287417 seconds)
  done (took 60.544924603 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.834758809 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.849117119 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.844742418 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.846919859 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.854640447 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.849425913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.857239985 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.857616798 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.84540566 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.846513572 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.848127421 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.842867983 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846903647 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.853043889 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.847045577 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.847906627 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851651482 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850021004 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.859155897 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860192451 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.848774206 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.852898619 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.85030205 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.854250288 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852332755 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.846753313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846589667 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.845122326 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.848728719 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.850388466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.853689896 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.863037661 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.866076615 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.849618904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848608918 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.854415063 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.854574233 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.851116411 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856186166 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.850676532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.856653767 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.856633999 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.856961576 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.856702171 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.868018863 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.8510985 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.85270054 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.852630271 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.852259131 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.8594995 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.854267849 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.852508049 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853699141 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.847015399 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853561835 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.856715886 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.859975973 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.85519181 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.851733688 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.849076965 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.845842433 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854255431 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.85144978 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.857019158 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.856014158 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.85623581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.860153627 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858162583 seconds)
  done (took 127.121085189 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.241814237 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.241235843 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24323957 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240502091 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240453794 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.242603715 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241629122 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.241381345 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.242052545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24266109 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241308961 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243550795 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.24255105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.243290976 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.242244443 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243316973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242373929 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243361651 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244243134 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243291415 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.243021988 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.242645094 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242488181 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243894585 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242786454 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244168253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242809767 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244308271 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244849688 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.244538672 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244401013 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.245156464 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245389985 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244383803 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.245551116 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.242814992 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.246308105 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247291529 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.246430016 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245811628 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242941908 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246649641 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246178185 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.244501344 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24516204 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.245640832 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244413551 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.245833478 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246553116 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24510856 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.244525575 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245752615 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245944176 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246632101 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246552617 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.246246228 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244438494 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244973423 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246464604 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.246267679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245934802 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.246198167 seconds)
  done (took 78.291097542 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247656616 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24491009 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.24326132 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.243141143 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247628339 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245436157 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247472145 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.246274612 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248363605 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.245565831 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248969055 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245543326 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247096514 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248706764 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245159219 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245702508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245579239 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24612167 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247906828 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245794772 seconds)
  done (took 26.077723317 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.246020788 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.248457633 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.245308594 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243992615 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.247039506 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.244509826 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.24757044 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247860553 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245021568 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248131554 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248304484 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248616255 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246352458 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246427869 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.246924852 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.24528447 seconds)
  done (took 21.099300177 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.246923978 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.248582574 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.24834562 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.247813898 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.247369131 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.244969984 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.24853664 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.246752131 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.247533262 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.249055893 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.249600175 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.250620989 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.249845095 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.249859619 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.245000334 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.249997375 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.247061144 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.248809228 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.250298232 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.250630866 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.247994387 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.246627646 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.250641504 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.250386671 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.248638693 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.249056867 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.2478973 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.245439588 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.247771209 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.248698694 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.249002825 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.249548133 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.247137611 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.248340933 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.24865559 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.246715196 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.250686286 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.250666659 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.250199306 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.25146276 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.25103929 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.248219514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.251170333 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.25057311 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.248820878 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.251795183 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.249455212 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.249688994 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.250575128 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.249736958 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.25197796 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.251893423 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.250641186 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.253897773 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.253352746 seconds)
  done (took 69.863099578 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252225149 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252993501 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.249886234 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251937272 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.252754907 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.250476604 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.252386607 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251917401 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249942478 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253034659 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251183831 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.254097119 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24917164 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252731767 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251861401 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253233562 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249338446 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249506825 seconds)
  done (took 23.685663613 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.251745346 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250456971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.25343762 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251768126 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.252556419 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25291628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252844336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.254245139 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254557679 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.251229143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25189369 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.254344633 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254020331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.253931265 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251200407 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251394818 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.255055566 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2540385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251714348 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25112549 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254200505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254947687 seconds)
  done (took 28.721674976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.253080557 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.253662438 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.253922741 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.272109272 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.276882819 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.25450999 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.254792661 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.252896154 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.278433408 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.313944021 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.307964163 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.277119526 seconds)
  done (took 16.409054325 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252600077 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255280446 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251460503 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255323678 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25447473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252738458 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254573138 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252415114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255063155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253738937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254713891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256743354 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25597424 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254346053 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257248909 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256697446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256456827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254093857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255135517 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25727648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252164049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256782774 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255541167 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253331728 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25339763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254854297 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258028133 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256436017 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25361803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257621109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258557875 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254440631 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256763053 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256637082 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25859339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258039915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255821425 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25919669 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258366712 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255516551 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258043359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257469747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257032534 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255484112 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258000276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256959703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255902691 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255304939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255842505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25984604 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259316143 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255716283 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25887645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259314961 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259861353 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259584903 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258169818 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258345777 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260012942 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258342085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258858821 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25972195 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256643728 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258114869 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259777699 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258941182 seconds)
  done (took 84.093352396 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257490744 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257883961 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258257496 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258502985 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258909041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256551559 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257540698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258515111 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259246711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257677497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261483439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259905715 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258072332 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258856004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258376919 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25843152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258973463 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25939288 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258912883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261537968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258446753 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259256961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260029812 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259672945 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260444843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26110912 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260259229 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2593653 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260124876 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259385115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25975941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260775572 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260337542 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259742231 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259474361 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258688339 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259894088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258567981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260279918 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2627149 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261386915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262412561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261209245 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261761782 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262795969 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260120982 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26071246 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261232656 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260351017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261457676 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261603819 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262415713 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261617331 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261913116 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261744619 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260711399 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26009544 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262098198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262016248 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263736989 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261949236 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262574608 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264854294 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261683987 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263374334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262362812 seconds)
  done (took 84.348458919 seconds)
done (took 1738.69892115 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.427457932 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.381714518 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.263936959 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.274416928 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.263908669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.287255048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.275726323 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.263658498 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.263893945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.263269225 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.264909403 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477037976 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.258513674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.265064271 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.263363379 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.358664539 seconds)
  done (took 26.022224488 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.295386546 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.267896391 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.394409171 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.288127686 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.294156218 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.472022139 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.328014672 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.269360521 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.456788828 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.290712691 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.257488121 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.293890493 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.269153915 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.259909289 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.289867491 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.473410102 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.532328814 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.260849427 seconds)
  done (took 28.163575115 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.765460038 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.261639828 seconds)
  done (took 5.197489224 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.289493258 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.269150231 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.272613082 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.267911506 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.259601927 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.278401333 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.267480528 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.266853986 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.261739433 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.40689032 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.270044543 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.280074939 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.290020291 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.270805579 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.26847404 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.312973681 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.425808905 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.26884607 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.267166979 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.275652688 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.269843828 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.367866452 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.315641425 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.267307271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.406893825 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.264739196 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.273047485 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.276764966 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.410999186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.268386474 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.270846573 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.269586159 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.272841057 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.172506977 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.742168874 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.289327291 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.29870197 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.280144756 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.268440234 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44178015 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.272134712 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.279293193 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.267168235 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.736009164 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.412577461 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.400096804 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.283565116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.271882282 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.274063704 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.340801206 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.273921873 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.274147889 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316345616 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.110312356 seconds)
  done (took 81.891022408 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.307775557 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.26545946 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447221794 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.284007609 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265156352 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264802862 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.264864639 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.582003016 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.268290384 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265508858 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.56677938 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.870447617 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.288810262 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.314534339 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.110532765 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.331989674 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.265235449 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.28370928 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.267547282 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.268086423 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839842731 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283462218 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.265709961 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.337357917 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.308165403 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810789223 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266060894 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.267963339 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.289996615 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.265986381 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821676902 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.292988168 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.321700627 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.267777703 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.553247323 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679481015 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639090456 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.268856427 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.310188517 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.271547561 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.296317625 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.79793001 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.657528595 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.26801114 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.269732128 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810585085 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.267628827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.279008791 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.271341467 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520548197 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.267724952 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.26752963 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.287555548 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.27171953 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.267609691 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.342455008 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.348569242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815340333 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267683096 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.268724735 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304107287 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.269366152 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.278727391 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273637231 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.271633129 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659860261 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.478104342 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.277102044 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659071669 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81776043 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.288312731 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.884946113 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.287178097 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.28421921 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.455085617 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268331832 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.271513763 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.831529182 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.28905189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.269763493 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641459522 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.275724799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.578573751 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299788339 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.27034193 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857665799 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.274430591 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.276490571 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.269343429 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.276717292 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.268611808 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283171923 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.563061871 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.302316299 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.270684312 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.271163863 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.275273485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.268366441 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.271919929 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.277901134 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889417648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.289803178 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.270393268 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273335202 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280821483 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.271679867 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.27431092 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.271602382 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543974652 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.272642056 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.290763781 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.27141969 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.271949895 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.28301117 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345468271 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.273233963 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.613702795 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.274974756 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288822846 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.276481683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27419829 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.30351164 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272278924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.277545598 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.19597463 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.534729436 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.293454083 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.274307087 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274245584 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.273578498 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.27275915 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294698385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.307939604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.278872296 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100187609 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.296880102 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.280846781 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.27224946 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282484182 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290090857 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.275774287 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.276559451 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.576741337 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.565154249 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488615023 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.277276307 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.273787577 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.083820858 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316357354 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458472378 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296513833 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.274620393 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527847922 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483794874 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.27361686 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.273810502 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.275046172 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538182589 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.274112031 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.592233917 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855522278 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.293474308 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.283020945 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.103311622 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024634897 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.277432783 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.27752661 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.57645833 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.296622285 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.276681324 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.27526374 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.277357371 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.276437538 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.295646278 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.284354529 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.277043172 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.276543807 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.602767596 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470562089 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.295649101 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.278902268 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820070975 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.288427191 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294212104 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.275908415 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281000886 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.276096499 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34152945 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.279994257 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.302022496 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.278384268 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.278538201 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.834731159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.277599009 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.278862491 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47159815 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012227804 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.295502972 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.279114849 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.296619326 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.175448597 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84604682 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.299686755 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.621486427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.288618158 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.319916428 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279100599 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.312495448 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843633276 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280543718 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298160731 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971453047 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.296467912 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.693796301 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.279640632 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.282383264 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929021258 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.297914784 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.279188859 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.280594092 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299250362 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582264326 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.281486909 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.304090623 seconds)
  done (took 486.231518944 seconds)
done (took 628.673626027 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.280069035 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.283709232 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.268776156 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.283535906 seconds)
  done (took 10.303386932 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.289766078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.286976829 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.286523599 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.286444728 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.289588255 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.287240926 seconds)
  done (took 8.916544084 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.279196987 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284522659 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.286051618 seconds)
  done (took 8.0396387 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.510460622 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.302214644 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.645480294 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.30020824 seconds)
  done (took 8.950708111 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.285845092 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.284511552 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.284363681 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.286177631 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.28826597 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.287155704 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.284935264 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.285510852 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.286547009 seconds)
  done (took 12.757082521 seconds)
done (took 50.154406171 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.474466289 seconds)
    (2/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.045723514 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.049368076 seconds)
    (4/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.311218347 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.330530041 seconds)
    (6/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.289402493 seconds)
    (7/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.923035262 seconds)
    (8/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.32015474 seconds)
    (9/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.99019931 seconds)
    (10/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.466372999 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.338410626 seconds)
    (12/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.273564997 seconds)
    (13/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.478011799 seconds)
    (14/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.371110846 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.296556017 seconds)
    (16/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.291490384 seconds)
    (17/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.985774453 seconds)
    (18/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.927622376 seconds)
    (19/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.293213387 seconds)
    (20/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.294078885 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.351159789 seconds)
    (22/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.365660288 seconds)
    (23/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.419790778 seconds)
    (24/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.299812646 seconds)
    (25/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.266569033 seconds)
    (26/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.280650967 seconds)
    (27/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.357547871 seconds)
    (28/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.293550056 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.286971224 seconds)
    (30/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.356546196 seconds)
    (31/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.354796804 seconds)
    (32/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.356170121 seconds)
    (33/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.267413303 seconds)
    (34/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.301955678 seconds)
    (35/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.560034872 seconds)
    (36/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.494812478 seconds)
    (37/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.38550828 seconds)
    (38/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.332464545 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.314771457 seconds)
    (40/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.04667954 seconds)
    (41/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.344995544 seconds)
    (42/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.324607499 seconds)
    (43/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.300135029 seconds)
    (44/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.282076755 seconds)
    (45/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.380467035 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.463924407 seconds)
    (47/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.285295942 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.29157141 seconds)
    (49/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.341635653 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.45753713 seconds)
    (51/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.296653794 seconds)
    (52/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.442257765 seconds)
    (53/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.996315426 seconds)
    (54/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.282826905 seconds)
    (55/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.326521368 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.389613703 seconds)
    (57/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.296620541 seconds)
    (58/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.296548868 seconds)
    (59/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.382865183 seconds)
    (60/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.387465033 seconds)
    (61/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.313469731 seconds)
    (62/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.295736866 seconds)
    (63/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.389477943 seconds)
    (64/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.282329203 seconds)
    (65/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.447881176 seconds)
    (66/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.423224076 seconds)
    (67/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.414776362 seconds)
    (68/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.501078173 seconds)
    (69/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.443602566 seconds)
    (70/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.446044055 seconds)
    (71/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.270365214 seconds)
    (72/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.43478842 seconds)
    (73/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.369867326 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.337139616 seconds)
    (75/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.473319548 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.312832986 seconds)
    (77/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.311431509 seconds)
    (78/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.675405733 seconds)
    (79/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.311716023 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.340726445 seconds)
    (81/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.30950588 seconds)
    (82/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.367462507 seconds)
    (83/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.31040708 seconds)
    (84/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.502166339 seconds)
    (85/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.271642799 seconds)
    (86/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.411888719 seconds)
    (87/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.450975419 seconds)
    (88/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.341557759 seconds)
    (89/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.394642281 seconds)
    (90/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.36977076 seconds)
    (91/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.648288181 seconds)
    (92/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.636091299 seconds)
    (93/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.300094299 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.312376296 seconds)
    (95/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.500498359 seconds)
    (96/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.297289489 seconds)
    (97/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.299184164 seconds)
    (98/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.051316754 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.401583464 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.312547552 seconds)
    (101/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.29434745 seconds)
    (102/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.28071724 seconds)
    (103/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.374086809 seconds)
    (104/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.17296066 seconds)
    (105/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.499089575 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.38592851 seconds)
    (107/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.425233179 seconds)
    (108/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.337229041 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.385072755 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.300667506 seconds)
    (111/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.048473995 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.417143824 seconds)
    (113/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.368332329 seconds)
    (114/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.446538966 seconds)
    (115/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.939247851 seconds)
    (116/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.29516651 seconds)
    (117/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.383423128 seconds)
    (118/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.310152765 seconds)
    (119/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.943701705 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.292877019 seconds)
    (121/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.056851491 seconds)
    (122/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.295162112 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.447890539 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.459568061 seconds)
    (125/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.4780988 seconds)
    (126/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.358270156 seconds)
    (127/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.304384877 seconds)
    (128/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.373339947 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.312250135 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.397696711 seconds)
    (131/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.393172845 seconds)
    (132/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.296740574 seconds)
    (133/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.365090568 seconds)
    (134/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.939306037 seconds)
    (135/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.291909393 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.294343509 seconds)
    (137/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.395249021 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.302418252 seconds)
    (139/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.943695821 seconds)
    (140/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.508081826 seconds)
    (141/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.27448186 seconds)
    (142/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.298567388 seconds)
    (143/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.444247648 seconds)
    (144/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324106418 seconds)
    (145/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.309311883 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.19542518 seconds)
    (147/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.435214058 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.419114041 seconds)
    (149/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.363589812 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.41937453 seconds)
    (151/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.408459542 seconds)
    (152/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.287963302 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.355397647 seconds)
    (154/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.513845752 seconds)
    (155/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.062560036 seconds)
    (156/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.324821886 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.387533036 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.31455192 seconds)
    (159/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.420872359 seconds)
    (160/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.451466685 seconds)
    (161/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.972482373 seconds)
    (162/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.447654257 seconds)
    (163/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.471153307 seconds)
    (164/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.392636258 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.303567334 seconds)
    (166/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.347527428 seconds)
    (167/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.457974584 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.316527237 seconds)
    (169/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.376668278 seconds)
    (170/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.544471063 seconds)
    (171/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.42312426 seconds)
    (172/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.326058524 seconds)
    (173/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.43334196 seconds)
    (174/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.365877999 seconds)
    (175/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.352105379 seconds)
    (176/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.442469728 seconds)
    (177/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.502240939 seconds)
    (178/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.324751635 seconds)
    (179/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.427253677 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.371458948 seconds)
    (181/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.490020558 seconds)
    (182/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.331767746 seconds)
    (183/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.119678182 seconds)
    (184/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.401575675 seconds)
    (185/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.396120912 seconds)
    (186/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324280474 seconds)
    (187/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.290812797 seconds)
    (188/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.353609055 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.307400153 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.350329066 seconds)
    (191/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.301118903 seconds)
    (192/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.333166443 seconds)
    (193/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.379735909 seconds)
    (194/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.059960585 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.388593331 seconds)
    (196/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.292678867 seconds)
    (197/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.334571334 seconds)
    (198/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.279056223 seconds)
    (199/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.527699814 seconds)
    (200/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.346191512 seconds)
    (201/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.004559613 seconds)
    (202/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.392228386 seconds)
    (203/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.316617986 seconds)
    (204/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.290197006 seconds)
    (205/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.179775477 seconds)
    (206/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.401087172 seconds)
    (207/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.421596275 seconds)
    (208/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.380402677 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.481046999 seconds)
    (210/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.518721775 seconds)
    (211/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.379047039 seconds)
    (212/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.195625283 seconds)
    (213/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.470967412 seconds)
    (214/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.280645394 seconds)
    (215/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964997204 seconds)
    (216/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.313192523 seconds)
    (217/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.303461296 seconds)
    (218/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.352460132 seconds)
    (219/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.657745768 seconds)
    (220/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.323705367 seconds)
    (221/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.377743547 seconds)
    (222/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.135954287 seconds)
    (223/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.310322266 seconds)
    (224/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.288028026 seconds)
  done (took 359.581529574 seconds)
done (took 360.767794304 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349879804 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.478305969 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.302352595 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.301270451 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347161519 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.292561175 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.35553383 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.310240677 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.306510141 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.304960549 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.308671579 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.308440887 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.315720461 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.337461671 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.416390737 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.309262609 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.303160783 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.302420619 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.343357646 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360641245 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345672172 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346454132 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314765635 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.301979468 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349895606 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35103769 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.310302954 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.30454042 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.301661288 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.34425999 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.292292452 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.33117734 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.353518126 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.354429494 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347911843 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.306833658 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346986292 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.480991152 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.339975077 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.33788017 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.307119743 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355123207 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.315444806 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.315331879 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35592074 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.317801301 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353331794 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.427713998 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.296635882 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.321929206 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352319197 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36703301 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.308491827 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.300537924 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.307133729 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.428208171 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.307405703 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353280244 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.307759338 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349032091 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.418786565 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352341156 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36713589 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352073759 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.308015908 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.318688079 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.30792512 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.365482884 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304739573 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35081093 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350949433 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.313399842 seconds)
done (took 105.480902356 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.433748014 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.304908488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.465557549 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306165469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.472840106 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.458138231 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303973923 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.30582892 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.304212564 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.148956071 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.306222813 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.303240511 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.305369278 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.303807669 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.437494404 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.307321572 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304843838 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.041985201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.307597596 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.453402564 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.308154056 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.304782078 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.30847124 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.141593544 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.306745686 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.30148085 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.451342833 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.308158268 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.034070969 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.301517671 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.3046494 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.032612759 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.455042182 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.326604236 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.31882836 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.315563237 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476075391 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.329882739 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.440038535 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.439565726 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.468549147 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.348080801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.303454352 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.306666916 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.312030194 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.309831691 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.307717776 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.337095252 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.307032014 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.308274414 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.042766773 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.321192344 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.316864617 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.309331468 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30735193 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.328781195 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.309884294 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.310232387 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458622951 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.311887189 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.437995996 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.14510945 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.155353183 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.312155391 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.306824702 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.309566502 seconds)
  done (took 106.980661799 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.377045379 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.38707972 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.431698515 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.332367222 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.361168206 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.437619928 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.330120078 seconds)
  done (took 10.866063561 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.317016436 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312316994 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36101526 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36148145 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.311204427 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.523926358 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312627576 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.322515426 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.309492199 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.386601505 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.311699804 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.313933412 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.320290205 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.309753362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359782948 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.324554683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426784938 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.313545728 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.312627379 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466789319 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310104509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.318637271 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389162586 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.323961623 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.314249035 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.321200253 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.264285581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311542056 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.311733145 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.313038346 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312245466 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422379061 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31524777 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.313859448 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.312736293 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473481919 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.314425446 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.311715139 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.314546741 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.31342472 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.315467579 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.316717089 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.317187327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.31388482 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.31340565 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.338940779 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.318185937 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.317241334 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.317905227 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317870638 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.392636168 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.315606459 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.311850738 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.31218184 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.392719424 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.324953093 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.316447281 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.312643845 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.31565579 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314427982 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.469643443 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363264659 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.315610445 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362214012 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.317544992 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.317249579 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.316288165 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.316547562 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408802809 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.31655492 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364709953 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.314353937 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.538758537 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.340808972 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.318110576 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.319635781 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.321247591 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.31692229 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.313225298 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.324074018 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.313457149 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.317973605 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.323237589 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.31352339 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.315428125 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501797301 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471723822 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.314896474 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.331591082 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.325631719 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.318307917 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.393268175 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.317033567 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.315626965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368602195 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.432371707 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.395562506 seconds)
  done (took 136.316458918 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.329991503 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.332412429 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.323966299 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.345032359 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.321489993 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319544219 seconds)
  done (took 9.187673264 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.322288253 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.32088338 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.318825274 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.318437854 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.317975564 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.32031003 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.32095486 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319723411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.322883553 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.321066743 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.321171455 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.321753154 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.321322884 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.318757077 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.321294186 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.320298288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.319844984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.319000682 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.320952874 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319421482 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.321860575 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.320110621 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32121156 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.322669402 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.328134495 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.321818864 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344599611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.32000753 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.322070317 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.326401246 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.341513032 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.320469339 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.324943272 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.328443027 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.326306961 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.32363465 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327702283 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.321495603 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.320399232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.320320827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.323115551 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.321467803 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.321449859 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.323909399 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.323812945 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.327969128 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.327280493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.344560199 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.322010567 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.324941358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.323004959 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.322714562 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.321813549 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.323420451 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.325305471 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34583204 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.328509283 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.323971773 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.323078531 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.324193408 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.324754268 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.32381476 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.325683064 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.327756702 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.321147919 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.326573529 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.326594125 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.326271679 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323099314 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.324246791 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.323554343 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.322396712 seconds)
  done (took 97.550321972 seconds)
done (took 362.103685184 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.151523187 seconds)
  done (took 4.371377045 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.423548736 seconds)
  done (took 3.645645121 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.401187132 seconds)
  done (took 24.628976178 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.426012494 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.343946986 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.344909237 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.325134462 seconds)
  done (took 10.66294806 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.689390352 seconds)
  done (took 3.911901496 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.333272161 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.328935707 seconds)
  done (took 5.886117693 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.658691875 seconds)
  done (took 3.880213103 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.864668614 seconds)
  done (took 4.091552799 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.339712862 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.333820855 seconds)
  done (took 5.901612456 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.304663895 seconds)
  done (took 3.527407059 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.790238574 seconds)
  done (took 39.015175322 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.327775283 seconds)
  done (took 3.553975036 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.356444098 seconds)
  done (took 3.578556336 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.30492157 seconds)
  done (took 6.528493307 seconds)
done (took 124.405069347 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.318456075 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.320201088 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.32169571 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.319749773 seconds)
  done (took 10.503379762 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.379168069 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.376431386 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.378350491 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.378430206 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.377198773 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.379715814 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.351203906 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.352388599 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.378116311 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.378581803 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.378993188 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.378218553 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.377923026 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.351418492 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.379062993 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.379397095 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.378512177 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.380653414 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.353334587 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.379850389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.329559032 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.378824163 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.37928417 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.32857219 seconds)
  done (took 34.109779938 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.825105763 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.400900814 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.478861801 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.381285686 seconds)
  done (took 7.31238893 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.405710428 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.405372527 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.420668409 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.45684359 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.47199493 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.418784645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.354626556 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.351611305 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.33591787 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.407895229 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.456032101 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.397244452 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.48441863 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.328769738 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.533727211 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.328357246 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.32973628 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.407845977 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.45947642 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.474222207 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.328226242 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.407483924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.408512943 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.399098372 seconds)
  done (took 34.999174546 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.335808026 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.342151071 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.329076135 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.34448405 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.328906562 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.328093458 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.331745658 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.335605869 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.328381281 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.328103518 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.330428962 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.342948659 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.332736593 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.330206375 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.336405095 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.330358257 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.334605848 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.333370158 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.330421969 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.334819454 seconds)
  done (took 27.895892008 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.323413185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.323510033 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.675729497 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.58136093 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.323699267 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.322479822 seconds)
  done (took 13.77777691 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.412887588 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.586565897 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.331597308 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735988808 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.819063984 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.333242581 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.332790693 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.605010353 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.996608258 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966081156 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.39437187 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.413021307 seconds)
  done (took 20.157312816 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.328103844 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.327588132 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340522638 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.344681084 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.396338694 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.355510202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.338709678 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.325057994 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.402791187 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.423050554 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.359711434 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.40183566 seconds)
  done (took 21.573379446 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422975894 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325653447 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326786893 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395849658 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328131736 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179906085 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327316384 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124673672 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.361355576 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605642207 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329566109 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450291171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589023454 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338477029 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334183208 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.32821056 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562920691 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882769634 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332742544 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331482566 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369325886 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332148334 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335099514 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.578713477 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337875641 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331836553 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.593813225 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330870829 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6552825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34700125 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343213386 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332674829 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605958593 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049632189 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461632979 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577710075 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355895256 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333036555 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.325023518 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.333187218 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348072987 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337745429 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349157325 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333287037 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334236904 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342545493 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092108788 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.360572001 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.329239105 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335294361 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630245826 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44083726 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.341992531 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33354317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370691323 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333869762 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.339646705 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432055165 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918286362 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334378332 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351390846 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.341554361 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355708795 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336772029 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008042813 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.342275253 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.338065362 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33911103 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334358894 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33640902 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35502665 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336313186 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362124304 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336576051 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130291296 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337378528 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339409947 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955531337 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344883279 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.339982451 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571876507 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334360767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336845073 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.33800521 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336693221 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126587113 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344838546 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.320150442 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354820983 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121328258 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605718278 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355584835 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363436847 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557222481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.318809759 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335730567 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.332895654 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354307492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356012374 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085033402 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35419023 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.338980761 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594053586 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.546960862 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343867054 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339142364 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852284468 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363960623 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.353170166 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343997599 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585406423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.99413127 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35260471 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334857413 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352065398 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334592011 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1707076 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344057343 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.441911117 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33297881 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631589564 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.219923897 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334976673 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403540346 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338744893 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338013059 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333820313 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337001219 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334238507 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.575317719 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373708394 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.352193243 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.336480519 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337955617 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.343320004 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346885662 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.335550289 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560925356 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345493845 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61406107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335629319 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335944807 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336319045 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.561214985 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.333857536 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.673836214 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601728069 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354422273 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35210544 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354281543 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355978985 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441803189 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359288094 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.351782671 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598609309 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.340636256 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.341085309 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33745658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340145253 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342738141 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.345018495 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341864504 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007529392 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320267422 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352893213 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.241133677 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.361635163 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414449447 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355039117 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598965674 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.362066374 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347848753 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.3527606 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.357432858 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57481542 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356546346 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.348542923 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423219146 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.901295645 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029702512 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36108863 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.347527639 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.344811131 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.34318005 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34499274 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345196401 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347297881 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597783821 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36890333 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350991538 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012041177 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350448914 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348984662 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.35390681 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36233828 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354459701 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351501626 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.355335009 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348299126 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360959643 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.363410164 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494076657 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.365983443 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350332352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866620687 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354305211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34947226 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349059941 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384028221 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351043253 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205001846 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613789469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405738133 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652351948 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349286283 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.365392144 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.351331409 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347505087 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350207549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.379616139 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360631741 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.359711714 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348725346 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352538018 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9355077 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17281684 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953596734 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370161341 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.36391416 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351542403 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115502978 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371146179 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350388179 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613658703 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106033055 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372480301 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897849562 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.370617951 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208430957 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652012129 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58709903 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371976516 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.350841151 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654745965 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564428449 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385140057 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36949523 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355457835 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.337013212 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956725861 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375094248 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431214569 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145064642 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374599731 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352416507 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.377540913 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354964468 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821476336 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37755257 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351305145 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349776344 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358342391 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209270342 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356940508 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354781212 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042102139 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36432221 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.874246929 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374460203 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600400091 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.370251404 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.359874062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.350453559 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.353486953 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.608092955 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654456576 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350443207 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361228395 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96365569 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.223020234 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.358588199 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35515247 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186061595 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366491341 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684955975 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.369665643 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.355603711 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354500452 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353337078 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350773925 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.348450867 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362801524 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327079388 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911502406 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.356938874 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381325997 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372877618 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362493547 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613655109 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.366598726 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026703782 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587320808 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372835706 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378903168 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.356630376 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363013803 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.344196407 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356521892 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358595488 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389966449 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583769909 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357994516 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.343995612 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440310205 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574081953 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361060723 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363193742 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633070607 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.357024091 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.381391403 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192036737 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39422781 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362481222 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359937236 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371000084 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376990392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429996846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610091657 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.371915983 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.369650235 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8152308 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379736732 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359049944 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.374709449 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462871758 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367874131 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.355310271 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.133273233 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027213014 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171819425 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.029155059 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661115329 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361337997 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364711292 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35930476 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523083335 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356342922 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629975997 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358601424 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.358712478 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380965229 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365217597 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411019185 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574392409 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634062079 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359777894 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3734537 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363010326 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.361968473 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370057438 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.571413317 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91882248 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980922852 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363173601 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361872505 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128613568 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653651955 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360096553 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361249617 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358776512 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.364343407 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384917931 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.366908125 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380008829 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504613218 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663865279 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071010825 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.392635299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.389753523 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.880229193 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362352302 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617369975 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368005919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612063832 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030239041 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185548826 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633558394 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430924298 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611943983 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.36066124 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524849247 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.375179332 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359518652 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361760329 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361965934 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.356380029 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373706954 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030419817 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627216207 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.365519812 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.372316168 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392398079 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.374788854 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588834277 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173505545 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587492534 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376845329 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368929 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365564551 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055897957 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667758418 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364006572 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.369503821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643822671 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366628954 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386544078 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.049322361 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.362995464 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996780121 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.339129566 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390539248 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38088488 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163255502 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035473634 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.365024861 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937151902 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365884513 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372542362 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640854375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.373633856 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377619831 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646103662 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.368379296 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379859469 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626803745 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.038202053 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235187651 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.387821665 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387284554 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.390049826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365832405 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442046471 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369664549 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365904727 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.85319655 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393806281 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368393364 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380799662 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.383198809 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381758177 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.368205739 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367399806 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.374440512 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.376410731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.363965005 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372250652 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469074521 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980511923 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389759062 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.039239436 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.698568524 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623638161 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380948841 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.357326184 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.372974479 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370210857 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371343628 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366138708 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37143771 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988840599 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.385969398 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.382985363 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3757178 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.369467974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582747593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385193644 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623096959 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387812026 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389488197 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.354819598 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368686218 seconds)
  done (took 970.53853119 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412034843 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.393736817 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.39423863 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.381775395 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.428065098 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.478281718 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.442765025 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.387932004 seconds)
  done (took 20.588429884 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.370610417 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.37768389 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.386724505 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.381021064 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.383599551 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.897196188 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.399098901 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.379966261 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.389185693 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389880124 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.38359751 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.356872334 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.37825112 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.384181337 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.370967713 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.381385304 seconds)
  done (took 32.887917138 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.636847215 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.640154344 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.844456317 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.455711598 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.372537984 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.384966714 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.758105584 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.392646881 seconds)
  done (took 27.764219512 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.383461676 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.384472658 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.384089866 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.384971191 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.384259973 seconds)
  done (took 8.191923509 seconds)
done (took 1231.529225414 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.377172195 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.380553294 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.377703022 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.376681272 seconds)
  done (took 6.781232863 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.360327322 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.356762552 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.360117912 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.370647672 seconds)
  done (took 9.721272729 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.20011325 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.079047281 seconds)
  done (took 5.550738102 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.885527472 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.88205224 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.886643073 seconds)
  done (took 6.926030491 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.69172004 seconds)
  done (took 2.963378325 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.317323622 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.379321875 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.079649682 seconds)
  done (took 8.048599351 seconds)
done (took 41.268309516 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391502819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.62834645 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.533275139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393462536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535125158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.531756752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.137573421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385206266 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378229696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.371638562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37343324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.555853686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.191806192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.631193597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.190760493 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.629101201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.537273312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.37863149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388091869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379949912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.135570243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.37467069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375012016 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.37678368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.537000304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.522538833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385169123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.627216871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39346288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.387572203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.519396462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.385777317 seconds)
  done (took 82.836229565 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.375872778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.379746334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.37524346 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.404686372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.374748072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.377851217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396599621 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.377600205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.375580287 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.376877393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.389698423 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.374259328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.377447732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.3959566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.396800959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.399130962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.395832092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402452044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.374254106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.393406078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.382184319 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392621619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.373733048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.377803908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.391590041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.381154425 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.413748075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.377021908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378354746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.378730333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.39818472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.394469948 seconds)
  done (took 77.630472549 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.379725385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.378007897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384482273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.383315829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.379163315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.38004801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.377538357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.376194708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376760858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392247969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.3865457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.377951962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398789736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.379954565 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.400981621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.378945791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.402468886 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377786352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.377591325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.399964044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.379487566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.386540454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378677842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.386348738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.380738561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.376754479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410534851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.37557388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382211644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393596738 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380956531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400880745 seconds)
  done (took 77.601237283 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.663429024 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.388053183 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.389409735 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380932586 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.389624735 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.389817346 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.382352067 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.665212928 seconds)
  done (took 14.927014216 seconds)
done (took 254.271985296 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.379355783 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.959297883 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.426206968 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.382872613 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.411150082 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.413135083 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.636470319 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.42337759 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.631139022 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.417293061 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.408343483 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.380787532 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.314663618 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.550899451 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.307945842 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.399359709 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.393544553 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.38410928 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.077358333 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.695449048 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.41080215 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.384329604 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.280283203 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.414384202 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.368480212 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.499987335 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503475793 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.619692119 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561570188 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478262266 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.000868791 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.401361099 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.382012128 seconds)
  done (took 65.578177801 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.39267971 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.510862542 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.389086366 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.388836337 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.515845745 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.391176952 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.392054094 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.391936898 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.390515663 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.389320997 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.390996286 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.391898604 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.392031897 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.439107104 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.517117861 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.410954785 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.388838531 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.506230795 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.391782262 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.386230042 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.438042425 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.38921008 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.393823614 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.439713106 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.392097009 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.394448448 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.513898594 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.39570012 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.391058489 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.511129121 seconds)
  done (took 43.91156713 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.391911172 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.07683099 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.239677852 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.403250416 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.39430737 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.400260067 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.74422176 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.3967021 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.398747353 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.399475198 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.988763225 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.400192613 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435237111 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.281519763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.401124169 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.394938648 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.39592397 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.393366758 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.089531985 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407253476 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.770528308 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400536201 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.744386433 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.410329815 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.423750515 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394643859 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.3990494 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.352689778 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.399275348 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.990826899 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.314349461 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.742120935 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.270980581 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.245752239 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.316130048 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.400070784 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.39457552 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993745021 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.402681054 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.395436062 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.741863502 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.400695175 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.24906825 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.138806921 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.421130695 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392488331 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.339822268 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.990077209 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.696825865 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403524094 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.275567704 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.404057734 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.395721191 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.395203856 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.695848397 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.399974174 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.393078732 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.374815877 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.400731316 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.745889818 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.400840602 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.399466779 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090838065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.403495082 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.085153398 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.401960554 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.403892741 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.423799005 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.258660929 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.404218479 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.163552451 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.422577902 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.395436355 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.99110019 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.087080852 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.394136344 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.401558883 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.095022391 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.331948247 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.745372831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.406069958 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.306557873 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.749139826 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.401308251 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.398230894 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.401725682 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.397195096 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476082468 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.741932084 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.083132698 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.163186388 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.384352118 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.753349548 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.410711714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.404338083 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.363900219 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.398138933 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.398886563 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.254039557 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164782895 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.423346313 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.40815331 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.172128562 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.42492657 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.753388507 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.410278499 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.266162722 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.404580635 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.478033334 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.399519224 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.402837945 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.425728607 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.751741872 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.40787319 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.398328734 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.143858189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.034785847 seconds)
  done (took 200.403856128 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.395157676 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.390525079 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.391785477 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.392659469 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.397332768 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.403894334 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.394957428 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.397187638 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.400790562 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.395837439 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.396749281 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.401348415 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.401119584 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.394785926 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.396694238 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.395077704 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.394473548 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.421042156 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.416886265 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.393900354 seconds)
  done (took 45.267981554 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.403112243 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.094664739 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.043315748 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.407582068 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.401734405 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.405739975 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.47068057 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.402222246 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.399214604 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.758646096 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.613827287 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.423918156 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.396972171 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.395597816 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.039380619 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.392072223 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.754061927 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.044738142 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.40178829 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.044106138 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.388433902 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.403241584 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.400027214 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.045780903 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.768139765 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.753706585 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477545743 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.054637931 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400554344 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.403441309 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.047926763 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.403621017 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.40173192 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.042174285 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.425063898 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413685112 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.400250071 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.470400429 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.470536585 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.748236097 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.120148723 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.755441595 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.416139888 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.580446045 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.406820026 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.389272275 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.051099424 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.42530005 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.391014866 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.402983086 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.405005429 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.058009539 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.426014266 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.043347029 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.425927348 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.401842537 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.048565243 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.051006081 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.069694757 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.618284842 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.430644453 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.756681566 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.405545565 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.050610085 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.426413192 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.407678052 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.409220709 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.612900711 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.092396389 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.758581725 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.785672541 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.784309853 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.407214248 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.471820946 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.421357275 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.81246538 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.469141672 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.833278682 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.752909154 seconds)
  done (took 130.081645317 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700431175 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.523366498 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.859848466 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.058477715 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.400799095 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.532761687 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.527280365 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.688025123 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.404911373 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.475608578 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.125593256 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.50687697 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.192042468 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.479416619 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.510189234 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.558951544 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.839844059 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.398502488 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.086598139 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.112202838 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.403220894 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522789404 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.006867873 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.624409275 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.402100517 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.983055512 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.4180664 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.13667971 seconds)
  done (took 54.773918102 seconds)
done (took 541.299123986 seconds)
SAVING RESULT...
DONE!
