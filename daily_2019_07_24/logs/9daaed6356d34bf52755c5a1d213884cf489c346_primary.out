cset: moving following pidspec: 16552
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342348422 seconds)
loading group "string"... done (took 0.527170922 seconds)
loading group "linalg"... done (took 6.735614722 seconds)
loading group "parallel"... done (took 0.153622157 seconds)
loading group "find"... done (took 1.165475504 seconds)
loading group "tuple"... done (took 1.705511089 seconds)
loading group "dates"... done (took 1.201017544 seconds)
loading group "micro"... done (took 0.223350847 seconds)
loading group "io"... done (took 0.920662007 seconds)
loading group "scalar"... done (took 36.416820739 seconds)
loading group "sparse"... done (took 10.90393971 seconds)
loading group "broadcast"... done (took 0.90673284 seconds)
loading group "union"... done (took 11.736046343 seconds)
loading group "simd"... done (took 4.354618357 seconds)
loading group "random"... done (took 8.370661185 seconds)
loading group "problem"... done (took 1.857590535 seconds)
loading group "array"... done (took 19.951621074 seconds)
loading group "misc"... done (took 1.80658705 seconds)
loading group "sort"... done (took 3.098879268 seconds)
loading group "collection"... done (took 16.513971585 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.472520167 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119709076 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.111711095 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115820007 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.134404147 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112730249 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120564059 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08147614 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.792682631 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137975927 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116203391 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402234938 seconds)
done (took 4.833289654 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17166492 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081084091 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08004223 seconds)
  done (took 1.234436772 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064381512 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119993646 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064930962 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065077308 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065379808 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064784612 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06480863 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06438026 seconds)
  done (took 1.582710567 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071772557 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0675962 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066838695 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066137026 seconds)
  done (took 1.346525969 seconds)
done (took 5.485053822 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.756381999 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198591321 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180403366 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.386421304 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.124313399 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160390186 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640747355 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311991466 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180693674 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079407484 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101186036 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316465299 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104963436 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634310509 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075451751 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088290363 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137708391 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.404020857 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066129553 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081478198 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087845335 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127485626 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085189507 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074876814 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142855199 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066805177 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128184257 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080063349 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065452476 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205130705 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171560378 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655497222 seconds)
  done (took 10.03176042 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094563705 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096682752 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0669857 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121854284 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093929665 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068416551 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070255525 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065742172 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085214425 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12661732 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086729698 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099733572 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064094768 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06758371 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083125107 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202400036 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080974017 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08209829 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069853685 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073964357 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104232827 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077012298 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07669418 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076232067 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127718804 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179511809 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098602809 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098719776 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068477468 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080757284 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114359226 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124043027 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064497757 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065433267 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122688055 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094110402 seconds)
  done (took 4.485903166 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.891932722 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136969012 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08877154 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159320268 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066593424 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104528483 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0648438 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082746461 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.1974904 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.038045625 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.426246704 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109262623 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083323891 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066742154 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067225369 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107584579 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065495759 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.338219098 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108226686 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112146215 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083118441 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072982688 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067711444 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342217358 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066037223 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065523907 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067814403 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056912973 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11103583 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067028886 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.963174566 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086210828 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066209899 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100252527 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163600699 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088109253 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131816582 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064190254 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064266645 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144853597 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07274989 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064246828 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080659945 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062783419 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100570249 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099716681 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.196746368 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066837555 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160435448 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066342695 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08529986 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.704922803 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150824281 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075347634 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065829864 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242895959 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084738184 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065917932 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063660442 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173017554 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130148696 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068301983 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066955176 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065202711 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066790334 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367450846 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068549149 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717724561 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069461774 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078143663 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070628625 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06602178 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07182073 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072009003 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084616852 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065352856 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067580532 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066125577 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064997387 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067736171 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083042964 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187051713 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065942845 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066921444 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06366114 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085378796 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096818584 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063520241 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068454059 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067931922 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099270546 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067204577 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066045695 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100006015 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065934533 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082586281 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067904955 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111562882 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065217283 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.08431091 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063805366 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094133353 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069265733 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09784467 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.075285175 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159693748 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.225152093 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063466182 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064422429 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06415351 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066281461 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067392143 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06718434 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068005088 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077558742 seconds)
  done (took 19.600893813 seconds)
done (took 36.084030753 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271986934 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073505964 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073762456 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073760525 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073600138 seconds)
  done (took 1.729074443 seconds)
done (took 2.873110043 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118699828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09716105 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063137494 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094046234 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063357968 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098309085 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097871904 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080635947 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09827704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063258436 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094819168 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063532889 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063632796 seconds)
  done (took 2.262549974 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081780564 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081910119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069104797 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081137683 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063078976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0808265 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080061708 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087717674 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079803414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071187791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062781692 seconds)
  done (took 1.98011927 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081197712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082389742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068571497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080762045 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062775324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080186414 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080048925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084457113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080016734 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072157116 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062584697 seconds)
  done (took 1.97174244 seconds)
done (took 7.349101664 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076075662 seconds)
  done (took 1.204544153 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578271407 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.00375265 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080282737 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109654665 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180937047 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115923228 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267441658 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083934037 seconds)
  done (took 8.729887516 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100767338 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070581146 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072056597 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06791484 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06993089 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067436284 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068681553 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070414521 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068640157 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067530993 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067672258 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07044781 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069934181 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067096662 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0698004 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068497666 seconds)
  done (took 2.341447083 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091062892 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089273319 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072236256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073339802 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070961522 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071007187 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073384731 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072282093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069466997 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070777533 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073464991 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072370197 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070477236 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064184116 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072996524 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074160492 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069781967 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072766074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073762864 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073632003 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0733343 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06351965 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07032378 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072559303 seconds)
  done (took 2.985077314 seconds)
done (took 16.398219368 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110053325 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070632984 seconds)
  done (took 1.316320144 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07955469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081615062 seconds)
  done (took 1.305479196 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08016849 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064395238 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087494537 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076188151 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065373347 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065019606 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085267939 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065316882 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06487743 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064888077 seconds)
  done (took 1.863745844 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067654606 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076849632 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068737565 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079638339 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072333697 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063140488 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070850208 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066746724 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076055267 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061430993 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069279796 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080754283 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069547194 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081646676 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071010683 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066709237 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068891536 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065542644 seconds)
  done (took 2.424624738 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064759867 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067011446 seconds)
  done (took 1.282740747 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065846298 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062221345 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065785552 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065022073 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062330472 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061691328 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062318288 seconds)
  done (took 1.592060337 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.369961411 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10880861 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291126739 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069419869 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080527406 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24620263 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06400481 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06909231 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069254662 seconds)
  done (took 2.557624221 seconds)
done (took 13.493113275 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076699235 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083798363 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093200286 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336466437 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090367474 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064791623 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112744388 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185435151 seconds)
done (took 2.202442836 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204296422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.557471423 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.365361204 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19189043 seconds)
  done (took 2.268198849 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311510196 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089886092 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060001449 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065569442 seconds)
  done (took 1.686831476 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064224028 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068098794 seconds)
  done (took 1.291526889 seconds)
done (took 6.608488011 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065903661 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064842635 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062840125 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065072313 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062477068 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062872771 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083571161 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064682982 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064763744 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064719714 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067373191 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064729271 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062511283 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062747494 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062758014 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064792678 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062569173 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062545563 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062532748 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062417669 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065040535 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064700891 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062634536 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065287326 seconds)
  done (took 2.747816179 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081341031 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065274586 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070804468 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069749184 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068748159 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070205665 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070009172 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065151629 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070103625 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067072976 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06814392 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068490141 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067052302 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068909367 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066983705 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069032608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07002948 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065022084 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066788192 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068634145 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069840577 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065339105 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068557782 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06975009 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068694986 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068518638 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067204891 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065491378 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069814879 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068595573 seconds)
  done (took 3.226549532 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068489516 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061946593 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063694751 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069632019 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062689718 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063651805 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062058489 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063081241 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063271514 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062625407 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06453063 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06223915 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062356763 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064015372 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063372929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066254464 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078163882 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0628279 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062642318 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063105999 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065980681 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062323971 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062976709 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062940827 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062862453 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062127108 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063064689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062552832 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06322746 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062661029 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065499565 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066132881 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062273826 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069012151 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065755293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062372855 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066248849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06228255 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06444867 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062346888 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062275537 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062708865 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062277928 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069069511 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062552523 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064535645 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062591984 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063600398 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063389242 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064959413 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061848458 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062522362 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064269103 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064018098 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066202336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061982106 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063446363 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062182585 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063754106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062713597 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062010384 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062010787 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065184553 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062959759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077202442 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068832538 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06237691 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064275937 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063534125 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06486458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063929109 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075521186 seconds)
  done (took 5.801301937 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088325259 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085218756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.175742266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063824163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061512147 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064439237 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066272253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062927378 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06416421 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067988601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063075435 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064127842 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064116874 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075491506 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06351249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064189251 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068498152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060879591 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062991705 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066024182 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063445688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066010469 seconds)
  done (took 2.763575851 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151204837 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068853269 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103783993 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071925354 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066605488 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071717082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069126227 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068961978 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069316666 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067305295 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066778238 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068714825 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066417084 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066833859 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067135078 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067151372 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069506836 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067221214 seconds)
  done (took 2.522407247 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075865661 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064450892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085117356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064590275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064818674 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067168541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069421176 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073056357 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066939519 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064528654 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073001622 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067026079 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067382336 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064689894 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067074741 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064748139 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067206931 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064657211 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072543643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069494153 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069360001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072833282 seconds)
  done (took 2.690626529 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077825111 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067340143 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081028645 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06715746 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060910342 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063630537 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069390782 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064794758 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068956526 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06645758 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064777677 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063385493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068020097 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065292507 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068209026 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064550812 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066650592 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065164376 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067019065 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060845955 seconds)
  done (took 2.517668114 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084738165 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066612733 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067026886 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074441557 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066509675 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066119719 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074141229 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066576612 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066575339 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086251292 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066152123 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06677547 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073897694 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071230929 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06631955 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074009078 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073535575 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074526292 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067093538 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066561675 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086523208 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067405862 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073839134 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066813744 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066392794 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066640801 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066508883 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071200092 seconds)
  done (took 3.16192853 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06578573 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065599192 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063239015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062872927 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063048033 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062644917 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063119428 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062995504 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065650763 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063131265 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065412819 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065181652 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06532702 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065452799 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065204273 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065234073 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065377778 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063041176 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063135867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062889499 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065073648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065248446 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065721685 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062906821 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06312991 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064978809 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063055914 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062945446 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065609473 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062630268 seconds)
  done (took 3.106822044 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073637918 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07249165 seconds)
  done (took 1.328051979 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062499281 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079048408 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063582277 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069291069 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069075917 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066340249 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072834673 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069062863 seconds)
  done (took 1.730566178 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080466333 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076715099 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066658766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07938964 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076036013 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082561042 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132071591 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066457122 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072257541 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06386048 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078836691 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064473452 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071556466 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065868919 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071105438 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071651318 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063239505 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071390319 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067852798 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064240292 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066663959 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073968722 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067746432 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060955588 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066345542 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086605796 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076155773 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06496481 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068239144 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072113363 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070532434 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059295704 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064790658 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065206061 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063149416 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074711867 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080286077 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068141384 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073548221 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066177424 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075391245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0606019 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069737632 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071963568 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074786528 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065309226 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065837044 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060568434 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063139657 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067704319 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060802517 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065332626 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060222253 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074399299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068702081 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075633028 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063674318 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06651301 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068374844 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06855399 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071619908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06677931 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067642433 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064842947 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074601552 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069872517 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073714422 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060333268 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059448248 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063436623 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074903987 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087350323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071310424 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065722313 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066582942 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063549159 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06861494 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066403528 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070792231 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071435945 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065538045 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07064112 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07229583 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065897999 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067752399 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073114741 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063443472 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067703853 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063072015 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08096873 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06446376 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06321417 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06303498 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074941348 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068009175 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064898278 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062652078 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071176579 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059140105 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064845732 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065154499 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064487203 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.073864757 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06866875 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068664745 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072319021 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071301382 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064403851 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066880182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061446652 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064984471 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063614963 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071484619 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058803585 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067069763 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065178514 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064697131 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.071920865 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062222191 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06347869 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071014404 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068815933 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062562136 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060646099 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06643151 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063815054 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06687107 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071715592 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062376925 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058936179 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059210141 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066883306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063937874 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067390806 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06758885 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066536389 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058647325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061935927 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068793815 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072421798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064691807 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0644243 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069737126 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06530999 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063338924 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070242414 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066496142 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063406365 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069574946 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065371881 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059645595 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067056924 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067104295 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0628784 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067652887 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067330575 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066916575 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064704338 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063057111 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0706136 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063761548 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063292335 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062940929 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062603085 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.072944359 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06548747 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059129107 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061625384 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070631364 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062187851 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.062737839 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06216002 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065366616 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06410456 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061402503 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063263893 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065415893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072081292 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066250371 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064232366 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067808902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.073534753 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062993114 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066060308 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.062710922 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064342159 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063471065 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071031359 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.06802895 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067061388 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065574769 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060387509 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068542356 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070546298 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062058458 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061437659 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062207738 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06600937 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.068603431 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066156009 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063816591 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061508333 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063242973 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065341419 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065343909 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062443937 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062357085 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069195155 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061625863 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068249654 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06387065 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.072304203 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066113625 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058763177 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066021127 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062208234 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069383559 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058855719 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061305136 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062584525 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06368928 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06222457 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065941123 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05789328 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069707806 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070064817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063177633 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062924937 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063198867 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069320396 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064437558 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066067992 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067007339 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.068299751 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073401298 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063480468 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06683282 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.072808341 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.300570957 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060647251 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072470197 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06657615 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066683408 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06675874 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066029798 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071518016 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076616724 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074175045 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061857011 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069587978 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066237513 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067242586 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062233286 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072260172 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070790284 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067922175 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074159164 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068230475 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067211706 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071404077 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066956697 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067979435 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068685433 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069698042 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067572282 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069078658 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066114667 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069968879 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065439872 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064273153 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069063998 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066567122 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066515115 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0722644 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066582637 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066629789 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069481853 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067162049 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067538265 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067507376 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066240001 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069298283 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067245139 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066807887 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068939831 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061857267 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074139248 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06613797 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074386666 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067440051 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062917243 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073728379 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069453024 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072288049 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067280763 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066860438 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067881794 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065272713 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069511524 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072996922 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064333058 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07681704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073826536 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066888622 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068384339 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066589468 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068016566 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065081882 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067570777 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067114471 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066290937 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06542825 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071076138 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068333688 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06663963 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067682483 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067187508 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066699661 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066961099 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060424873 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065900552 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065298455 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065660432 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075535476 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066800233 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06567978 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064956923 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066672224 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064670177 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062267855 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072988197 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073845433 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066080612 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072581569 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065024756 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066792462 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076099679 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059990708 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063837028 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063419594 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063964839 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072648909 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065757644 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074420821 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06562692 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064808433 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062425502 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065864648 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064117035 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060213017 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063722617 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068826765 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06501879 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06437752 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065550686 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067578195 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066159384 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073767352 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064112181 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065810172 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064833047 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062425458 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064216321 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.197839387 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069914314 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067617898 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064835345 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064233205 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065482041 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066595819 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067499364 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065746162 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067712003 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074988203 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06516947 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068778096 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070139123 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060896594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068467345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065722732 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065890437 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064950544 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069228362 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069429415 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066840242 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074074232 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065724519 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067224289 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065991613 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064349697 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066231787 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065511077 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066796528 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065318291 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066769863 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073482443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064161131 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06934588 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06566715 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065976154 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072006467 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066242947 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068772129 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072502494 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06644694 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067513588 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074242339 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069652545 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069402439 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066534439 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067807014 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071897758 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06486377 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072266487 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065701886 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065939767 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067743242 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064174998 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065770009 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065669284 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064845502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071555055 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066446673 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065294434 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064993767 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06362118 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06611034 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068526884 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07311118 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06818454 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069006553 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060975298 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062989866 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066689802 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063728926 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067615773 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068649349 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071313238 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068099643 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066270164 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064475013 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074475465 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07123011 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069334057 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0636056 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069240126 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066188671 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067445268 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066252889 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065807244 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066589758 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069610017 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067039266 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064652125 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072430474 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068458206 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066209607 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06682295 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066514831 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065478713 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060828351 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065583571 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067401812 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070443041 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067206409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065093641 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075407643 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063060627 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065411146 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067795491 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064843934 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069451417 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060547581 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067012536 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066415468 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065654037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060225346 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064443076 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063198513 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067543714 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064849595 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060268022 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075059289 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073240549 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067386164 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063520739 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063320705 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059778302 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.196059534 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066227425 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066743684 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06882867 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076092553 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065428777 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065091754 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061394788 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066058613 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068702513 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069304581 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063997245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060994736 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065210325 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069783006 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071721957 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065083649 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065159663 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068887768 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068231058 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063618608 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068995839 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062723108 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06944894 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077810861 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066167388 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06656055 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072017555 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073773918 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066651997 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061406473 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06638276 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069061008 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065993101 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066495169 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066750848 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081798408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069007704 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064924264 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064501644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068135381 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064807687 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073967236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066771931 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066898459 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070345226 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068386359 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07456042 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06841334 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073781517 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068457297 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068523827 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064656777 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065580208 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063546972 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06504845 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066553937 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066163032 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070578823 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073698316 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064782022 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075979799 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074480192 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067494513 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06251648 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065198013 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065198744 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061178699 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066945819 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063836997 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063731636 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063697734 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064325194 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066420335 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071134675 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066452413 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066151045 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065446352 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059712843 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067583308 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067773959 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066126439 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062263848 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06498727 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065876555 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069207359 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068570244 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063316814 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06656276 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067376906 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065580839 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060451811 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071443454 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06474185 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067197566 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064695494 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065278045 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065312799 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068426053 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069284946 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065853028 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067577039 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068881086 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067167413 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062691248 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062696303 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06999495 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063890399 seconds)
  done (took 41.767724371 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099002576 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062522874 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061842904 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062068636 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072367526 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062275248 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061480871 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062515152 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062707431 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064890003 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061784625 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061943803 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070450445 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076791241 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072847245 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066196395 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061758909 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062764625 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061561722 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062516327 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070404627 seconds)
  done (took 2.731711843 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073340653 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069757319 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071735122 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074912076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066426615 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0699704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071565134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07047361 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075105298 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06641172 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075114237 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070385172 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066925446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075611632 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066484552 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070213582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075277705 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066564105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069601841 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071808671 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070317485 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07163772 seconds)
  done (took 2.852504217 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066171398 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065748029 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067497387 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061053742 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065043817 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06074215 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068799084 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06337476 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068823462 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065023653 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064726772 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064995514 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067172441 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060962322 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065516342 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063235413 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107052421 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068680559 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065522554 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.0660617 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061338275 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06708786 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061129158 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06139735 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064541153 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068890496 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065973905 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063668252 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064845709 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064403791 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065025588 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063370399 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06694049 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066139983 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064634543 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064502982 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06484243 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065300314 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061307788 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063419052 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065863896 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061518824 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065343279 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066826984 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063494965 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063294755 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066725309 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064883997 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060595951 seconds)
  done (took 4.508949121 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078144414 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107817336 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067056454 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087334398 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078909065 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074685061 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06868803 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088553727 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062871873 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064027306 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080330086 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078718919 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065421782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069631665 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072073126 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064886502 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066344185 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064104548 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068769736 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06466037 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06877494 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071632519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078917389 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077707645 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068841102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063905129 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064647365 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069423976 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077080335 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069278975 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069301045 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070600152 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079471589 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070587036 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064265751 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067917627 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080983746 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065505133 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067267458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062419753 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06709907 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068382917 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070993734 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080381319 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065206159 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07030489 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064399107 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061944412 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076739453 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066833993 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072072228 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078301375 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068238475 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064964875 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069306572 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078856305 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064630534 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063075185 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.0676518 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076598364 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062662676 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068203709 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077717859 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066751768 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071632283 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078065922 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069791941 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068084988 seconds)
  done (took 6.272015855 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07451016 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071142222 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079256206 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078526028 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071505585 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071376398 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071461367 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071310516 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071238578 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075762746 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071465108 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091590759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066866769 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073989435 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071190245 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071268959 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071273679 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071363688 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071645273 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070996382 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071511232 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079253963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071500555 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078615767 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097114177 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066827969 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071052089 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071287492 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079009712 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071283875 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078595092 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071562592 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071908992 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078795482 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078555137 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070863858 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064487933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071215271 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071455453 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071170275 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067037881 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079011654 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071422323 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067098473 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07172132 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071428727 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0788301 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077828432 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07366279 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075249753 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070793132 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078526438 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070606015 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071335751 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078490855 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10286725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07840009 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078382688 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071317113 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078100604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078346987 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084410243 seconds)
  done (took 5.94848631 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082336999 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07322646 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074414002 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060876825 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063387129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068551398 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063393544 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063903164 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073210726 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073270451 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075487816 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068740236 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07152641 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075666214 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068653079 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071330662 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068966321 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068973732 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073521833 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068510827 seconds)
  done (took 2.727739596 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073534246 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082147779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066485007 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070460958 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068305629 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071038153 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067357378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067975817 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067011195 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068056013 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075072055 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074906912 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066118756 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070854502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07502558 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070464642 seconds)
  done (took 2.445473465 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073622678 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070850468 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078694324 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06564434 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063414653 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061615485 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065381433 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060709856 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061586627 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076938536 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064897717 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067515136 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065299351 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063888319 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062050232 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067581345 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061593855 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062373668 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065139385 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077341479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075763646 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063508199 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065844474 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065095274 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06523941 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070405487 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064422499 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063049756 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062298519 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065549405 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065877984 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068255192 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062459456 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062921524 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064137231 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062269961 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064784697 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065940149 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067285761 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064800369 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063324994 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064491787 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06463195 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065728472 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061263362 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065851014 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061075781 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066748479 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062600597 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064974234 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065125195 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067639629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065779387 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071433163 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067537253 seconds)
  done (took 4.936109778 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078679964 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068797305 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060960132 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063359787 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067876639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06669633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068336775 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066728119 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066619255 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063216388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066726366 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067920287 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066586867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068664654 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066673739 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068589367 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060916587 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066534023 seconds)
  done (took 2.529153494 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070124999 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06530379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072402305 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06554364 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065124324 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067604088 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061287918 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063817382 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063649074 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064975478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064885678 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067220603 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063706533 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066926243 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064973569 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064796587 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067154135 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063722631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064993019 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061141276 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067291147 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064018123 seconds)
  done (took 2.759487351 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071196983 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091042721 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137185781 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08236809 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080476023 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07720904 seconds)
  done (took 1.860168697 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089885207 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077688303 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065961576 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087019711 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072051756 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066253145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066224982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066583 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075051329 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075368165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06711976 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07491255 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075082305 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074171169 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072313661 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07216197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067246423 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066747687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065838883 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083324065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067051218 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074842892 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066738611 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066314673 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066928046 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074157519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075188796 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075416967 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06712006 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07497864 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072386191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066918474 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075328935 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075386443 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068940328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0751148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067144696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083128556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072430753 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074672917 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068354262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073000721 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075567131 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071384415 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07504201 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067074074 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071326165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066896839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067352291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085119367 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072615406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074057222 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072563272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075096103 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075011951 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084824506 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075807113 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0743422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072847023 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077801639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074057691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072205748 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073875715 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074760244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07268796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074203277 seconds)
  done (took 6.142547689 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081084172 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085844252 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067159666 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075256674 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074136958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06662387 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066956902 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067037578 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066708812 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067063823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106635017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067153611 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074756013 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074737549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067258174 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066750508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066996115 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074277239 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066785919 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085182078 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066621956 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074362425 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074533409 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074112133 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075335673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072328293 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067102676 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06683768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067061374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066866937 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071507073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066856488 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074564301 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066729284 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074263538 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067236654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066920896 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071648107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067039522 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072098434 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074874389 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082533837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067017875 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066709839 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075650772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066788315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066737196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066757259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066832562 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066581028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075391061 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075115107 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075564109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07445924 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067357209 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067230991 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066873483 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066802222 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067305613 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07216546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074399427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066353364 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084991066 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066695183 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067095768 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073857069 seconds)
  done (took 6.054947186 seconds)
done (took 126.291337322 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187886614 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168108704 seconds)
  done (took 1.673993279 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067963499 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095918185 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076370056 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12701432 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066371999 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099375731 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097885428 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07766796 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066330924 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066086597 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065891067 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067699663 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130141931 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065961525 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065926613 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06739358 seconds)
  done (took 2.634574494 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096499738 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173399599 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098798859 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063869807 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096388873 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072121839 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064464775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07430802 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069994984 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064945757 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072261929 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069858759 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065215032 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069964901 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070542738 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072344566 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064570492 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072567286 seconds)
  done (took 2.765527185 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098414192 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090366061 seconds)
  done (took 1.523979198 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157923156 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106271447 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150553129 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333081147 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15927844 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230956777 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127668416 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127897348 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11841478 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122744334 seconds)
  done (took 2.966420801 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097034289 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145696008 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255476635 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114824078 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071952901 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089893422 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115482993 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077364044 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076772453 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076627491 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076338367 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075365263 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094991526 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072496269 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072925701 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075304612 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098260099 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072222006 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074504335 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072824062 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096027695 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065342599 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072459877 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071700666 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074196066 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074031144 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065461547 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065617196 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073059932 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073139835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075961307 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088282851 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073632897 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10298818 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069250652 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103723672 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075534856 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070593042 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072965477 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070287091 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074977639 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074688361 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071210375 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075273325 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064788943 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075248418 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064856893 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065105603 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076968062 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066133333 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076852481 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076120841 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103091844 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066174383 seconds)
  done (took 5.831668987 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.661173687 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101532051 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06923735 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106206135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095027771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071637052 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.682559257 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089495871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171824013 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090803382 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087381077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069407598 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080172477 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08244104 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10871165 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100831587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09236256 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070380756 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099379803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097152691 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067347321 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092472544 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089016829 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373476878 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066309906 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068677088 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067172003 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069461902 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108284873 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077497326 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069427487 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119084233 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082947281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119163243 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065845575 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067108968 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067117466 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078054122 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17644915 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130812983 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128314507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066157977 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066831517 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068288549 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08787411 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066371619 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108320385 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078825828 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116995576 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068885423 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068976045 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066792984 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067918506 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078207963 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075742314 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078783388 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226623434 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066882371 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066665185 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069725868 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176432018 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077363487 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078006814 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090403325 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127640786 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06658261 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.691165986 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083088986 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066639092 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068248483 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066633264 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068100167 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06717433 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244967689 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341015415 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070047008 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070518502 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068732975 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.158967786 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077108715 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067826202 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110256481 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067316154 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068087676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069969764 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069799943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.115916859 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079668126 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069537118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067446714 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069906904 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067999866 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066414438 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160927149 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079782944 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080295926 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.158110214 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068999274 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110352852 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07867263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070209552 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079462593 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067844746 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07026253 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068880828 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078959083 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095210444 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079671873 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06895606 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067392704 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096719428 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079684413 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068067121 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077395881 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.394728138 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078799279 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066572776 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079636801 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067528762 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109193607 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069222107 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17422967 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06788014 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078179779 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068209016 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066878836 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067500325 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108995653 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069548451 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067545849 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068086891 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069147897 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078150923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.130765176 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069234479 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.159465776 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.131560371 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068449265 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.116717078 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067066952 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.11390047 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068522572 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069159551 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066196669 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.711462628 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067241078 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067166499 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068575101 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134910894 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066854211 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078473551 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075527167 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065750222 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.688201838 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077466413 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074607434 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077266983 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067722521 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066309616 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06583652 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067640239 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.104636079 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.137906132 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067897378 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066086105 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074273144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.104892384 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065368466 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074746954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074811149 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074935835 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066338891 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067721983 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077319479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.111905589 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075254381 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.126997101 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.506700266 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066498929 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07439572 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.13574103 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0656258 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081957016 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066130632 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079038952 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.106522374 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073585857 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.219428553 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.107846143 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.133208676 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076320297 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079657975 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065076696 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065535895 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07602343 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065843887 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067723019 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075171031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067228854 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067211716 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080296584 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066090916 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.168130748 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065147305 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075974942 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065189716 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067537604 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080452004 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066029603 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067558981 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076174084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06851605 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074260199 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635449164 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075324378 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066194106 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068199956 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.128259346 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.106933381 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06583396 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065606851 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067852492 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.104051065 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.151517437 seconds)
  done (took 27.507678915 seconds)
done (took 46.246649237 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209575814 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150868433 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.20052785 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117101262 seconds)
  done (took 2.136829069 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120927535 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100568744 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093989195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064549043 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100440801 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06501241 seconds)
  done (took 1.934569605 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303111137 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206315064 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178962443 seconds)
  done (took 2.073560145 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194311079 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184570026 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389747387 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249701153 seconds)
  done (took 2.51630441 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140257331 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087363062 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06646722 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082496072 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131476904 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157672601 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099442176 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123493105 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077512611 seconds)
  done (took 2.405158276 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142371361 seconds)
done (took 12.71506202 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095811151 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.234538647 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073051069 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19498682 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110375204 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.20101629 seconds)
    (7/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073181402 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187636936 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086055482 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.178848087 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080769265 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.20889836 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075529246 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077098323 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.190225345 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07299126 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06878291 seconds)
    (18/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077087952 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134369029 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071948341 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101060084 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096363498 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127631453 seconds)
    (24/309) benchmarking ("sort", Float32, false)...
    done (took 0.12613766 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10560668 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.168445952 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.208719893 seconds)
    (28/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051857472 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081468316 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063086719 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142781267 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071145782 seconds)
    (33/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16928266 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.219535464 seconds)
    (35/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063018111 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.109656956 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10965282 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074926566 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.145186851 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10574972 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071748009 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.170840799 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143309843 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071711539 seconds)
    (45/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.155297422 seconds)
    (46/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066532912 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106969378 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090709334 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066951082 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07671821 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 0.137252974 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07538795 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.161252672 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071615506 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.065500502 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068978636 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.1345816 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081071561 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075526378 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.143605736 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078372336 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.2080788 seconds)
    (63/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065506009 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.136389185 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150407832 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109322955 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049960741 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.147618331 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051814622 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09353982 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070302383 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106783983 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064364334 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051658457 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09008838 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071587823 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087645445 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087930573 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.170013944 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.168513763 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067046308 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121530539 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.093222474 seconds)
    (84/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071022149 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077731631 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203589754 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142124006 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071671257 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065475074 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116851541 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067640518 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109808343 seconds)
    (93/309) benchmarking ("sort", Bool, false)...
    done (took 0.141954717 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073503794 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070460025 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050105885 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064913769 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175803824 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.135774477 seconds)
    (100/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071559016 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080716026 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089982324 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.176585605 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099362307 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099397951 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051354032 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070197898 seconds)
    (108/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089819421 seconds)
    (109/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106239043 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.177890441 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071715261 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088988774 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075400042 seconds)
    (114/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071107355 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051833561 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063027126 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103512544 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165266179 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133433848 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074759186 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.373684237 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065188405 seconds)
    (123/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072351738 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112570302 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074192174 seconds)
    (126/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065726478 seconds)
    (127/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05173126 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066570318 seconds)
    (129/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086971087 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072190204 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074544608 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070726646 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165743824 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073305357 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075304547 seconds)
    (136/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072855354 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.169685525 seconds)
    (138/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080927154 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051892076 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072034106 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065156811 seconds)
    (142/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07207784 seconds)
    (143/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11274725 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051629185 seconds)
    (145/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.103498949 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05019949 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073792715 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087666131 seconds)
    (149/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051484129 seconds)
    (150/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052808998 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061160062 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.142094902 seconds)
    (153/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181858511 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078709451 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095498001 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074126453 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064804093 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135901059 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065404396 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051297825 seconds)
    (161/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072763139 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075970337 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174313968 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.145103196 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050765494 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071412346 seconds)
    (167/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072125413 seconds)
    (168/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072114475 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.137157067 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071955094 seconds)
    (171/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072583728 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096580422 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.11658648 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079099706 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050194372 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067618246 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09308331 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129944503 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073042878 seconds)
    (180/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06274546 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050030591 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063869731 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107505896 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064572971 seconds)
    (185/309) benchmarking ("sort", Float64, false)...
    done (took 0.123332582 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065973578 seconds)
    (187/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072662199 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051685683 seconds)
    (189/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070614146 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.069824249 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063874443 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071327204 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066163391 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051181739 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050102312 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.210423517 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066377035 seconds)
    (198/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071905573 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.139599551 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094153892 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.137185857 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051159065 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088843949 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.1083752 seconds)
    (205/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06425691 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101450744 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.139029008 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133069455 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066679211 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065230962 seconds)
    (211/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052235911 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050359755 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070828038 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052492177 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088501134 seconds)
    (216/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052100688 seconds)
    (217/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066765758 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086658502 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052272375 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064758239 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110562728 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137238351 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051407927 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065264701 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051036535 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065448839 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052495704 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050457793 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051022824 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064618002 seconds)
    (231/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086904891 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088105137 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089703255 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065619005 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051328716 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06519744 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065896495 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168529955 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051065556 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085736218 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138416701 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071201774 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051151228 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071726998 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064932522 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064390856 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06424918 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065628852 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064641537 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064611637 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065566884 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.159824763 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070968632 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069075226 seconds)
    (255/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066773931 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125821464 seconds)
    (257/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118040119 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072595611 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052134149 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067608139 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063416776 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.0699129 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064678914 seconds)
    (264/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050433919 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051405397 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065765262 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053211658 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079930592 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063769338 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050780654 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143608917 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068142306 seconds)
    (273/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069004064 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085850477 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050477219 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050136821 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.09825376 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085803986 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063865568 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06427303 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071403 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050795813 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063294152 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077322005 seconds)
    (285/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060172718 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063032436 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.16851407 seconds)
    (288/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070888978 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06187193 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071855431 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132846051 seconds)
    (292/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061159185 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164066816 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052418068 seconds)
    (295/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051414077 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050715826 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069875185 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052110891 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05067171 seconds)
    (300/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051278772 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050204931 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067187685 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091245834 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083835628 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069858078 seconds)
    (306/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06235003 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088222653 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050332563 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050060748 seconds)
  done (took 29.96264325 seconds)
done (took 31.364132287 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081011812 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091669453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073529289 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090366284 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078910671 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075242224 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070391924 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076239868 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077801796 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079617957 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076316969 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05393034 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072360493 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072725203 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072893397 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089498188 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076842013 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071929806 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071690098 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063765499 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071697953 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064572501 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066001319 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053992551 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076341732 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070239024 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071126051 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072688417 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064828796 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065332938 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068513438 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07200157 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064842683 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076660337 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070909817 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072336849 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073361856 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074746787 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066299775 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064690427 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072898571 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065058379 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071345469 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072224693 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07038246 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069769298 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072069608 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076325427 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089244016 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066772207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073345749 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074961107 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07455129 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070805081 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068312209 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071187553 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069664947 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089849372 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072026887 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066750481 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073149424 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072419103 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069591251 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071321272 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071492383 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074013917 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073724802 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069740631 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073013883 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069589554 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064264982 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071708353 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067624139 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064205868 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074226487 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075418731 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063354125 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069776495 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071223038 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069855951 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063677093 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066762497 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066229118 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070026921 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066874949 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053678112 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06813401 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070439075 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063475385 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071921507 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070641076 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071277699 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065841758 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074021137 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063739736 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069761724 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064367423 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064526214 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065868118 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067838709 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063553442 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065862966 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072227623 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065677614 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069635387 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077188544 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06400079 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070351092 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062980403 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063050553 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077800459 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073075389 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064121614 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066173144 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062849432 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071284593 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063511961 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064006103 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063806398 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0638945 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069584681 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064140001 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066108484 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070662584 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076524172 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064092675 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067299559 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065894441 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064094403 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069107896 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064053413 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06397222 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201232959 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061594672 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06767969 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065574289 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072076421 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066894217 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072364344 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066325934 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072554546 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069406361 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070597298 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069831502 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064076273 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058204934 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066414125 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06710804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065791091 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065032946 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066370814 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064861856 seconds)
done (took 12.247242233 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065676026 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139423881 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09678915 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093602945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084400617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065540283 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074918202 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100155377 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066997598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100991388 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085962439 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083639633 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110254229 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063329201 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064729866 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068375074 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06606212 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080082044 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099092987 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085559441 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107133529 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064122519 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092955932 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088783159 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085321053 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09966784 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065773084 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068920628 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068427474 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089287398 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085012102 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068991938 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066088874 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098938758 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09040613 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081939181 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065630915 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081190105 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065569863 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064921097 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079769208 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09613566 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078708448 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078658294 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068787767 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068342774 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066457914 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081625525 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08687732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076975938 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084890515 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101227658 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067816301 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064833622 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063852209 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08374931 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064667787 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067577317 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065494641 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067172889 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065159668 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068118328 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079468828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085026112 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068255092 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078664141 seconds)
  done (took 6.714798191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081687747 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088841564 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081406037 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081973225 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064687963 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065287258 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065520281 seconds)
  done (took 2.026408992 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065680622 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086487176 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088076442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087575932 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082728452 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085575388 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074705354 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065671864 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079218158 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066236857 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08595379 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100047763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065815618 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071850484 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089964527 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066245659 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089132012 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065750492 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068742785 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088610673 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067468412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08081827 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068757386 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065756645 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079272791 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06579439 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110598167 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069896723 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066997883 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068647234 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063549415 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104446648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078779293 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074486651 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065663166 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080309889 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079669765 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063991234 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081441507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070459506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079107402 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065960897 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066446271 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063803949 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069924075 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076239998 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066564276 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066244544 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068168415 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084854493 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065913175 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078911304 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069637418 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068207495 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066923441 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069068311 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075249472 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066447256 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084893121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066676299 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081812566 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081511174 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079140809 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081424412 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067880434 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079318463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079279414 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068393156 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067864896 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069290278 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081825883 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064107734 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067366377 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075872739 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067402111 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088010956 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087895588 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067188089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074542907 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066003453 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065998471 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065933764 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088138755 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067797101 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065670365 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069950577 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068391258 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064030083 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064484492 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068904677 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06403468 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067457567 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068364257 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068525485 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068148664 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081316404 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067713063 seconds)
  done (took 8.657493035 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068454196 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066930604 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0681091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06702146 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06731468 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066447966 seconds)
  done (took 1.925144081 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091159358 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068589062 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079414234 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070894922 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102920475 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085746832 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085650159 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077597936 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082751532 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077760681 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085607607 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086872715 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090987097 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071690643 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084827792 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071203214 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086208388 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07457651 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077255315 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072174676 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085489177 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071740389 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072426104 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080464218 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074570629 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071568553 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066298342 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077942505 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077094866 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077614979 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071554584 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074612611 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06969432 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077800202 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085797914 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.06951877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070603345 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076490209 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071742693 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074841667 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086987315 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071975159 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073565858 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076288187 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076997103 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069623106 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076016997 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074983063 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084774758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075652921 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075871147 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070908231 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074396277 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076125202 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06907921 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077063418 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075783013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085051852 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071186681 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069223171 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06777147 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074388979 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076462233 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073919553 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077348958 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075871619 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069409514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071294715 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071427218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070650638 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075768473 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067920773 seconds)
  done (took 7.003594557 seconds)
done (took 27.810404916 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539529307 seconds)
  done (took 2.027410906 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613379198 seconds)
  done (took 2.124269091 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.39423469 seconds)
  done (took 7.90338437 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388029105 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502761077 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704681812 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128474919 seconds)
  done (took 3.275716405 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.660214192 seconds)
  done (took 2.182298659 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207676787 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193327103 seconds)
  done (took 1.931196749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365514182 seconds)
  done (took 1.876187868 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.126970802 seconds)
  done (took 2.641569298 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256960132 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160099826 seconds)
  done (took 1.93292552 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456212275 seconds)
  done (took 1.968150756 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.848675837 seconds)
  done (took 6.361921137 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.202191898 seconds)
  done (took 1.772998833 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237319145 seconds)
  done (took 1.754182737 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.700398259 seconds)
  done (took 3.213750061 seconds)
done (took 42.48447422 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078945128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079865379 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078991201 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077072621 seconds)
  done (took 1.817481872 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075234591 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071454897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075311596 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07164475 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075322201 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07127134 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072991399 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075521802 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07106101 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071655253 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070899592 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071524193 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073741599 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072893227 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069492379 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073224023 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074436058 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070990165 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073925313 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070820549 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069483235 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073146486 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073319217 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070551373 seconds)
  done (took 3.257891879 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076123827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071189685 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073655144 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070534581 seconds)
  done (took 1.813387324 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076429558 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090596887 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087415709 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075947518 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089929768 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084341323 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067748119 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067557995 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072043894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075877552 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066221753 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093503198 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086082324 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075401102 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07776088 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065037506 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067276017 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08507825 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076247027 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076132167 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068718358 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075651015 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06665584 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086520907 seconds)
  done (took 3.372603595 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075331422 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101022257 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076173209 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085850937 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088227697 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064070017 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073003219 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087367251 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120724699 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064059403 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069260797 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064006886 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071052798 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064197393 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074915375 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10417294 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106405426 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067273851 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094151099 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064194607 seconds)
  done (took 3.146717 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071606269 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068909233 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06516548 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067269486 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076365931 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071555862 seconds)
  done (took 1.951842689 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067121191 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06617415 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065678007 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065807701 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070660561 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065754811 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065231015 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065593485 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066100438 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065617957 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065140471 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064872981 seconds)
  done (took 2.319657826 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332125702 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067305327 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067416063 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064371364 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069603225 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065132074 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078563411 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066911778 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08876719 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065247745 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065467382 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067327798 seconds)
  done (took 2.625653424 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1999741 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075043572 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231276638 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133988354 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109390103 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112947697 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101896989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111306057 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1404433 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099762425 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164263835 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162095982 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105199977 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134326343 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087863972 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09663786 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151894881 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158929919 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101715712 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162196381 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140785543 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122763014 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144212827 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099238744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103863243 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119423771 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069538507 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078874015 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166646861 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128589037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143282623 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109256806 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091879674 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171776936 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165315511 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137526167 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130509658 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082486485 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.099881013 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130311674 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194575051 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087293868 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159870567 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244638604 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079774314 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137452361 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118059956 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11744688 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105273642 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088536221 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142314476 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179276991 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13584459 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085979623 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109432513 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112472544 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112753519 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101383709 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177335606 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158503294 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125077223 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070271961 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09680912 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149554345 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128879985 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106375338 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123951674 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090842399 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130031399 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150687023 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116201798 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139943229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12671859 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086808753 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116589153 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136705685 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124941375 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16619075 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121710911 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071032479 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121097998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100933204 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079366487 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140081054 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07368049 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170401238 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09629343 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104248816 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110314564 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106769875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106841657 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156655133 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139904069 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243704303 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065089344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102309107 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11875903 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144857806 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085958369 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106912878 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113123855 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075863352 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136285997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073201249 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121141693 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073667849 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122936973 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131044807 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073832545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119276262 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098547311 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098646013 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130367651 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15656059 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087062654 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080225331 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163718936 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119556774 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102023656 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140981417 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152453658 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097271432 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100819057 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146899061 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175435884 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08772778 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159102518 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105468949 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081876245 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085749176 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121100707 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109803799 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119736393 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080491061 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116018188 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163381589 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073493591 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092460968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129509715 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077103483 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078578273 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100845112 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098041526 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093055594 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098528896 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10128804 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135342911 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120464931 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102894907 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268091455 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097953715 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166997894 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087668929 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098689256 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101562578 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06860149 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133937355 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152840714 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078304755 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161080059 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120346087 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102839502 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116917435 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08172243 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1364768 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077456071 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069916172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140045007 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108048581 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108812259 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147438703 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103020713 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124340503 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117210426 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131088692 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128742669 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126682867 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103308009 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086134278 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109049259 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122865987 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071571294 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089804764 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078356808 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101399358 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093634243 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082119068 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138736506 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121752873 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09834847 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109270066 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094338192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143728158 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074748045 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125133244 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116079323 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091433114 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14815291 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148171542 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128081209 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096771809 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141365387 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068600649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07270861 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086891431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265337066 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082472436 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082536125 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115395722 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143355758 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126906824 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134689932 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109591362 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118686128 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15111878 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068512267 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113502484 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143795408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11905192 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102626144 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088511473 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096971309 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140075684 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105782468 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1780374 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111321624 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123505057 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15035194 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098332375 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078557883 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101093356 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131879863 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101851672 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140642512 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102132225 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086215059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107760317 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072803599 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097868792 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124683573 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117389184 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132662063 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11233929 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129295726 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075143776 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113868841 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117237847 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118664171 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062430076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116134154 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15701166 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091769212 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115527232 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149248615 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077861806 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122065651 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316835989 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142667207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083730959 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108021108 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115861776 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125814176 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118164673 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13758245 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108401548 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132372492 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10698807 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083964702 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085415705 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095382608 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102890345 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092671887 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105974777 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112098962 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093504108 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128592777 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100781272 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107790148 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115897214 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094396785 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087513587 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094801512 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171452535 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117081963 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167520085 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097209713 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14155013 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159601202 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073571403 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077340832 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076931565 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137071386 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082199622 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128239203 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095756402 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103928705 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121387991 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139011686 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092839691 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067144562 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105893651 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131015817 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109680498 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096111341 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101574608 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15798067 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09816925 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077453487 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110984615 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102376475 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100154861 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167318206 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060503017 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240645592 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075037935 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079609242 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125163458 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149431825 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079105111 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101704329 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116928316 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107842199 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124331832 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099923671 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097607992 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111874635 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148112933 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126574921 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088333536 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11007235 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126386974 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16931452 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103081841 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.0935226 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166998651 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147770215 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156594809 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086672381 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111286342 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111221821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105801316 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136357534 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081747204 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160157525 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080939638 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133079398 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104552005 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088282248 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126840803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096799988 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086424749 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145648949 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114585938 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080815705 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075747321 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114667729 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116738314 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103831961 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073648743 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135225952 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071850115 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128551356 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164288359 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079654461 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101731035 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239072077 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07884788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106330414 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10013291 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088154131 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096641724 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169828081 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08671927 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146504992 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138039197 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110650155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134487909 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097529328 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633994406 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075893411 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148877578 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113749328 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169232917 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095636184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115160425 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107094727 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120750395 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141663984 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102536185 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174008386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130412978 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113987777 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077605229 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100806743 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100263509 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086854604 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103210175 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111156347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113713379 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091687544 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113745935 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120256487 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080029995 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093343379 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152847706 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114423399 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140149059 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137025807 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082970269 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114848506 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135165716 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077925809 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118723685 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147930749 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103386072 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096465345 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078577176 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245151491 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166699814 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072658376 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158728369 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117271069 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107609679 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111247823 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111571591 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1281032 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106095966 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119093666 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09166703 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107963399 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110178739 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080282792 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075470613 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102183097 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111090021 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095331098 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096661279 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095861816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148760943 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069700207 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094058173 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101591181 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141811238 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170548566 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086401232 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081109029 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116532627 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110956181 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111356377 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117880325 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077690506 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080963434 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080437672 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076204826 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10637183 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110166018 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102232438 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109121314 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160547049 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081738134 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220936487 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093268844 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102527053 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068382823 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076605261 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093344523 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09461389 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105696988 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098230347 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165155516 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092501952 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087724072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090227139 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071633321 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081072734 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124144132 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254278303 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117268755 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096181202 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062085293 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106366677 seconds)
  done (took 57.698262962 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106354279 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081416481 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095104034 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147816691 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120339712 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209568955 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155144049 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197328578 seconds)
  done (took 2.742765255 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066798678 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092413675 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097466044 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080929087 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066174573 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066788446 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221965213 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078720619 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065549862 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087273158 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076631427 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067289279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.393817658 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064745043 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068182914 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060563019 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065905158 seconds)
  done (took 3.342830111 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370302756 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36609148 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367765417 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072035756 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.661143171 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086844769 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.089892662 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094329506 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.06967063 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279614458 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708187997 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09076352 seconds)
  done (took 13.887635956 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073190622 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068147843 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081610599 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081463881 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070393532 seconds)
  done (took 2.004153675 seconds)
done (took 101.538627478 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078415622 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.291044648 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052142901 seconds)
  done (took 2.000457421 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.080903256 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082688776 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082931645 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.080554618 seconds)
  done (took 1.962706506 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07258933 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074355731 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.082064908 seconds)
  done (took 1.859842092 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.219081752 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137107035 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.084377417 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080894694 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076072025 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076506152 seconds)
  done (took 1.866116111 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070374265 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073556108 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071410953 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074512404 seconds)
  done (took 1.918518367 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075382868 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051865491 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054097135 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054809342 seconds)
  done (took 1.865453595 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084525343 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077857635 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076533786 seconds)
  done (took 1.867925157 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104884306 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083570959 seconds)
  done (took 1.817813942 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080104448 seconds)
  done (took 1.710716263 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096984678 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111815417 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.124913047 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106636022 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.133006578 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108899764 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083396683 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084429756 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075259817 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085649805 seconds)
  done (took 2.641229636 seconds)
done (took 21.657125472 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077756317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359728243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359217306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088722504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66506181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354973427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981936738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089967128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118388063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066440495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082612353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646275762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010869983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318458192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999277217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317841682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647086907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067039743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066055639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066809826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968116214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066076301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066831569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066860794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646463587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368899728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066551552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318720268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066106395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068318374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353744002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066636683 seconds)
  done (took 16.125591074 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069233706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115907305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071794273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082253236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068729968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06808583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070634898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067408775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123054684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066383962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083084017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066475285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070418676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067410636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085467257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067065106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067294131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067266623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067156969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067228062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085165603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066661197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06710822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067152138 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066939299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078402903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068024683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066971639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067569663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068568462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069870124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067435883 seconds)
  done (took 3.996809247 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113151568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122815315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072479898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101284775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110640911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068733759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140350192 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090635605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124460097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066718078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083439674 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067101062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099269615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067565904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085751892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067850782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067959906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067673529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066893903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067176876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085543165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066978259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067360834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067751935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067359249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07994002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067092082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067772306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066991668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068956721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070060359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067630552 seconds)
  done (took 4.241564273 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071177667 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073997415 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081092056 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082029695 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0685028 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07010101 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0718484 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068351281 seconds)
  done (took 2.236470726 seconds)
done (took 28.238067123 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077403356 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067349393 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071898274 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079402144 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071423975 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07693516 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065973731 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073162198 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070829403 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071426892 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073231282 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066399791 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070017328 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066264338 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072436861 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066633324 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077401814 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070467864 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078597603 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077678227 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068268868 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071436021 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072760122 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078056728 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077722672 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07737086 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076307618 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071715827 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067773231 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069459924 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075177108 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082460512 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067535659 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077660974 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06711742 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06650746 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070293571 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067189074 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07777625 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07539889 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.0688365 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07468209 seconds)
  done (took 4.675503257 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08648962 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090161492 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083121133 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060121764 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066315838 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06343674 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08728423 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058546057 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05848085 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086309464 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054690248 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058210047 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061653953 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053159908 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058721681 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055814834 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060642878 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055242687 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058648499 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058293763 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057073734 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05322109 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059032262 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063926613 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055755307 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060849463 seconds)
  done (took 3.322371245 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073255967 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08254333 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086362218 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124204269 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102230263 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075811951 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077223084 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085902615 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083911446 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065516226 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.06978983 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092079677 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08670309 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072386664 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066517969 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082725604 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080302756 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067497702 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072417929 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089411793 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082540784 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076372211 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091516666 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.07914366 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06562582 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068017164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069918121 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079308421 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07073703 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074566644 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070044913 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069346724 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068389316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078106857 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069994043 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068063816 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088253018 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075629256 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076027615 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066620492 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069890024 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06738275 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088212872 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120776816 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065533713 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07260398 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074012811 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075577901 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066508693 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085426669 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077201381 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065724892 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069345939 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065551077 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066333152 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078768499 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068574751 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068150827 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075001891 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069240465 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.078548736 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07039239 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081396098 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065930786 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073748649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065616511 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066976148 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065539633 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090770296 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067583789 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106037803 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067327494 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067216513 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074772118 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074412511 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072263512 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066641202 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081550829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076437378 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069996326 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074447861 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069555729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069693103 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086780332 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068536518 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067762847 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066960455 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07226473 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069103748 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067692617 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078733566 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066318857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069051618 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082276479 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065748673 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067804612 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07245279 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070856695 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.077301755 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077317827 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070441467 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066806745 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07487294 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06628471 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069326691 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076074878 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072409442 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064989656 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070390394 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072056256 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066553359 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067912854 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068710777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067696796 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075861945 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072536484 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070771823 seconds)
  done (took 10.392935214 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156940684 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150743231 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069610373 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142446247 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074760206 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077539383 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144036376 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093021016 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066597004 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067302138 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067416002 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11356196 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.103892112 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121072326 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077436753 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066388737 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082043536 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115435309 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145728922 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140205838 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082098883 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07556686 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06877884 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067664676 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07302105 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081126636 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08934318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075303956 seconds)
  done (took 4.383381686 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078796737 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099717668 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072758301 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087608593 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088886214 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066409334 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06889938 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068284696 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079044851 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076853356 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066656185 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072170203 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073058382 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072760548 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067738002 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073676959 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074040921 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06854599 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069697166 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071620643 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076568719 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079156829 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070789885 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065850848 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072902011 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066111903 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063281463 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082814209 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066883865 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088969206 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064702828 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074041802 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079752014 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067359569 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066716785 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06636976 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066452457 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066367196 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068536419 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065364105 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065031157 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056666182 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065778571 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077906685 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072644403 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055687128 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071088114 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071652632 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071435043 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064400235 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069175182 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069564749 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070105208 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073333548 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071384701 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071875807 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067532963 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065109203 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07407509 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066336039 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063910236 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064725643 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07071075 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064471119 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074251947 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070948601 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065108839 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066240878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068628959 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07223983 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06596822 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069744363 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06432662 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068182009 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071070604 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06820975 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067498958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065371398 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066049896 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066553241 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054530613 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066175324 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052617179 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069247087 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0644951 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06515069 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065841532 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070797156 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078143351 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067615109 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072628792 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066908785 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06620208 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069388246 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059326015 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069364796 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081449396 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080920624 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066172718 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064148473 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081597828 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071175048 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065689674 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055545782 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073872917 seconds)
  done (took 9.02278212 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093189292 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086783603 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068791797 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082240643 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089424963 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085137159 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073437157 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075741547 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068415135 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.080704046 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072260232 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074833795 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066803955 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075514401 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092850928 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075482348 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068655126 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.0751805 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070526087 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099873375 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081243163 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080248721 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073425056 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067321384 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074224776 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078715917 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089184839 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078370627 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077265034 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074561986 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078725554 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088468398 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.072847063 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07097707 seconds)
  done (took 4.361987542 seconds)
done (took 37.801581247 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.731933673 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.91510781 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.730065293 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.083855991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.823432393 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.955821113 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.933294432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.727980292 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.95187708 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.778204389 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.95170675 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.779921937 seconds)
done (took 65.030988468 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.78416606 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.87364387 seconds)
    (2/2) benchmarking "String"...
    done (took 1.998550419 seconds)
  done (took 5.540836727 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.068072882 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.25550397 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.967565869 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.717562106 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.722655644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.025301651 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.537346968 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.246355026 seconds)
  done (took 30.140864617 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.056774034 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.931853529 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.450241664 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.490082721 seconds)
  done (took 15.649380688 seconds)
done (took 62.947653988 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.733163409 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.723174361 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.729365901 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.702347629 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.776295181 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.733319888 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.349094547 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.841565181 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.715982306 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.70308196 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.717600441 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.151661427 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.716462262 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.29494481 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.714727247 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.719480712 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.745393319 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.218934717 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.871133899 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.726270464 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.719735701 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.775237534 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.714577511 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.720365919 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.768887699 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.712999947 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.138843254 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.713692107 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.32881534 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.709212892 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.736020765 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.807958553 seconds)
  done (took 202.390062954 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.702410218 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.579618982 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.664150323 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.715775461 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.126373649 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.897934935 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.841233099 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.151957367 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.707422035 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.720850148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.873941314 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.703957131 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.908637425 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.653851005 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.710543357 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.702764972 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.871223795 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.915223218 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.704940603 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.977889772 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.721861763 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.732089641 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.66977684 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.866919922 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.73058562 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.739651217 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.702766033 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.9095111 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.89458186 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.838445029 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.715684115 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.725482871 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.93244993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.577166213 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.706238344 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.729829112 seconds)
  done (took 166.972674526 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.087829377 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.70197899 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.700960782 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.701414426 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.713211154 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.701178071 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.825730279 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829736592 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.168426772 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.996149255 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752801082 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544428337 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.700799207 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.76875091 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.715696651 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.701533234 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.7030015 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.717412381 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.729612699 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705230906 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.702035323 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829359499 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.715638089 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.742923043 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711067269 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.701611283 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.706622697 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.072325341 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702977688 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.708179989 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.963720795 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.709528858 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.702098506 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.590802344 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.625536143 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.792149157 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.703183601 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.707643174 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.701940377 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.921611631 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.702708936 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.701591572 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.70427988 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.703033394 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870056413 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.702815497 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.827149177 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.704389021 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.208849165 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.702402748 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.701786151 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.502986889 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.385746882 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.702043501 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.701898942 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.703792531 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.70183554 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7015165 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.709082833 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.613850289 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.776130582 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.70311272 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.705198865 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709961581 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.702398673 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.892719511 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.703735559 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.124122878 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.760675089 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.814172934 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828469281 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.704653017 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770256248 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795940385 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.704256812 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.702168046 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.702322397 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.701821377 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.784089088 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.704574352 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.895776287 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711936842 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.703834118 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751510174 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.772583427 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.702970668 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.610496383 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.705783905 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.704298351 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.703653692 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.029257477 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772450013 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.703931253 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.702885116 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703034603 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.860994716 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829624518 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.492220596 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.705838725 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.532332667 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.705247485 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.869026301 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.829204966 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898544989 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.708548298 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785240688 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.707996047 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.703617231 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.70606569 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.707525874 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73513868 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.705918878 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.761983699 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.706926948 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.073357524 seconds)
  done (took 394.789119156 seconds)
done (took 767.963817769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.385808726 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.350273426 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.462299214 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.378983907 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.352075932 seconds)
  done (took 13.576836467 seconds)
done (took 15.224439351 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.789896278 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.793621626 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.727033549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.79181404 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.722907885 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.793503012 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.772748021 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.729105901 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.760250871 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.72945987 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.761023466 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728157471 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716368477 seconds)
  done (took 24.465037428 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.946959989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.946970743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.779511156 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.937424208 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.753345769 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947021705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.870708896 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.856518803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.863461532 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721190017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.71838035 seconds)
  done (took 21.990370084 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.948707112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.949282326 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781511295 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95449672 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.756008946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.951998559 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.873280862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.862758569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.86471183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721338938 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.718997529 seconds)
  done (took 22.032412752 seconds)
done (took 70.136206019 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.714562713 seconds)
  done (took 3.363734071 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.736333689 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.872353159 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.718771645 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.719130418 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.714879738 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.715214815 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.719737785 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.716524885 seconds)
  done (took 15.563563089 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.718487179 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.713748812 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.714367358 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.711104629 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.713985846 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.711965365 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.71213942 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.713899776 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.711380279 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.711652862 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.711801989 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.714248869 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.714871068 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.711230614 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.714587454 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.712995216 seconds)
  done (took 29.064863111 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.713494585 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.712077815 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.710986039 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.712734457 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.711492495 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.712866789 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.71295947 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.712292583 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.712142601 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.713176765 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.712972394 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.712500465 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.713001623 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.71228731 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.71343621 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.71317884 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.713236726 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.712751042 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.717324627 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.712887217 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.713577205 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.712445028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.713644491 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.713843702 seconds)
  done (took 42.764263633 seconds)
done (took 92.406688684 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.4478559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.185228408 seconds)
  done (took 8.283844242 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.716844517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.71660573 seconds)
  done (took 5.125272003 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.716154193 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.715394375 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.715867803 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.716039421 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.716415449 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.717494334 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.716623001 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.716133484 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.716032978 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.717002792 seconds)
  done (took 18.815108571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.715507498 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.715584251 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.71382603 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.716276611 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.716627544 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.714441005 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.715859627 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.716494863 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.716606744 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.714699702 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.717104501 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.714140178 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.716757727 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.714208785 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.716386932 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.714029035 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.713995103 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.714146463 seconds)
  done (took 32.529213096 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.716268254 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.716961728 seconds)
  done (took 5.086108083 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.71408549 seconds)
    (2/7) benchmarking "second"...
    done (took 1.714917134 seconds)
    (3/7) benchmarking "month"...
    done (took 1.715024324 seconds)
    (4/7) benchmarking "year"...
    done (took 1.713874709 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.714143459 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.715479598 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.714414811 seconds)
  done (took 13.654859219 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.71812236 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.879268463 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.947010566 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.398186235 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.719842337 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.721773772 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.665952676 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.722142245 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.722034578 seconds)
  done (took 19.148152848 seconds)
done (took 104.295110337 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.511499494 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.716250409 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.098354495 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.819674135 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.732064621 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.011546827 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.714104791 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.930538832 seconds)
done (took 42.18890123 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.748686867 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.174233165 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.193350564 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.486070642 seconds)
  done (took 11.508110215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.701280987 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.237013825 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.754595323 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.305234652 seconds)
  done (took 19.665482255 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.083296492 seconds)
    (2/2) benchmarking "read"...
    done (took 2.078305948 seconds)
  done (took 5.821054439 seconds)
done (took 45.40022135 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720567567 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.7193586 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.716834807 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.720058495 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.716941023 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.717768444 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.72006887 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.719483477 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.719987846 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.720054539 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.719181326 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719015829 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.716893274 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716335875 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716919858 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719465359 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.71715567 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71686497 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.716862774 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.717063632 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.719359506 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719324643 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.717612518 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.717562974 seconds)
  done (took 42.897725414 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.720038884 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.71820464 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.719671232 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.720385368 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.718408613 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.720275076 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.720819765 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.717817163 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.721054351 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.720216377 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717887832 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.718152361 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.720195741 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.717635262 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72070631 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.718632596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.721078539 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718678309 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7215423 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.719329891 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.721757916 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7190636 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.719567596 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721777183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.719256804 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719509824 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.721530884 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.719593437 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721222539 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.719330808 seconds)
  done (took 53.250054116 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.726030418 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.728218376 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.72350857 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.721980182 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.72186017 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.722492946 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.722193605 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.721565035 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.72254199 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.721855095 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.722672736 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.723063963 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.722245798 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.723613363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.723069538 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.722335931 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.722507085 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.722134773 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.722925497 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.722198384 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.723259919 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.722795729 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.722807665 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.723318805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.723025598 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.723347743 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.72230296 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.72352035 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.722556549 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.723050224 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.723467845 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.723651732 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.723736144 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.724269367 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.72409708 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.723560596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.728058796 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.730234347 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.724618744 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.724431597 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.724231453 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.723530235 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.72310197 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.723193849 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.723396782 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.723592408 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.724502959 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.723257461 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.723596093 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.724884746 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.723954875 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.724553785 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.725035868 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.724501133 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.725703974 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.72472244 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.725464086 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.724202813 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.724586649 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.724449507 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.725842554 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.725952209 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.72463705 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.72552771 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.726283218 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.725801257 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.725361937 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.726082986 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.725946694 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.727048747 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.725539273 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.725609424 seconds)
  done (took 125.793294134 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.725605455 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.723074099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.723250653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.723430935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723774271 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.726996738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.723052511 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725858032 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723457067 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.725114232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725720719 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.725205911 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723446358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.726302134 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726435042 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.723814092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.72724584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723609686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.726200671 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.727106163 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.727063367 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.723521498 seconds)
  done (took 39.611833652 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727003613 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.726831869 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.724252992 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.727108393 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.724197045 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727033444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.728739099 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.727104327 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727200976 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724361887 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725195756 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727554389 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.723745465 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724314605 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725268313 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724176415 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728625449 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.724945081 seconds)
  done (took 32.730099299 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.726293617 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.725359579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.727945382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.72457463 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.725689358 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.728105994 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725700959 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.727942997 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.727557548 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.72508194 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.727718313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727967668 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.728290373 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725419506 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727711723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.725756262 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.728707501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725940093 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728350663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726786422 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.725746949 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728941275 seconds)
  done (took 39.654513107 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.729073828 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.729178218 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.726014064 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.726906399 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.725895904 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.728431411 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.729083079 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.726189948 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.729161002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.729024028 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726734932 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.728869451 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.726479871 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.727892508 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.727865861 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725752188 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.729093914 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.72704745 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729217117 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.726345191 seconds)
  done (took 36.219514912 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.730552817 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729875708 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730678852 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73042318 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730420792 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7308383 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730135573 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.730390598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730818655 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.73159942 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730418624 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73050577 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731718854 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731330469 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.731476107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731683804 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.732045357 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730556237 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.731817951 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731570264 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.732263856 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.731452844 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730983812 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.732657589 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.730943888 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.731907397 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731535476 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732065529 seconds)
  done (took 50.138531631 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731649503 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.733012149 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.727777929 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.728553815 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.728751972 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.728645936 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.729047807 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.728893939 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.731756531 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729122542 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.732670246 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.731787076 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.731919727 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.731996602 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.731493115 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.731664349 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731924242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.730019113 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730350792 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729406388 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.731709505 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731320769 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.732515889 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.729243976 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729389249 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.732502132 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729513006 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.729582998 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732068221 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.730256136 seconds)
  done (took 53.585864762 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.750887233 seconds)
    (2/2) benchmarking "in"...
    done (took 1.751053279 seconds)
  done (took 5.169208273 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.730111726 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732458521 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.732916669 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.73101661 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.730130784 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.733505292 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.732352096 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730385384 seconds)
  done (took 15.521495548 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.733178081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.733762416 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.731915797 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.733431565 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.733600056 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.735406557 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741835398 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.732941516 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.736156895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.734173431 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.739691729 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.741937156 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.737982307 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734247769 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.73380054 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735719787 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.73384721 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.734571039 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.734182773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.733651779 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734864959 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736266777 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.735876818 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.73285021 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.735126085 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.745407313 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.740235177 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.734557734 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735464552 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.739784306 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.737095423 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.730676806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.734460066 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.736627069 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.735062305 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.73549442 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746081856 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736469194 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.741214425 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735210471 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735250111 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.732155111 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.737354481 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.737980871 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737022698 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.736515007 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.735461898 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.732804741 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.735948881 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.738375575 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.738542239 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.735313779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.732438557 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.742783759 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.736690897 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742721696 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.736279238 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.739154724 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.743654954 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.747383126 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.751052251 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.743072805 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.738205555 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.737436137 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745880404 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.756762994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74452058 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.733820975 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.73388249 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.736560134 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.746067066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751546019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.744620682 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.737303164 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.737378709 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.736349657 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738047283 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736602841 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746320132 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.741034861 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.737809617 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736868948 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746375343 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754690884 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.736709863 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.737807834 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.737121558 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.738333209 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.738822404 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74737255 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.73757184 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.73866433 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.739525854 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.738427841 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.742398405 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.738490534 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.737520571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.740030282 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.735094773 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.738578697 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.739210384 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741256464 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.746791322 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.73897789 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739056776 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.746993832 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.738899527 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.738782807 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.748248036 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.739191454 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739247303 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.739422019 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.746845596 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.736107995 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.741887154 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.746755398 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.739181764 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.741695701 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.739739844 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.73893867 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749207504 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.762117064 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.739949482 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.739130315 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.744900277 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.748900961 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740319039 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.743388918 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.739052151 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.737012733 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.73728767 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.742174747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.741683162 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.74127678 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740476021 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.742793423 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.738303848 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.739836961 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.741034623 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.741869266 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.743070824 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.742103507 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.742445278 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.744734462 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.74027216 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.74370666 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.749261593 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.740959103 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.743186827 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.74261358 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.738773355 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740840439 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.744305642 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.741885236 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.74314894 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.741672235 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.741424751 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.741670387 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.7413137 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.74193026 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741649944 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.742097981 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745396887 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.74108712 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.747174283 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.741750084 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.738506686 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.742028195 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.741545099 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.741924768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.742179627 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.741645084 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.746052294 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.74847676 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.742346565 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.74299059 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.747504384 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742797723 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742798334 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742887862 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.745194907 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.749307798 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.743322446 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.750232451 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.74252311 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743020299 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.74360211 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.742905585 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.742555771 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744063217 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.745854483 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.748930681 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.756983994 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751226558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.744654407 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.745920696 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.744407678 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.746403489 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.7494369 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.743563844 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.744941691 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.744498681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743506593 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743754229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.746970572 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.744199442 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.744601938 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.744330943 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.742686682 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.744316287 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744465668 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.745772379 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74734463 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.740919576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.743636999 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.744238572 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.743551908 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.742061768 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.743853653 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.74534501 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.744355372 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.744420063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.754131112 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.742219892 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.746048717 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746096917 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.746114569 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.744603967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.744243586 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747682521 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.746128701 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754034082 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.746493209 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.746820631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753119544 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.745796734 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.746525176 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.748656769 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.745478415 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.743154787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.747788184 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.751985916 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.74585969 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.746085484 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.745531255 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747387909 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745500401 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.75441016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.743836073 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.745474814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.74566614 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.750236329 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.742904868 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.748194637 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.748008188 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.747265841 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.747738612 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745952386 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.74779398 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749700814 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.74715267 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.746373421 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.746326181 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749662226 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.753500625 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.752605613 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.748423258 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.751444941 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.747721488 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.750236322 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.748812417 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.747157264 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.746580237 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761710797 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.754522116 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.756646628 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.751521461 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.747264842 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.753578664 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.748384524 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.752733923 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748595847 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.748828732 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.748703466 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.748078679 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.745834819 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749544467 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.747538275 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.750454722 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.749097091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.750892889 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.748645533 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.748190448 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.748908328 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.748511898 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.748643747 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.748308098 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.749132804 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.754106142 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751186571 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.74949456 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.749481159 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757761231 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75035319 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.750790294 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.748332235 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.749165403 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.748483111 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.750943489 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.748943701 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.75214739 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.755047418 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.751241903 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.75856141 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.749778592 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759825421 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.750133093 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.751568087 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.755779598 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.746959089 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.748641197 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.751053953 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.749903576 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759180658 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.750080186 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.750686736 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.753196597 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.750069584 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.750671539 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.749750154 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.750469645 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749412391 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.751195879 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.760933047 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.751350328 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.753355072 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752165222 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.747286172 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.751423201 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.750079389 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.750217545 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.756795172 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.750536105 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.753468891 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.750895217 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.753263658 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.749961514 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.751423996 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.751051977 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.748646491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.750312019 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.759671558 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.751638397 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754753967 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.751795597 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.762423847 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75180952 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762133444 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.751989703 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.753490228 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.752256308 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.752324724 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.755661793 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.752610638 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.754291304 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.751902834 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.752941174 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.754098467 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.752888143 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.756668711 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.753253233 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.752567986 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.753418439 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761323024 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771352028 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.754835783 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755351385 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.749894198 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.754354765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.75682165 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.753016717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.751740826 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.755394109 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761076281 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75902948 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.754760533 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.754330269 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753540006 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753711065 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.752529725 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.753233276 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.7538389 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.75328108 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.756433283 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.753763574 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.760659112 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.754410149 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.754850843 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756422901 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.755518199 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.764984439 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.754598106 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.756581082 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753999461 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.753838782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.755941493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.755917795 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.755528653 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.757140384 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.755497267 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.755286421 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760253855 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.759904662 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.759451341 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.754872276 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.755544908 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.755881599 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.756826109 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.755423727 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.756024251 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.755498316 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.756842452 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.755136321 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.758036205 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.754342792 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.75453615 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.756821186 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.754209594 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757492543 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.761343893 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756904894 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.753265888 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.755353579 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.756132113 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.754841685 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.757285402 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.768567391 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758682808 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.764468629 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.763154056 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.759664992 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.756446713 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75916074 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.762829106 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.756081648 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.758215778 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.756654657 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.760223353 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.757555128 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.759951962 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756897805 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.764664872 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.756675075 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.757510148 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766848923 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.758426497 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.757204451 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.75918728 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.761666598 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.757975752 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.754118095 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.757400612 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.756740172 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.765932086 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.76066829 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758450939 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.759645174 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.756040414 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.758872624 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761429975 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.758144158 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.75998588 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.755183974 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.758788114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758004891 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.757298986 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.755495687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.759259133 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.759021502 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.760861986 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.764103014 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.754588234 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760590512 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.759235817 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.758924002 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758408904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.757773647 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.755545846 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.755000181 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.758546297 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759284498 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.759294187 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.761108926 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.758928391 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.760490161 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.758761688 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759757576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762277345 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.767171736 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.76417697 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.755968187 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.759302564 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.760151489 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.763541758 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.759377209 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.758631706 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.760247755 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.763066453 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.759653633 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759190041 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.759007605 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.762468428 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.776848849 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.759715642 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761496053 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.76146307 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766950746 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.76013307 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.756978973 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.760169636 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.76457503 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.762217305 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.766932246 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.760770517 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.767770879 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760878482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.761343282 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.763397336 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.763403439 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.767820884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.764336552 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.761081433 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.761064735 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.764996276 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.776054284 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760852193 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769654723 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788220914 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.761993318 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.761296507 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.761097538 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760371715 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.760897632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.764583267 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.762436193 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.761683338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761506677 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.761781925 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.762644631 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766791754 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.763840282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.760621876 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.760779353 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.762406146 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.764917345 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.758791273 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.761765055 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.761325398 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.762549551 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.761796042 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.762307191 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.762878828 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777161217 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.7719449 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.762060893 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.763193438 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.759352141 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.767773258 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.765055579 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.771128523 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.768570914 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.762798672 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.762216405 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.764791539 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764089139 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.760234179 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.764430159 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.764421699 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763428176 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.761450776 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.778038006 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.769557171 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.769277729 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.765504916 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.764366308 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.763738228 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766459728 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763997969 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763331673 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.76622751 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.764963782 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767133079 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.762934094 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.763595057 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.76639315 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.76970558 seconds)
  done (took 1045.112583661 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.761479052 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761088832 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.761430771 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761042888 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76091825 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760938036 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760902219 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761379035 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.760414695 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.761269063 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.761749722 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761507729 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761676567 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.762708057 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761882219 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.76179117 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761576655 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.761637127 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762367413 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761884546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.762174982 seconds)
  done (took 38.69116595 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.764146433 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.76199484 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.761793741 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764845333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762058882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.765095033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.762284735 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765556598 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.764864096 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762497355 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765734925 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765067987 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.763918277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.762665237 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762707388 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765558501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.765959884 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763062789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.765691798 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.763860412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765599826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.762943653 seconds)
  done (took 40.507504426 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.765933072 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.766697244 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.766619923 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.763882659 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.765545313 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.764101578 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.766604449 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.767173764 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.766416402 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.768078286 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.765822022 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.767245447 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.771611463 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.770301687 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.769546301 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.76641843 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.910614942 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.767075582 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.766985744 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.76816171 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.764202006 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.77497672 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.76423716 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.763790266 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.767017499 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.767746599 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.766513054 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.767245518 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.768749692 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.768992691 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.771012183 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.767048513 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.768165749 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.769552882 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.767129089 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.767431471 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.771500877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.768249645 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.765558584 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.76780076 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.777898379 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.783823158 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.768467436 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.777254915 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.767916914 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.76761468 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.770789447 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.774757298 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.766309418 seconds)
  done (took 88.49876415 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.76752352 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.769568326 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.76615985 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.7685369 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.768560959 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.768119096 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.769066878 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.768703851 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.766182782 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.765576493 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.76937028 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.767826873 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.766769934 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.768662837 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.77003595 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.766432234 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.766659381 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.766147661 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.766964724 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.766865208 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.766387965 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.769888518 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.770200701 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.767580223 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.770104914 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.76671025 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.767307769 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.768923158 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.767421263 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.768048194 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.769605667 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.76988515 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.769973891 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.767099292 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.768092567 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.769880285 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.770694283 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.767124854 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.770165464 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.767214721 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.770345012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.771009383 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.770479317 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.77087231 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.768595307 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.768923299 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.768577075 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.768370143 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.769179488 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.771223899 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.771317486 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.769697778 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.771068403 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.769248514 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.771391456 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.772289696 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.768903771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.769290501 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.772225583 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.770789209 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.769367384 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.771495119 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.770450785 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.772483721 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.77181872 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.770044955 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.769582068 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.772185849 seconds)
  done (took 122.003227249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7724999 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.772860318 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773204283 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772817378 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773337149 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.773217278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772958584 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.774788211 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.773300467 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772863279 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772481928 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.772323022 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.772395824 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.771587992 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.773364242 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773574007 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.772856342 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772789729 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773115482 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772893687 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.773682316 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.773061264 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.773178435 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.773652814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.774300929 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.773474988 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773578139 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.773030973 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773690677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.772740013 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.77409235 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.773501196 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.773476177 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.773268114 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.774243379 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.773292701 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.774352365 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773484446 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.773922505 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774085539 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.774499965 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774078978 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.774522866 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.773923208 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774219823 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.775369903 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.77382525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.774924235 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.774174881 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774520035 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.774889586 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775367459 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774616997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.775130626 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.774929443 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.774825604 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775321118 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774426831 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774759824 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.774155938 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775258717 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.774600874 seconds)
  done (took 111.683122498 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773960833 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77456865 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.772178876 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.771633467 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773360946 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772071302 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775057602 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.774541065 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774728946 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.775242766 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774404197 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772429395 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774381321 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774693648 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773731612 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77306285 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772282273 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772828749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774952733 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772275819 seconds)
  done (took 37.182224862 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.773027454 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.776457506 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.774040789 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.774843576 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.775668287 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.773963081 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.775388774 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775449859 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773098041 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77570373 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.776270054 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.775260977 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773919973 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.773937032 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.77681734 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.774543536 seconds)
  done (took 30.108473976 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.77415835 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.776851644 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.778103931 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.778432132 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.774494526 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.774417608 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.776891063 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.774581638 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.775497526 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.777756054 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.777303568 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.776571346 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.777992158 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.777723098 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.774168971 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.777634389 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.774573376 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.774412562 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.777471684 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.778197049 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.775347037 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.774999861 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.777200967 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.77747953 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.775250155 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.775688958 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.775247096 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.775165212 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.774647584 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.777059209 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.775472359 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.775287089 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.77524495 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.775685546 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.779673667 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.774807269 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.777788291 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.777951173 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.77805337 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.777280322 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.77941178 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.775409072 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.77841286 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.778623338 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.775867754 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.779021351 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.776684042 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.776527643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.776544752 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.775755562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.77903278 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.780656961 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.779007744 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.779785295 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.779454588 seconds)
  done (took 99.43521568 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779430968 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779283118 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.777321812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.779885135 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.779815031 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.776780998 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779573227 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.776933662 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777396525 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.778913402 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.778017209 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.779606814 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776738184 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780351012 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77901407 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780686517 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.777139305 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.777211904 seconds)
  done (took 33.728342792 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.777749074 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777806422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.780759446 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.7773306 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.777559231 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780845056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778188777 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.779069213 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780882927 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.779400495 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777978961 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.781347378 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780604621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.780505254 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779129245 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778636857 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.781245375 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780623989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.778951207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778499511 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780700144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781304713 seconds)
  done (took 40.864007473 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.780363612 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.78115945 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.797889553 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.820775258 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.807791596 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.781294373 seconds)
  done (took 12.485246794 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779621519 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781896955 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77926051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783295842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78241934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778870099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779728563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779305899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782477126 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779972935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77893564 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781914679 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782551496 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779799563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782385403 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782696647 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78028691 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779990984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780217294 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782484315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780836479 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783811034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780718756 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781215045 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780656936 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779979679 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783045996 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781567228 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781051141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782822353 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78276014 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780492312 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783057213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780904489 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783518095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78372859 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780594823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783926135 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784265694 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78084691 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784412859 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784363966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783365453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781014044 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783110098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782001312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780894552 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78154635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781859053 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784113789 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783877211 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78217031 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783661219 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784753323 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784333038 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784380191 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782734308 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782138523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784743895 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782581858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78230658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78544596 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781887737 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783675044 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784629191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783168897 seconds)
  done (took 119.339454085 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782797764 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.782528752 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782339505 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784324855 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782902374 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783782906 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783588188 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782354665 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782263446 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783328934 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785616032 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783146743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782730221 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783899914 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783562439 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783216854 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783402556 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783420023 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782769758 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786716122 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783669148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783301401 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783528248 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783972426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784603443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786476876 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783373613 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784278389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784131095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783470074 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784525877 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784548623 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784408413 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784069568 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783729107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783791301 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784565064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784351009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783544281 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7868716 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784391787 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786655734 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784348253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785036247 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784889653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785293078 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784839105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78431346 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784641042 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784950613 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784622284 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785719859 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78578442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784533749 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785049386 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785396332 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786245344 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785170759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786085558 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788240847 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785944782 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78607739 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78859535 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785909372 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785427764 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786692728 seconds)
  done (took 119.500998786 seconds)
done (took 2435.369683519 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.856506892 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.906079589 seconds)
  done (took 15.484341493 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.951638315 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.903770271 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.787020089 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.835060018 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.788830715 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.781946621 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.806742046 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.78839514 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.788187695 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.788100118 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.788017961 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.974707044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.791545127 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.788201719 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.787537208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.881146311 seconds)
  done (took 50.96385434 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.791970405 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.793014986 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.801637016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.794691204 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.79207532 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.803980952 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.822614159 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.794986562 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.825920711 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.814911208 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.858129752 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.800687062 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.790326382 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.83911608 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.805153938 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.803840019 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.890464837 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.865081649 seconds)
  done (took 34.413187967 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.869586426 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.798436832 seconds)
  done (took 10.397640168 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.782501968 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.809409047 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.812434215 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.802626764 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.786323453 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.830157517 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.812022386 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.822495072 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.79202049 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.818799248 seconds)
  done (took 69.804458518 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.795947937 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.790699338 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.791010046 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.789493622 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.783199075 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.786894318 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.789906945 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.786450212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.474238677 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.829434955 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.795843376 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.796082274 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.791474845 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.792697161 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.789654124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.813432304 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.957515623 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.787496849 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.787691505 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.79602045 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.791510479 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.841967321 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.805443644 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.791437924 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.821148038 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.477216939 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.801765502 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.797820651 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.911310063 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.788898559 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.791458264 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.793125437 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.793488495 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.170480266 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.109981399 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.791352295 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.800773654 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.799594915 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.790029533 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.901701464 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.79319276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.798702524 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.760385988 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.104656834 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.892444206 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.835182206 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.193736062 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.796137893 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.79388284 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.822668987 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.796299046 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.793612881 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.806052119 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.307579957 seconds)
  done (took 128.518400777 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787355431 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.273100437 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941291257 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.787905788 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079548229 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024778902 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790349514 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836706599 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805069219 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038921847 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967462368 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907384598 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789404168 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.786980454 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791442946 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.786458757 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.93598264 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859269738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.790100029 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.789084349 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824076142 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055382311 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.915716735 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.925605661 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.812823507 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.014711143 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.91754178 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.907993091 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.794356667 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.788325426 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.856609307 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.789691074 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.786990963 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.788831874 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.954218697 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.895353798 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885389969 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.789864544 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834009213 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.791024606 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.819513391 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009796069 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897900548 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.928554747 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039776884 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.018564388 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.791141461 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.788343017 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.794476391 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982549346 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.007282184 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.045509496 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.91849072 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.791300885 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.131661917 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.787636444 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.826137507 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041929383 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022744387 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.902569766 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838421407 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.792694075 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.788964919 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105084752 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.792444799 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.897241534 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.184989691 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.793099525 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898757124 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904629653 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.025290636 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031567066 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.82164295 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.806501097 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.81926722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075015892 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.86390997 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043657692 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819561321 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792231346 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883468785 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.794872615 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.963428852 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.108723818 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058122535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833946776 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.795851605 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.791133693 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.039470252 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042038872 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06902084 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.035778119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.959173758 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.806494088 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791673982 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.791320191 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.84186003 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.923720839 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.793695312 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.151931233 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038907979 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.580940291 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.821834562 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108129606 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930541154 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.793877276 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.795480756 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79148455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99761203 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835540334 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.799199487 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79298013 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.041506906 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.742165665 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.928576108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.506541298 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.85968613 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.794691965 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062506612 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.800383999 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041897422 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844837798 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106385102 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.148912543 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.836797527 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.991653665 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.038529759 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.794026414 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.057411653 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.108446657 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.9186041 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042891556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.527037753 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.793107748 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085697031 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.80454659 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.820321025 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.96403302 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.801254388 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969807802 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.804741786 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102055156 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82137914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965295174 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.088719005 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.0698389 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840400122 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846530248 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.82014143 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929814488 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797294563 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.808655991 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977135084 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.916168225 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.795126346 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.375108575 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.79522808 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942380281 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.094430858 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820276925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867521592 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.796941511 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79660399 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890024074 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.824279033 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.438444562 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.796785425 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.966870028 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.746357009 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.250183793 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.794475799 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.105666191 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.008130387 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.797432654 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.802649352 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.600080313 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.795160838 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.953323781 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.955813325 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.565776702 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.797050472 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014220902 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798076947 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929571787 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.799185151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.794602811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146550345 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821976842 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.797641727 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.798709588 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.796008018 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.796178734 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028583184 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.826267311 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.529354818 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.936254038 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047755712 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.109124035 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.059754861 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.846651572 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798387897 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104007234 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.832590472 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.866283216 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.799396383 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821781688 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041536976 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800166887 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.026458675 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086217183 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.840805361 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852183033 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.802069481 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905094796 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.796771354 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.937736609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894952417 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.799527767 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.80203808 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917126166 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925845826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993060083 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.799246976 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.832711722 seconds)
  done (took 937.984280243 seconds)
done (took 1249.289675604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.79798608 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798995046 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.787965928 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.800524529 seconds)
  done (took 28.923715504 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.805844474 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.803938757 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.805203288 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.80458753 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.805986935 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.80464164 seconds)
  done (took 12.567404849 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.865708216 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.7990322 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.801762625 seconds)
  done (took 21.204524182 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.873467253 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213929367 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.908866419 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.246170356 seconds)
  done (took 9.980896434 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.80735909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.806090157 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.806157407 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.807309669 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.80824832 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.808793489 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.806683748 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.806974399 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.808881471 seconds)
  done (took 18.006144416 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.999360606 seconds)
done (took 96.42161408 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.89794937 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.788517754 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.843864068 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.802962618 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.350226368 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.795148726 seconds)
    (7/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.301006281 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.789164783 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.690702613 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.799555092 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.987451606 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.156510182 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.895955906 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.844436701 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.387926018 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.831788055 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.866043825 seconds)
    (18/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.909292952 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.041675842 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.148890918 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.792293875 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.478935604 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.294903975 seconds)
    (24/309) benchmarking ("sort", Float32, false)...
    done (took 5.66877695 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.188348447 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.149603746 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.383014268 seconds)
    (28/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.132329938 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.637079459 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.188426392 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.90447339 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.906208076 seconds)
    (33/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.02755835 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.314609774 seconds)
    (35/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.176131478 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.714167422 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.969338389 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.893850087 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.029875857 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.835589747 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.005056077 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.133126875 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.808895847 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.070383084 seconds)
    (45/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.975486818 seconds)
    (46/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.870247597 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.306263097 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.050505151 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895527251 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.815554651 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 4.80505331 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.835445664 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.102916501 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.079245404 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.504778718 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.927571634 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.792462092 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.699811275 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.48376711 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.012053069 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.486907437 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.706814691 seconds)
    (63/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.906877364 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.876850895 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.833657285 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.033867296 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.116471456 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.797905168 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.33972169 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.134538421 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048174197 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.798067074 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.139770803 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.325368826 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.454825659 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.843042728 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.797482467 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.60915481 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.178171994 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.165195494 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.894601887 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.972724308 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.194536282 seconds)
    (84/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.023491969 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.953512984 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.921568532 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.891762942 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.827904236 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.182515427 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.913699138 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.527919462 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.143631642 seconds)
    (93/309) benchmarking ("sort", Bool, false)...
    done (took 2.270612563 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.834390953 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.965689361 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.412920851 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.023848454 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.008777421 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.914658554 seconds)
    (100/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.070914682 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.807931562 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.255699837 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.106557266 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.952867065 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.811448073 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007810959 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.029822985 seconds)
    (108/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.090824657 seconds)
    (109/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.987909313 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.000890864 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.837431747 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.453155064 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.903080001 seconds)
    (114/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.909962441 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151154064 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.81554804 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.074313593 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.809002454 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.82274278 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.861034484 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.70794604 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.034287311 seconds)
    (123/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.837559403 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.883624869 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.751168311 seconds)
    (126/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.899637137 seconds)
    (127/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.017314102 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.897989113 seconds)
    (129/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.824801506 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.776305676 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.899787164 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.023751774 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.812411487 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.838178051 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.818094513 seconds)
    (136/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.831100805 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.899335142 seconds)
    (138/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.736404178 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.715489031 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.756139763 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.893369866 seconds)
    (142/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.349436943 seconds)
    (143/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.729941877 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.309720428 seconds)
    (145/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.081645023 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.118716835 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.818623046 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.858100691 seconds)
    (149/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.982572595 seconds)
    (150/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.882398435 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115209969 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.078409805 seconds)
    (153/309) benchmarking ("sort", BigInt, false)...
    done (took 6.814297084 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.381269923 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.48270571 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.110442322 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.816978726 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.130674338 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.814021203 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.787694201 seconds)
    (161/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.841908209 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.815435607 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.834379802 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.014585299 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.185099444 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.841529129 seconds)
    (167/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.897159308 seconds)
    (168/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.842183546 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.206936424 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.84285117 seconds)
    (171/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.854606242 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.863008187 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.838778672 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.492517656 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.971743965 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.885225493 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.84695713 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.932942607 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.93188308 seconds)
    (180/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.86958017 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.908473177 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.072463082 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.805684599 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.888186807 seconds)
    (185/309) benchmarking ("sort", Float64, false)...
    done (took 5.730008169 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.877877266 seconds)
    (187/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.377722314 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.227843389 seconds)
    (189/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.027959842 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.940510328 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.168945034 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.827126233 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.9381721 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.963240617 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.484398874 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.802722861 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.207267536 seconds)
    (198/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.840088299 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.072838337 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.619219386 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.131980412 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.913069487 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.819619744 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.118561591 seconds)
    (205/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.856695612 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.889595484 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099006631 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.817935952 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.816925101 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.235066135 seconds)
    (211/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.961412218 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.920747897 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.847721539 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.800885336 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.992103012 seconds)
    (216/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.955078755 seconds)
    (217/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.932801115 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.825545213 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.064794653 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.114451707 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.149692953 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.817962804 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.005171227 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.487828211 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.108581624 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.122208159 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.4407085 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.879609473 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.110635692 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.102732368 seconds)
    (231/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.905083372 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.072089496 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.865801672 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.817554348 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.818787156 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.958190053 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.942065648 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.817558457 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.700855805 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.743936824 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.823701639 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.932468111 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.193684392 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.845300689 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.933522879 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.021720962 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.152670659 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.959742304 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.263186006 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.095414683 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.822744928 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.134063421 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.851969443 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.426005709 seconds)
    (255/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.191647579 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.925920656 seconds)
    (257/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.816934935 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.203167828 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.241620222 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.888358503 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.899032087 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.843023399 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.416561999 seconds)
    (264/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.440694546 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.965438601 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.82387562 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.153015698 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.762336234 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.951239301 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.981945763 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.821556845 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.843425878 seconds)
    (273/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.924622651 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.748243377 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.998728363 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.017299512 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.968830421 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.741072429 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.972102545 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.066884057 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.906113134 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.257265508 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.901421217 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.335668493 seconds)
    (285/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.024790342 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.937814737 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.819509192 seconds)
    (288/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.846281272 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.361016949 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.045258919 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.818692922 seconds)
    (292/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.106527272 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.77491495 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.903270354 seconds)
    (295/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.954643166 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.935402915 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.86498397 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.423769026 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.902744079 seconds)
    (300/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952912666 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.203227197 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.886472904 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.869333479 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.834501004 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.84337669 seconds)
    (306/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.366855775 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.617325883 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.141288359 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.01263188 seconds)
  done (took 1005.992888347 seconds)
done (took 1007.999596977 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.854850889 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847608902 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.831208951 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.852948505 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.941037889 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859419078 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.840168554 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.832448197 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.878514312 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.880942165 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.828799738 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.8584533 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.83256602 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.831198657 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.831731536 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844140555 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.139280905 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.858429539 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.849657662 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.84183349 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.848308378 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.830875203 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.88114032 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.859904295 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.835839523 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.836765068 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.835465163 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.850889795 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.944080237 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.835523682 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.833776275 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.842681473 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.140849154 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.857206365 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.827342168 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.851717614 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.844305046 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.841408899 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.835870121 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.865092417 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.279111519 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.839204825 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.833884427 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.83329608 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.833888419 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.835533941 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.833331574 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.838696238 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845690745 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.850861175 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.276317245 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.853939175 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.836312005 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.834256674 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.844138956 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.833541909 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.83708055 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848977366 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.852261046 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848469369 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.131290668 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.863908674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.83614766 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.850405088 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.841234236 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.312896316 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.836159 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.838723467 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279689348 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.844396286 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.313869304 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.849545376 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.836007438 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.84825654 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.866195866 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.142900453 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.854772194 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.834801772 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.843123218 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.832691307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.844548836 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847537366 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.839329305 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.835767402 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848418236 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.865670747 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.845578162 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.83965358 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.850308011 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.860929632 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.848522534 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.852918011 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.842780497 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.832133832 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.844579422 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.838910753 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.839066275 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.838241041 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.840959841 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.845903048 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.280655959 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857812189 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.832953653 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.832485869 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.835094581 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.850367369 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.279845016 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.84276484 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.858645198 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.884230434 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.838213055 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.136102789 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.864939324 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852996907 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.845874574 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.839580883 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.832048482 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.134278961 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305189437 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.857330931 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.838864022 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.835602257 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853263852 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.839721634 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.83394519 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.145083404 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.865265017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851148828 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.957411707 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.848260494 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.870339306 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.836143224 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.840777568 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.866638141 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853819166 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.869750625 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.840261646 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853180455 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.854781381 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.83471784 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.848189886 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.848442535 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.839861767 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.843877089 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.832419016 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.869781389 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850873737 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850957781 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.858929576 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.959155448 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.836520698 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.136168696 seconds)
done (took 288.676707693 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.905227605 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.831425818 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.931636238 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.832588132 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.918387174 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.921133116 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.829976414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.830285163 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.830868213 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.213746343 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.830886185 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.831711018 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.830205041 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.831171546 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.918568655 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.833565198 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.831167823 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176324206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.835555638 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.910001741 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.8317236 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.832595975 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.834068288 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.215136594 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.83550347 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.8342348 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.909586605 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.834748915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.18048505 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.832723112 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.829631655 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.181306875 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.925812083 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.85293958 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.844857373 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.842279564 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.921767965 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.839353524 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.917603409 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.917474942 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.935528098 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.875735678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.833712278 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.827922958 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.838456103 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.837253553 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.832464919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.863420669 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.835199859 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.833252429 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.179898303 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.845346222 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.834360895 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.83335829 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.83294457 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.868416327 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.834278528 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.837027657 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.927571133 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.83788567 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.89944974 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.218179832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.21711778 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.837636173 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.834236222 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.834691724 seconds)
  done (took 182.039744371 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.903672225 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.911550209 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.904181413 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.840443482 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.886037976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.908496298 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.839929384 seconds)
  done (took 14.961711236 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.843003149 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.836972336 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887088199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887739705 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.837861208 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.986943761 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836855036 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.848522392 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.835081686 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.890021473 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.838452836 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.837805069 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.843802388 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.83818703 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886046958 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.848685101 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.952400986 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.839770225 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.838573913 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.994371632 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835392028 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.845588515 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.89278569 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.849983001 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.838287906 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.845552503 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.424858415 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839374489 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835043889 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.837879905 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835942769 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.877297027 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.838562368 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.836836833 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.836713647 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955060603 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.83970835 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83556832 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.839130613 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.835518034 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.838706357 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.838565588 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.83934438 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.83677473 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.839292908 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.862755399 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.83829526 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.838652821 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.837834879 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.839560955 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.890749537 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.839921355 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.837024901 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.836417757 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.895808512 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846098838 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.840485078 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.835475143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.840304452 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836533193 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.996470319 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887803161 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.839601497 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887581674 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840304544 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.84026875 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.840367215 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.83928136 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894620867 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839479446 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.88873395 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.83749513 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.99933973 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.86598242 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841203327 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.843784947 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.844049853 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840636843 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.842340792 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.846484705 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.837201926 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.841435782 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.847190549 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838142288 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838189883 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.948415552 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.950258272 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.838956693 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.854311831 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.84805947 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.838968589 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.895156961 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.841082844 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.838291939 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8937541 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.958510217 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.898084321 seconds)
  done (took 202.825222578 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.847508185 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.850003925 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.842943664 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.858099133 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.842088492 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.842291599 seconds)
  done (took 12.85571436 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.844459015 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.843380371 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.843242432 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.842615433 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.843280472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.842890866 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.84351172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845132248 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.846615375 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.842720155 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.842818592 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.845032984 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.842580253 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.842775334 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.843133015 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.842667534 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.844351495 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.840311107 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.842775761 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843897343 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.986707773 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.844342466 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844107862 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.268318741 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.84812117 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.843048485 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851351527 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.843591539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.843440259 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.851496442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.847286248 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.844371281 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.845429972 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.849473612 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.848577445 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.845390482 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.847207689 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.845212151 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841224949 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.844234414 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.84570042 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844028116 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.842811025 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.845910224 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.846024111 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.848714866 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.849076769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852113813 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.845322445 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.846113671 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.846651378 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.844288158 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.845202459 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.846367272 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.848782667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.850423769 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.849770581 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.84570917 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.845600498 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.845903411 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.845991085 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.844538245 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.846802609 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.850185037 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.852806882 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.847779677 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.84605143 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.850197953 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846315104 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.845139426 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.846889593 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.843031772 seconds)
  done (took 136.227203703 seconds)
done (took 550.690281097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.0976223 seconds)
  done (took 8.874453337 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.844685594 seconds)
  done (took 8.717981381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.253741081 seconds)
  done (took 10.027931685 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.857091086 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.85296795 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.856726546 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.84704618 seconds)
  done (took 29.199821723 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.073791974 seconds)
  done (took 8.848448022 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.850542308 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.837640736 seconds)
  done (took 15.525931751 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.910315444 seconds)
  done (took 8.685446014 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.232966235 seconds)
  done (took 9.010872144 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.853730837 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.848337957 seconds)
  done (took 15.489304928 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.825074164 seconds)
  done (took 8.600280017 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.470915063 seconds)
  done (took 11.264250203 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.847145872 seconds)
  done (took 8.645875438 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.899875593 seconds)
  done (took 8.684416084 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.947860204 seconds)
  done (took 9.732260203 seconds)
done (took 163.085271104 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.851260306 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.848738218 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.847152037 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.846100368 seconds)
  done (took 29.177458397 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.88744678 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.887143782 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.888075955 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.898622528 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.889418628 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.887240868 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.878815247 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.880260264 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.898399369 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.890537754 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.889333457 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.890399281 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.887672157 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.879855556 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.88975965 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.889676147 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.899281191 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.890561538 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.881413673 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.891596144 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.855861319 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.898587358 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.891233296 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.855538874 seconds)
  done (took 47.062131727 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.054056432 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.926668196 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.009377647 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.907751246 seconds)
  done (took 9.683715471 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.906626061 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.90904137 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.920493669 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.958828464 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.987015375 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.917543319 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.881839879 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.876102762 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.862445582 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.908225239 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.983526008 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.925123646 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.991269006 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.855300863 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.038110393 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.855289387 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.855244454 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.90777273 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.962931303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.97583352 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.856676751 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.907618402 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.911970577 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.924977816 seconds)
  done (took 47.866582123 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.854569087 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.863552556 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.861530183 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.855882643 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.855296486 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.855789493 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.862615559 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.856964979 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.877330838 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.85745487 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.856002184 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.855106496 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.85570964 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.856172631 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.855893555 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.867481624 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.869229434 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.855354359 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.858535225 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.861360807 seconds)
  done (took 38.98015391 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.849792326 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.704704338 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.202781581 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.106580521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.849468793 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.85411518 seconds)
  done (took 31.355141455 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.8708261 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.920483071 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.864044546 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.913564136 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.998372815 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.864643228 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.858182895 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.92575719 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971062393 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931087034 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.876694614 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.883786637 seconds)
  done (took 24.666910982 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.852915754 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.853838398 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.854738721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.871035377 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.868765404 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.865638241 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.865117027 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.851020613 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.873011699 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.876778498 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.866431882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.870300918 seconds)
  done (took 44.162323968 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940590031 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.897699691 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.896916675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532426826 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233257807 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064442816 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.503158919 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186648246 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.857221408 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126161718 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763883971 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957185054 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109993137 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377757238 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890759299 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.293686679 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137891589 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065574928 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876087957 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486147004 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912437139 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060969902 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.553633509 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903818648 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065076439 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.987057236 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.114820892 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854147573 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985137055 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884618206 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8650295 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85440955 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128504983 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222747679 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956669446 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865002925 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.472874176 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.570380764 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.884089967 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.564797572 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.484169794 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.962432971 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86564472 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85526138 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788620905 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.027310826 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235649426 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.860837841 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.566146443 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854942173 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865870154 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950692748 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.859695263 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.671687748 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767856888 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.858485955 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.852914376 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861626072 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430925906 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898987519 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065431539 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832491893 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.947491085 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.485918983 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227304329 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.996129271 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.859954257 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860107098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7918524 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.56258196 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9047401 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205250118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.877602824 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506663708 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143398969 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.820068444 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798612084 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127888846 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.422195344 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.834821943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084855059 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857829558 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793461354 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.803981509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792119154 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10650561 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890120479 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.602746648 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894919276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187368896 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868345485 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874276424 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881204647 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08093655 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.745211382 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858414733 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.516195794 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016923476 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880013098 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186938733 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792693326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.861830534 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116094393 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.070276311 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.967337382 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339007804 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003610467 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453851063 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.915184729 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.025053337 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.912124981 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.120856534 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908385887 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918554425 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906225944 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859691651 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153287282 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.466235922 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.001590343 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.778339507 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98484589 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.160698366 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881991949 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941277124 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868991373 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860007889 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.590861857 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405524783 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.860955078 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.863279331 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.970126068 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913553121 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.861780911 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807744439 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.490416404 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.768674963 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.874188587 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084583375 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.456376057 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176789452 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795085941 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188944889 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951943026 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.082929647 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.49442131 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.91976316 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122429598 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.968771875 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.998247997 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912660396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879504643 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959239087 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883081553 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.027149034 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159036884 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.864881363 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.86473867 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58335553 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891366173 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860284944 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.86739345 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644317564 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125411388 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.878392688 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867731529 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.751094704 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.875916072 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926643468 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867828135 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872292102 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407208114 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574860931 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.868655329 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.453617344 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087539438 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872011712 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.478609332 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974245199 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.944266074 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122704369 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913439466 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.797317577 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.573985593 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.555597255 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862617063 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79884015 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.863473251 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872730327 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87398812 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.059156894 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128468402 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899924308 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.483180895 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.899778232 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874448904 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.86865739 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862833274 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.375607584 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.912906779 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064082382 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91424214 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00729195 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.878701827 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799051029 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.868022231 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868436725 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863639134 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.863750793 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89715123 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.49630295 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244914506 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124799922 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.474507972 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877889816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.509840223 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.914861121 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.873736413 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.535287766 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063199822 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.901651996 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894181704 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.87742767 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.576212313 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.553932046 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435996022 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163940035 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151609736 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282648009 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.092201648 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898608138 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203301608 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800405514 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430631198 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922791259 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208489948 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811863796 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95399032 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.501274101 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194041931 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88141844 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094451297 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241732605 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.597439911 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890037215 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078117463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900786637 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.049278738 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834378947 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.154492409 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009554538 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.467282676 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054115062 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205502981 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.441584997 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.976165585 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.866605395 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.52655206 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947708856 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.577609531 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.039247126 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.083992379 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.69869724 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320679216 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874302239 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.093947235 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212924614 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053050584 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.992312062 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802554547 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878129057 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878177953 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.870247606 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.866536541 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.754006099 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.122123826 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878500405 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801922962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.014047135 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157710838 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.761109121 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.874122188 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868587209 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147304941 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431002588 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037626599 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.993546861 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.393781915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87530577 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803746252 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804046233 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.561825078 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874828849 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.845579487 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067798171 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.965152872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781306943 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.974036788 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955275079 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127363899 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.883457683 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127718988 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135283063 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56922864 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89456433 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.970154804 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.414911868 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.96363044 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869799171 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105190535 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643995865 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096116874 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.87625343 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.818224704 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.868991255 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084157702 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870926064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.679055858 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081286427 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.593780114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.876334455 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173277041 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937279345 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.661236122 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.899882293 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.962507733 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879879994 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949993679 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881002412 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.881189471 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882186961 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917497648 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.700067102 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.978523486 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.88460266 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965095334 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934661297 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.390989035 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.877909507 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135494159 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205696976 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181191902 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922771597 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872508757 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872286689 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806590121 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021890026 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.097842349 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144968917 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001805808 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.985091897 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8968633 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.416639629 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098910875 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119185118 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148145402 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.768380523 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420086888 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918135691 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.874160096 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883455293 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.086160052 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07466377 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159293467 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005204349 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.996713737 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236201543 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148371749 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.874641306 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87508418 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466987514 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.885763296 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546074153 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.912598283 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.720636793 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132339609 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88398314 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255540681 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89350003 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.034265355 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.647376485 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53802156 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159861245 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.853958614 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923613851 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137375483 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234532291 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18031518 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942807914 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886036017 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.980738147 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021741264 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.764988793 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875933328 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874948948 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924916569 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.585028059 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.886135312 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143323666 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176968599 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.873722826 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.776365644 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899572389 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.887020663 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099553802 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134192414 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12365766 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886539898 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.882258778 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.690683079 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141446159 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925433027 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811477314 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.880648441 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973131045 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121687125 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899291311 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.389336512 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.587858029 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155089252 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.872146421 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899457356 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070331329 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233819483 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183991581 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.403086226 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099170509 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.459736323 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479521526 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18326414 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.882103977 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.051100695 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184382984 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.881074549 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.991060072 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921293958 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.134666602 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182211563 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.88560274 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520652687 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.841872305 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.218914872 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435516425 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817720731 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888133901 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.940207915 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879391396 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010305391 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891295101 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.778519385 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066576709 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.643887983 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.151566756 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.883673221 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.864529195 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.504849676 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183173654 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917857471 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023107352 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883852213 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.553630668 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.231281222 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13683016 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.004682291 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.892711516 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.883574102 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880416277 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866766121 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.077631051 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.075280252 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145844601 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.029555745 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.920835337 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884163103 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.095720258 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092897993 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.664340458 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002318552 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992657859 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925697068 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.786700187 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383406269 seconds)
  done (took 1669.404270626 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.895537483 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.919123012 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.916052156 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.929273285 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902396022 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.999688918 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.903851887 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928386523 seconds)
  done (took 57.211053666 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879858102 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.097446206 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.889714586 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.896884532 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.889976846 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.881332291 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.049047656 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.891943723 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.891638902 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.89158905 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.880909571 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.881383063 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.196508387 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.904118692 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.882350648 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.880350794 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.889384782 seconds)
  done (took 74.603827213 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.882857279 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.942598641 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.91856233 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.893772408 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.943088476 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.883317263 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.771974011 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.899857819 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.885005258 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.028057621 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.519968689 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.89262879 seconds)
  done (took 87.281783634 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.891975487 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.889665084 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.889487866 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.889102341 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.889725943 seconds)
  done (took 11.271612178 seconds)
done (took 2174.537481129 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.225583525 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095027904 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.108138543 seconds)
  done (took 6.02237451 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.033868479 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.084966301 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.201499577 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.207190089 seconds)
  done (took 10.351512514 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.168647466 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.254625332 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.100732464 seconds)
  done (took 8.344069465 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.288959103 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.887779645 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.995726097 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.881611724 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.887981906 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.886532172 seconds)
  done (took 22.47793675 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.887999735 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89122549 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.888440615 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.890865039 seconds)
  done (took 9.377486404 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.871069419 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.603463001 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.872838709 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.890920089 seconds)
  done (took 21.058707981 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.63723381 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.649838378 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.641517041 seconds)
  done (took 9.749617782 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.581355452 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.810336146 seconds)
  done (took 9.212800398 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143150783 seconds)
  done (took 3.964661099 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.020835153 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.153931254 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.349793325 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.374665751 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.430996478 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.76607702 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.200817732 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.135636016 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.279701179 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.319501564 seconds)
  done (took 24.854569985 seconds)
done (took 140.632635744 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.275835356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.8893488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.091647452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.231143218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.115012613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.091191011 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.092617891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.213816155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.744371367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.736753118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.232135608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.117443603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.249239522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.134870426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.246215009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.137286088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.11265966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.300050905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.930545004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.161288546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.090775354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866540049 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.06990135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.883177543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.114569867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.043372941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.447639606 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.141025992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.074432737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.458453902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.04392003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.314255295 seconds)
  done (took 172.475748135 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.657528336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.888801371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.888731773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.888861375 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.462479284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890436396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890762849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.889637577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.071802131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.055652789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.890323348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.461084638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.889548192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889226142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.890434077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.889304278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.218688007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.716839163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897051313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902075575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.902816668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.438322851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906900419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.481452021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.250290615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.907785113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.890210905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.912795911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897555861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.901849334 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.905763075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.890020579 seconds)
  done (took 209.341158363 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.889604181 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.890993705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.891203125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.891482884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.892750735 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.895796308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.893227434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.890988402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.612043233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.607386145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.906295576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.903532461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.910064848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890736555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903474129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.890997618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.905162939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.90584229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.902406834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.905506198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.90951357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.835169287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.908374079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.833965326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.904817125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906155708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.891817108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.903006444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.90704048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.908299337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.904993749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891568471 seconds)
  done (took 221.934230149 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.087086342 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.896563504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.898224163 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.835820754 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.899078502 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.89775972 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.895034021 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.087022891 seconds)
  done (took 19.346303583 seconds)
done (took 624.932830325 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.335029496 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.181819125 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.082007152 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.923493055 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.146215561 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.958137401 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.919113797 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.982002615 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.107754724 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.996590927 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.57041544 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.935817417 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.659132051 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.942288802 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.044340396 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.977944453 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.491368003 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.579809836 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.098209204 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.967150573 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.098529801 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.862045403 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.994616685 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.14328891 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.679280444 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.921267738 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.077101077 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497082918 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.931487847 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.084146081 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.68331622 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.322113852 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.930045515 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.918922208 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.971921799 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.952126889 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250125217 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.928827067 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.044312929 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.664508042 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973650976 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.003182447 seconds)
  done (took 105.659505759 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.891252527 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.888920424 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.890072404 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.890239953 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891023565 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.890655971 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.88939088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.889768395 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.890972822 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.890635292 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.889768532 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.895107872 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.889366152 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.890959916 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890374004 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.890164499 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.890848868 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.892595635 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.890739516 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.890095013 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.891466875 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.892081746 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.891108631 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.889582954 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.891744169 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.891797485 seconds)
  done (took 51.011187522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.901859335 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.047313608 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.124744878 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.921705657 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.901965869 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.905804582 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.921355089 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.906718222 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.903997363 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.905149291 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.993915861 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.91014016 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.921086462 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.127706503 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.917784532 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.902211514 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.901981197 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904038357 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.055137615 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.918808329 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.923904467 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.910514528 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.922406366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.91760344 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.905387235 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.904486528 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.906607838 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.3359773 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.912557827 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.995763767 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.948727198 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.926516295 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.300807438 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.135956103 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.956037972 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.911668685 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.903864644 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.001578757 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.913288842 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.904528037 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.922586365 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.91203818 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.127202558 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.406372637 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.92192872 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.905701598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.348909113 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.00659353 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.948493036 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917691102 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.131834058 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.919926591 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.906276548 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.90541573 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.94191375 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.917664232 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.904850726 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.212977364 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.914919154 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.923891743 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.913892097 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.907131513 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.061692419 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.914143374 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.050931096 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.914388092 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913534151 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.90695295 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.130321246 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920549018 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.405792 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.919634867 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906193147 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.995953707 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.058704097 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.375439677 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.918321994 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067710652 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.316090815 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.933797906 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.916392281 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.327086909 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.936865641 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.916097905 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.908219099 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.908639691 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.906063437 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.951650744 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.923871142 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.347161266 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.410355704 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.227882809 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.936404713 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.9250575 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.908010461 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.215346966 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.916647638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.908340922 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.133223313 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.42382467 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.922303271 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.915468645 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.397695255 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.922091005 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.92680064 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.918421651 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.134882976 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.921992276 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.951670448 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.907768569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.91469084 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.912045513 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.927353711 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.916639346 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.908200576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.383506694 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.017369891 seconds)
  done (took 235.942585254 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.905892928 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.919508413 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.902415063 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.903261167 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.901318239 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.90818381 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.903230244 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.903475168 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.907613718 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.902468705 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.902917111 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.908587686 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.905445707 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.911902118 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.937251457 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.909309607 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.513102494 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.902466179 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.902161153 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.90386 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.548987153 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.909962146 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.902981295 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.904122738 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906429532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.9073807 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.913957611 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.930481393 seconds)
  done (took 168.519075119 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.90953199 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.024815527 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.925607799 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.937557845 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.919175827 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.908070512 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.934033849 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.925168754 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.916577947 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.907750693 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.908664574 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.969260629 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.921375314 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.009513051 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.940055362 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.941075388 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.013411715 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.917630179 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.909588738 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.909551398 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.939078431 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.908897947 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.969641869 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.033104089 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.926219489 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.024568413 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.916009507 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.912061052 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.910303578 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025689671 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.923449715 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.970322218 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.937836533 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.932086152 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.033644072 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.026074224 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.019626707 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.942746704 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.914372319 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.90970236 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.910632121 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.900362343 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.028703181 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.927667094 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.913042082 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.020232714 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.928559015 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.913360851 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.921925996 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.91113399 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.926605273 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.931052984 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.978401112 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.042369617 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.943721519 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.939760031 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.93793782 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.205401032 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.923925115 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.011762347 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.907946364 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.028297334 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.930045435 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.901947466 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.912280385 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.916709152 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.940372795 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.942484945 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.018913802 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.921770925 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.012157644 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.947629127 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.920659233 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.911564424 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.914391402 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029360192 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.028736309 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.947918082 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.949865574 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941582501 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.912979781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.913967523 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.904210266 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.931403582 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.919479126 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.029457718 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.029516117 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.921867087 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.914488583 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.915266509 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915144519 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.939933813 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.039400702 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947373566 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.015466772 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.980559732 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.984780773 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.926528146 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.94038996 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.918088176 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.9756981 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.925351288 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.924258005 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.255488984 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.986042727 seconds)
  done (took 207.076132468 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.006967671 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.407826565 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.969231198 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.969394256 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.206477374 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.336697237 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.67689612 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.960334634 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.962180739 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.995787748 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.120978031 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.023550065 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.975733516 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.951149424 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.386111806 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.951568747 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.963884247 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.986974432 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.967994656 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.508148784 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.268720861 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.08045279 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.959602003 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.069281493 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.946091022 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.295131632 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.451010071 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.360178195 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.000159608 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.326668197 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.292982978 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.646494037 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.186138026 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.205624851 seconds)
  done (took 76.266170293 seconds)
done (took 846.303281273 seconds)
SAVING RESULT...
DONE!
