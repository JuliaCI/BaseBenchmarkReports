cset: moving following pidspec: 9868
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342402593 seconds)
loading group "string"... done (took 0.593756458 seconds)
loading group "linalg"... done (took 7.55262253 seconds)
loading group "parallel"... done (took 0.175811608 seconds)
loading group "find"... done (took 1.213726184 seconds)
loading group "tuple"... done (took 1.89296871 seconds)
loading group "dates"... done (took 1.28313171 seconds)
loading group "micro"... done (took 0.239461663 seconds)
loading group "io"... done (took 0.982752348 seconds)
loading group "scalar"... done (took 39.669109193 seconds)
loading group "sparse"... done (took 12.66246338 seconds)
loading group "broadcast"... done (took 0.99732608 seconds)
loading group "union"... done (took 13.817270372 seconds)
loading group "simd"... done (took 4.672067013 seconds)
loading group "random"... done (took 9.421095197 seconds)
loading group "problem"... done (took 1.95684001 seconds)
loading group "array"... done (took 22.237566068 seconds)
loading group "misc"... done (took 2.002450936 seconds)
loading group "sort"... done (took 3.397034198 seconds)
loading group "collection"... done (took 19.230993441 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560154007 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145349675 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137595435 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12566695 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187539201 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131614767 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142058583 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086706487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.8855293 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162091032 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141954149 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518890984 seconds)
done (took 4.941578592 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.31365185 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088595704 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09958259 seconds)
  done (took 0.854311035 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066777953 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129070987 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082464788 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067522923 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068299091 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08301387 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067496743 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068062375 seconds)
  done (took 1.23800439 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075515689 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070940001 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085618527 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068503803 seconds)
  done (took 0.973078316 seconds)
done (took 4.11919105 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.938488371 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.255393006 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194854578 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.48827753 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13416176 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191135092 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675251925 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331623557 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216244373 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103638307 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10795419 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39343756 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107887507 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666148367 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076898525 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106207119 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162435166 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454294442 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081773318 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083032755 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104617709 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141444288 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101088293 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078318771 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168894732 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070169175 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.152770684 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09726766 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070187071 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252235261 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190072076 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68616459 seconds)
  done (took 10.592648903 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10111287 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121967465 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069776726 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142734446 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122403403 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071511646 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074089666 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08330394 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094495907 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163269102 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117571117 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124500262 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067090249 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072589758 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103526243 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230892037 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092921381 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102852138 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072102497 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092760145 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110238487 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099536551 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082825994 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095791522 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152220442 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192894151 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099839722 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112029428 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069395063 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097750041 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130383243 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132962825 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06755904 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084792559 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159247942 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096382454 seconds)
  done (took 4.586780803 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.103926147 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176515555 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094865619 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157807109 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085958074 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130461424 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066648704 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101229785 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251695793 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.166811874 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.490187582 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12910778 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089423564 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07018325 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087870431 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.115996555 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069203748 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.624974408 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148009425 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104806356 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103992284 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089504221 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072528576 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360338751 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069120559 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067811374 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086679055 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05973755 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148496144 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070347768 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.268115164 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1094074 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069881197 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122644656 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180317209 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10968978 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126893714 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067578645 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066451409 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174802061 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090840441 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0688123 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108231825 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120193896 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107445142 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084889907 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068994014 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185071535 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065684533 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083765119 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085389078 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.940842403 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16508635 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09629987 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067802116 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302090676 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104242696 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067717785 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0695757 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256248519 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18658709 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08526225 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068516866 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083866044 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070468615 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378365353 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070064487 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.861510999 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071894973 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078339882 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088445 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068041434 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090932134 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074399553 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103202836 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067693602 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069672304 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084347605 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068701019 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087070175 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087328938 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110640608 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209632544 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071680679 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082535411 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068081039 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082367697 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08837234 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113617677 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070768654 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067059693 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118657913 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070326526 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084869226 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104955385 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086737879 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103712485 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070527199 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129385946 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067787614 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125386065 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068017769 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114555233 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077364041 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115654847 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097661195 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069924759 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157455062 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065881816 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083306916 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068831372 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083904907 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069994796 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069956972 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101033716 seconds)
  done (took 21.574992341 seconds)
done (took 38.528293889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.314387917 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095315162 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094572523 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093482438 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079683203 seconds)
  done (took 1.429724827 seconds)
done (took 2.152560176 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151081635 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104958191 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082239732 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099441038 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082385448 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103648852 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118076469 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082598824 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119975482 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065366041 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115350412 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065413061 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081165475 seconds)
  done (took 2.022674673 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082765708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085766417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086951458 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082333986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080917931 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084095725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08055426 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106130958 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08095827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089771056 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064647789 seconds)
  done (took 1.640290851 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082073199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084414808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085629483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081013152 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080313052 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081848397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080743743 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102655299 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081385229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090023088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065625809 seconds)
  done (took 1.635820925 seconds)
done (took 6.012811835 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081218776 seconds)
  done (took 0.793357966 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.749131658 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.428595159 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084768529 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137525591 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22400451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15958933 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.461128708 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114186444 seconds)
  done (took 10.284306352 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.1014043 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085781526 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083205349 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085981047 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069562273 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089374309 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072893463 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07358835 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086453697 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074581607 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086109348 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072070007 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086032148 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071061878 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085784651 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071531455 seconds)
  done (took 2.081170643 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106190465 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10499251 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091187623 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077875029 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089731762 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075044625 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092970934 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076411731 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08661167 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074069607 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092169641 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075369162 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087514355 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068334025 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090649137 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079188573 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087055557 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077960721 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091864823 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078175773 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090911485 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067159396 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088711493 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090177059 seconds)
  done (took 2.875165482 seconds)
done (took 16.751669113 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135383907 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078921748 seconds)
  done (took 0.936888731 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084193804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098201498 seconds)
  done (took 0.912812758 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086426658 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080987895 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091690452 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092859463 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082385931 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067991824 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104170747 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067818456 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082838699 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068982654 seconds)
  done (took 1.556679132 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070614293 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094221957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071062082 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097541202 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075182693 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081490948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0760016 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084840561 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080996352 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079696395 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074367171 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100118384 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073188029 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101748899 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089283491 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069509812 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087994395 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068752461 seconds)
  done (took 2.208953855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067632052 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069244878 seconds)
  done (took 0.866740233 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068983371 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065811497 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081974045 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068918966 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080371049 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065385874 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080336582 seconds)
  done (took 1.241459961 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413295827 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109531594 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265882968 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073972495 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106563972 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.29634221 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067574124 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073729032 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089580726 seconds)
  done (took 2.266704968 seconds)
done (took 10.715084298 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081332227 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08774134 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112386194 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.44056911 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10716282 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06792661 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144370788 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214973686 seconds)
done (took 1.989866177 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128432879 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.631464868 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.414543008 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232250131 seconds)
  done (took 2.014247193 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.387042934 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091972202 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073626697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068772343 seconds)
  done (took 1.358833776 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067194917 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071648765 seconds)
  done (took 0.87950067 seconds)
done (took 5.115866777 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068347222 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114615659 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067023054 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065384476 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084357162 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067377214 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066330645 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081957228 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064922723 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083448901 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068271669 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067411997 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083026657 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067715504 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065102176 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080500381 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067404412 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066204589 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081325502 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067880217 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080661227 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068109159 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065747756 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081326134 seconds)
  done (took 2.551992043 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086153966 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083922957 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073367261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088575077 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073095604 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.092856495 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072654223 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068026989 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087219939 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070333074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086031954 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072526555 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085249251 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072446165 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085416304 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072822222 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089435572 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069061826 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08489077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072332505 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072652516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083952965 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072225064 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088234756 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071780212 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085750312 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07113078 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083517732 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073133074 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087262225 seconds)
  done (took 3.116648624 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072706372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06505505 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082435652 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07336223 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065914815 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082366048 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065035434 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081753976 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067654054 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065679382 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082489557 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065355592 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067255541 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081640328 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066394437 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084381284 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08326781 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066509343 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080495965 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065356038 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083998412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066242438 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065928042 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081785793 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064931333 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065910595 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080843194 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065984153 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081451618 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064717952 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068964204 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085240189 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064462994 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071929792 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085491935 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065112348 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084097326 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065338441 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066696804 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080806212 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064806485 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06518126 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081119181 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071598076 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066159029 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082361218 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065928139 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083066827 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065007469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068243032 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080283746 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06542082 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082697634 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066627157 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069919226 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080128604 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065687938 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066236056 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082972724 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065254077 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080361594 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066105616 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067501576 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081565085 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080903171 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087786474 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064823044 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067090722 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081749326 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068152547 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067726584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095530067 seconds)
  done (took 6.017365312 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122214649 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095192531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08340457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067017497 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080368099 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065418513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070232515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080791166 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068176499 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086942929 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065612218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083188586 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067049427 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081378104 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081178629 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067225267 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087367219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063351403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065586015 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084001314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066622289 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084396042 seconds)
  done (took 2.466083827 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192965778 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088852194 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113054849 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092876888 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085694467 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074780504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087337844 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071491143 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073695926 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086347283 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070561602 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087133603 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069612378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085667571 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06984723 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086587962 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071643552 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087066784 seconds)
  done (took 2.343706452 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079846801 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068072477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10585422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068128852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085087722 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070325545 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090013647 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077675151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085740688 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068898447 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093015267 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180882458 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086240376 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069138436 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085419044 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068639481 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070115622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084144182 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07657493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089262398 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072526445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091596658 seconds)
  done (took 2.616638139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082904474 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069976533 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101168947 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086314407 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064961058 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066634495 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090095861 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068974263 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090957471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069400034 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08472617 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068486742 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07412554 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082874127 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07398345 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083841537 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070821815 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085507977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070412759 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06517972 seconds)
  done (took 2.302000997 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090514153 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085971623 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069698981 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095082107 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069883042 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086043437 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078761685 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085412405 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069372939 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109942543 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069457867 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085461155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077384523 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091716568 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070201883 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093568871 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094974597 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078173141 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085705572 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069477983 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11050194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069335327 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094193097 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069084233 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086018537 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06909459 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084994425 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074199381 seconds)
  done (took 3.070320886 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069296153 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06755844 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08227807 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065630902 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065543934 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081761304 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065620815 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065458723 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083191238 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066076201 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083285297 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068857024 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067938952 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083259411 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068254928 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069003491 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08323931 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066208191 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065403315 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080602872 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067995428 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08406368 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068882383 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065228631 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081276382 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067207204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06546884 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080782825 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067516045 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065424481 seconds)
  done (took 2.920239085 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078492207 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092781792 seconds)
  done (took 0.929513437 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065667637 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082904995 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082245351 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071321058 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088974683 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068378427 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093962969 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072719644 seconds)
  done (took 1.382191309 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084165252 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079703197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084775157 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097514528 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079979519 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085244566 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158959182 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086492333 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075044325 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083751127 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081923907 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084037571 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074891867 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067955677 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091568723 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074698928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083264871 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074377553 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071179321 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083598998 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07013515 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09678358 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070447521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081773346 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069868679 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077274252 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095599311 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070336389 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089183732 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07590196 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089909205 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062365748 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084718274 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06914379 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06633819 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095019453 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084491231 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088789109 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078331991 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08594603 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079059768 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081023032 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073797164 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091147098 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078805368 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068642382 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085411893 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065073918 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082677368 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070861276 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064331366 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084818172 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062908449 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091832042 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071718315 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096240744 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067481542 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070233048 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088549769 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073031468 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09164683 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07033204 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07170951 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084550397 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076344876 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089005782 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078642577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080274192 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062957834 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066783274 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094544036 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092929777 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090169282 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070367217 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085383239 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06641422 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088150364 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069564689 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074161761 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090637583 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069574078 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09121476 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075521284 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085493701 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071058033 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092120158 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066506997 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070905369 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082377966 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087393578 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083083183 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066627399 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082572864 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078941084 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071691416 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08519095 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066505058 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091875491 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062488255 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068637571 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084862535 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068805004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096530264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074926263 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089970101 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078801471 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094027392 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068425432 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088393808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065534017 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070242636 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083669549 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076270447 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078964563 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071340061 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069553384 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085118819 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077387717 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082968474 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068591375 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093723267 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073362924 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067844603 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081134632 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07113085 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085373706 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072851248 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093492149 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068415893 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064543241 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080254531 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071283979 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085106177 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071380224 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089449928 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071137703 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06421937 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082670551 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073613912 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094516861 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069072923 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086001775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075267755 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070027593 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083961912 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074448252 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087798017 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068246754 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074168276 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086287868 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064707856 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087903017 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071065164 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084564729 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072245275 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071517278 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087561783 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069628962 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083966976 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075487236 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086345937 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068596805 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068564218 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083722917 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078763411 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087251558 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063732651 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066324064 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092156827 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066969435 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085017708 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067784041 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071360269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086887009 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067037636 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084988284 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070109084 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097245092 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07316822 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086376839 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074232666 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096203155 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067647219 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070839808 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084713212 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069516899 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086342688 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077750895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073900729 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0901162 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07079705 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082077374 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073717103 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093239886 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067708167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066583939 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084095797 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071641304 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090362948 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073050676 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086878914 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066376203 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06947288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089766319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072489227 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084892972 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067696196 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090706052 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067314723 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092601977 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069110478 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079424098 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089148453 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064253034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088507398 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067562194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091151001 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065531093 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067566327 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084266502 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069050772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068589088 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087557338 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062845662 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092891254 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077170403 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084990516 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068808384 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069452669 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09153673 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070083838 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089741634 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072552044 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092295224 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078576669 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067745296 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088536739 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079322706 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085323772 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063087411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.0914227 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068305708 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068457445 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084404819 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066396623 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088533273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078326682 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092429268 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06376851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07222413 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083748244 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067673169 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079751154 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074788832 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071714797 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085914343 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075285831 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086844018 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068936732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072432653 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085959748 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069755387 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086808385 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0716528 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087113977 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071803012 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068044332 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088335776 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06759059 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084238368 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071773896 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069465351 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086600505 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074979525 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084953687 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068919204 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070984028 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087167804 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069686118 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086578837 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068021731 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088331501 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069931539 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069738676 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088521263 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063432302 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0928392 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068949621 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077073828 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085958267 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065521746 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091241115 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072396188 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091344621 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06913696 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070721748 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086652227 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068457687 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088099016 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075936784 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065941186 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096938931 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077216702 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086568342 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072526456 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085769127 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070224709 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068394861 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085999722 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070010655 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085424225 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068697236 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091177217 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072392358 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068896702 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08762503 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069167536 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085657873 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070765331 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062949376 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085324147 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068455893 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08485782 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078996929 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06921428 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08463803 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067598869 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08661828 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067710503 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066346043 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094639689 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094595443 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069555811 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07569543 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085261232 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070564886 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097103346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066952909 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083720084 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066933881 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067973383 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094613657 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069419263 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095767455 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069572468 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067684071 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083479163 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070188304 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084552678 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063102804 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067664951 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090264262 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068300896 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085781332 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070050926 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072423865 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086987626 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078837247 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085068634 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069750188 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087051774 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065797203 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06729932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084855595 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07138341 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086859248 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066625481 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066400787 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085649332 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069649538 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069508973 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085785656 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070141657 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094955915 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069318376 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088364658 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072063926 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063946275 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08952991 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069017899 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085080172 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067990987 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072245013 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089598847 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06999028 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094516587 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069259534 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087178529 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069732202 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06741504 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086161936 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068806191 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085971259 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067698231 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069643989 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094169156 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067700486 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089009976 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06811907 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086054336 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077614443 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070872077 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089311146 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076381265 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086444931 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072026923 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094429218 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072588685 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089480351 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070829212 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07052255 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091598303 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068217773 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092607007 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06855279 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069115124 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087319321 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06655444 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0859463 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068610995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068666758 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092347889 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068872692 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084810082 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067462488 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06694753 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086999393 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07158207 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092784609 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072116013 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089787621 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06418964 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066653606 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087105685 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067362892 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088643901 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072452919 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075308118 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088065998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068726782 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085699041 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07837907 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0932514 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073245058 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066662183 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090193611 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070273956 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088431511 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070059247 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069084301 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087803432 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072930326 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088461735 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067886159 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093769877 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071644999 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070401975 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088182926 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070278531 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085918762 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064184286 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069639589 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088608777 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074144122 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088474628 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068620915 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098456867 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065979733 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070359797 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090013623 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06858068 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090412509 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065323701 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070713092 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088573094 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069455336 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081756907 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069271718 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066179032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088806483 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067974456 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082858782 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08019962 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096494266 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072447263 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067784404 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085024858 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064501507 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082193624 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069368601 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070925167 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087982956 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079740065 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085457975 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06889041 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081869602 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069921227 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071324449 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090504584 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066015004 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082396963 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067520567 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07228222 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092435036 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068203601 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085808414 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072327785 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070733407 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083890072 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072878994 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083637185 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073539789 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100220924 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070771788 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069639495 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09298763 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077137961 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087715972 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064274064 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087378777 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072625265 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069133796 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088163593 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070686165 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101873458 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072111938 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085546595 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067345809 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073189465 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085572445 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078730139 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086783552 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071157444 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090512928 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071864905 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094845076 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071880907 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093980378 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072161366 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071663115 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086554097 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06960885 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085121742 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068082456 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070645033 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088770856 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074248704 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09534537 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068937452 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098542501 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077380178 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088190927 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065577511 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068051323 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086589851 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065853637 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069576246 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084718498 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06720265 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084955632 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068198118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069793124 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092058969 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070584102 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087487373 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069239833 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063152808 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088342584 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071747825 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087426364 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066693175 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069081081 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087708241 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072361188 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090430532 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066185443 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088532084 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071695728 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069929591 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082522783 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076585164 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084924984 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072775734 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067598413 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08693692 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071688721 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089704199 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073839718 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088107285 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071425825 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07859029 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08959648 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066668616 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084047698 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074937417 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067467758 seconds)
  done (took 47.339410445 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112482024 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083187428 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064000024 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083338304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077709715 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084116006 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065534107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065466709 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083708352 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067934436 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082747693 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064247857 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091632262 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087583996 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096097069 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086567096 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064347242 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065025416 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082274269 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066063142 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09226963 seconds)
  done (took 2.469285999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090282489 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102529706 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079722654 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100561488 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092767617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079660916 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097683929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079484881 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101942611 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094011598 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084172008 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097204178 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076627025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094833237 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077105285 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096566933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101637387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075904317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09994921 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0793513 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096140625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097457912 seconds)
  done (took 2.795244556 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069725437 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06806374 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088026254 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063574107 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068751276 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081250972 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073105582 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084492323 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07179048 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067270756 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.093131625 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066870791 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088020715 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067361911 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067738287 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084116757 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133487093 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072429012 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08601354 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069006125 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064424474 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088875219 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064103336 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082634904 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067490279 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073023608 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088467176 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066940083 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086150164 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067464862 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067535923 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084467155 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071028615 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067873848 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08618479 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067149676 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086518341 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069419845 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063947837 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084492119 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069179525 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082529169 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069093832 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069638594 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084663109 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067328043 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087446456 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06794508 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063060119 seconds)
  done (took 4.52535218 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088828498 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144134261 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089695886 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123585471 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083634815 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094732709 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072768385 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123802985 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086088326 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066876502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104684777 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084104973 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088210226 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072553644 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094427245 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06869271 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089250781 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06707783 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090353414 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067745302 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091459146 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075730879 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102842499 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101293367 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073456798 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06672629 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08576801 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07367007 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10049351 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09039044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072717729 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091651058 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084463236 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092109952 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068434139 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089078614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085552435 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086782726 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071948453 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084735877 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070355171 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091392594 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074274669 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103786056 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068613341 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09188488 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068586473 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083908385 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081737949 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088941008 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075911825 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103912644 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089883572 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069843981 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092092068 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085493179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087607259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067548371 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089562922 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082439345 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084454282 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071858314 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100733138 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07016809 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093707991 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084238398 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091891803 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072704306 seconds)
  done (took 6.76357222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079069804 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093311612 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084984638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101996143 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094309913 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07531676 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093558691 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075084078 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093759171 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08104889 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093321733 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115672089 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070886143 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096814449 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076511838 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094242633 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074484845 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095094281 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092958031 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075407963 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094290638 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085449014 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093524362 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103290929 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105938088 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088835394 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075251334 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094260373 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1016575 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074349338 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105367387 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074449828 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094537001 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102435913 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088236111 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092819013 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067852375 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093547666 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075176884 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094270676 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070433789 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101273657 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093154212 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070012431 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094262585 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074694661 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102004245 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105989009 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078245963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098081346 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075467261 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102545726 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093119038 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075581168 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102328594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1281889 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083384549 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101918377 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093161692 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082958169 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102350035 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109331171 seconds)
  done (took 6.416405298 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092563595 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096066427 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098096162 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065081755 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066784716 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092182156 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066374028 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085405666 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079429075 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096707337 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079692712 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091057728 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076491143 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099800316 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091068924 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076673202 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091209944 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073137359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095153647 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073093853 seconds)
  done (took 2.498644766 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07818522 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105211637 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069650627 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093947572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071611522 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074794216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089419343 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070817653 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087709388 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072192904 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098718057 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080163705 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087726922 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074830341 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098688993 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076107444 seconds)
  done (took 2.146586304 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081245199 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098567328 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084361964 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087707275 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068073556 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084814069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069150617 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06511603 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084752018 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083171903 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08800455 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070931092 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087905947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067743508 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065709718 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091204728 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065514209 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085449036 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067998626 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102493371 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080708543 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08720939 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070701102 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089280403 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069629189 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092792425 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069466611 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065960009 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086494132 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069641278 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088686508 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077147525 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.0853266 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068735294 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086135939 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066204393 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068618488 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087896596 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072481543 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086843162 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067294335 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086591129 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069670031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070316296 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084039508 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068547325 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083129912 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075641219 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067098854 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087496454 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068290314 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091047725 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069272136 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097737556 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071403993 seconds)
  done (took 5.146932921 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082524892 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071922912 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083435834 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065891406 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090914153 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071076796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071888563 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090542743 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070962749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085603972 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070430966 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090358379 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071892846 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072234728 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090457429 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072793176 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08370299 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070626233 seconds)
  done (took 2.228958216 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074997412 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068556356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095828196 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06897159 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088103242 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07141062 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064537165 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086645483 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067331955 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087856061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070154719 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07151382 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087081523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071495635 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087716241 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06906968 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071960452 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087747887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069467293 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083690101 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070967077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067517326 seconds)
  done (took 2.504974636 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074960459 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096573708 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167500608 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110180644 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08556007 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101940795 seconds)
  done (took 1.459807299 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094473665 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10201873 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070418792 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110801957 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079069657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090117202 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071887064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090471947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079297912 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104957256 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070343397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099866909 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098492709 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082277908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096752706 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076536922 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090741281 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070995228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088332092 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110179212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072662858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1011431 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071662141 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089738524 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070610722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09897427 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099226615 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084947582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089415604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079702773 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097143039 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071168217 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09947098 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103322838 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07357801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09982899 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070793113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107882782 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096357807 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080358564 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091094398 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077635795 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0997352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074783215 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099182655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090882507 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076295885 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090057881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071586627 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116995707 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095659579 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079369527 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097469136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099007823 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080330985 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116263142 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104317374 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080242929 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097004723 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103756638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080573864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095645701 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097345899 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085182617 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097368258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080458107 seconds)
  done (took 6.739437685 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086205695 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108291339 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070691674 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103411434 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099239816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071100618 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089589779 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071725947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089334865 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072289387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133430885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070744282 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098552819 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097873579 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07238963 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09049413 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07185484 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098884603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070234087 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11609232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089225692 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079632163 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09905809 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09838206 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085428822 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095672417 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070858682 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091289574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090347407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071466824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095726242 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071314375 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098715954 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070927968 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098645005 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071126512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091021798 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075465801 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089990033 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096350174 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081308659 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109498262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071113974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090081516 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105427312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07121743 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089838954 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070213608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090103126 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071190124 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105098053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084500314 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104062766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098082215 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071290394 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090495277 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071184636 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091521676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072382557 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09641667 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098566654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070238287 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116662488 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089901093 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072685147 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100251795 seconds)
  done (took 6.628419981 seconds)
done (took 130.118209165 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218037462 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187638029 seconds)
  done (took 1.230782121 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070857423 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118722279 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08176785 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131096294 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089475692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102186696 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120979065 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083049829 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068650694 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089614554 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068777569 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091183114 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135010426 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069379756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089095452 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071553043 seconds)
  done (took 2.314220246 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106771456 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202641942 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113398523 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067301919 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102410306 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081006989 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087638341 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079235045 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094463762 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068489885 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100140507 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079005084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06738544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099206774 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094155755 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08151419 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06772366 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100302428 seconds)
  done (took 2.5288437 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098721126 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111425013 seconds)
  done (took 1.044493474 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203505665 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123798982 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207669071 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.481219489 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.24608327 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294447631 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176401868 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.181298881 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15548088 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176201957 seconds)
  done (took 3.076920964 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103116391 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176724754 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323772632 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143005149 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091091197 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119280324 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143091508 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113480927 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085357997 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105896983 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104187729 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079860725 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.12112965 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077960189 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098137119 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079076295 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124642484 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075968655 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09729017 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077491503 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120924891 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068264158 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098047457 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077250668 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102851849 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100267156 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068754948 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069428068 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097098882 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077096719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101283128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117810624 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082030092 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134481975 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105543625 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135201811 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100685558 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075350841 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096255864 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075759992 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099703924 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081210012 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107454334 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07923518 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088567732 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080260447 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067893893 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087949717 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081816988 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100892633 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102395116 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083357971 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134888371 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100450957 seconds)
  done (took 6.378679198 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.762324089 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137405476 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075092773 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.827113726 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118538172 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085394195 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.752899323 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096168027 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240534249 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763282444 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114439228 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080065812 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211473602 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21738476 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.907562224 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289849227 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.65111256 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107653601 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113531183 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.138136911 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166517067 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161576026 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152337844 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412523297 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098341362 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073782219 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141053625 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100895769 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144141685 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.1095908 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077424301 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16098153 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251485421 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164730609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099096341 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072945374 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072215934 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170786372 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224436862 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19953486 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163679661 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070657263 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093439586 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145913956 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135514201 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07030376 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144912288 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176828712 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.156791772 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076181814 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101455095 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147833207 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144279061 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147783127 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103653512 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29489291 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.298475493 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073955003 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125322964 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086981962 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242019846 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106612218 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185134064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141477193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195280789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073021206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75927465 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153998262 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094315055 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07921697 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12302776 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097530048 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144604992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15061656 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390404015 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149449924 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077049511 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093796931 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190165174 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108150094 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073492928 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14504303 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099745318 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128220913 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151883494 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151793772 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152449363 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232927221 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.151380615 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144509435 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097685651 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129157603 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.079252625 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.197991579 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200500973 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.145635566 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194691285 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167699873 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147152433 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151384413 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080944389 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175205292 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123446781 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085134558 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144399049 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196887565 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128115119 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105203938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077362635 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143864267 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130711709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108943838 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145695147 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154765783 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437253783 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171393996 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07058009 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110958289 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145620688 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146569518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099756249 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224760953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127728779 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151277348 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126620502 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090029175 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124907268 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.148732139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084028434 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126021006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162289233 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080400165 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21884404 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196200449 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082831541 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221352971 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166109419 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079240757 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152959343 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122483069 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149618643 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100003097 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14503427 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097703789 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7325799 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170184727 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125014232 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077713156 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169020107 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072435969 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104875456 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086793971 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089450303 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759194239 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107770631 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103675019 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084844692 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099045773 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126467101 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141024251 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077627654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165253479 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191038614 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102442013 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122497326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08718534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.146765783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098755369 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106396008 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08674622 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106292158 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127756526 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076748971 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106124846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152555513 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146976588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.200589243 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.555696805 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093058718 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08667901 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207644334 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09430018 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.246722943 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141400402 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205789753 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145866652 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103186154 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301345755 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147466984 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168978159 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089463368 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156041741 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089952098 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141110714 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.149020316 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094394228 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079690542 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145332701 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170889782 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148119041 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950449553 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072995738 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209197037 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090202118 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155012651 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077440457 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100565251 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268558028 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07390721 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153896795 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147981243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095421124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104893288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.824277838 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085919803 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.162624609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078939782 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20060744 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146141457 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142769078 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162785036 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080578408 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.142761077 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190348348 seconds)
  done (took 41.639496118 seconds)
done (took 59.041882362 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284223469 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217906123 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.236088833 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14974069 seconds)
  done (took 1.824082973 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149378168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108419926 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122471907 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088525181 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107622178 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087603337 seconds)
  done (took 1.524472709 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.429777976 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280484231 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241190485 seconds)
  done (took 1.809372736 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305187178 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234981107 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462873328 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304974042 seconds)
  done (took 2.275442765 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.196693341 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117748991 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.092108407 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087054999 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1877428 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245017131 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127954189 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19394559 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101690911 seconds)
  done (took 2.255028074 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.185531583 seconds)
done (took 10.732788072 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119000161 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.151267217 seconds)
    (3/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.314120601 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 0.242043162 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.238818425 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107851061 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.109177312 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.230456174 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080464455 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.181413272 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101800287 seconds)
    (12/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.150448394 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.214874059 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.279098005 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081606909 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10360512 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079319326 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.245853238 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.260949855 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.15868688 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137749721 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.281456772 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.254076704 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074798871 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.114448121 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.244450893 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076195435 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.296731967 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053723464 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.106064063 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123438394 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116119495 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098267112 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.232612036 seconds)
    (35/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096551482 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054068757 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099885145 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070102719 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.218974535 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.098130347 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074614909 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068670585 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097392717 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097264997 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090378357 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072800648 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1198172 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098505588 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097443741 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.299329016 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077348724 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05357682 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.275197387 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19298787 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092294303 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140105245 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11333751 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092920127 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143460729 seconds)
    (60/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13647205 seconds)
    (61/309) benchmarking ("sort", Float32, false)...
    done (took 0.131419766 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.213341033 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155072977 seconds)
    (64/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.221961112 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.113732073 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099991102 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089038097 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161073141 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104943832 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100711125 seconds)
    (71/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.264400439 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.269139736 seconds)
    (73/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.134678894 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095950317 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.101625687 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076526276 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068109894 seconds)
    (78/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.240644842 seconds)
    (79/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074745239 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.242316677 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.240143625 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.068945491 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075197436 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.104689686 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160105414 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0721121 seconds)
    (87/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102296103 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100796636 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099871826 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.10487153 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16642969 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.197198243 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.18468298 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.205663473 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081456493 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098451154 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105189065 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.261726553 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.141439004 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084479773 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100746349 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09484214 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.244900737 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054014364 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109175357 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069335042 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 0.168848987 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075660368 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075419886 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.254017556 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093242235 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.140735745 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095583138 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053496944 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170472968 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.122237321 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175808885 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101439519 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078186864 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096293114 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.270121051 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080109501 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054638686 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09362952 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.162148754 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077130449 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076726942 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.085950988 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067938486 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101699856 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073976595 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075799049 seconds)
    (133/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.104902175 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075556025 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053952262 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095117658 seconds)
    (137/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065104232 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069366256 seconds)
    (139/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.126004912 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076845239 seconds)
    (141/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.299170302 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054628303 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13121304 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07718886 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17374759 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083365613 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069121523 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089808211 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0541676 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076174971 seconds)
    (151/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.115913334 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076321936 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093104106 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074624711 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090324423 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055370738 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077262291 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115227036 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092941621 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098997259 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068304318 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.256404999 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079063873 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105868555 seconds)
    (165/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080679704 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067794875 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.249443016 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099563448 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121572907 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206033417 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.127987359 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089321927 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054091312 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075948158 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053672397 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069887632 seconds)
    (177/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094105293 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067433623 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054731939 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113674784 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064057819 seconds)
    (182/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092873977 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10398016 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068060318 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089809589 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196686531 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078145127 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075959427 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076276798 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074689456 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069868545 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100823075 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148300245 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077508028 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055388594 seconds)
    (196/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.086712671 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074227556 seconds)
    (198/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067574164 seconds)
    (199/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115129291 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101099218 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116103628 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054441711 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097345539 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066902253 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067845355 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115239361 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067466977 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090743378 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074470415 seconds)
    (210/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.130645144 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054155588 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111998018 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090862593 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077017345 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075741667 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.158813396 seconds)
    (217/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142788579 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053893938 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109581641 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108264424 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064944956 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088878292 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069175437 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073385228 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0901223 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112680484 seconds)
    (227/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075132859 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118026462 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067953252 seconds)
    (230/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.091832958 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054389877 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166282656 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074918754 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097003058 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091820102 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069633824 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090690936 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069615243 seconds)
    (239/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063657552 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075068058 seconds)
    (241/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054679757 seconds)
    (242/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.245419158 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067158379 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055139328 seconds)
    (245/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097667111 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054322098 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063960367 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089078948 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067837575 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.26219305 seconds)
    (251/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055198425 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090403988 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068506002 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075122394 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128338268 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055773488 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115470603 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053697204 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054256155 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098707858 seconds)
    (261/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091225849 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247320713 seconds)
    (263/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055373642 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096283334 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077661644 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.171525458 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119669999 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077050395 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053917669 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068688438 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116594106 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069836788 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055659041 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077026848 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054582857 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104562782 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05466138 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05477776 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05480891 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120328385 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096246743 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16286622 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077488872 seconds)
    (284/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077802002 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068536552 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053888064 seconds)
    (287/309) benchmarking ("sort", Float64, false)...
    done (took 0.151844425 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067533179 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204299586 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098588048 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063764987 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069556755 seconds)
    (293/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095017702 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054472957 seconds)
    (295/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055156728 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077941655 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073466593 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070540109 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09122858 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065356776 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095095412 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158369722 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055862681 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096391338 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053639901 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174453677 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071250212 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05714483 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090227219 seconds)
  done (took 35.881866879 seconds)
done (took 36.741558105 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084664036 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118149518 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077645923 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119506024 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085444942 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103610851 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075927416 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104560383 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083286278 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107432774 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081861825 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057016615 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100622019 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078081359 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099889982 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095878593 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103744847 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074771186 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099244956 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067759899 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076352537 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091343715 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070596662 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057876671 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103417469 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076101831 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098167609 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078305271 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069386033 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090831545 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071983986 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098401963 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06777952 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082401214 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09627565 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076026231 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101094602 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080605887 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070486632 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091420592 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076763812 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090534385 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074869259 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076269667 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096286952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074423113 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101138244 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083613614 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119875353 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070610294 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100824887 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080907265 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079722691 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097644836 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072022618 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098498326 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073154352 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118793484 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076808444 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071695474 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098732788 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077737012 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095944676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076655021 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077371537 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100604496 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079641805 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096221306 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078147502 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074480156 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089916364 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076281929 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094813426 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06881845 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07994961 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101301561 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068373847 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096333844 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076418171 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075120602 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090343059 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069801758 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070364744 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096043318 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06982433 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057313786 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093666896 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075505028 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089855153 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076547278 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074996044 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097593753 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070157684 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102688569 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067602008 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073513154 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.09129961 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0690146 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070339632 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094701291 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068919586 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092620608 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077117152 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069594987 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096761261 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083765963 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090697728 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075135972 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067870274 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089853607 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085161849 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101078569 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067827165 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070781083 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089840782 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075585386 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067435615 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090640416 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068324482 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090587366 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074245829 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068315599 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092954143 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075076039 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082538208 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093180294 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072491593 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092995178 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06799618 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075078854 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090772823 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068164931 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070292025 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088589297 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070595892 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068408408 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098064225 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071092523 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099478417 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071029909 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077286363 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094524581 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075546727 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096722337 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067600553 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061183035 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092614757 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07125932 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070683572 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091083218 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070510058 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06820274 seconds)
done (took 13.547079263 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069118471 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17734891 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131209365 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100562849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114326229 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06870262 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104120585 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132794254 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070119158 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13272686 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092223113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111681501 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143728458 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068769707 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068933825 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095262614 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069920972 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117370425 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107500399 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112632964 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146783091 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068697904 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126668868 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117364129 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093238576 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130764831 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068944633 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095549217 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072163264 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120140045 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.0901331 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072811888 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092739073 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128975152 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099839951 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112450264 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069214291 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111139302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068995819 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091571251 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.097215163 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12662609 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108593311 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087094532 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095462155 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072285745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069943806 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112739907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118204315 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086222107 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115367794 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140986279 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072244944 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109229351 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067253116 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11593184 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086811333 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093528452 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069434392 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071559005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090580063 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071933621 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114966527 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120622742 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073977367 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108783236 seconds)
  done (took 7.476461881 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087214126 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118681381 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087273076 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110966876 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068689901 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070403098 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092535551 seconds)
  done (took 1.558216443 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070011613 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091378661 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115519378 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093997944 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111316868 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09047936 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101948369 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070589229 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109954674 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070524971 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113945174 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110475619 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094037291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077039815 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118408025 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070931541 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095398368 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092852911 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073285784 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117526279 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073149333 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114453982 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072092633 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069691086 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109508014 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070033527 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142291486 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075508072 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093999156 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073828644 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068652179 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145825725 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108134938 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081631678 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092038812 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085482969 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10757972 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068727091 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08787591 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0983101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084713794 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092867267 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070512525 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068659278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097153415 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081591616 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0932629 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071571515 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073559719 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113036124 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071009088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107751819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069949002 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075122759 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094124121 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076248527 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10241927 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070629371 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090435466 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093846238 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088185648 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11053681 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08608069 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110074629 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072511577 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108009632 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084170653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073541671 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094475165 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073380496 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110626571 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067263696 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072188832 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104989565 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072259839 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116995175 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094418017 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09490064 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080525364 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.092859303 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070480486 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07012239 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116915362 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073776938 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09340829 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075031085 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07412855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091255147 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069155912 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073308138 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091304373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072100424 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09667168 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070612482 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073235268 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110106087 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071157777 seconds)
  done (took 9.555074578 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071164181 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070743446 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095504161 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071442926 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070973221 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093327663 seconds)
  done (took 1.411268471 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102585332 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096075593 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084425148 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098599857 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11323469 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109070353 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086001625 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110560112 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089181514 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105853855 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086868162 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109859794 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09150135 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099144132 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085997639 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098805934 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085878971 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103391741 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082701358 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099823885 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092749212 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099238095 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077469512 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109706778 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074042854 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100403809 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080962743 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106094034 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083374249 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109659813 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077598973 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096781775 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076024175 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108658028 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086407455 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098809119 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076483381 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074382407 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10526187 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073173561 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110116952 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076551331 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105778998 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075868688 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109433249 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075327451 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097572547 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080574132 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108195391 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075769784 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09744604 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076388982 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097331529 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074974649 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075185841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108073929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097671111 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087568224 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100046862 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076579344 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074238791 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096263385 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085283008 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096664497 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085147042 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096918068 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075425335 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099715609 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077835859 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099840033 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075730193 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096916856 seconds)
  done (took 7.551767761 seconds)
done (took 28.471011728 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.655771283 seconds)
  done (took 1.586889837 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.824385339 seconds)
  done (took 1.757370727 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.543660458 seconds)
  done (took 16.47853073 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.652762926 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.803396902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.829169362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158425803 seconds)
  done (took 3.374653835 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885126226 seconds)
  done (took 1.839188132 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244601097 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255339906 seconds)
  done (took 1.438402206 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729980163 seconds)
  done (took 1.674667548 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.300226527 seconds)
  done (took 2.241190223 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340723997 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189039463 seconds)
  done (took 1.47826708 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53158339 seconds)
  done (took 1.479925654 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.515683152 seconds)
  done (took 7.463824304 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236028534 seconds)
  done (took 1.192945151 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277114654 seconds)
  done (took 1.224845811 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.243815257 seconds)
  done (took 4.190455928 seconds)
done (took 48.356096071 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08087801 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08532148 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1070918 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08248665 seconds)
  done (took 1.297753717 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08060956 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076582609 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103735485 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075869241 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105041989 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075845524 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101642868 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080306015 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098994242 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078292082 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075571336 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099421271 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078660564 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101868736 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074367562 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07974887 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102386306 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076076 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101931995 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07689608 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096704155 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078989014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102449886 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074479537 seconds)
  done (took 3.049889302 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080419627 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07532521 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100912839 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075064059 seconds)
  done (took 1.286584678 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079647635 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11926545 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093640062 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104419001 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095896463 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114485861 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073861867 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072697139 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097915862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080228995 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094433085 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103295299 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115014499 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079661268 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105309357 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069130097 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095057985 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090397734 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080356091 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104539803 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073393914 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103302307 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071789237 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117552904 seconds)
  done (took 3.1914036 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080506137 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130028219 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082618553 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11614764 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094483072 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068058185 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103732094 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094480563 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154753492 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.092207901 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074120648 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06815196 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099556404 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067838924 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080155736 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136212532 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.14119323 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071595712 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124372352 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06908578 seconds)
  done (took 2.903020398 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077214674 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072390477 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092969287 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07212088 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079119044 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098900108 seconds)
  done (took 1.454375964 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071133062 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069679059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093023982 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069579879 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074799326 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093394768 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069412985 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07110754 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093443841 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069755257 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092882144 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068325757 seconds)
  done (took 1.895086248 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460190208 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071825535 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095042432 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068160188 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074256479 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093409259 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083711972 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07106247 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11778923 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06908248 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093870784 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071761916 seconds)
  done (took 2.332068691 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27230801 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080395069 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.338509627 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172376095 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144025283 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162141379 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133371072 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121154665 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204349322 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142491431 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236310083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232181023 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116868967 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195971607 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093755359 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13721276 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218575628 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205847055 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133254109 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233561781 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189469132 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162676126 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212796311 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133949742 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139381265 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151667816 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074801724 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10792365 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243414747 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166542557 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207299589 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141968322 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099210057 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238948676 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228674011 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201993719 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16864278 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089434764 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162170568 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16980858 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265351744 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117624388 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227419703 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114285085 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108843172 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179694412 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152458371 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151583895 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141267072 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118297654 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204849586 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250872553 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171724561 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091018074 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140107162 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145700476 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148251044 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131106348 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2528942 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227657594 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163537216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074354103 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126044142 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219438609 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166862936 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147805628 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160495573 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12353298 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174792577 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219329324 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150431769 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180617799 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190076379 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092636447 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151547007 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201642524 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160807029 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239978497 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16020414 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076687115 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159101315 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131049851 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110939854 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149057688 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103303376 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242871922 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105240558 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144778163 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143280377 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14135697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14254018 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229839887 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187008547 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134770176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093768994 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109111521 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154315458 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209338125 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116518396 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114951904 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177180457 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083647635 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173870692 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103357616 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158504067 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.08176078 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183227713 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168342795 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080108423 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15731044 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133499708 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131879195 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171746615 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227204849 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09471492 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110624482 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235631125 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162255881 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136497589 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182200796 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222378502 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131408693 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105896132 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211391218 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252669911 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11793498 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204645476 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136042338 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113584233 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092978688 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183949533 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12150352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152839602 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111236674 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157693449 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235965626 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078246853 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124217625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170531128 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111164917 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109463924 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14549254 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105760255 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12447156 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131538033 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137934289 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175755952 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160595012 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137328694 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159191765 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130293282 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228549186 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119644531 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.134836299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111354633 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098090484 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17174227 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224756372 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083444969 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238316625 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161108237 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134615832 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152719183 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086980537 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201123083 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082616654 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098517501 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179464923 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143970653 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143492061 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193070309 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13362989 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160384144 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157476973 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19250346 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168591059 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169612133 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138078899 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117263744 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145370076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162030817 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076697328 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124924108 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11134412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13543174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100208438 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113869372 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179009059 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187992822 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104592989 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145788943 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129724092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187918808 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106391836 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164847017 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153710199 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126150714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195755944 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224474021 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171561986 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132109162 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208432573 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075606949 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077989846 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119777164 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161753376 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11197205 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087674272 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174252967 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188789291 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163872543 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198910263 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116250303 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1558675 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221407312 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076129812 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147396764 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213115715 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159938107 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.136502306 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115563695 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129204349 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183791358 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136063588 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255933324 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148098223 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157808211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217368955 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.138640632 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084696237 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133675783 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17507997 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13508125 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217233536 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131124195 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093463354 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143075147 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110014981 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135826393 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163610072 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151371881 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199205448 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148981413 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168480873 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079858749 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149324681 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183052003 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155340278 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068057052 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154054309 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232638663 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126413925 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15290379 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197178888 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109135802 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155747745 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251358828 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182998893 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11575953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140336935 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155289712 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164543993 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151651141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178062817 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141773363 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195539723 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118319397 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115362114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117414768 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105012033 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138364783 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125955551 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147459589 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150288615 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124676892 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168314589 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144358758 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143979511 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15098892 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128245144 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096062042 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128056069 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245056428 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154721177 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242736588 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131384594 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191606814 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237389053 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07836021 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108731614 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110289392 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178700566 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088778444 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196127811 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100910241 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137765314 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160928875 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207856953 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10198365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097390885 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118103456 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195536849 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142050425 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104187463 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136736449 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230285819 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135979818 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086568062 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160897212 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134678647 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134301769 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24644458 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065219548 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127402098 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080312606 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110918779 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165204606 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220219524 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086322112 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158044873 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152878037 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155927885 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166558248 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131663947 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1273778 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143704986 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185657583 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164771161 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.122089372 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146719673 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167446964 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223811288 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138393531 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12650732 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213469187 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221484339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23312131 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092855599 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148644891 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148183806 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145275299 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206349389 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113326928 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20987124 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112744461 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174449867 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134771354 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12305991 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16323906 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125874877 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119925579 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207071678 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153033985 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112014111 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084185119 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146956309 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181795103 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110052188 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104199994 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176961781 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102464232 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175251814 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235749016 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086868545 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13755327 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12658796 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086750423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136843191 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135327834 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118720373 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126069813 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240140557 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121766476 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216016932 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178137554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147710496 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200995191 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133473325 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667917031 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082721247 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222605322 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152190247 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251596341 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130617336 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153992718 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143414183 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158130662 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181537515 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138624043 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207978935 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168976418 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156657055 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108586071 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135029344 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144711233 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11889105 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114750364 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147231745 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150437969 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13305842 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154428207 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188666396 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087344932 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12803802 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200030714 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177433263 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181170162 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177196786 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11536749 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1532291 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205252675 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085875643 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156448619 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225395606 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141812564 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131404879 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085086086 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139247512 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240480604 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077250319 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228518408 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159367819 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143578404 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147570505 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.181582321 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170397137 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139961842 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160442514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127509515 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146472438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151788582 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08840783 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106713556 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138569832 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145718986 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130527847 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1354724 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123521011 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218840233 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077455122 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126267569 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107527244 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209346284 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248494581 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094458434 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112803697 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152153948 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145328122 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150907682 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159683169 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110669885 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086504637 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113302455 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139304191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119789834 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149291964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134644805 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144373142 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237944652 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08831488 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255720568 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125955343 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14086952 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074025087 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108830359 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102188875 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12751337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137909195 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129400244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239534078 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103063093 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121243513 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124063144 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077647664 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113375081 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167818101 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144268472 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157136704 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128461129 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066173968 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140926575 seconds)
  done (took 74.120297578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137803822 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.106397823 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121260663 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176746876 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150415033 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242135211 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184705286 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228862161 seconds)
  done (took 2.38253249 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071890792 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.12053734 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106569137 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119631083 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092900375 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071092493 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308457591 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113791734 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091846681 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094240065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123259845 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094029036 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.484309527 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069399147 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096933291 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086532323 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071470799 seconds)
  done (took 3.243150691 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.447434804 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.640084025 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452182884 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101647437 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.87453367 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110460519 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.282905468 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164417401 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092697333 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425356121 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.733110611 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151258092 seconds)
  done (took 17.511543324 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077914767 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072458444 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11351947 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087711638 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101070655 seconds)
  done (took 1.488931048 seconds)
done (took 117.097333239 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083580163 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382203239 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056480388 seconds)
  done (took 1.508648805 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08793051 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089922978 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115366716 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08844722 seconds)
  done (took 1.426284535 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078271051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080387566 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114617533 seconds)
  done (took 1.315321728 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.298158609 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172416622 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092472402 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08617059 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082043817 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107985614 seconds)
  done (took 1.319521426 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076515291 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078773191 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102806298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080799259 seconds)
  done (took 1.375956239 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079809005 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055013001 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057847038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084897894 seconds)
  done (took 1.32101249 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092968454 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108995191 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084424595 seconds)
  done (took 1.32634011 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113948991 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116865631 seconds)
  done (took 1.274629583 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084584329 seconds)
  done (took 1.122752282 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096370198 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145910735 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.167653176 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142333868 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178387773 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142109038 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117914121 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091704111 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106980836 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120151342 seconds)
  done (took 2.353103099 seconds)
done (took 16.02335176 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08227944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.494108564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364663329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121965107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67273498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386394512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985558848 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123387905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112064851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097353954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088135623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679222391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.013082866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.449773064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.998326412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327006532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.686135439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072064331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097300231 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071198047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970568584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097688108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070975539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097637148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673585447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375312378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097617295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324860272 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097533663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073226923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359646049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098102115 seconds)
  done (took 16.292684014 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073544417 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148925205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077296083 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088349559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100453603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072349801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10224484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073078201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151375758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072226421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115340344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070611593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102478111 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072247921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090938262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098536394 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07164559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097832857 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071709441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072081892 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116774267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071553299 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097976062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071948028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071827936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110493595 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071989877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097398128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072302973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073438052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101114932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07121397 seconds)
  done (took 3.898425521 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118721021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157060002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078872201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133948631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.14570494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073124732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174981885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096737246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1561059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072461454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115433667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071956959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132191768 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071970619 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117327786 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071388202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098410341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072949618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070881533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098041975 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090166078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097137255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073027513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071630419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096694221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084505928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0989245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075298724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097866776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07404955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075613796 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097958496 seconds)
  done (took 4.213383624 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076302948 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079305081 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112854468 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087024198 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099484361 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075011824 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076293435 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09973549 seconds)
  done (took 1.753635561 seconds)
done (took 27.194613004 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082591316 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073075339 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103316405 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084132492 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102677871 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082360311 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070938601 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10483465 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079538751 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10258163 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079276913 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071022138 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101309876 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071272999 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078640321 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097832086 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083992055 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101738309 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083996163 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110372782 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073845236 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080030197 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104570599 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083118458 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110132278 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083501074 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110270817 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077319258 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072299254 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10070511 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080179036 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116057442 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072820241 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109194821 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071283248 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070794301 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097807538 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0704851 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082849084 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10453342 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07343792 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105897573 seconds)
  done (took 4.75955202 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092686702 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097373412 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117634141 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064607391 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098770318 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065627961 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120598275 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06347025 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066412445 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120232134 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058332972 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061316854 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08947099 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056484745 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06036224 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060086261 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090349082 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059631375 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060947321 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087707069 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06332803 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05664122 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089768576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06265857 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058933897 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065518131 seconds)
  done (took 3.040928111 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078070427 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085563536 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118308802 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132813947 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137778271 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079229921 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108617818 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090223268 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116119865 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070549758 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101785984 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100614343 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090369114 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104917882 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071341755 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114213417 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084988366 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072535324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103888116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092753088 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115519559 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081937656 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119543308 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083485954 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070611378 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099528972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076223205 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112239835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076601449 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080841779 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102064756 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074565846 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099584029 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082920569 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102332932 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072445603 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124744414 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08074756 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079156631 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098493999 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074814649 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071559175 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118749646 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115692345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097226894 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077139941 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104846162 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080137116 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097277464 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088968997 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080597217 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097489724 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07300184 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070034753 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096657466 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08498622 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099437187 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073172103 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079676676 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099863539 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082999564 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101633831 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086575811 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071173831 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105587889 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069806481 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098475709 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070069357 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09329611 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099524214 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112321638 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09831707 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072110829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107436917 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078715516 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077587299 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097259734 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086263983 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10712383 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074168048 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106282943 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075099866 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074006242 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115746229 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073766617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072493158 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098309968 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077181731 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101546624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073502572 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08556638 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.098235132 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074034318 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116496376 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070719913 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073115912 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104451454 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075727863 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0976902 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084767733 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10293127 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07214178 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081051563 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097817459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074307605 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108095002 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07625816 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069152562 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103816997 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077753553 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098597013 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073007352 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074073094 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099765266 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081192446 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076837592 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102439112 seconds)
  done (took 11.641421387 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201147313 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191872129 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073272328 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186346938 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083825773 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110604049 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186394887 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104132674 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099187882 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071899062 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099743105 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110980022 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132998626 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.143714912 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083260798 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070578377 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117256594 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.142794307 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189364808 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155255106 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117325635 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079225537 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.100748319 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07155688 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.100669252 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081400127 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.117926692 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084234473 seconds)
  done (took 4.374270821 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086036548 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131348475 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077523645 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119461639 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096283916 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098441102 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075075543 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072320416 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110987678 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083771519 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098437346 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07851291 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106349425 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079742675 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071960769 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10878502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080819989 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099945488 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075036352 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074942957 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105680535 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083599287 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102883241 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070875119 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078422344 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098617989 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069845067 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116254919 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072736052 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120531167 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069002813 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105876601 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081965765 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071653754 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098891826 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072911659 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100800601 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074295162 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072805139 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09721982 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070301509 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060954543 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098660543 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084740665 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104188192 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062932288 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076807544 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104882301 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075921468 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096379108 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07396387 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07308634 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101531407 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077945333 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075457223 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102884147 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073838815 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097608252 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079045031 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072950251 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094771302 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070470934 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075783801 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098017781 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08041842 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103894281 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069392851 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073304658 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102576721 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076410192 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100422928 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073735041 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069349251 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101723998 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07594672 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076221795 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102477856 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069485589 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.098379499 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07258015 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057845176 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097902268 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057065594 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074487937 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096935058 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069431274 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072847118 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109145324 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087267721 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100619748 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077578301 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099124434 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070440978 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074390152 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093582542 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073975616 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086097324 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116011181 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098320465 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069732424 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083970453 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104085508 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070330729 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060184442 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106151874 seconds)
  done (took 10.128432158 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096950175 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123593249 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074592218 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08519251 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125920102 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095992944 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106821756 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077596429 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073261359 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115238811 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07092951 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10699745 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075701208 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080641624 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123994934 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07876891 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100995251 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079620855 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106092266 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108622622 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084406044 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112628497 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080807542 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100017821 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076233168 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111608685 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099963244 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081490327 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107784352 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086201352 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108698412 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098724766 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114751054 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.075255539 seconds)
  done (took 4.321642076 seconds)
done (took 39.31153165 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.125838806 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.336035181 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.124703183 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.959392139 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.159576354 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.135587719 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.151744081 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.125416277 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.496662362 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.124127526 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.364999394 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.675593974 seconds)
done (took 58.849587856 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.17709605 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.262819053 seconds)
    (2/2) benchmarking "String"...
    done (took 1.395512655 seconds)
  done (took 3.727141701 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.505276191 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.078014447 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.408122449 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.123131276 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.122093023 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.582054237 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.676900687 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.952087519 seconds)
  done (took 27.010184002 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.125687141 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.47432914 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.528453388 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.522071858 seconds)
  done (took 17.720100531 seconds)
done (took 58.208155163 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.122103375 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.186164245 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.137656005 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.110132592 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.229896842 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.152747283 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.461168895 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.366263412 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.127677798 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.113545088 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.143825137 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.12325714 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.132009932 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.485007034 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.124825943 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.132868007 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.131439755 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.590019685 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.493107072 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.149048283 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.140118702 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.16780724 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.128021618 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.127774353 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.202865947 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.124012607 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.140486088 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.129668137 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.297297595 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.127386049 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.212488853 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.652183502 seconds)
  done (took 189.03219456 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.125299331 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.088283419 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.194970572 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.171395408 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.684920741 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.327452669 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.264929283 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.767219136 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.14067208 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.135480977 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.289075332 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.125053298 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.351476541 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.105425121 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.136482679 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.224277636 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.35326379 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.351711148 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.139664388 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.395554803 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.128828268 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.143104217 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.087717763 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.268457455 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.139943044 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234015299 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.147590576 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.132625289 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.31900938 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.282100776 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.16924213 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.165925602 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.689572793 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.983792884 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.144443253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.128792347 seconds)
  done (took 146.607506771 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.38551098 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.125686558 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.126556565 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.126133112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.155257999 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.126026398 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.651065756 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.644158438 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.625713027 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.505268358 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186378696 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.319497197 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.125412825 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217018632 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.138690793 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.126391627 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.126966087 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.142058855 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.152452529 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.128317006 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.127079546 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.640615482 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.139198971 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.153260996 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.133075348 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.128063503 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.156545546 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.519343149 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.125889423 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.157563979 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.440363292 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.170201112 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.127634451 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.414144241 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.015961761 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234245751 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.128102769 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.157034069 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.128526906 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.39281318 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.127902743 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.128109891 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.131531341 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.699409285 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.129121912 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.65447822 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.130302562 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.001790024 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.128089571 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.128690846 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.128706281 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.347705508 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.549592866 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.128163716 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.127337373 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.131305901 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.128889618 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.128849273 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.158999444 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.29020899 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.22546922 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.130150228 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.132788185 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.158168142 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.129745861 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.242562731 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.128735571 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.250518551 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.183409784 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.352658509 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.643805209 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.128404905 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220866479 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246174424 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.12965943 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.128894917 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.128261185 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.129675871 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.234398565 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.1292611 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.51708789 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.129503722 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.135202152 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.131617205 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.130200802 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188366988 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.22182994 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.129599554 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.414229407 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.131668425 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.128254745 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.808094126 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221383888 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.129976966 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.129738293 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.129886727 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.518286635 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.652879393 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.312012857 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.132279359 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.289569021 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.131375824 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.530363068 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.636758805 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.706589848 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.132499823 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23602359 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134670028 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.131334263 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.13086599 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.158878512 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.13209965 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.183199538 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.131510432 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.525847663 seconds)
  done (took 335.232918868 seconds)
done (took 673.329184237 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.801896676 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.751136747 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.883052762 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.769544523 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.752028271 seconds)
  done (took 10.032918761 seconds)
done (took 11.109640944 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.304959637 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.306999572 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.18847033 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.307770278 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.159538132 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.324086577 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.287990162 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.152065899 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.229041468 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.204889232 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.23068102 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.177628564 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.158944333 seconds)
  done (took 17.109749734 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.439710495 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.431898321 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.199051486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.436978336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.17420427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436589346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.327876685 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.344911888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324802261 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.14983225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.148585831 seconds)
  done (took 15.492253317 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.441382842 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.450900211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.200200886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444821062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.1747317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.457836147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.33911346 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.33246472 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325084003 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.148659929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.147634853 seconds)
  done (took 15.540823043 seconds)
done (took 49.218372711 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.143478584 seconds)
  done (took 2.220049788 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.17647652 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.33545067 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.156827157 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.147678404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.144003319 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.146899542 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.148441623 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.144366793 seconds)
  done (took 10.478768287 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.140357202 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.14018443 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.142484415 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.140076208 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.140376209 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.143897884 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.142735733 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.142499693 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.141948047 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.144330712 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.143622507 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.143047113 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.141710399 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.140329757 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.140078984 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.140889249 seconds)
  done (took 19.34695264 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.142432162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.141423629 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.141884438 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.142714296 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.140097155 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.140820916 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.142846871 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.141183653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.139943694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.140869403 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.142570691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.140805277 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.142297314 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.142118426 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.141566448 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.142632457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.141313778 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.142584076 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.145796808 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.142205195 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.143343267 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.142165556 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.143085839 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.143768503 seconds)
  done (took 28.491829376 seconds)
done (took 61.61476568 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.189387875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.689466157 seconds)
  done (took 8.95893896 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.144785157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.144933269 seconds)
  done (took 3.370316291 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.144905041 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.144668634 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.144405109 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.144694561 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.144448855 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.145137915 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.145585553 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.145535807 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.144538491 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.145264091 seconds)
  done (took 12.5284184 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.14552176 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.144253072 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.142120099 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.144250413 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.145461362 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.143445385 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.146050772 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.145590326 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.145039639 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.142259962 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.145471348 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.142300169 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.145167906 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.143786421 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.146336183 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.143242805 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.143023871 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.143377323 seconds)
  done (took 21.677522079 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.145549452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.145774165 seconds)
  done (took 3.372501791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.143183485 seconds)
    (2/7) benchmarking "second"...
    done (took 1.143011511 seconds)
    (3/7) benchmarking "month"...
    done (took 1.141924722 seconds)
    (4/7) benchmarking "year"...
    done (took 1.144106526 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.14332266 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.143032921 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.142393509 seconds)
  done (took 9.081976165 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.146993358 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.328567736 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.407580611 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.779560926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.14760605 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.150670605 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.051456363 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.149000135 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.151805397 seconds)
  done (took 13.394168121 seconds)
done (took 73.463681583 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.132451888 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.137223004 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.032895722 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.141956414 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.156204277 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.4811265 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.144534932 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.259045383 seconds)
done (took 36.568598625 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.151735374 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.847440617 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.891722547 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.141864783 seconds)
  done (took 10.962839686 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.125733797 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.058794513 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.139705813 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.148263112 seconds)
  done (took 17.556619263 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.737639321 seconds)
    (2/2) benchmarking "read"...
    done (took 1.471580026 seconds)
  done (took 4.290782353 seconds)
done (took 40.04462827 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148144374 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.144777413 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.148749927 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.143970376 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.147574269 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.146964081 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.145151612 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.145075854 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.144517399 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.148389026 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.146930473 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.147944629 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.148379649 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147500015 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.146361267 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147054709 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149294772 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.145404458 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145593631 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.14799901 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146122332 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.148970173 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.145834904 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.146080156 seconds)
  done (took 28.606517439 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.149810568 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.146784396 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.150132571 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.148846445 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.145877656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.149187595 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.149471415 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.145700231 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.149300813 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.148162247 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.146624814 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.147292686 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.149057953 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.147434913 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149403483 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.146981942 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.149646692 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146461268 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149198161 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.146000055 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.151325129 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146752943 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.146710541 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.149024784 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.146592529 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.146967513 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.15036639 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.148425231 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.149620167 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.147037576 seconds)
  done (took 35.528919931 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.155321163 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.157289742 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.150235694 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.150889271 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.15015024 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.150772893 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.151436771 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.151900733 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.15178477 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.151608628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.151431762 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.151101696 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.150811145 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.150836331 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.152212183 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.151952703 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.150874152 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.150599254 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.14997292 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.151409919 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.151096037 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.151359947 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.15181965 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.152486611 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.151958928 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.151050222 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.150966729 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.151862386 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.152141603 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.151610427 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.151248137 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.151381074 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.151687982 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.152094374 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.151564291 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.152553438 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.155428042 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.157441865 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.152200556 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.151617212 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.151644195 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.151644913 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.151666315 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.152712059 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.151790726 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.152597647 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.152022574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.153200698 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.15178316 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.152556468 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.153375014 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.152417913 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.151984511 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.152344826 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.153608785 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.152056027 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.151843287 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.151883935 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.152879274 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.152456679 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.153333628 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.15348855 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.152683621 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.151785642 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.153303327 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.152281378 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.153422147 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.151537433 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.152528418 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.15322781 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.152678176 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.15261843 seconds)
  done (took 84.043964132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.153302006 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.151195177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.150070396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15129328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151032485 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.153955161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.15115708 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154139304 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150308095 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.154654787 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152629224 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.151686514 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151152044 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.154143136 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15308882 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.150388347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.154455103 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151118037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.154091046 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.154054022 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154781707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.151980307 seconds)
  done (took 26.443550056 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153264665 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.15466253 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.151657095 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.153635706 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.15164793 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154880126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.154620625 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.153648818 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155039046 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15146313 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15199005 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155372241 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.152235704 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15220817 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151633724 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.15252098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154033543 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.152181474 seconds)
  done (took 21.845858405 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.153597255 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.152360171 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.153854897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.152306442 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.152298166 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.153980663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15329457 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.154461828 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.155584656 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.151914463 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.15588254 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155210279 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.15572644 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152798673 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154634653 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.15401177 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.15502425 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15382615 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154673422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152889274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.15322482 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.156789753 seconds)
  done (took 26.478918395 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155975212 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.155954636 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.15286074 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.153350723 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.15274349 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.156310216 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.155859188 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.153151912 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.156593469 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.155262786 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152281121 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.15799855 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.153884797 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.154691746 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.153201053 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154476578 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.157418601 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.154881114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156312827 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.154158957 seconds)
  done (took 24.189025896 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156644611 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.157294903 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.15843467 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158112826 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.158656272 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.158735718 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.159621601 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.159573032 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.158977333 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.159352315 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.157892856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.158782627 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.159032496 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.158996278 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158427122 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.158943285 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.159339308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.160003203 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.158477506 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158241649 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.159923049 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.16004522 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.159702975 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.158984699 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.159254791 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.159925495 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.159454261 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.160199439 seconds)
  done (took 33.544022712 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.1593969 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.158179765 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.156529904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.15550245 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.156665213 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.157135046 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.156843553 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.155935974 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.159769759 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.156251638 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.159585659 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.158650901 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.158707303 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.1587051 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.157962994 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.159449978 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160034426 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.155740303 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15698055 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157210789 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.158859557 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158546234 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.159252734 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.15601743 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157336975 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.159309624 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157190665 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.157517462 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159369656 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.155982294 seconds)
  done (took 35.828721 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.178195177 seconds)
    (2/2) benchmarking "in"...
    done (took 1.178296573 seconds)
  done (took 3.450989319 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.159076876 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160221094 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.160353619 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.157955373 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157368404 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.161018324 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.161176417 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15824794 seconds)
  done (took 10.370920647 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.158263093 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.160746449 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.160562499 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.160039006 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.161298452 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.162174461 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.165842194 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.17675252 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.15961243 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.160464316 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.165138361 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.166811351 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.161817973 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.159263402 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.159204339 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161718864 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.161228378 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.160983643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.161568987 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.16152371 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.161434663 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.161956107 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162749056 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.15908713 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.161750997 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.17109621 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.165207314 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.161263088 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.160930292 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.165548568 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.161158952 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.15974398 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.162786143 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.162025741 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.162026583 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.162911318 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169454472 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177697395 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.16700909 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162499268 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162608857 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.160419801 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.163646585 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.1626664 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16356037 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.163666948 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.162727465 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.159238156 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.161598305 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.163984635 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.167125846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161599859 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.160635509 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166711587 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.16259585 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.169443682 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.179818028 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.16328542 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.17028548 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.173755622 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.174962239 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.169462297 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164161557 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.162908814 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171679182 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.184953038 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168677501 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.178114988 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.161123908 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.164087554 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.169013166 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175074903 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.171745423 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.164398851 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.163510567 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.163607857 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162517268 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165103784 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.169643972 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.182802573 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.165815857 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164961174 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.173532768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184892169 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.163731058 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.16485146 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.166213463 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.165118073 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.165164692 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.1748361 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.18176557 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.165787692 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.164221535 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.164571259 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.164345253 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.165310336 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.163598899 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164268082 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.162557127 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.164782185 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16526519 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167100775 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.17250615 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.165216212 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.1656049 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.17152391 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.166381012 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.164424997 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.171266585 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.166640831 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164585163 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.166465788 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.170051469 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.164301332 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168516144 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.173676816 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.166168315 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.16631136 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.166956786 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.166659373 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174354766 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.190681792 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.166728488 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.166696424 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.169747644 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.177156945 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167330011 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.168851317 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.166514568 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.164063903 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.165195089 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.16868815 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.167435094 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.166469713 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.166932004 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.167368527 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.164069713 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.16754431 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.167643493 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.167745158 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.166745316 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.164814232 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.168515237 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.167884408 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.16763166 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.168232941 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.173106179 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.166373396 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.167772816 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.167708141 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.16428435 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16792116 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.167339819 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.167323656 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.167129903 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.168456505 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.166918566 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.1679607 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.168643968 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.168600748 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168541974 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.167701904 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170607863 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.168355746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.171896552 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.167328423 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.165940403 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.168675671 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.169018546 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.167126084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.169489503 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.16633971 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.170056371 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.175498316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.16895975 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.169304909 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.17083065 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168284053 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.169134404 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169340706 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.170342796 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.174534626 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.170494458 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.174549049 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.168983798 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.170586481 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.169617144 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.168891663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.167344094 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.170368543 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.171402783 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.176943863 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181313641 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.176614287 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.170345607 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.174566216 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.169239432 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.174961355 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.172623825 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.169505773 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.170699941 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170212628 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168694433 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171176985 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.170593709 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.170269082 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.170280079 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.170756663 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.171446772 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.171929778 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171579826 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.171478815 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170787614 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.168458987 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170682739 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.172529876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.17005501 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.169378653 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.168374297 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.170176781 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.170171717 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.171947455 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.177450983 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.16955817 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171539475 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171669995 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.170039025 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.16940404 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.171733641 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.17291975 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.170182092 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175684843 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.187656535 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.17055136 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177481484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.186078674 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.170978044 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.174180156 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.171464037 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.169114716 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.174190364 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.178956802 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.172074624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.171476883 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.17348803 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171084733 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172373008 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.17806445 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.171277911 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.171211978 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.172780148 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.173532559 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.169866575 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.17251282 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.17187646 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.173003654 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173943744 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172796488 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.175099608 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172887736 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.173457881 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.173104546 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.174531445 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175372845 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.181169087 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176909491 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.171918168 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.173747974 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.173586848 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.176942178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.171135008 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.174484753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.172434124 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185330613 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.182263933 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178794353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.175735713 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.175973442 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.178957807 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.173718847 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.177626123 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172842229 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.173263274 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.173074839 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.171866782 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.173553581 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.17437779 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.173936025 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.17486541 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.173989535 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.177912829 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.175081936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.172739247 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.174769939 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.175247267 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.175374938 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.173440197 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.174694603 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.175052408 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.174874249 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.173054871 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174146657 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181198191 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190524315 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.175277888 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.174055715 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.173948624 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172875459 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.175519944 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.176299311 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.177396986 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.183391832 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.176827002 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.183151474 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.175849508 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183132529 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.175814699 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.17769168 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.182768278 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.174200115 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.173245071 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.175001561 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.175594263 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181248797 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.193480067 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.175416025 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.180703428 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177355933 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.176632815 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.176592702 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.176776827 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176895461 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.17700738 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183875195 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.194572877 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.179079238 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177286491 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.17443886 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.177636179 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.176971668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.176132903 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.17834781 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.176726171 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.177082334 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.175348201 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.17624264 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.17841917 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.177808146 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.178784671 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.174471804 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.177315016 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183883386 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.193740554 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181270704 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.177455372 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.184324951 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178431631 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182826138 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.19333946 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.177286231 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.179099681 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.178319636 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.17922962 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.177412265 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.178905134 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.179111336 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.17809611 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.183135856 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.178830776 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.180408005 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.178572499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.178027193 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.177382407 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186614512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.201680393 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.179222754 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182674252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.177021627 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.178626027 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.183718333 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.17997 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.177426588 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.180419234 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188119265 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187302408 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.177900836 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.17977833 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.178029497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179888676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.179583568 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.179429553 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.179148975 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.179098041 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.178544614 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.18004412 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182642041 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.179548318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.178792226 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.179423617 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.178999693 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.189202868 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.179393648 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.180032442 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180300587 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.180671028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.17915947 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.17931623 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.18108229 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179805392 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.179928375 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.181198893 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186610967 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.185960116 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.182179265 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.178116958 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.18051551 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.179802914 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.18054768 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181384037 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.180669619 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181085172 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.180833128 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.181214846 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.180409989 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.178349854 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.181356704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.17988279 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181395619 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182178813 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.186560692 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180004321 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.178683273 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.181624371 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181067144 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.178993734 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.181017599 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.188004385 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.182729019 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.189937329 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.188296432 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.185794701 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.180465079 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.182302898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.188462398 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.179951188 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.181669584 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.181517245 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.18225267 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.182443342 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.183718764 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183196827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.188131769 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.181455964 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.180227471 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188309741 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.199590083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184165851 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.182702453 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.184889622 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.181019949 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.180344472 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.183075821 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.18179332 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.189002037 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.199849456 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184537524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.184261431 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.180385453 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.182846575 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.186595365 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184646496 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.182489945 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.181277861 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.182731742 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183913455 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183948481 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.181843636 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.182359647 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.182349775 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.18579929 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.189338332 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.181496312 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.184063993 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.182413891 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.182791661 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184184819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183609809 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.181681219 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.181833299 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.183323363 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183381317 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.183341019 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.185930627 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.182622678 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.184336472 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.186114855 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184324915 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186089986 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.19225772 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.191372042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.182977121 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.182725378 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.184063349 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.18689718 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184718483 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.185604667 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184385648 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.185181926 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.184609768 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.184779289 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.185490851 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.18774208 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199791958 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.201362777 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183953892 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.184122229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187079937 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.186293647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.182680956 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.186179885 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.185715769 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.187035999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.192897633 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.185325104 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191308933 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.200057636 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.185893986 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.190883803 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.18820052 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.192008302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.187728092 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186582179 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.186972358 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.19024265 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.200683779 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.186138687 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195791364 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213707671 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.201909105 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.18599013 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.187520561 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.186251707 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.186240974 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.187855892 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.187631189 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.187198301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.187338538 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.186898802 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.187270403 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190859139 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.18851101 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.187345315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.188985874 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.18541378 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.187509675 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.184701927 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.187247121 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.188149362 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.186326317 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.188148902 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.187574566 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.187093039 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198043688 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.19640174 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.189355205 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.187961874 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.186095826 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.189654173 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.189854137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19699319 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.195890608 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.1884865 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.188944292 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.189484038 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187116628 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.186526162 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.187594183 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.186827598 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187551068 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.186862544 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.198710104 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.196817754 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.192272514 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.188958 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188074529 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.189430798 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188685788 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189721938 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.1885995 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.190269221 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.18871361 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.192780769 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.189094248 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.189359408 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.189519989 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.196234639 seconds)
  done (took 702.38897522 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.188030301 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186768904 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.187224402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.18596016 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18698793 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.187575512 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188033384 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.187356742 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.187028855 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.187750401 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.187185019 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188001107 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.187237795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.187531763 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.187992332 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.187930678 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186967245 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.188160842 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.187231271 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188524961 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.189037725 seconds)
  done (took 26.062624711 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.19009173 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.188304731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.188352408 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.190204572 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188367352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.191246016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.188030984 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190681674 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.190695241 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189375814 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.191214849 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190597716 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.188253253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.189028412 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189292705 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19178608 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.192322489 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189466154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.192317929 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.19051104 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191893025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.18935097 seconds)
  done (took 27.306738591 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.192883876 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.191348608 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.190155387 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.18915812 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.19224379 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.189086769 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.192207603 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.191728318 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.193060813 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.191135847 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.189738581 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.191684002 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.196519896 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.197361952 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.193221287 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.193541953 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.336171587 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.192893536 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.192179635 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.192249197 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.190098076 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.195706056 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.190340104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.189941403 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.190628394 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.192697315 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.19321174 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.192163473 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.192411054 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.192760632 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.196445155 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.193870664 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.191725095 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.192966416 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.192179562 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.193433656 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.196508366 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.192822243 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.191225982 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.193913092 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.201505231 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.213025832 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.19408537 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.197694104 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.19323631 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.193559414 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.195509704 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.200234143 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.192213632 seconds)
  done (took 59.753112429 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.194056876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.194096623 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.192414704 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.194703945 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.194573521 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.194144511 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.193769802 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.193978304 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.192843287 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.192980913 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.194931528 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.191178763 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.19217855 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.194005743 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.194310576 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.191075928 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.19186602 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.192013022 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.192345766 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.191801751 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.192348191 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.194609482 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.194482529 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.192035502 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.194553168 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.1922076 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.192916075 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.194991914 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.19288041 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.192622985 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.194862734 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.196082163 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.196173401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.193386982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.192437646 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.195216601 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.195019907 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.194115221 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.195750611 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.193441005 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.195620692 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.195061582 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.195325606 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.195586481 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.192085187 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.192785878 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.192807756 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.193154307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.193604144 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.195434022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.194664645 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.194460269 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.195704199 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.193810508 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.19612509 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.196140481 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.192315836 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.192845672 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.196531586 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.193840277 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.195739712 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.196402329 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.19449519 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.197225219 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.196440469 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.193238078 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.193431546 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.195870046 seconds)
  done (took 82.32509335 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196220595 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.19675333 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196195946 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196917966 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195955756 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.196645831 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.197395664 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.195179133 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197530477 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197648334 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.196978908 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198580796 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.19748984 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.198321479 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.197772196 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.196942323 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198753078 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197643094 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.197426364 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198100815 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.197801592 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.19856989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.197873324 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.198248004 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.197219868 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.198429332 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.199513699 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.198315474 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199157763 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.198499375 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198902349 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.19860762 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.199362102 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.198959978 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.199942212 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.199446271 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.199489584 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199226156 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.198752737 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.199144844 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.19885331 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198987925 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.19946463 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.199722407 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199211711 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.199947215 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.199453517 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.199580778 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.199018856 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.199036095 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.19859276 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199760466 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199779654 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.199744221 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.199462971 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.201409388 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200640629 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200241468 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200121917 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.200173683 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200748653 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.200746675 seconds)
  done (took 75.447611919 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200935466 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201939341 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.198178666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.198021383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.200510424 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.197860364 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20066873 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.199995141 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199855272 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.201401993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20089527 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198376458 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198286194 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200972955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197958073 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200396005 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19845678 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.197610987 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200568081 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198962323 seconds)
  done (took 25.126498291 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.198840524 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.200612661 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.198481828 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198900071 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.201787756 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.198317833 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.20069671 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202117712 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199098035 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202031519 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201368928 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201798311 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198548187 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199611265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202010247 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.199894944 seconds)
  done (took 20.338800484 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.199153356 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.201594822 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2022164 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.201595727 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.200101284 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.19985836 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.202202108 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.201242911 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.200560292 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.20248158 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.202640656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.202534528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.202903988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.20267833 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.200210244 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.202288556 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.199470856 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.20137616 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.203406827 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.20278449 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.201005767 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.199943384 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.205079346 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.203704802 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.201447138 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.200929344 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.199684843 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.200769978 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.200763408 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.203510722 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.20036497 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.201459355 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.201646512 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.200438708 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.204488661 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.201273889 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.202809062 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.203709959 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.203261067 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.204448658 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.203887739 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.201656321 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.204548273 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.203244832 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.202743387 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.204350016 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.201859003 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.201927196 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.202302579 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.20088155 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.203992769 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.204236509 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.204238615 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.204966605 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.203755551 seconds)
  done (took 67.257677421 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204013874 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204330554 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201297214 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204149707 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.204734329 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.201540074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20547504 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2018762 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202008366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.204197938 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203512977 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2051219 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203418568 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205135181 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204145922 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20378044 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202893579 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.202837038 seconds)
  done (took 22.802401631 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.202466902 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.203185725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.205699204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.203477669 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.203177607 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206586304 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203716746 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.205172911 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205640145 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.203341056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203641361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.206294805 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206297448 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.206033787 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205186209 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203302058 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.205968033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207006166 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202455933 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203494165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206030613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206790971 seconds)
  done (took 27.643986787 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.204541762 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.204380413 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.219877291 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.245226655 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.234152891 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.204689976 seconds)
  done (took 8.453158402 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205538609 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20606759 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204172051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206818061 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206999552 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205022973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204170881 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204287457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206714978 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204116798 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20611004 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207284993 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207560856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204929937 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205785509 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207643187 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204751277 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20521047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205509513 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207477572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20592618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207372867 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205639447 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204458809 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205366011 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204561374 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207786523 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205890064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20544097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207974553 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207861876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205039998 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208212161 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206448246 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209001946 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208869867 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206055308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209020555 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20715446 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204457025 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207923685 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208271957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208274934 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205565097 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207990461 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206388625 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206021693 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205348393 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206843015 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210280724 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20824054 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206486417 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209781332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209299513 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209364005 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209913931 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207624706 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206994604 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209465958 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208259859 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207390951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210880968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207451596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207468052 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209393257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207039468 seconds)
  done (took 80.799528293 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207544565 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206856084 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207734087 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209281988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207070323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207514405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208115355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207138419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207287571 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207720951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210403639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207804264 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207620647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20753657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208583942 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208671765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207647561 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208066757 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208906791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210936428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207891871 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209480759 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208875378 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207919898 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208775963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210474918 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210181898 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208494187 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209232269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208487966 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209099003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209148346 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207288588 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.209320624 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209479469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209850238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208540353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208514285 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208840485 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211322612 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2088153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211643779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20759003 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208308606 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211181798 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208360983 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208386811 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208505633 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207944197 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209578007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209778219 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208981052 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208789981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207436239 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20836661 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207904253 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207709193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208032227 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209623393 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211160803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209015015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20930822 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21122788 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20772104 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208875605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208976253 seconds)
  done (took 80.920805887 seconds)
done (took 1638.042198806 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.196945751 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.226217455 seconds)
  done (took 13.566700424 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.374844598 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.32515076 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.209172462 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.259683945 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.208370921 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.211696527 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.229789464 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.208419127 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.207908871 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.208728637 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.208357889 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.399176017 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.248548539 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.208761484 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.209407926 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.300589992 seconds)
  done (took 41.164911234 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.236423722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.21419416 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.322423309 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.229286872 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.235295336 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.389633455 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.263410581 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.213200386 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.376974232 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.250717772 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.719602238 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.235704186 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.211385927 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.278913437 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.228556231 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.387719318 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.444627406 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.718617876 seconds)
  done (took 28.100161323 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.639578182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.205386974 seconds)
  done (took 8.988932387 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.218950888 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.229923487 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.240056624 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.202497229 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.248715784 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.235356241 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.270169251 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.246876847 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.21922039 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.233960637 seconds)
  done (took 63.490252247 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.230740738 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.211967415 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.212956338 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.210265092 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.202514592 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.201971057 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.210133522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.206830504 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.684060465 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.331048335 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.22620594 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.219419369 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.211923053 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.211298362 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.209666023 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.244659787 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.338827191 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.210643044 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.208384415 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.216979168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.212442745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.299155539 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.250988285 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.209581494 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.329882934 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.69099286 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.215097515 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.219669961 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.322191693 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.210914944 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.209467444 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.211003923 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.213374181 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.784336509 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.660535789 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.217379078 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.235243442 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.220868958 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.210942475 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.356730195 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.212141045 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.218484512 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.20923488 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.629514311 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.365502715 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.319027365 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.463472186 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.214931802 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.213737445 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.270613907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.212013917 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.212422901 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.239093917 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.952169227 seconds)
  done (took 104.160743131 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.240786324 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.691647415 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371643177 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.224701562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.989660778 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.882297457 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.203192913 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.477263364 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.245322071 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.20338623 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.525413817 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.689460169 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211699326 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.205738134 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.262508364 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.202201119 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.203293762 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.965475362 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.206074013 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.206043657 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607548976 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.217184754 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.204257343 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363810505 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.241620009 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.656309944 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.544212596 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.65099433 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209131432 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.20226555 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.651433278 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.208852685 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.276169314 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.20339081 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.46885709 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.535283272 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.516613297 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.205586979 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.240093573 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.202423642 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.224667031 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.638183852 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.520729236 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.202250832 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.219058487 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.650994408 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.201710304 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.202435416 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.20322 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.395472081 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.177230829 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.199925762 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.517015081 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.200583589 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.56031676 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.259353782 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.259910839 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.673637843 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200811476 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.269631518 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.216360512 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.199683349 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.202239064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.203957143 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.202787392 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.533016038 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.320943802 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.204569313 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.53299708 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.633757812 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.201296496 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.693362661 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.083728822 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.214802553 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.279552352 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.198169262 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.761104533 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.66772782 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.223803237 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198415502 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.508779052 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.199030501 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.501859624 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.211467307 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199253139 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607292843 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.218538965 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.22433789 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.198688422 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.197378224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.819735443 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.201730879 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.446311996 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.249174845 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.195667457 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.197136896 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.22817882 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.197180938 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.210982592 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.197640749 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.679486145 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.204377905 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.463184656 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.212620201 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.196345033 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.195345111 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.194785865 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.194625073 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.405882178 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.59273155 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.197360869 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.194269719 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.195502448 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.214952844 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325045877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.193848196 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.460010908 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.197216579 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.194624245 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.2015253 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.87322198 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.197395631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.194293103 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.209675266 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035904737 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.403318618 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.220595364 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.195610986 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.195698301 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.206421844 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.35735149 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.194891418 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.233639596 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.197442866 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852197983 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.237627611 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.217516163 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.835853245 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.198227935 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.98707432 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.217226364 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.194822863 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.487533677 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.451112649 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.231852887 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.195808349 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.196282969 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.820701943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.233874114 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.340904389 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.214383035 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.24525632 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.397046632 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.61918386 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.198442968 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.7815293 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.196686215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400844356 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.205103971 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.49581616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.633352359 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.198362448 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.205347529 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849338862 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858708011 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.818720869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.199471289 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.50553437 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.163496857 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.650707792 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.197073191 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.198632104 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.648685419 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.197981001 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.198718396 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.197495945 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.196427442 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347704814 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.368787299 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.005800423 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.198354231 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.609979227 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.204948041 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.19104885 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.190052916 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.183408505 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.53400989 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.260023745 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.185844046 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.182594341 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.181898651 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.182524946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.608155966 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.038426194 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.183224908 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.333778654 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755537101 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.184611493 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.18476305 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.711348221 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.428420504 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.645521207 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.241354846 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.445857654 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.19302435 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.219571318 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.86231802 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.186822841 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.607683632 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.185959298 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.182490756 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.713802662 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.184010748 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553685303 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.183507071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.18471998 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660362603 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.184821632 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.18244873 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.341099035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.183485329 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422337365 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.184988137 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.216794956 seconds)
  done (took 1078.351039409 seconds)
done (took 1338.966510556 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.182572705 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.185735639 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.173931866 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.184487068 seconds)
  done (took 25.853644993 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.195764168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.190522313 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.192915107 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.191105038 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.194456451 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.190418199 seconds)
  done (took 8.280709884 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.215079214 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.185025261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.186084566 seconds)
  done (took 18.712061915 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.376151377 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.321975482 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.50523986 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.098274763 seconds)
  done (took 9.428935444 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.192485946 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.192679292 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.19291183 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.194547299 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.197280834 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.198711205 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.194705928 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.195330227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.199050236 seconds)
  done (took 11.882982097 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.66519138 seconds)
done (took 79.948670386 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.332785357 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.248542473 seconds)
    (3/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.683155331 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 6.186914763 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.983591103 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.416260627 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.333742039 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.185602565 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.227707881 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.774943929 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.213762269 seconds)
    (12/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.608013407 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.512988055 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.369268965 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.295548813 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.213318438 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.303658747 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.624395114 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.694962816 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.236106309 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.187191979 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.346278192 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.682664555 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.856708122 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.519583343 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.69057493 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.319664505 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.385866405 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.761494131 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.196199788 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.603818904 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.173441719 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.22090513 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.700839809 seconds)
    (35/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.281389013 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.308744788 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.230954297 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.314946515 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.49418866 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.287792593 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.21597185 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.192963677 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.304020369 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.450436321 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.203449148 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.256459374 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.51763247 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.009780554 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.284740351 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.184290197 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.175609722 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.674250168 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.952861978 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.189967665 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.263120086 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.189245338 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.586932389 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.258413405 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.175264551 seconds)
    (60/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.300655444 seconds)
    (61/309) benchmarking ("sort", Float32, false)...
    done (took 5.1487053 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.178909599 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.17885483 seconds)
    (64/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.675218425 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.405687596 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.010147701 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.306968929 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.212510207 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.152035585 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.759632005 seconds)
    (71/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.478289831 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.474097051 seconds)
    (73/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.531877687 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.398277671 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.249865543 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.21435154 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.572093344 seconds)
    (78/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.430518056 seconds)
    (79/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.286702908 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.338000567 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.314907546 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.293994285 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.58994222 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.52086866 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.190810046 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.591925512 seconds)
    (87/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.197259479 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.367526472 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.196953316 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.210061158 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.328616417 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.245143459 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.159551733 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.189847996 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.300165932 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.275900155 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.198971397 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.584968861 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.279983554 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.871381008 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.214598753 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.19087444 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.440856209 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.938706861 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.330321376 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.722482151 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 4.231599867 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.407155696 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.299331406 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.639468464 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.13353914 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.192592258 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.289749626 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.682296218 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.190883036 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.97116232 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.19053763 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.275763963 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.58947069 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.941833846 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.184755427 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.203994003 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.014839303 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.316488787 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.691090997 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.215861004 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.44851645 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.85855562 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.616565583 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.191913637 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.961428363 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.219191914 seconds)
    (133/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.201287186 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.452935806 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.87999236 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.41748565 seconds)
    (137/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.829263105 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.583579038 seconds)
    (139/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.752386596 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.295951379 seconds)
    (141/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.74091051 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.644320696 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.268033136 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.179188022 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.194521177 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.158265321 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.193980195 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.878829575 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.376801181 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.220478791 seconds)
    (151/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.276175323 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.444641651 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.25872971 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.220894253 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.219815986 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.480908759 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.231263723 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.864899772 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.404964377 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.217606069 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.027246709 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.393072245 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.280756805 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.866518101 seconds)
    (165/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.200457532 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.969967162 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.189709309 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.195906298 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.339840454 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.194784624 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.75647496 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.421549702 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.157976126 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.401932419 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.427132977 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.292991429 seconds)
    (177/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.321674502 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.855381879 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.286141928 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.881928288 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.33749654 seconds)
    (182/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.215074307 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.955175183 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.022482574 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.525030272 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.204921873 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.194078825 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.237929432 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.771356084 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.223947442 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.196080491 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.252441039 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.220685119 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.222335503 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.192055542 seconds)
    (196/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.911040808 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.222717745 seconds)
    (198/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.450626524 seconds)
    (199/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.224791777 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.192807544 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.196993548 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.219462893 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.978674899 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.254393468 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.886590957 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.324778412 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.584432718 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.20626975 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.284501969 seconds)
    (210/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.518032836 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.374706042 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.318174286 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.729360148 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.824492754 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.405960538 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.304384912 seconds)
    (217/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.197970979 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.394271274 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.527390316 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.425855144 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.369061151 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.290990999 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.712314773 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.22175397 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.205510415 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.475834442 seconds)
    (227/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.983290391 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.1952938 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.239873254 seconds)
    (230/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.283532469 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.170708676 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.199012029 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.225431251 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.224391179 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.533891076 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.223941789 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.033513943 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.301297619 seconds)
    (239/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.519149115 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.594181131 seconds)
    (241/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.400080883 seconds)
    (242/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.859432443 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.386455339 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.491500394 seconds)
    (245/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.210110481 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.186662868 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.361647425 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.386888271 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.217082084 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.577909757 seconds)
    (251/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.954827043 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.783608792 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.709618736 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.226187663 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.196133635 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.743779334 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.216150236 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.916899784 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.738049836 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.584537773 seconds)
    (261/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.21681569 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.183556277 seconds)
    (263/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.70302898 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.221396819 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.215667512 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.197705781 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.273198116 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.563039157 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.463534201 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.203492465 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.020802457 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.247780759 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.778587022 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.497639073 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.767598953 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.349060274 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.493039888 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.216094969 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.414319948 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.249222667 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.558506862 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.310011704 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.283460042 seconds)
    (284/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.206618414 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.300267045 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.960262792 seconds)
    (287/309) benchmarking ("sort", Float64, false)...
    done (took 5.409603269 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.311575391 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.19932209 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.930716329 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.524058195 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.33721729 seconds)
    (293/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.264151119 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.20144119 seconds)
    (295/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.381004404 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.619508377 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.243423919 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.305761089 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.196242397 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.253033187 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.262129731 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.319875634 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.738806325 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.235692626 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.539160575 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.203139285 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.266265015 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.198714337 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.898727061 seconds)
  done (took 862.219876832 seconds)
done (took 863.350443413 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.233739639 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.227305681 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.211449781 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.233410987 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.323403152 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.240987833 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.221855998 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.213334857 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.260451389 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.260481049 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.211040768 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.238848502 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.213032322 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.212061218 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.211905241 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.225487995 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.126108729 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.211980408 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.228770228 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.221859724 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.2286861 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.21119421 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.260571218 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.23896049 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.215912084 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.215321424 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.215771258 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.23172453 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.323524238 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.215728528 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.215789042 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.223937381 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.126455907 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.211313272 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.208772077 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.231588925 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.224040426 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.221713062 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.21669386 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.244940475 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.477871523 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.213094653 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.215496676 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.214480058 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.214513559 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.218287237 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.213773152 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.220388875 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.22653564 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.227796805 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.461794039 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.227858433 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.216316751 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.21507748 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.22493529 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.214301625 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.218103926 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.230322575 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.233897943 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.228982016 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.115732997 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.21940492 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.216309073 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.230427915 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.222164221 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.499772925 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.210251202 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.218944662 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.473688181 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.219930396 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.500637076 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.222402819 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.216578918 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.227829316 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.246992033 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.130641911 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.210465537 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.214547951 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.222527055 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.213791091 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.22559327 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.228075258 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.220491899 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.216432012 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.228885997 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.243663978 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.225698656 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.216475677 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.223861316 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.235744724 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.222604734 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.226035803 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.219673709 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.211838951 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.225344718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.220083787 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.219013367 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.218774675 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.221831077 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.226024301 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.48262319 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.234139883 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.212879031 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.213607208 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.216797558 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.229600288 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.489814485 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.218774445 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.238489474 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.264914316 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.218266726 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.120919727 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.219502429 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.233673656 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.226543331 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.220210733 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.212515314 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.120792339 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.493968042 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.232450648 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.219525847 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.215603328 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.233020058 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.219512002 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.21426638 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.135398116 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.218583416 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.230889044 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.338523438 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.228567779 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.24998588 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.216334907 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.221003807 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.246008616 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.233933542 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.248550353 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.22136326 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.233025689 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.235175674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.215696603 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.229643903 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.228909719 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.219101506 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.223695047 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.21353529 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.250650054 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.230659528 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.231402195 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.240432628 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.339817053 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.215986355 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.122153219 seconds)
done (took 205.003827967 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.276776522 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.212629196 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.301185776 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.215630296 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.312379441 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.312236765 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.213570499 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.213705922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.213760155 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.638392442 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.213862156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.215405153 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.21311802 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.213884761 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.299358284 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.21672855 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.214601572 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.557306854 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.217182109 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.286151299 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.215263817 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.214905466 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.217387892 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.600452501 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.213074157 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.213234534 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.28812531 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.21646874 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.600837057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.210486277 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.212283069 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.56451021 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.307284559 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.234225778 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.227818676 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.225209213 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.313146669 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.232789277 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.298230776 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.29777399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.303199643 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.25693817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.218846358 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.211861237 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.219250344 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.218966059 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.21579111 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.244117713 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.214053243 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.215292564 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.598149915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.228263963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.21565308 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.216123341 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.216165071 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.248362153 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.216717418 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.219882118 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.307830858 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.220274655 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.280240896 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.642514063 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.596403853 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.218711009 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.21852429 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.216204829 seconds)
  done (took 140.791479508 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.284391713 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.291457975 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.321432593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.218012611 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.269152118 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.324565931 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.218985082 seconds)
  done (took 10.080681766 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.223841661 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.219636213 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.266992871 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.270757716 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.219920239 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.367947528 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.219451516 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.229777806 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.217861673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.269753667 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.221351067 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.221114767 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.226843897 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.212932419 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.266022292 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.231433265 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.334077422 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.221188408 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.221545407 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.371645931 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.218900414 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.228004324 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.271538668 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.230976547 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.223133972 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.226891842 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.785726799 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.22154665 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.218527425 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.220469834 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.218583086 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.258096522 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.221310826 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.21612756 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.219214693 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335662596 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.221347382 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.218604843 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.22146271 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.215931028 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.22141712 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.223011853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.222053557 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.218538289 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.221666792 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.244039504 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.222857602 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.222363148 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.222145546 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.222769737 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.270615179 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.222515658 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.219460879 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.218305653 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.275396765 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.229832566 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.223362004 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.219723101 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.222344585 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.219238663 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.372640391 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.269214912 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.222207898 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.272322126 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.223272869 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.223302008 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.224273632 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.226502776 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.279178547 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.226602263 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27292015 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.224851584 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.380069522 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.246912694 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.224712929 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.224801873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.225545648 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.224184049 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.21608723 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.228629826 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.220924118 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.223774685 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.229418362 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.221477326 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.222162326 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32493109 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330731325 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.220993756 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.235123502 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.229322871 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.221881855 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.274885993 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.223783898 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.221617877 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.275536941 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.337737026 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.276679328 seconds)
  done (took 142.242149875 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.227645933 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.231785712 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.224432263 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.239874869 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.223753303 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.223518866 seconds)
  done (took 8.528388292 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.225351977 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.226177338 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.224141284 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.223952044 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.224213755 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.225902627 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.224063569 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.224665701 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.22786076 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.225392414 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.226689783 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.228774517 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.226660625 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.225556466 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.226236224 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.225506045 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.225720691 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.223130877 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.225130817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.225076889 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.327453807 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.225595132 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.22605725 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.226210004 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.230326393 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.225845889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.232607013 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.225477504 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.226161254 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.232819392 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.228387163 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.22804732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.226617775 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.230228697 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.230540349 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.225653448 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.22883039 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.228868984 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.224153068 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.227768021 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.229658947 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.228148353 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.226664593 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.229371573 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.227083617 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.229245574 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.232731863 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.234288155 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.227273399 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.231714087 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.230426587 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.228360411 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.228470806 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.22968877 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.228644483 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.229265759 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.233553581 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.228182892 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.228702433 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.227514089 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.228446084 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.229330491 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.228514075 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.230939396 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.225652965 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.230036314 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.228158631 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.230964906 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.228367962 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.228797689 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.231600791 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.227076567 seconds)
  done (took 90.664306593 seconds)
done (took 393.455129873 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.392445723 seconds)
  done (took 7.552987443 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.244517858 seconds)
  done (took 7.407254082 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.729024731 seconds)
  done (took 19.897876971 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.250998664 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.23602945 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.206950255 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.213878839 seconds)
  done (took 26.055193598 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.304375698 seconds)
  done (took 7.451633525 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.217441754 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.21719681 seconds)
  done (took 13.593391861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.378585032 seconds)
  done (took 7.535651693 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.68302108 seconds)
  done (took 7.842780371 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.217389154 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.230324699 seconds)
  done (took 13.849968842 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.20172447 seconds)
  done (took 7.35923671 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.785092493 seconds)
  done (took 7.943740637 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.224459207 seconds)
  done (took 7.383211148 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.235447702 seconds)
  done (took 7.393012607 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.477336315 seconds)
  done (took 8.634432254 seconds)
done (took 151.061998949 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.215511429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.218273637 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.218349198 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.216447063 seconds)
  done (took 26.025372654 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.257970912 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.259656522 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.25956938 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.268912817 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.261327566 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.258897272 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.251185536 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.251320781 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.269981248 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.261129392 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.2613885 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.262052145 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.258163623 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.251657768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.261222368 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.261028945 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.269916787 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.260325677 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.251111895 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.263037331 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.226505118 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.269882306 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.261702919 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.226349713 seconds)
  done (took 31.341884923 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.419497371 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.294320626 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.377945274 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.277368302 seconds)
  done (took 6.527599165 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.277383135 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.278831837 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.289486002 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.328936488 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.356253805 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.289917845 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.253707707 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.247387887 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.234213776 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.280055989 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.354719845 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.295526242 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.365001576 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.226268646 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.412127536 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.22671514 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.226428483 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.279889059 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.330297083 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.344482411 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.228167404 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.278397861 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.282474282 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.296332734 seconds)
  done (took 32.143275096 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.22587778 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.234334905 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.23372476 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.221994669 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.221860996 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.22261376 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.227900829 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.223008935 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.243286296 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.222913436 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.225651717 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.213838147 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.212620708 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.214111229 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.213763005 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.227493477 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.228357093 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.214533053 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.217958804 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.218336585 seconds)
  done (took 25.624343415 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.201917279 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.055015744 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.546927418 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.453146078 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.196757299 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.197321188 seconds)
  done (took 26.793729634 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.261902635 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.385927717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.202830561 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.513401718 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.589063721 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.203312135 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.202575955 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.417722328 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.681283486 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.682391454 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.250703287 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.260322617 seconds)
  done (took 17.788227417 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.202718507 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.197978473 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.204166964 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.213790945 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.250102631 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.206700947 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.210840052 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.196159233 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.251495906 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.254205718 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.205050506 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.249638979 seconds)
  done (took 35.780602293 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284057831 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240341012 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.096565528 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927081924 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917156896 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409469239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352202839 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600727291 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.205266534 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471522972 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.785222081 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300365059 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.454192504 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.212107005 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.200967493 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.070287101 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426733245 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652686775 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202911827 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815650258 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.22561764 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.198342467 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.980076548 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.22707015 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409795553 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.176770571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.460872281 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.975430781 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454846474 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.211698849 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.209549616 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.199248693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474167892 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82551835 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.296784773 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.209879295 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.870726309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.747259866 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.186802143 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.902345147 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.594497362 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.20416902 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.210793853 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200246832 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.13466574 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.208673469 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608259582 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.209385672 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.911572959 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.201066988 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.211572258 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295728641 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.204077881 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.770354749 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186796434 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.205991048 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.197223638 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.208057819 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769170399 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.27328971 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.207897619 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.136476193 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.554556811 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906488141 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769692975 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.305229228 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.204772768 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.204476611 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135994646 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.878826046 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.21886857 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348554622 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.228098638 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.851199526 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841237595 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.826880491 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.146208648 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723326562 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.216911696 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.137469004 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428217416 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976439482 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.136928111 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.146478923 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.135917824 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846478213 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.211974841 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.550695198 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.211961191 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604032155 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.216036645 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.218546059 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225499203 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.424749884 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.086072838 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202665426 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.562590572 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342488231 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.224108625 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604653529 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139877746 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.206791697 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457047475 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.41362615 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.203237026 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.083197796 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382444852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.206689191 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.219137375 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.209882459 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.214676268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.719794693 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.218141065 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.286664744 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.222271264 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.978897662 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915508151 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.208273807 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.305730364 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.807585704 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440061577 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.918537853 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109020811 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.27115153 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.210562315 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.204307348 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.932229931 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055443544 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.108913742 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.206094403 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2066539 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.215196639 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.204539921 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149184108 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.207478472 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.843895882 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.983577044 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428239541 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209943811 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.480486297 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137401114 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352519687 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213896164 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.427169552 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.306630802 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.20590606 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46372051 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.20505929 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.20533077 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.217679737 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.22443972 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.301894341 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.226720282 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.210926875 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.462807912 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.209670602 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.2094085 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.926840636 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.988428437 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.213967935 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.211425823 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01449367 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727719528 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185902338 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.210179053 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093580689 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.219152947 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.273098993 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.212167364 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.216960169 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.856891677 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994172893 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.212057967 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.206608844 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430479755 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.217045684 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.925352917 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289965459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.381189386 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783529993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.221544739 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.140195927 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.917266628 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.89896577 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.206579795 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.396103853 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.208658441 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.215746617 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.217818881 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.688045987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729498526 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211656857 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.844702751 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.21471768 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.217632282 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.21300135 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.20907039 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.813126299 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.297939069 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.213582695 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.219046342 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351950171 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.222049281 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.142526115 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.72546361 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.213850269 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.20841146 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.984008267 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.242639598 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.849039668 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66768813 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468455592 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.865754862 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.221725255 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.923417423 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.239229226 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.206804486 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.601675527 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223472759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.240558621 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.218253941 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.219470065 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.852787915 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.648096734 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77436119 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864502244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682034404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02612134 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.211682398 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.106488773 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6196653 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146278313 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.864620018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377623572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619468719 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156533146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38701585 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.32190617 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902747746 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.220426634 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436402913 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021281143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.621590635 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.232799634 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.420680427 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.244939819 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.209158767 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.141007124 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.5125377 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419687716 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.634019307 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29013907 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616226409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.629638663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.003597282 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.208288075 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.515578142 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366026592 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.755799945 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.597981739 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.215088829 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.858678558 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677044658 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.216025978 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.735787765 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784996319 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.216138107 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.389551073 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150936573 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.221357697 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.222370369 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.21199053 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.327691061 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.161041649 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.479098202 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.222813584 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146234509 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.211548905 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688893661 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.064826303 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.217605399 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.212240409 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900702896 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.222434809 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469432272 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.215150227 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.800681713 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216640019 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.147101684 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14561013 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.905400713 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221393381 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189195904 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673541809 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.553102187 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.187029882 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.232460823 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057165605 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.469818785 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.226923603 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.741990474 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439238598 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.972572928 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.23761804 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.313090156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.657141852 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.212993581 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.093904085 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.44993788 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026819639 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.437605395 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.13614643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.127039929 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.212578522 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.427126838 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.0958318 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.874959704 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45218059 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.925984762 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.220097949 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85778816 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.241496346 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.89091624 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.238123883 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.566999621 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.222921955 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.285147894 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.223497364 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.22587641 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.224809205 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36773073 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882549655 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230328411 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.229040879 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.308691047 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.333181139 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.811510261 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.988893071 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746656516 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892235271 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.746915764 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.228655631 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.214937353 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215242085 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149519684 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363746635 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.740352304 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488946039 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344582903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.628015327 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.239720389 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.675483611 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.235451905 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428374082 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489929619 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084621551 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222741726 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874681241 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.153970725 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.226819905 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.42664613 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680241176 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746806508 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335328718 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.222699149 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624966012 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49344923 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.306597722 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.215814851 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.806366628 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.229327072 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543020412 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.223561695 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.928782323 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364892854 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.225354354 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846898805 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.227833042 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.371330295 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.989777712 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88040382 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472548075 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632490623 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.228427951 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.74898421 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.853262596 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481179115 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.286795433 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227954751 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.320694424 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363432583 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.204961374 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.112488733 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.217847121 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063124435 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.927067251 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.226852922 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752615026 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480492027 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.216685204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.222963063 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.241158424 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.228652795 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.439743371 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87751842 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.443278316 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.228112998 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.226828197 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.788533157 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751455868 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.23160433 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.151545688 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.221359649 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440461262 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.454488988 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.243544558 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.671616929 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.929212319 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741383843 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.190956497 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.241383545 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217977745 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861901756 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750584384 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.821206628 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683225214 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.877596652 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220545498 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494007606 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.224638673 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221967816 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496857627 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.222904929 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.222506228 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232187124 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.751766596 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917453182 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.229438171 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902031118 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.157595095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.446294836 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.828574302 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158067028 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.229928378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.38767119 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.223633376 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350017831 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.231040633 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.229022878 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.232457852 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.974855423 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505024145 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.226090962 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.20704192 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.733088469 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.224617587 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.240969929 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435282555 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.22673243 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.895683743 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.576479493 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4769123 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.222656548 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.207848517 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.224835768 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.220865497 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937568296 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.188742033 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.705073234 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752194386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.23330578 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.231408837 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.225971456 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.437146256 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431854325 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.961265942 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.247482538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2322359 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.23711167 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.133129125 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.988221852 seconds)
  done (took 1505.059285241 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.239337527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.240035992 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.225825203 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.287986275 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.250734413 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.31403912 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.240949152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.287706815 seconds)
  done (took 51.247392499 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.229103819 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.370982202 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.250553728 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.23198212 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.231137914 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.223001621 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.645123428 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.229806566 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.230666437 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.232468466 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.231761952 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.226080118 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.820561172 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.232790491 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.222179799 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.209204408 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.230447379 seconds)
  done (took 63.211101033 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.221093331 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.362309048 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.309919793 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.225960639 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.776355024 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.240191518 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.267140894 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.264386754 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.223675312 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.494287803 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.87644006 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.256614926 seconds)
  done (took 81.681678673 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.230979964 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.23073456 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.231185064 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.231600642 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.231601743 seconds)
  done (took 7.318546973 seconds)
done (took 1911.702477855 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.466961218 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.829546728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.814810648 seconds)
  done (took 4.80774459 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.371923102 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.421747424 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.540176863 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.546418933 seconds)
  done (took 7.044075218 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.508352468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.615504422 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.423750552 seconds)
  done (took 5.711578625 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.49889391 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.224467137 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.344360661 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.224229286 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.225381079 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.227487158 seconds)
  done (took 19.843150769 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.228185696 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.232679975 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.229313984 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.231866945 seconds)
  done (took 6.085741719 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.212176367 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.930209736 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.212166939 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.227381948 seconds)
  done (took 17.746406883 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.976076157 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.988683166 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.972946522 seconds)
  done (took 7.103394863 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.234922281 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.075603059 seconds)
  done (took 9.475273669 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.522158588 seconds)
  done (took 2.687078643 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.360235654 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.552817928 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.202111225 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.140309876 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.206331659 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.617979214 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.690654711 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.303777742 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.124491306 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.165506093 seconds)
  done (took 25.530972261 seconds)
done (took 118.733861481 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.724432253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.610357504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432375381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.69889259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.451265559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432320644 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425563595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.666024687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.212684921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.198710613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.738935283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.452727366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.5827334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.611927889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.586293416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.232002905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.54068481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.763624322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.383551941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.619978736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.426735925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.335508422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.566595132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.353423728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.529079276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.383373464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.912297125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.232827653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.548970259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.927413423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.38439435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.788383547 seconds)
  done (took 181.921523677 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.238909458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.240403497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.228024076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.227119725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.227195145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.227989029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.228379128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.227267979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.240053183 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.227839055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.228355214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.227860501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.227695589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.237003596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.22793569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.228588244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.23338298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.22792476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.228009457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.227957319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.230353933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.227705324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.228807506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.228702009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.232138236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.24404751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.227828925 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.227558656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.228176498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.240972279 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.229911155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.250065118 seconds)
  done (took 200.572339116 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.229198828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.227782573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.242634625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.229326076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.232876629 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.229857914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.229922033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.228530477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.249045583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.233692084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.229005013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.228563317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.230636351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.228536008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.229004891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.230323149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.231281655 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.229054639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.242485706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.229612392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.230686068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.230488659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.232953862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.23062142 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.242431149 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.230293362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.229645773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.244361232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.231039929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.229292946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.231665538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.242546361 seconds)
  done (took 200.616900645 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.426997011 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.238297014 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.239116744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.17028304 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.239180875 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.238758439 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.237147313 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.43469633 seconds)
  done (took 13.394244352 seconds)
done (took 597.672237786 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.354354118 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.088395944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.43078982 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.258525649 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.907794191 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.261053132 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.260890812 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.410133545 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.120943471 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.412620647 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.398370142 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.257016905 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.53442816 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.256435421 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.490553892 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.346046898 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.083703355 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.196324863 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.548051771 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.685019144 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.502743253 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.643377938 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.411847041 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.123748417 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.537721491 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.646546252 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.847036785 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.08452094 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.257929224 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.551935809 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.755109195 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.087040368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.308176922 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.292460367 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.348267586 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.328192947 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.069234138 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.289818662 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.43535787 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.417615471 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.693188367 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.950901689 seconds)
  done (took 85.055538258 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.227586812 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.228476243 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.227492229 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.228988941 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.230573707 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.227866379 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.229131848 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.227894036 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.227316045 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.227151189 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.228694933 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.229581686 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.228124597 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.230580434 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.228355071 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.229213691 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.227846084 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.229509636 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.228153676 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.228727599 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.229403894 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.227796106 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.228002908 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.228610248 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.228729093 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.229072166 seconds)
  done (took 33.117703159 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.242565877 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.483435908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.625319724 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.248522994 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.242069441 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.246324063 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.310796961 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.243055507 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.245531256 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.24597994 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.388470407 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.245598789 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.276200585 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.648096699 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.244480796 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.244219211 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.243298416 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.242936513 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.493710901 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.251392923 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.329055391 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.243857769 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.31095676 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.252456841 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.262860756 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.24410429 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.248363301 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.759491186 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.244387273 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.388999282 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.92468371 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.310146446 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.719068381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.635630573 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.925692788 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.245301668 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.248312939 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.392866764 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.245827832 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.243966412 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.31144579 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.245364618 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.637469807 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.846814811 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.257294513 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.24395457 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.776355608 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.392709304 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.461775779 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.252503058 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.654869091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.246664808 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.246176369 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.245870458 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.462544825 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.251589259 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.244703107 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.756538829 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.262389506 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.313310719 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.245997039 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.245122863 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.50217847 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.245509216 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.487720502 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.24675266 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.25409329 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.246673806 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.639596964 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.247476941 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.876395888 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.257650446 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.245671729 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.389274933 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.488067796 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.808557727 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.24913358 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.504602982 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.733966813 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.312213404 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.24958577 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.749304692 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.315691182 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.25066533 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.249082443 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.249287699 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.247049362 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.30133044 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.312450174 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.792483514 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.864169473 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.768666078 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.328701288 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.259066865 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.247174506 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.75743506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.262420847 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.247319533 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.634742966 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.872444442 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.260315085 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.254743183 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.858987154 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.2625621 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.314914024 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.252498273 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.64709899 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.248302174 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.299711834 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.246655559 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.253941639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.251220524 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.316231146 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.251316226 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.248045819 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.848022324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.412018866 seconds)
  done (took 164.288996623 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.241067764 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.240159314 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.240424236 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.240562118 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.241983996 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.247832904 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.240833136 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.240731122 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.246387322 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.240441702 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.240509559 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.240545874 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.241529348 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.245098848 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.251775132 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.248672999 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.855917604 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.240710326 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.254406958 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.240660289 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.018673134 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.244008948 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.242758858 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.258270905 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.242264816 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.243085807 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.25043506 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.244115041 seconds)
  done (took 149.405065062 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.249563915 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.749051514 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.249341993 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.366160458 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.268070939 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.246179569 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.363543697 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.2996987 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.250739431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.247684044 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.247041901 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.515933385 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.250478241 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.703962094 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.416610965 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.364151663 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.702928214 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.250934751 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.247650848 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.246303354 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.366599127 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.255224772 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.517120678 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.752756561 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.252443178 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.756344044 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.240804696 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.25121396 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.248293208 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.758349855 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.249876228 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.518463789 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.317941501 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.301617986 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.759635123 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.707814586 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.707857334 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.376660375 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.249376412 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.248035232 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.249235683 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.238640382 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.758093513 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.253489272 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.251810881 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.75047006 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.26579391 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.252175709 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.258938084 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.249300589 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.302151292 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.302904252 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.524230023 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.764525661 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.31860603 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.271950685 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.367228464 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.620960484 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.25333477 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.712423962 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.239132182 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.762213555 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.255347669 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.239710641 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.252231875 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.255228824 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.382373688 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.366542913 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.710623387 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.254659037 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.71127579 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.382598739 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.250358039 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.251530149 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.253573936 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.765059724 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.712365483 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.382340571 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.370466207 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.422298366 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.241711845 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.251337455 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.239890785 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.319498526 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.251061942 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.76425527 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.71253155 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.253777533 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.253934579 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.253676401 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.253865574 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.408042961 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.767567094 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.321801203 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.703130647 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.539527783 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.525830773 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.25436853 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.304717814 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.252628648 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.52845337 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.256161778 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.302195562 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.683002577 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.52941339 seconds)
  done (took 148.616923803 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.476086707 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.352908106 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.334972081 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.356501573 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.810714914 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.800167499 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.424913726 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.377198914 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.350975751 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.480293852 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.328235219 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.346225169 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.403774195 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.319036445 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.942387739 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.313732912 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.339044813 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.368821885 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.33817529 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.218701443 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.846047458 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.519041102 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.406185505 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.087848759 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.339734439 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.967789698 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.769153283 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.816247278 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.416156095 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.463774992 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.78096397 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.316168259 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.171209 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.859674521 seconds)
  done (took 60.629573804 seconds)
done (took 642.285175347 seconds)
SAVING RESULT...
DONE!
