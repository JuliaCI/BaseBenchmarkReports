cset: moving following pidspec: 20533
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.16334235 seconds)
loading group "string"... done (took 0.508187049 seconds)
loading group "linalg"... done (took 9.653986322 seconds)
loading group "parallel"... done (took 0.165825116 seconds)
loading group "find"... done (took 2.475686412 seconds)
loading group "tuple"... done (took 2.223185398 seconds)
loading group "dates"... done (took 1.401096428 seconds)
loading group "micro"... done (took 0.467729881 seconds)
loading group "io"... done (took 0.556794291 seconds)
loading group "scalar"... done (took 53.418883295 seconds)
loading group "sparse"... done (took 13.840948181 seconds)
loading group "broadcast"... done (took 1.338250438 seconds)
loading group "union"... done (took 2.548455826 seconds)
loading group "simd"... done (took 3.556348148 seconds)
loading group "random"... done (took 13.266983392 seconds)
loading group "problem"... done (took 2.227804672 seconds)
loading group "array"... done (took 23.745874819 seconds)
loading group "misc"... done (took 1.077318386 seconds)
loading group "sort"... done (took 3.747755391 seconds)
loading group "collection"... done (took 20.568196019 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.772640097 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.165906484 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.251023822 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.25586314 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.302024378 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.209121832 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.202648364 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.21016452 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.703837355 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232179891 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.197821683 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408541609 seconds)
done (took 6.729508831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.335014018 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.145831032 seconds)
    (2/2) benchmarking "String"...
    done (took 0.213417409 seconds)
  done (took 1.01757807 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.148940546 seconds)
    (2/2) benchmarking "String"...
    done (took 0.158240568 seconds)
  done (took 0.960581288 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134806378 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164163521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150734043 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.133049464 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.149087972 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.132724128 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.149388886 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148584534 seconds)
  done (took 1.681933173 seconds)
done (took 4.782172917 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494807848 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.98711932 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.569133271 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.204868304 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.361910476 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.346697897 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.340725187 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.266037388 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.154698623 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102621088 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.229621577 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.49203927 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.426580793 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.002461943 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100285061 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.158188121 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.192674208 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.876815514 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.127308821 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156393571 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.536586585 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.23459054 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.164793444 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.138802002 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.24874806 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.237571903 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175009403 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.153026797 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.777616198 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.18201253 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.242146752 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.130289048 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.17360981 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.214051452 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.285516349 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160493603 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.780159104 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.249751186 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.128891825 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.147786162 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.779122086 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.170489651 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248944192 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.152090794 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.118438646 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194467173 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.147181512 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.124289926 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.161807559 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.147722203 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234542024 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.547006369 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.156888803 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235020618 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.158080287 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.785677994 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.15124105 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.341382999 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1863126 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.153878765 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.12657088 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.151576584 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.223477122 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.146202899 seconds)
  done (took 23.473800685 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.209296847 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.228566024 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.143941773 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.208235179 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.175913337 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.144364864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.135518895 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.143397186 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.162215752 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240297498 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.187253792 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.236673921 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.122185516 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.156978874 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.201853868 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.281216828 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.175724377 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.172089141 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.139507561 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.158794859 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.174591915 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.162546331 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.140046099 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.159034563 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.220929341 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.254421894 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.172380129 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.173161724 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.136632372 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.16051258 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189756645 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209136387 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.126671896 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151653701 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.220966339 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.170642511 seconds)
  done (took 7.126358832 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.268152536 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.151551906 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.27730556 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.238572419 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.194978263 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.226047686 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.229121259 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.320401863 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.250158264 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.544221605 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.212991413 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.179050398 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.146783606 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145276329 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.128787394 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.235462936 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.14451334 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.927116381 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.203480676 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208120107 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222807116 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.159742112 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.130112811 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.769521812 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.150968726 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.132134831 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159833821 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.097325333 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.253875623 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.161490073 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.533902129 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.130566749 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.164090307 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179245447 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.238400432 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.148456947 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.170922352 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.186803705 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.159006924 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.133769054 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.2577831 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.147293464 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.145527274 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.039935756 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.144612351 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12716636 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180992106 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.180631787 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.155111491 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151951886 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184374635 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.151051253 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154736177 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937759234 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.242635237 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.186418752 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.151172661 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327214696 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.152870266 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.164252556 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.15640143 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.242762101 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187373671 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.145683114 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.127633092 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158369575 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.127826231 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167756345 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.47471064 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.134231643 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160173844 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.165524592 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.753392322 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134925263 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.149119056 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.154370754 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.150105653 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127920557 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.151496205 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.126935568 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.153446526 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122988163 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15172994 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.127363305 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212961349 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.145453675 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.169486258 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172422678 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.136355648 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.151165742 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17572817 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130883119 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.15203891 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.225384228 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.142427478 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.150362282 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1394053 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158899227 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.178166277 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.151092504 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.270844426 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.13395125 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.170378343 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.1491476 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162100087 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1618262 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127644553 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15315637 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.143536068 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13022885 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.207571127 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.134827609 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.144401879 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.13749608 seconds)
  done (took 28.847546465 seconds)
done (took 60.100260648 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413983482 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.112236177 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110448394 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133267241 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112409689 seconds)
  done (took 1.616543043 seconds)
done (took 2.334399068 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.172062995 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.168529014 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.143620739 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.173317956 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.165695097 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.153557983 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16973816 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.146887782 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.167759742 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.142650709 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.152439002 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.163658519 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.145864744 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.17724566 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.140905315 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.165219798 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.169957286 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.150923404 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.163340141 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153718357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.169225169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.152377247 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171271758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.138348293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170000159 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153436879 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.17009813 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.152667659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.165061445 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.138890483 seconds)
  done (took 2.454100768 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.167465898 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153796761 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.168687733 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.144530197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168916502 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.139009672 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170863454 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153370481 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.170441805 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.153113756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.168259668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.138144865 seconds)
  done (took 2.450160896 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.153809081 seconds)
done (took 9.004834524 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.724992278 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.113447214 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.225124557 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.334144518 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.621819369 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.320197541 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.683138549 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.248804963 seconds)
  done (took 18.105364322 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.215435327 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.163246739 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.142970854 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.159167569 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144371255 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.163991569 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.141292251 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.15886737 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.141348797 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.158838195 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.14537885 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.156750902 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.139578314 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.1592808 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.141803681 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.160128384 seconds)
  done (took 3.271894483 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.168492624 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.184802748 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.146609842 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.167795195 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.143085782 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.164726047 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.147433588 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.165887985 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.144841624 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.162921656 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.165436653 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.148423028 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.16452328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.144739605 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.165631138 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.149844611 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.160692785 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.149666448 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.165931106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.148541994 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.165748066 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.146614541 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.164476739 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.148479555 seconds)
  done (took 4.582498717 seconds)
done (took 26.682990413 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.202239799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15249068 seconds)
  done (took 1.08893126 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.2045794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.222168441 seconds)
  done (took 1.167037399 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.163808068 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.157430064 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.171437508 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169666799 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141617934 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.158444898 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.182540637 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.143084914 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.157164912 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.142336891 seconds)
  done (took 2.333636097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.14878053 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.161645505 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.156603928 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.208882216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.165621611 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.144104137 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.163067824 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.14490204 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.163863999 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.141522287 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.16251984 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.157568309 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.163171095 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.160247934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.162428147 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.146935867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.167598668 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.161280094 seconds)
  done (took 3.626511208 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.142471764 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.141767152 seconds)
  done (took 1.02892791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145060657 seconds)
    (2/7) benchmarking "second"...
    done (took 0.156445142 seconds)
    (3/7) benchmarking "month"...
    done (took 0.144591944 seconds)
    (4/7) benchmarking "year"...
    done (took 0.159532017 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.141966011 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.157387271 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.141660148 seconds)
  done (took 1.794808734 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.637229236 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273378762 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.42675131 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124729375 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138951076 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.372042527 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156507623 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107577725 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126018425 seconds)
  done (took 3.139611303 seconds)
done (took 14.921890611 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.143613826 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22944012 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.656706061 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.164094627 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.160307628 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.202087834 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.36427839 seconds)
done (took 2.671473008 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.376983961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.187446344 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.123152782 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.14482883 seconds)
  done (took 1.581268433 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.133985763 seconds)
    (2/2) benchmarking "read"...
    done (took 0.167564479 seconds)
  done (took 1.059867683 seconds)
done (took 3.397681912 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.159190738 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.16043477 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.146220646 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.162571117 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.144112399 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.162544085 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.143741673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.159795076 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.145077545 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.159585439 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143255624 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.161947969 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.142282385 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.1634761 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141420798 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.161501579 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.144800098 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160098144 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141673489 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.161755471 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.14388109 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159832759 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.161604369 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.146363833 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.16154288 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144968243 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.160372924 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.144432389 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16220024 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.145771066 seconds)
  done (took 5.346568031 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.171423222 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.155219332 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.143922658 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.165658573 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.138428661 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.143030933 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.157255361 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.138216053 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.159939738 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.141154707 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.162755548 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.141066458 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.158202531 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.14261733 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.284231591 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.165321577 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.171102145 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138195746 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.157178099 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.143263974 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.162476954 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.137790304 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.162342819 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.14257488 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.160697722 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.138132452 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.159842766 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.140762278 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.159064914 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.142627709 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.160813632 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.143860213 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.160437414 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.152270591 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.162768489 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.141735773 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.166248948 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.138066809 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.161241293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.13888121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.155890526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.141297224 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.155744377 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.147765558 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.158810491 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.14385303 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.157226424 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.144218325 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.143175357 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.16368891 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.138512419 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.158564135 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.144465116 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.161586958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.143948868 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.1583412 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.14285303 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.157322326 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.143321902 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.160139519 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.139170385 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.159764062 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.147148137 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.160984034 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.157012281 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.165912164 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.139469969 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.163508306 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.142776352 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.166367456 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.144823989 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.171222038 seconds)
  done (took 11.853134035 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.143244184 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141588585 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161855662 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142043509 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161456078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.143905132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.161660613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142430484 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.16010693 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.143549504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161586555 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142070109 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.16060573 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143444872 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.161069219 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.14287017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.160450885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144212169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.15956019 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142919301 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160527427 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.143392629 seconds)
  done (took 4.097874158 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.287046115 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.149574771 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.21100109 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.17333171 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.161311828 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.17213564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.146706793 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.16854998 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147230682 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.170260922 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151715553 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.166261827 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.177602913 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151707978 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.170490061 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.153340634 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.166610595 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.153563549 seconds)
  done (took 3.854230355 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.14465344 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.141758702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.161806019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.143054672 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.162750778 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142069802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162545934 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143702456 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161178438 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.142969962 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160820459 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142368833 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.161358898 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143822537 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16209963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.143136103 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.161013481 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143556609 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159963513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143711272 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161759557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.144965717 seconds)
  done (took 4.114272142 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160039508 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.162709104 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.16356435 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165346092 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.145384135 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.162743139 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.150475664 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163237794 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.150902156 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.162928355 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.145037984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.162676882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.158634299 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163175794 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.151584775 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163712584 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146136245 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164885923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.146455792 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.163305682 seconds)
  done (took 3.936047091 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.235949077 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182200762 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.180164659 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170101155 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181154955 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.160979207 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187486484 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.161432382 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180183475 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191165246 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162277876 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180595424 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168515166 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.185386883 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160147609 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188248113 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188364403 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.167737437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.180993979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161640439 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.190211003 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180715083 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.170294158 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.179673504 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.162507514 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180613483 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.16089351 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.184106286 seconds)
  done (took 5.768611235 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.156405188 seconds)
    (2/2) benchmarking "in"...
    done (took 0.173718745 seconds)
  done (took 1.119094164 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.147745448 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.146325097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.166199749 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.145744989 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.166166041 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.146778792 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.166056306 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.146453323 seconds)
  done (took 2.016851838 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.209619807 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.232733439 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.172458017 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.158274095 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.233922335 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.222544225 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.227748098 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.152767271 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.166545396 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.138859483 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.229139543 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.157404688 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.145834057 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.163323586 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.146693507 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.17192611 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.146999994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.174052379 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.152221454 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.168805406 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150564183 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.171346245 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147656106 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.174420317 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.140137358 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.16928424 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.150653331 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.175805637 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.141689038 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.169071159 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.144786969 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.166482876 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.149001763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.171245097 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.147389793 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.232114433 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1742525 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142524647 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.168771678 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151485542 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.199463831 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.146273269 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.169056089 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.145560568 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.172591907 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.150155867 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.172272985 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.146147087 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.158922776 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.142469667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.166879622 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141142948 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.165973205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146450144 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.166856568 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.171410295 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.148565752 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.161862982 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.144195292 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.162513598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.146227601 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.162383711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150312706 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.169774434 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148586566 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.167841263 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146972447 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.166825371 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.147487434 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.170017292 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.147182532 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.205553799 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.148955765 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.172895162 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.150318404 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.168437654 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144193569 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.173664772 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.144869008 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.179239509 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.150397196 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.195226802 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167047461 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14494133 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.161839081 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.155117252 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.167487993 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.150497384 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.159024354 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.15644209 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.169457879 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.147931737 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.160084537 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.147216136 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.162976705 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.149378773 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.159625328 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.147617541 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.165729159 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.150595155 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171494681 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.14517378 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.169491165 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151828647 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174809365 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.146656217 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.214218213 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.164634595 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.144871871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.147273727 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17442975 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.141763237 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.169263292 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.145978463 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.164923427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.163523401 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.153848953 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.169013563 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.151287364 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.17036127 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.150640995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.169486451 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.150066735 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.166384125 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.146214816 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.170889122 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.155427388 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.169550147 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.151062672 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.169777656 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.149863814 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.167738519 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.152054699 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.165529311 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.154637149 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165210908 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.14730131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.167736434 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.152690674 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.169741896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.143536673 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.167508036 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.149574738 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.169364583 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.150831183 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.170223729 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.143491346 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.161554821 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.149014921 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.166382836 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.148271688 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.176846592 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.143144398 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.173279173 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.145286929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17817315 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.144615414 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.173506691 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.150771799 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.175033457 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153290886 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.161497992 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144451462 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.170864528 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.150430094 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.165985492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.148524104 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.17038347 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.154614717 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.163475075 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.150702095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.162546422 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.145035304 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.173976569 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.149464953 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.172920943 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.144549523 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.207422 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.189604363 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154020049 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.168609027 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.150135614 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.173604071 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.1483014 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.17315781 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154370795 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.174635723 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.147251251 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.169143026 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154333071 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.164929696 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.149901863 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169351713 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150993805 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.162985934 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.150380159 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.162737664 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.153476073 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.172024293 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.152715469 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.177051872 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151135383 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.168196722 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.157007125 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.16739759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.153010767 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.162721936 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.154924755 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.181943463 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.156371739 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.176028114 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.15211584 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167467363 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.149824077 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.177704589 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151150155 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.170434139 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.149833665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.164574346 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.143277855 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.177347916 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.151338652 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.166771918 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.149372755 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.171954478 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15086374 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.16878888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.142040707 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.174636748 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.152227836 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.16576681 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150100565 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.166668932 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.169043809 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15742288 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.162444329 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.146595071 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.173348438 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.154655554 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.168526956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.150548788 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.173419597 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.154617005 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.172725718 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.151659812 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16750615 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158739284 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.169552307 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.148853485 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.169195113 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.152748025 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.164185395 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.153605065 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.172092853 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.1471981 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.166868721 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.154222129 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.177540536 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.154796671 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.169920557 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.154500203 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.176392316 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.157123203 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.168457078 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.155350028 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.167190546 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.143838571 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.167416979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.142762164 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.172269837 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.145336045 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.176284725 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.147766657 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.16935856 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.154695521 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.173717045 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.147141004 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.176730098 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.182804671 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.145179348 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.164372079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148573538 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168992241 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.147439795 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.167254316 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.151776734 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171991074 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.155755693 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.173757821 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.14745461 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.170617611 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.155356589 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.167518032 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.156178191 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.178446823 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.156023568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.168661247 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.154347715 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.168225923 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.153568191 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.165382839 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.149757959 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.170894749 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.149391729 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.169043698 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.148614893 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.167857246 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.144122978 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.168367247 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.155914614 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.170183922 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.154023648 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.171695356 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.147692823 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.168960734 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145162748 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.178500373 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.149023981 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.179223564 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.151415543 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.165604639 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.143673429 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.176813278 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149961652 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.17703459 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.145368615 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.175515967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.156245782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.175517803 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.150166336 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.180462995 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157818773 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.177163871 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.156808442 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.166125716 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.148844981 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.178162515 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.171213375 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.15308643 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.151807731 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.167572364 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.172434216 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.156255794 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.172305929 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.150791739 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.164802322 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.152258084 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.177204996 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.155062394 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.17412271 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.153389338 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172229199 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.148050827 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177203358 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.156807559 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.172342672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.157568411 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.172203595 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.154919271 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.168832594 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.156133672 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.172566805 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.147147451 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.165086354 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.149280754 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.17795401 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.145165318 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.176872599 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.156673478 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.168769193 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.150601613 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.176040845 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.149371051 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174601987 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.156869001 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.170370682 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.160422149 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.172995408 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.149700582 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.177167787 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.155950006 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.165300576 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.151794606 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.170928447 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158630017 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.171954178 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.156681767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.172482172 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.156155778 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.176225928 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.15671601 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.177676814 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.157112903 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.167925769 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.158441186 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.177435252 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.154876129 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.170461412 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.15062163 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.168655452 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.152256201 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.179910852 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.149279874 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.182171561 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.154880834 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.171924964 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.149344691 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.178524575 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150693653 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.180553856 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.149069948 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.174649359 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.146041299 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.177950109 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.150166675 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.179723594 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.14904507 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.169978239 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15620313 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.179909089 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.156420646 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.177487139 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.156723421 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.168386017 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.145740574 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.176348307 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.148681341 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.182423729 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.17546899 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.151366747 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.172113754 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.154788999 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.173684067 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.159080178 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.167220103 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.150922538 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.173627479 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.154232773 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.172627296 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.147816236 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.17745399 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.15359966 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174626674 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.152495572 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.168792746 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.15314742 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.17995989 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.151606011 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.169466496 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.150661852 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.181129541 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.152444241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.171521694 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.147284668 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.179265369 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.155669654 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.180025082 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.149401121 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.175202615 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.150400158 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.176829469 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.158362027 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.171717923 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.154738643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.173078437 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.158326168 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.181210692 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.1441867 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.174252178 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.183084539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158838128 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.175499919 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.156458074 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.172652387 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159865137 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180964009 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.156563245 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.167698421 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.149618158 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.172374793 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.148493383 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.177306669 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159633626 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.173370956 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.151907793 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.179346736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.156609485 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.17668039 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.155914464 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.167911332 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.160879156 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.170985679 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.156859906 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.167287686 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.147244181 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.176350826 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.16037392 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.173831401 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.154115556 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.174811458 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.155894066 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.169801815 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.152386876 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.178224492 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.15709111 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.178822529 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.153393564 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.173117266 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.156704725 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.182758514 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.155014075 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.17405773 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.161314179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.181058835 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.154001873 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.175286171 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.15743117 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.18179409 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.157049104 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.181128127 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.151610178 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.175158089 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.159985838 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.184118528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.16135383 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.174965081 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.147585336 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.180810676 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.151775537 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.169846774 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.158100165 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.18346858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.159752871 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.176592097 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.151219621 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.18529689 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.178799648 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.155558128 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.17270796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.1523699 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.179162015 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.152994584 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.17943264 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.151734325 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.181813727 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.161174769 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.18140587 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.162753375 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.170102667 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.161023102 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.177524355 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.161857848 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.176982531 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.149172368 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.171279666 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.157357871 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.182477078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.161882887 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.180032435 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.158357944 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.179157254 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.15647648 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.176597562 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.15327704 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.182017681 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.160719698 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.176176532 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.15744635 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.177018891 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158551784 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.177992324 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.160279436 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.182028762 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.157167257 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.185031169 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.159375903 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.175520651 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.15251213 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.179250793 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.157368082 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.177662266 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.160731223 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.174571129 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.149249687 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.182689009 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.162208548 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.176471563 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.161634702 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.183712189 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.1530423 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.179482208 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.161534497 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.181447418 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.156083565 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.180409871 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.156576212 seconds)
  done (took 98.156537466 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.203506305 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.186733069 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157188274 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.178861732 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174082711 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182549599 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.157185446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.180444025 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.15798917 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.188474991 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158286707 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.180486382 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.170134856 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.201318129 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196798862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.167547702 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.179286708 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.157855026 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.179294557 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.158310556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.193367484 seconds)
  done (took 4.597482392 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.160329344 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.156078998 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.17992673 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156030975 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181014204 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.157398171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.179292337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156944706 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.179186759 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156139312 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.178804068 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157113003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.17806347 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.157981757 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179226948 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158090575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.177592134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157592528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.17861221 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158597651 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.177941648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.159598341 seconds)
  done (took 4.569660693 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.186272971 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.183126875 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.156191824 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.156457192 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.18489629 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.156960918 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.184385238 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157205016 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.188200004 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.150969605 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.171859329 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.15140802 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.178019877 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.157328282 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.175917004 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.157003505 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.187462166 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.161806411 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.18556497 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15841243 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.171596282 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.158689093 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.182136964 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.149535992 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.187257501 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.162329843 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.183916542 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.161679029 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.170883068 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.163143424 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.180546562 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.154160193 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.17137232 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.149767188 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.171120191 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.162441197 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.183334868 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.160602353 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.181403067 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.152003999 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.159288754 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.186077539 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.149187692 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.181712526 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.157611032 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.175908079 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.160799662 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.181191653 seconds)
  done (took 8.99284712 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.185850838 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.217694875 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.160691264 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.212598213 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.195687388 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.168134795 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.184542367 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188211705 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.186139667 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.161779916 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.196113274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.195541689 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.165459586 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.186530413 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.165146758 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.184234321 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.165153928 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.183932091 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.165245533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.18408067 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.167066939 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.18602736 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.170189699 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.194085883 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.186955447 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.163110907 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.183414913 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.165809184 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.194151017 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.167331139 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.188539219 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.168168841 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.195385675 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.164044111 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.187592972 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.185092025 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.174996092 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.184463568 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164366293 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.182307461 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.163603751 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.187553113 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.164590208 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.197396044 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.162794017 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.186978444 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.162456189 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.184041508 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.193832665 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.165380558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.189744847 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.172840753 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.187085296 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.164841859 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.188577447 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.17018186 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.187105608 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.162813543 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.189671335 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.194033685 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.163300558 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1871804 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.173011376 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.185825492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.167988101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.194799839 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.164014516 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18829994 seconds)
  done (took 13.212262413 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193984297 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.190217254 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.173547323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.195852149 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165712433 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.189881709 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.166885675 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.190658623 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190479467 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.171346974 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189430509 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.29663621 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.17062996 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.195036927 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.168682971 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.191898009 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165954101 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.444429325 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.167010751 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190042515 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.189647498 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.176439688 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.18961411 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.173906606 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.200122806 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.163903803 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.189829911 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189328765 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175182597 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.190540094 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.178999231 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.190031941 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.166362745 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.196739961 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.198899163 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.167576815 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185373618 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.167804261 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.191103127 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.168741593 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.186916997 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174910762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.189992303 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.165020519 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190119185 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.165823644 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.199284113 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.201302213 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.172503218 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194166427 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.166738363 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197028345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.189704396 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.168227673 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.197726331 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.179603069 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196724912 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.195459428 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167901732 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.199006328 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175562266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.204483082 seconds)
  done (took 12.64954662 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163633367 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1614389 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.186497612 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162015047 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.187215785 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.163372256 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.186063882 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.16246245 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.186200016 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16460335 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.186351308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163004207 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.185642506 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163294449 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.186919112 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.163839596 seconds)
  done (took 3.693257964 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.181855743 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.202532534 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.268534672 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.1664763 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.187328783 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.170032863 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.187008826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.165803615 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.18492233 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.16871713 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.189886212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.165686541 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.20246603 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.164683181 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.187083921 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.165595001 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.185615274 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.167180334 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.186954567 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.267390082 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.166708065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.188994797 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.164360722 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.191758428 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.164145175 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.190522163 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.16875271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.187157398 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.166527969 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.191276816 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.165120783 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.193222503 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.163315337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.19149218 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.164617192 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.187636427 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.163769296 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.188260404 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.165639799 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.187991796 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.165427107 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.18872013 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.16430563 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.191563955 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.162512069 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.190637605 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.162532488 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.192886817 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.166161513 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.1895772 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.163963314 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.195045785 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.167589346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.195258695 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.171900076 seconds)
  done (took 10.911874435 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176790008 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.192542978 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.176548147 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.189055289 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.165283924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.191285439 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.164410483 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.18939752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.166096029 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.18627063 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.165938595 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.19013033 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165670729 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.190147305 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.166578181 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.189643325 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.162044263 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1895246 seconds)
  done (took 4.151283671 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162755991 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.161307555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.186954999 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.163604131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.187395204 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162659998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.188068297 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.162111792 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.188424983 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162811207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.185837392 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.163134213 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.187541097 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.163380563 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.186340432 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163132925 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.18559266 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16477723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.185687499 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.163722931 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.186053728 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.164028621 seconds)
  done (took 4.758022288 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.174231591 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.2655104 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.192349708 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.275130246 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.160074311 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.184389415 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.169358429 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.185120447 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.176238488 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.183807718 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.159784285 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.183833578 seconds)
  done (took 3.250291059 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192170189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.225613146 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.16601696 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189436249 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172461122 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19486494 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170909307 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193378956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174649567 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203690876 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19385516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175657866 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199782355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175732106 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196922224 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197872534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170752678 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192722953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165036804 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207080884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169434583 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200523107 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170643543 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193109682 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192420627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177095528 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201280373 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179259808 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193804949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177016055 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196521323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192775269 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17703875 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204367093 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165584106 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199357081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168635924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.206565274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198063298 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177784767 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.189692351 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173786261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201349377 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173520188 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201481911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194474322 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175049188 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194575801 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169524573 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.214036706 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196667859 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177397871 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198332755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176623187 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200899669 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.212658667 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182726241 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201193602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172772963 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204902263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202206235 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173995053 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.20133844 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180096678 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19795331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201578207 seconds)
  done (took 13.409901881 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203279137 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.191028482 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171233258 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205174378 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177809783 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19611934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194703313 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172330613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192829783 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16951554 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.235948963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169601779 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202368535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201057125 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170258567 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195758402 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170745359 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201978109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166722302 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.214764481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195338293 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179323282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201176542 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177819618 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.205815327 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197547973 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17219017 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195809489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171449099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19506565 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175238225 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195708776 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177411137 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.193008928 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176563564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195860484 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194941415 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175205799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197355984 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173772465 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202053771 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183193142 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196559424 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195585373 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182232893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196740414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170160802 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192622209 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171428051 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19294295 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182587546 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.207393054 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207292339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178904667 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195632036 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171680568 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195227544 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171059333 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196323195 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199859923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179435019 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197761299 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190621262 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197346089 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172615265 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204579812 seconds)
  done (took 13.430930819 seconds)
done (took 238.644692691 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.243384539 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.284069543 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.324305232 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.248381795 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.238316242 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.202551145 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.212679053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.164947012 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.182829648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.161429345 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.253475311 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.161635907 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.286482885 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.161327913 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.333678978 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.160107591 seconds)
  done (took 4.568298684 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.258153748 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.395700405 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.201167111 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.187551667 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.165849912 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.187540903 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.172646561 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.186922653 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.163247275 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.192038613 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.162485579 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.183396078 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.169826659 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.183784776 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.162382098 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.187490415 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.168502841 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.188433515 seconds)
  done (took 4.484896762 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.182008532 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.233849761 seconds)
  done (took 1.382877539 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193256815 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.285216194 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.392067264 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.237589263 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.183636041 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.205169048 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.236969398 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.174727896 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.277957472 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.201103846 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.175342535 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.187199773 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.190043645 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.195528032 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.17837712 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.18725304 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.213504053 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.178506761 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.200490427 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.166308698 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.214474928 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.169280815 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.194157501 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178282838 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.270077606 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.200214483 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.167607613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.193523769 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.164931597 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.202750838 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.169826202 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.206195895 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.201111569 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.251869426 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.167813357 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.243503447 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.195746751 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.165764063 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.201338567 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.164631017 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.190730051 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.165413141 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.202162354 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.160548211 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.193317805 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.171886965 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.193295056 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.192341471 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.172427843 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.197801924 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.170668348 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.196691727 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.242687062 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.171707078 seconds)
  done (took 11.767135378 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.014007513 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.217444293 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.210999074 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.062527857 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.209623389 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170566617 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.994984625 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.190592041 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.286121613 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.028867255 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.205212858 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16469251 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233223082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.280290651 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.255573708 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306681867 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.877558544 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.203841404 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.222909727 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.190653824 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.20378636 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191578914 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.202993798 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.478338246 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.19044238 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.171278309 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.191167215 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.16411866 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243955397 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.209568731 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.169373913 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226514899 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.312214707 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180424409 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188878895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.167717233 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.187757009 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182344192 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282586338 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185515845 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.232364178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160463797 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.189363068 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.16773076 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.208328752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.160157356 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.203166705 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.20941526 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1914858 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.203215738 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.174015667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.188882006 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168339312 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.202552699 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.165742499 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330623015 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309289197 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.206305581 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.171455609 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.204260523 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253562416 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.174127687 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206840212 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.184128053 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281949094 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.207968916 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772596983 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.206687642 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.168520867 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.194862389 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.162147998 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188442702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169171742 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.24500475 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.482401927 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167907706 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.191657235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169486802 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233663075 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.165454444 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.194002591 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196689788 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.193131432 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.172542997 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.19388498 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169941228 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.219071592 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267002388 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.193029453 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.168130862 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.207528615 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.175670628 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.193340973 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.298515463 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176865448 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.200722482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.25218961 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167497674 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.20688898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.197399038 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.199572507 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184061353 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195066545 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.173974566 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191210934 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171613881 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.207531725 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187052101 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.19906095 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164502526 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.209943499 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.174019722 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.19065615 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182143143 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.504199849 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.222967402 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.163913824 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.205675524 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166127544 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.250886399 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167090261 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.351005729 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166847691 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.212568454 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.182765289 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.188002419 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.174784097 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.202966581 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.173187378 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.195022164 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165633007 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193245324 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277100613 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225460428 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.175144321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242103117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.241505352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.171262713 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.216637514 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165421876 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.218203179 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.185892067 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.200104827 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167929869 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797227376 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.173458879 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.19671028 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164367798 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.251794945 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.170258637 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.218133938 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174676485 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.190851335 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.871057881 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.173840796 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.198722981 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.170823229 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.191847758 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.169828328 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.208380972 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.171758445 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206732564 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219985526 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.173471844 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190915105 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.167965586 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.252093365 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.192778802 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.186134195 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.201131816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.169642846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.195736633 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.169877422 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.196835835 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187724195 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.203413153 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198494361 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.60210135 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166820841 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.199861563 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194891854 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19352267 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274191672 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198353838 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229319466 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191755529 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192196201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311691852 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.21410659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.224941271 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.199549412 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191103856 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192051279 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.182611195 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.211029925 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166232625 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.19648015 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177445568 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.197484753 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166987298 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.234590921 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.210093426 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256501702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.190060364 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185796348 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.194500034 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173275039 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307924083 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.167284762 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.20141211 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179730919 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.209710274 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.178660948 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.982154076 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.172491308 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200248382 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.166296815 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206366321 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18541236 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.212107742 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.17483989 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.195846638 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.211636138 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231834459 seconds)
  done (took 57.874109474 seconds)
done (took 81.037314829 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327962874 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.233450165 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.42930841 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242024305 seconds)
  done (took 2.296539259 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.350639403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.20833497 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.308634536 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.190162079 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.31545899 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.165663516 seconds)
  done (took 2.552964846 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235500769 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.23590083 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2351378 seconds)
  done (took 1.724891715 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.277690491 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279245747 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418263504 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.331187656 seconds)
  done (took 2.386250552 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.342968831 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.181810727 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.224728305 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.293049336 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.310318735 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.275570447 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.188929229 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.242512658 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.222040536 seconds)
  done (took 3.332879892 seconds)
done (took 13.307944664 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.209614318 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.227619806 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.188441194 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.206831713 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.201265295 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.230438663 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.195988008 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.224899586 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.194207091 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.208009169 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.218129179 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.17958259 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.285998087 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.198638958 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.20479052 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.192901749 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.204748252 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.230434427 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.201632462 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.202836604 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.201293451 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.203305224 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.179008301 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.213689877 seconds)
  done (took 6.014952852 seconds)
done (took 7.037517402 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.271881557 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.183689294 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.174277187 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.203452464 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.283010757 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.184819333 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.221385331 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.17627868 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.213749798 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.175600676 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.192857405 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.189304601 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.202410667 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.275578464 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.179431199 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.193898957 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.167510772 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.214871077 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.191101873 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.21981981 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.283627204 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.169479632 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.2145568 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.167817221 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.284472512 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.198182649 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.176583119 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.203363561 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.190568343 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.20383228 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.176721026 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.193190355 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.19352381 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.218531457 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168134737 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.202321736 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167973288 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137221964 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.204373404 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.178066305 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.217303765 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.177248726 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.204765642 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.193298613 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.179016607 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.202142008 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168740484 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.205655376 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.168362906 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.204404092 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.172729441 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.218872075 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.17809684 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.193404777 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.16691933 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.194556797 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.187500158 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195209281 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.191321199 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.195378374 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.169536855 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196504146 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.179507752 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195810687 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.177795066 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.194589369 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.178794324 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.206707871 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.17767947 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.197577197 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169392329 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.204900411 seconds)
done (took 15.141882632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.17221937 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.238464238 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.277634637 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.256763809 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.224538098 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.210639194 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.182387576 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.22000835 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.180211993 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.212950341 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.202053334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.227044489 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.290297269 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.182900362 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.212963018 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.179469818 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.229150325 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.175503938 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.284807628 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.220287068 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.218070525 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.186994304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.220170588 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.185884782 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.19850868 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.203003919 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.203526234 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.180769909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.199257237 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.179097202 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.219171059 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.172424939 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.204427077 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.21685578 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.191319454 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.208723096 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.184038932 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.208225684 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.173270738 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.197461153 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.17840133 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.21809824 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.171728817 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.211749411 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.180033532 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.217288135 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.179232904 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.213497754 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.17238373 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.206881069 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.173646006 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.222868639 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.212242485 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.187865486 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.212119348 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.185091645 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.212450426 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.189623953 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.204012496 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.185494534 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.206626245 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.172996176 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.203320587 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.19243376 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.203941994 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.184447948 seconds)
  done (took 14.460574656 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.191960942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.231502457 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.18285281 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.211612191 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.177268309 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.195905342 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.165958944 seconds)
  done (took 2.416604837 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.168744309 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.294268887 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.291669986 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.292993154 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.28760404 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.30046541 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192912728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.197404334 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.205260151 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.208087106 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.295715081 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.326216427 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.178580309 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.21232732 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.295875556 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.168314023 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.293340803 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.273944542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212024359 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.292825808 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.186823828 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.230802496 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.182833565 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.197533553 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.286681384 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.170827284 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.343185496 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216245102 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.180583837 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.21103798 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185506549 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.276448439 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.289975107 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.182709367 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.207023948 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.291137144 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.288559544 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.183984139 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.301714524 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.202794033 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.288006385 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.184517971 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.214287676 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.186927017 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.213791158 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.277859485 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.190668771 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.213765026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.186038859 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.300563084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.207871409 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.262136391 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.212997777 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.182933789 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.209694337 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211544695 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.194795357 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211702566 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270753981 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.218543499 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.291661983 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.292899029 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.289660384 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.292504776 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.195173526 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.29415138 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.282565415 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.183331872 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.288020614 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.216680044 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.293922643 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.183674301 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.211338061 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.282598943 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189607697 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.297089987 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.297209648 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209293732 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.185715603 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.200187273 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.184055465 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.19607316 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.266525625 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.21543149 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18210703 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216811159 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211755907 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.186456609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.287194618 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.221750869 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.185670308 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.210898455 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.190547195 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.215526664 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185744607 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.292890459 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.213734748 seconds)
  done (took 23.747699583 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.17456563 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.171811231 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.206870437 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.198439437 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.174731155 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.198320106 seconds)
  done (took 2.213545647 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.209782852 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.213710481 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.195596504 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.214099474 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.234607626 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.298455019 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.304135028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.21230387 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.204170285 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.225200737 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.30376048 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.306742093 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.302870683 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.190249275 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.308053688 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.217152657 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.307624128 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.186207982 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.222727795 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185144411 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.212188282 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.190931653 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.211840495 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.293205584 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.187663765 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.216524543 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.177927931 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.224556387 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.192702775 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.211670628 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.188738796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.215343121 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.176551056 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.208709652 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.308036669 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.20515678 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.18397268 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.216990285 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.190863727 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.213725671 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.305557724 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.186327694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.220001648 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.190671437 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.211371097 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.179444804 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.217761363 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.178709848 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.305600542 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.220628549 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1892626 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.21712021 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.187064968 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.219482895 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.179160856 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210536499 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.216293488 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.278483497 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.222911224 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.207916984 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.18958257 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.216205297 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.182012156 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.218348459 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.186938659 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.218606269 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.179628563 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.219947524 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.184631422 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.217322157 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.188648665 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.215466047 seconds)
  done (took 16.917601278 seconds)
done (took 60.793754939 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.651915875 seconds)
  done (took 2.742252805 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.036004282 seconds)
  done (took 2.129189564 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.465694732 seconds)
  done (took 19.592121995 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491690174 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.420631286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.102253987 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244395152 seconds)
  done (took 3.352177098 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.15908104 seconds)
  done (took 2.264166403 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.487235994 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.355116006 seconds)
  done (took 1.939080951 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.827453158 seconds)
  done (took 1.941752299 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.81828137 seconds)
  done (took 2.918522174 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36393532 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.289193228 seconds)
  done (took 1.762486858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.696039841 seconds)
  done (took 1.811981957 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.453807588 seconds)
  done (took 14.568864879 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.326101192 seconds)
  done (took 1.441254755 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359476911 seconds)
  done (took 1.476727429 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.767468952 seconds)
  done (took 4.888837899 seconds)
done (took 63.934211372 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.188576354 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.216174606 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.191179955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.215124692 seconds)
  done (took 1.913178029 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.192029002 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.213261856 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.193482623 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.213999839 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.193252177 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.214181643 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.187695242 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.217145016 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186582687 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.219143324 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.188573892 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.213605363 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.190034686 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.213846483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.185618461 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.218571151 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.19079626 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.217149062 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.18805494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.217465951 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.187746856 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.216729399 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.190558378 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.220113748 seconds)
  done (took 5.982124009 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.183718096 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.20242308 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.18128058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.203388597 seconds)
  done (took 1.894173738 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.201198495 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.230886787 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.201742396 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.225436394 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.202533917 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228402881 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.185659293 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.214159919 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.186699738 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.229700707 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.202568593 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.232546464 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.22903939 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.194563325 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.227085669 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183647792 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.219255864 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.202728608 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.22509889 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.199506291 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.219819694 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.197697516 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.216759878 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.199485932 seconds)
  done (took 6.176106511 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263466616 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.229926182 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.217311873 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.249022592 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.212568615 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.217365017 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.263260411 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.193981658 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.222702407 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.192046089 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.217125055 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.187022639 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.264353399 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.222076821 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.192238073 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.219018744 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.196173138 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.222359484 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.227406167 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.222891533 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.201206462 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.229373922 seconds)
  done (took 5.994784677 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.277561356 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.211228191 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175608232 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.206683545 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.218815918 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.183782719 seconds)
  done (took 2.408310179 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.17940151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.172675968 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.203640828 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.17250656 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.20682284 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.173330159 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.203121333 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173211817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.203645356 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173586379 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.203323982 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.172655306 seconds)
  done (took 3.375179764 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310723595 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223463904 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.354493974 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.466814494 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264115538 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26165973 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.380605446 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231402165 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.280551597 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236816399 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281920193 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232890303 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256450236 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308323759 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213728321 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.248597058 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270635484 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305025542 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242866671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.336853746 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258643045 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275333461 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261596227 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250635037 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238140571 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234042605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.220587584 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197753764 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266112059 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267354295 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274394803 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223943315 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243844149 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288222119 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312534775 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273722512 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.358611423 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233143109 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.232657023 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.291539075 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330612091 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242627856 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291902061 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221899949 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230450833 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316535831 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248193901 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.256711857 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.235904383 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243891901 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249795285 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278967046 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.270267593 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23640565 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399695146 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204549888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.242619772 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281085184 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288774061 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273268091 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282990247 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.224954899 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272892829 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292056055 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313613939 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.212346629 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.264219168 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193992623 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266819049 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310479445 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285480201 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260635143 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.280906449 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201204418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2739358 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266626311 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223192136 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307679431 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274391863 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.18930505 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250721183 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235418766 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195955394 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.291338655 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191823185 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318468505 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234727819 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272799616 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2485657 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254761556 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262599824 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259330608 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23463114 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24933532 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158517877 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246360357 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.228185321 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255911658 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228957778 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221364604 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24116916 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.223827917 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22222251 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.224080989 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240881311 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.223990582 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257704948 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240683285 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.235314018 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282489962 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2173103 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.266507514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270273268 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29557147 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200408188 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235834186 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323658519 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268185889 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.209011726 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274904267 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.301638457 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.208006955 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236444648 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263773848 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293173987 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21518207 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303268713 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238805524 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205500438 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.225360923 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27449019 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230751565 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.261203796 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226733151 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.23707838 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289448205 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.228260478 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20909681 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285184537 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232398972 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194926901 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236426407 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204961147 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.244923224 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.252827559 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.208545533 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256372675 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266068253 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239313284 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256992739 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235759399 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24091621 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23346499 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.2736345 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219655894 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.22234703 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.274898701 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298716422 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201555057 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28525494 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260384113 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281046753 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244576738 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23322413 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.286079895 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197715275 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.222625122 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229772585 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.272536947 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264598046 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.291817446 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275358399 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.267008217 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.234475507 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249412011 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269811749 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.28482768 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226588058 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.244299297 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274742738 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237678661 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.223696197 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.191799129 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.231256369 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237303088 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200884841 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237472698 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278465736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233775327 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278837347 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271553755 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240602891 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263298212 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.228515215 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262016388 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.279402941 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211021104 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.292202606 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292671548 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281414503 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212469412 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264295692 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.191804533 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230621885 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234756019 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232394671 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241061724 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2047226 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243948368 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.296794855 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272459882 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217894408 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290787491 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266003342 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30667687 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.224530253 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.235010062 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269108006 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2698982 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.260349739 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235444265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.228897786 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.297665641 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244990949 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297459984 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27045924 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252210188 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295844888 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.270837882 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201778511 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246495155 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269011411 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207645145 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265042461 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244762671 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200682335 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251012709 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.209336607 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243740095 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288009523 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247043896 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245096749 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.260558733 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271305791 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196598593 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243924202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278534693 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246227743 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.165002215 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267057543 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26026295 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252205358 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254648005 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270573466 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203381309 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.455371351 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28667056 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272782211 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208536317 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242140937 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244402897 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.26108291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262241379 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.288475372 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211266023 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309927181 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276748918 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.241031009 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202816922 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249283737 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220512701 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.22830816 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.256189824 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.234338773 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.247046068 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289929956 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207309099 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274031779 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284817642 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.248330408 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.222355067 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241557714 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328966884 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23922032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275384435 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.271186619 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.267695958 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255315094 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228325434 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197259478 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.236462795 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.290304802 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200463251 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283553535 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.265856456 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283520685 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279912882 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233601448 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247610149 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.232659454 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240194497 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254351468 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285069616 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23875088 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.209937462 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290400612 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.184761138 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236967581 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265069425 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388816172 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220410453 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271876991 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.164606947 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.390087528 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233959149 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204721937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262945109 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273148102 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.204086824 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.292112136 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27815514 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213868536 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265784284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206464864 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.281792197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283222231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270487573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27831984 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.216433966 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26698555 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259858656 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274377931 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217753611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.251175432 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230459037 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299108779 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.279400472 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.236713211 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241983181 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27745984 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276086523 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274559804 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212550578 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291586302 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199815885 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26751978 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243250368 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196207836 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264498427 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.269679671 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233672144 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245447283 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277092403 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234566911 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201790727 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250815921 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23826386 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244404527 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.23498931 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287849277 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.203219059 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288412142 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313869162 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201296024 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272504534 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245615926 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204325695 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242564806 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215597942 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237163322 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.25020468 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2785735 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.235590026 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244801495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267904457 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26868311 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258051857 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215980595 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.376596931 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.199836381 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295697158 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256188698 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325136967 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221929523 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285960917 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277967182 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252122731 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236890811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251359094 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.326091368 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235571782 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.274313048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23802757 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215237835 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243248427 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.206103308 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25773117 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275526474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212211972 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.241863001 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.27314113 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217620276 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.250967869 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24512454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274843687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258327193 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29210014 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.293572934 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211486236 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281698753 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279605299 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201740342 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.269527426 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277346535 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216765279 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257595181 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.239730738 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.210055187 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320810215 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.234014502 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23313103 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28089285 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276952309 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278089789 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.209651758 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286263537 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245442194 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25158601 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233664135 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.222419539 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277491903 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241305565 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.200781412 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27948041 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263646219 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.239217719 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.249408665 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.254655433 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297678076 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.230764965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20605825 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395630982 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26535672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303052701 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.193428599 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245256209 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217936911 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265623373 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.272810164 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275928665 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.205873485 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236160491 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.218998823 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.254006418 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.198584242 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27736429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293771577 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261383841 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260723036 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.242695621 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.361947098 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217264724 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278646398 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.176580197 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.236304796 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214064883 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241730021 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245142136 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28525607 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289651245 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.27151811 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.253876655 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208577408 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.235836965 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203391059 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267678144 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256861839 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243220601 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25375488 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.163934505 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249701416 seconds)
  done (took 123.280664911 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253323236 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.245687223 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.266977711 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.31613324 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292707312 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.384909538 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.329944331 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.341945313 seconds)
  done (took 3.69191054 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196101289 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.264067612 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.247367227 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.22262733 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.187606088 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.550721554 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.242210609 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.193742315 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.273867648 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.232387608 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.217792749 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.657485062 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.2251183 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.193539307 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.227092053 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.215716154 seconds)
  done (took 5.596901672 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.27078093 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.643734371 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.256968284 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.375189966 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.344467708 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.293221885 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.913862135 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.274499327 seconds)
  done (took 13.634433883 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.24990434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.285276974 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462527028 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.385623145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.298002305 seconds)
  done (took 2.950238054 seconds)
done (took 178.001162908 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.200522443 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.230817029 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.202021339 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.23319445 seconds)
  done (took 2.11725823 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.245861938 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.160422284 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.195844267 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152782829 seconds)
  done (took 2.016703441 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.477878945 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153184066 seconds)
  done (took 1.922312761 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222053235 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.245011495 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.212797023 seconds)
  done (took 1.957401554 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.21287361 seconds)
  done (took 1.485700944 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.19678006 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.225599854 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.290376809 seconds)
  done (took 1.985583192 seconds)
done (took 12.755583061 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.221096682 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.055349532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.660984221 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.210498108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.831093709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.507689494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.501964829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259157374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.314524567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188041375 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.254084575 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.768369733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.517726369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.957292205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.502782659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95705227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.804358374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187826059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227632707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189470813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.51518585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186414556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222247372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188104422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.80277755 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.494587907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.220395197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.001023209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188413268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230223428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.477755052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219593377 seconds)
  done (took 24.120974692 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.190571039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.278019442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240991874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.223776161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195593698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.223936045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197478313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23357282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.325768686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188156164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245145063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.187919084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228832828 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.187309849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.246256093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187052243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.224643154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18818918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.230008097 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188997171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.243865169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.218121777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.19080958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.220627362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1891186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.238809035 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.189069802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.231664563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18822802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230944323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192786699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.222606009 seconds)
  done (took 8.241954976 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.232871151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.288888293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242154097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.262893298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.276835882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.191807005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.31178349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259498653 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.299562571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.223829605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.210302383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.22330088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.261211477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.190493752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.245437571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.189369078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.223823273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.189863349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.230406424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191546248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.244593826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.188222618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.225750424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.189095382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.222945019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.209302131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.221902541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.230773776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.190920771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229330448 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.195746194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.220147347 seconds)
  done (took 8.599015863 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.204582532 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.236515592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.213784893 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.245554515 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.199479784 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.234451271 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.206295232 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.231069443 seconds)
  done (took 3.052389619 seconds)
done (took 45.293725429 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.214196065 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.23791501 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.212035821 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.236621226 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.279443614 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.232152172 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.208182629 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.7563517 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.206464538 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.245645877 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.187398368 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.23103129 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.209025702 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.233250687 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.317301703 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.206285341 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.322357021 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.31896735 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.196722078 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.240264282 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.196985575 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.321503648 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.239483427 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.198312587 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.296198108 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.194087079 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.309265618 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.235897267 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.200476893 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.224036215 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.319244376 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.201429755 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.231521366 seconds)
  done (took 9.732851284 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.296644889 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.23500419 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.196444072 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.233331039 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.198434985 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.232371297 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.33680516 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.198243315 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.23243752 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.198312516 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.232276328 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.284290393 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.239979774 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.192425651 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.236221051 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.17380627 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.338131481 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.232301742 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.191290953 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157661564 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.2292865 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.197388025 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.348883127 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.228101302 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.200102217 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.231313618 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.200391318 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.235076586 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.201826112 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199520917 seconds)
  done (took 8.202209537 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205950769 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.243888675 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.219398281 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.301141737 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.229492476 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.246534919 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.212965348 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.246721489 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.220145368 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.227174976 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.20862576 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.263864091 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242175517 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.203131997 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.224417984 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.208903417 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.240404039 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.193881424 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.232530189 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.20995952 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.242096081 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.207127825 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.24726889 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.20039068 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.224926148 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.203487641 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.23665148 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.204485968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.23441576 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.207614691 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.228274522 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194291243 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.228165802 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.225825157 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.228104883 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.205626034 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.247064083 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.204759999 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.240277089 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.224617944 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.229672359 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.193711284 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.252465113 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.281837954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.194576222 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.236691291 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.196062103 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.240772012 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.191645588 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.244828636 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235354248 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.226407631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.212914592 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.227102751 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.191149575 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23648537 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.193253784 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.230057135 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.208516057 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.228251976 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.212159249 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.235662857 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204562191 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.23016783 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.205117433 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.226614296 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.191517016 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.232448578 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.22163867 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235997949 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.23027526 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.227687321 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.204141162 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.241961272 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.204195046 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.241221028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.192093823 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.240332706 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.20305986 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.232253677 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.205811496 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.232165625 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.194156826 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.245474692 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.213545041 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.242050623 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.205108825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.240231992 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.195179572 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.230110731 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21010286 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.228961884 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.195956765 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.241595893 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.193834442 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.231818341 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.204142469 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.237880282 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.190736023 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.256104911 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.196573057 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.229103955 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.220274794 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.232923339 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.196236936 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.236595647 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.267977786 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.195564346 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.236096258 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.205468523 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.227442989 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.203024505 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.227466252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.193307373 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.243710842 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.209979308 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.234545026 seconds)
  done (took 27.344929938 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.418066214 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.416809506 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.297694949 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.468107766 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.244793971 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.330960801 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.410662714 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.411691379 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.191480932 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.266293607 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.285767484 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.373404799 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.229269002 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.222580451 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.413800696 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.505278248 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.222139055 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.2703311 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.266293976 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.206164567 seconds)
  done (took 7.773133279 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.202949066 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260158009 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214862221 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.245976183 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204957762 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.239732698 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.196364618 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.249189905 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204871619 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.236052602 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.197450821 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.235781589 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.207600284 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.242572743 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.207376005 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.252733866 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.200226937 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.230672559 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.214953363 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.231480852 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.211906898 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.254403918 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.234954675 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.216296199 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.245109064 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.207241157 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.226162663 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.197825192 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.234557557 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.222798492 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.228554945 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.202552832 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.236454133 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.169038258 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.204980122 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.246515985 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.200823589 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.233373417 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.198935433 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.232750322 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.205597551 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.242330598 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.202449407 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.236380611 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.215357682 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.176011835 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.243041424 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.205441404 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.205828776 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.215782295 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.242284076 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.205707267 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.23714931 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.213110775 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.235948389 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.211514282 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.238408481 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.20558935 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.232368353 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.19368821 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.226948334 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.198508145 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.237541563 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.205833836 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.241567277 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.204146105 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.237340599 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.196693269 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.230381879 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.19966933 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.2315262 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.208361994 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.251287379 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.204489015 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.236602246 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.207428301 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.236980941 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161751351 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.203036327 seconds)
  done (took 18.712204672 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.221680199 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.239671114 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.214139998 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.26212394 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.208741201 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.2372621 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.205874279 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.249618434 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.207748048 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.246460486 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.207847333 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.243619665 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.217760285 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.242667199 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.206443388 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.245740044 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.2072129 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.26834222 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.207181414 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.255959642 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207189568 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.236618878 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.207732766 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.242932046 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.221187204 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.243281756 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.219292718 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.242587426 seconds)
  done (took 7.77206478 seconds)
done (took 80.819729873 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.502993226 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.682764225 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.449053339 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.45867162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.499954986 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.470366052 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.447862554 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.447863199 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.127120604 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.422069541 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.448972883 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.447297136 seconds)
done (took 31.803171699 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.523252921 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.58522719 seconds)
    (2/2) benchmarking "String"...
    done (took 1.683320908 seconds)
  done (took 4.615047564 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.586402067 seconds)
    (2/2) benchmarking "String"...
    done (took 1.641531728 seconds)
  done (took 4.564251548 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.437829672 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.441843798 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.837506813 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.444281272 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.443333047 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.443864032 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.453343185 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.450599687 seconds)
  done (took 17.850544749 seconds)
done (took 33.332657491 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.495146596 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.71402099 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.699905658 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.423751744 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.443093836 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.444050304 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.443324439 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.507429489 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.452042299 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.423996408 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.890976097 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.722218338 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.449959827 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.848053671 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.424869956 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.460024836 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.461773547 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.776501004 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.448198847 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.432322854 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.427137086 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.425707291 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.45074797 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.429598697 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.477503598 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.449497079 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.452404707 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.443818457 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.719734105 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.477906075 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.432927652 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.448276054 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.464839376 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.447186905 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.445270134 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.458348995 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.721782857 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.461866178 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.433172952 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.457021573 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.71562358 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.455376232 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.458125714 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.457132731 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.429575335 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.491188708 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.435619762 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.571273218 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.470613151 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.475864816 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.536049615 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.856616648 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.455694309 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.454426096 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.446026094 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.763865989 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.449538065 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.574665752 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.465828511 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.477117654 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.45997929 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.446405853 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.484379739 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.457141585 seconds)
  done (took 160.11456702 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.447104403 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.447656527 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.447800585 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.449638688 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.450110116 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.447884566 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.446744466 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.447133995 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.448552358 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.476234473 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.451829003 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.454209018 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.453054943 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.412325824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.453659405 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.471846466 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.469468329 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.449039987 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.456119351 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.449825046 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.456617926 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.453462237 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.451997073 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.453872031 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.46229441 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.555170584 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.459994818 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.473881215 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.459323827 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.448968179 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.45848515 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.45726099 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.15747798 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.314890201 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.459271872 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.458449413 seconds)
  done (took 89.353633936 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.449807696 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.449363612 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.450720613 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.487178254 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.449294604 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.085214708 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.10810004 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.516620137 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.853539832 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.669708855 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.093580586 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.74375705 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.450734597 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.546448899 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.463732589 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.450900977 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.452164021 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.548491167 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.477046644 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.453443585 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.452203454 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.088189966 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.463509446 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.437251973 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641215732 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.452602067 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.487634015 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.848702601 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.451286479 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.488672097 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.804213657 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.49081657 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.451539128 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87015002 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.568433198 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.451424614 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.568128074 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.453580705 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.489207288 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.452807072 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.743944591 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.45235904 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.452968332 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.972124644 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.45646861 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.456565637 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.168815463 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.456653621 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.089314541 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.453431057 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.463375355 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.453966764 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.45389543 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.790341509 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.333858629 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.458822506 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.45395593 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.457119844 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.454802216 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.453354668 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.491295874 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.003311444 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.381229933 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.455366773 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.458205194 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.492043638 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.455534652 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45460421 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.422671456 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.513340788 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.093235911 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.455089737 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 22.002346489 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.554005539 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.580619785 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.455730972 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.454905202 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.455740471 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.455342408 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.570794033 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.455702577 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.909085643 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.64452324 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.458450132 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.099561899 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.561917651 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.456487501 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.892903978 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.458505715 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.456425834 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.292055302 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.557790937 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.456511595 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.456575641 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.457111284 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.456871858 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.910806612 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.105618525 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.788964471 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.461375399 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.058970907 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.460599632 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.93026909 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.089086979 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.135806652 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.458650027 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.572324696 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.646986285 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.459676293 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.457826541 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.096971235 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.461115159 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.518360663 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.457726103 seconds)
  done (took 401.78404806 seconds)
done (took 652.595123338 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.439616033 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.439138801 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.438516847 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438168125 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.439123053 seconds)
  done (took 13.544088083 seconds)
done (took 14.897731339 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.727484867 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.730022028 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.729909655 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.523679543 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.729334046 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.730448746 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.614014372 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.688711371 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.731454679 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.733194619 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.492039274 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.75228786 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.688716135 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.53761397 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.483001686 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.617119344 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.505879465 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.643371629 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.612744946 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.756215089 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.598868693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.508309451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.738480894 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.495694154 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.782064851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.80184207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.633637318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.643846568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.480600288 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.477346253 seconds)
  done (took 19.268870962 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.498726443 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.760648338 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.597268216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.511294282 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.746563127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.495546928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.768911368 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.848317209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.630128484 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.62883546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.480560205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.479787929 seconds)
  done (took 19.301105614 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.474515442 seconds)
done (took 74.170109386 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.498476465 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.570052259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.494571202 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.477471094 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.475026824 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.475304892 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.477612174 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.476691929 seconds)
  done (took 13.29799786 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.474238674 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.474364295 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.473607521 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.474318514 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.475818989 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.47345008 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.476304048 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.47482641 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.474455678 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.475714825 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.474796095 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.474228939 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.474318804 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.475351996 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.475414216 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.475228283 seconds)
  done (took 24.951049566 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.476237543 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.47628401 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.476411513 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.475397735 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.475622373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.475860726 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.476370757 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.477391201 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.476210862 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.47512106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.476545662 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.476970975 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.475403816 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.474184094 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.47612559 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.476174828 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.476347655 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.477935973 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.479726895 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.475225466 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.47680666 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.475776133 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.475712534 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.475879957 seconds)
  done (took 36.784907131 seconds)
done (took 76.391729734 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.464302582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.479433937 seconds)
  done (took 6.300493432 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.534448135 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.537474466 seconds)
  done (took 4.428662554 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.478450928 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.477073067 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.477379681 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.476396167 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.477652733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.478009791 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.477741703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.477033864 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.477650364 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.478160173 seconds)
  done (took 16.131796127 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.478448052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.478098706 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.477349944 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.477507652 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.478861568 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.478339616 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.477078845 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.477797984 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.478257805 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.478503107 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.478201946 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.478036416 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.478375308 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.478154059 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.478963631 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.478010619 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.479314468 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.479018428 seconds)
  done (took 27.965980855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.493201714 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.497445164 seconds)
  done (took 4.347725069 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.606932224 seconds)
    (2/7) benchmarking "second"...
    done (took 1.520742955 seconds)
    (3/7) benchmarking "month"...
    done (took 1.585198192 seconds)
    (4/7) benchmarking "year"...
    done (took 1.574570715 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.521147213 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.499837384 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.520462415 seconds)
  done (took 12.186222427 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.473893833 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.771164203 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.972626608 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.648898346 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.464625662 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.487943369 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.449103846 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.488062693 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.494637519 seconds)
  done (took 16.608797365 seconds)
done (took 89.329800647 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.465243606 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.477044314 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.488717103 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.485771107 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.826524997 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.473350681 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.471234271 seconds)
done (took 18.052724823 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.454607395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.471681438 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.455449259 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.490676219 seconds)
  done (took 11.231454977 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.469985454 seconds)
    (2/2) benchmarking "read"...
    done (took 1.790876062 seconds)
  done (took 5.619920951 seconds)
done (took 18.216355398 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.482298811 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.482123897 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.482442897 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.482356728 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.480901045 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.482662221 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.481710725 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.481597946 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.482024795 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.483225738 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.480755287 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.481546631 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.482399986 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.481883425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.48199323 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.482833488 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.483391084 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.481975415 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.483187958 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.487515415 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.483566005 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.483440173 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.483005547 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.483274153 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.484681458 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.483039541 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.483562885 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.483762766 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.484398445 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.484526398 seconds)
  done (took 45.846508566 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.487300146 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.4877923 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.484354543 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.484776221 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.485939843 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.483765973 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.484423116 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.485007288 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.486041563 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.485806488 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.486032454 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.486179746 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.483880678 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.486617614 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.485667863 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.486058692 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.485514767 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.484557981 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.485593084 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.484933869 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.484858101 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.486250975 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.486513807 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.485360123 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.485424049 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.486327402 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.48606132 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.486579975 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.485284684 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.486364048 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.487771624 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.488246947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.486155594 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.486790239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.486817367 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.487998676 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.491170922 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.49083977 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.48753999 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.486713153 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.487634939 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.487759773 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.48726056 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.487623354 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.486996193 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.488389263 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.488378605 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.487640053 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.48744295 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.487799093 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.488109814 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.487848205 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.488484888 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.48837517 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.488850899 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.48944898 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.487846396 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.487463996 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.488147869 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.487954693 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.488662647 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.488439636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.489559134 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.488839339 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.488730598 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.488690438 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.489431341 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.487954788 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.489283215 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.489645575 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.490143663 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.488825614 seconds)
  done (took 108.44071407 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.489382154 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.490471496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.490454131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.49002566 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.489591868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.49093417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.489662727 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.491226997 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.489791986 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.490255686 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.490622932 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.491041214 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.490668836 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.491305016 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.491251976 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.490335477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.490656241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.491096047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.491523144 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.490938788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.49102274 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.490901398 seconds)
  done (took 34.161030953 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.490745819 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.491196358 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.489705336 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.492011872 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.49327658 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.493473669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.490570176 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.494028412 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.49126896 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.491135944 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.489960466 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.491024833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.493955828 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.492933725 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.492248753 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.494960848 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.49217222 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.494435444 seconds)
  done (took 28.22754895 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.493063191 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.492559654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.493621293 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.491572265 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.492799827 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.493100554 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.492112028 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.493035684 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.492728085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.491417879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.493402429 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.492606624 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.493421972 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.493279789 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.493111225 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.493788928 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.492709596 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.492667778 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.494109818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.493789786 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.493886277 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.493497249 seconds)
  done (took 34.216706243 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.495284577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.494331148 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.494203451 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.493879932 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.4948007 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.494839362 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.49483781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.493539858 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.495725078 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.495023285 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.495143645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.494472222 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.49745982 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.49530168 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.495429462 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.494823858 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.496449662 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.495660413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.494829744 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.495680061 seconds)
  done (took 31.273233496 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.496447934 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.496596198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.496693545 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.496639373 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.496409578 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.495351532 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.496850412 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.496816927 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.496136583 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.496481423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.496048713 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.496893304 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.496478402 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.496881413 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.496696155 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.497910096 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.498075387 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.497565869 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.497156868 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.496938403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.497883673 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.496975509 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.497989609 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.497767746 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.498550725 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.497550725 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.497390966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.499012528 seconds)
  done (took 43.292502324 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.516100427 seconds)
    (2/2) benchmarking "in"...
    done (took 1.516612862 seconds)
  done (took 4.406972456 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.498067537 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.498113539 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.497585925 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.498756838 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.497413418 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.499421687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.498111871 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.498706909 seconds)
  done (took 13.359767962 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.496748294 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.498308248 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.499380913 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.499516184 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.499982228 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.495933041 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.504053064 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.504161773 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.498849872 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.498562731 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.501408289 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.500339619 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.500823128 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.498874057 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.497518804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.501552439 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.502945574 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.501652297 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.501359969 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.502093939 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.500087137 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.500385651 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.501631065 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.503523039 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.499593571 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.51108227 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.506937773 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.505539461 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.499286659 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.504324284 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.501816192 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.50399236 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.501317011 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.502734831 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.502310833 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.502538926 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.508668024 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.504460553 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.507597316 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.506501994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.504592237 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.502878002 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.502223725 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.505082206 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.503824761 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.506886856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.50389241 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.503627855 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.500228367 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.504261925 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.506233489 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.500842046 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.504155702 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.507263459 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.50653472 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.512472017 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.510126174 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.502712757 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.505322786 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.512167154 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.51971315 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.515136902 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.510556765 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.508349335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.50756348 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.511784649 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.512178913 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.512996841 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.50574923 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.506137534 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.511247812 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.523950182 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.51797042 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.50892223 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.506174723 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.506170935 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.505196883 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.509250393 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.513354427 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.514972355 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.509818041 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.507608299 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.508757445 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.51136482 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.505110985 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.509546362 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.506005347 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.506658915 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.50359658 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.516841526 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.514333332 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.506975048 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.505177353 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.507291959 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.509107263 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.508451808 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.504799204 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.508044522 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.50976393 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.508429467 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.507734229 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.506370306 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.512694781 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.511270167 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.509072197 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.51534222 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.51454151 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.505803418 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.516898758 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.516255031 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.508315565 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.506538877 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.513355016 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.511681586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.507659054 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.512674061 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.514239332 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.509913817 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.51287724 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.510250537 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.511962918 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.520655282 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.514884628 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.509562422 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.51061169 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.515175144 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.50959446 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.511504714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.515029999 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.510748742 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.510407604 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.509855611 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.5150282 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.509472214 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.513227247 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.510129406 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.51418117 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.510543701 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.5097504 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.510564097 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.513973681 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.513698806 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.514245824 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.516657746 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.515003993 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.512744663 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.522506992 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.514786734 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.514131529 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.515506113 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.517071368 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.512379976 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.511082574 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.515580978 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.509367768 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.513177149 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.508933634 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.514163393 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.511124678 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.512216804 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.512358496 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.508963628 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.513564146 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.515598709 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.51649583 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.515794122 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.515203107 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.512354906 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.513075258 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.509747866 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.515399396 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.50937374 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.512903824 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.516193637 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.513183851 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.512603247 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.514900204 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.517971113 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.512977313 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.514027831 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.512038843 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.517712154 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.518406694 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.518940258 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.520350129 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.514022434 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.514689891 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.51263922 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.513509839 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.516153245 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.51247629 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.519724221 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.52819654 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.528641362 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.516054176 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.517386034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.511763166 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.517684347 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.519759361 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.520803159 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.516623476 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.51501357 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.51410315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.51883235 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.515000426 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.518045948 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.512591957 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.517381255 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.518311941 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.515286598 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.5168005 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.516541006 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.519102633 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.519872143 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.515942214 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.515841859 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.514029332 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.520410458 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.512577265 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.516430398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.519732471 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.518786849 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.52332772 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.523060958 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.51850767 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.523736429 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.522076991 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.516751824 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.518751607 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.51995924 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.519990348 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.526264492 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.524641583 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.518866723 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.527581059 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.524298948 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.515861927 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.522726106 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.525543519 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.518277921 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.516988364 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.522846311 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.519755563 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.516940896 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.516751367 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.516378999 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.522223088 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.524739644 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.526895644 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.517551558 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.524327279 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.518896658 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.522117577 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.521096087 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.525627177 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.524072165 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.52618591 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.525999325 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.519855338 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.519540353 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.522562145 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.520211735 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.518920585 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.518675913 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.522477055 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.52487766 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.525120163 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.523424083 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.522076335 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.522925729 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.518760618 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.521438806 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.52050413 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.538413057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.537642586 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.531333769 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.52975854 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.524320402 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.528829321 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.526653556 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.522100626 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.520693348 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.523093685 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.521646744 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.521893241 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.525513684 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.521743737 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.52507482 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.524358735 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.526399156 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.524219764 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.522859377 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.521102343 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.526089898 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.521010236 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.521915702 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.519137418 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.525298751 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.522405196 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.528090532 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.525389028 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.521657146 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.533930731 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.530757621 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.5267426 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.526283714 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.522401592 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.520371374 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.523849903 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.528387868 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.521806731 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.526276113 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.520730812 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.527360894 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.524207141 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.531719673 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.530845848 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.523425516 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.529105954 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.52396745 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.519647126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.523002081 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.523990869 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.53241738 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.533701255 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.52137263 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.527436983 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.524077043 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.524946932 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.524594392 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.524497035 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.52475063 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.525699497 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.534511455 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.53236601 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.526548445 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.531902826 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.533649156 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.524354694 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.526778497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.52148131 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.532759391 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.531770335 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.525711598 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.531645714 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.526242305 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.529109811 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.525307473 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.527314839 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.527276881 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.525947875 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.534196052 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.534265357 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.528057019 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.527323004 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.536131382 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.535827835 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.534538742 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.537955847 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.526591916 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.532413109 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.52784303 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.526600665 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.526708681 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.527761952 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.53077331 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.52438559 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.532829252 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.526336718 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.529037076 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.533767617 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.53574266 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.524869098 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.531682385 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.536729233 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.524910718 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.531418222 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.528916671 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.525550071 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.531856671 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.527403124 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.523831713 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.528318295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.530788332 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.532899267 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.527034544 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.532082693 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.527649663 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.532128394 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.529509086 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.528531684 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.529264713 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.528762127 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.526646652 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.531470928 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.535139744 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.537737512 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.530095678 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.533403535 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.529470321 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.539478541 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.539489113 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.529901419 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.536773882 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.532760538 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.530078315 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.53280908 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.536282405 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.529374561 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.534422515 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.527746703 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.53176331 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.532621129 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.536766262 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.539056375 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.535287423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.530078473 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.530133035 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.534199389 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.529696459 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.532573666 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.532636428 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.539265906 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.529264992 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.530414218 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.533745551 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.532505365 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.537280283 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.531101443 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.53483942 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.534004904 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.537089207 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.531648092 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.533551575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.530024198 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.532396933 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.542624656 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.539099326 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.535022033 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.533291717 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.535155172 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.530257312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.534203554 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.537983008 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.533550891 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.534076975 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.536120859 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.533939037 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.533540106 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.534503055 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.535089481 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.541891122 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.538806573 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.532467914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.545111957 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.545508625 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.540777623 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.531438937 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.534737971 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.534690893 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.536786521 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.537100893 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.532901473 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.545196266 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.543306986 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.538343535 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.538676189 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.538283828 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.532790424 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.539084224 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.536949659 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.537677068 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.54399591 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.536766424 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.543276989 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.536065515 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.536369437 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.532169848 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.535230153 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.537060116 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.537095639 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.538393861 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.538805369 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.542015469 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.540064312 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.541242083 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.536411378 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.537080327 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.537082074 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.53359241 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.537971915 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.534831992 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.542022948 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.540781757 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.53457016 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.540456406 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.538029861 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.536712515 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.540567245 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.543038271 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.539137338 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.535396689 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.542698092 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.546785126 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.545493821 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.537584587 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.534601788 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.542346649 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.541808401 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.538741842 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.538295729 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.536536029 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.552517315 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.549979404 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.536014292 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.539946715 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.546685572 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.544921802 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.539437616 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.539748699 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.540225362 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.542755146 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.546153859 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.540378073 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.547049387 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.546514861 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.539438271 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.542395741 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.536658128 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.542502972 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.546707439 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.549088467 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.539219479 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.538242603 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.553427944 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.548446234 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.543171013 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.557818598 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.549230799 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.545924226 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.545510379 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.53771411 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.540963718 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.542460763 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.546891333 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.540883532 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.541032989 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.541221621 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.537442822 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.547972857 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.552019779 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.551745735 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.542153305 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.538729414 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.542493619 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.543149654 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.540829056 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.54406295 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.541894511 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.541759896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.542050772 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.540918796 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.561173651 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.560284058 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.548209802 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.542733319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.54303864 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.547594875 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.549311813 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.545160235 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.548386729 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.542422324 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.542545381 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.546218084 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.552486666 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.544773319 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.542226573 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.543871852 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.543356285 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.547578183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.557959971 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.562988284 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.549610035 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.550806778 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.54609359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.543606805 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.543387692 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.547265181 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.543484452 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.544311024 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.545084275 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.546667507 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.545124297 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.544752716 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.543224514 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.549742962 seconds)
  done (took 910.236341477 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.54488374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.544678797 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.545794404 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.546514015 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.545742401 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.545263078 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.545659255 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.545577036 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.546332323 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.545510722 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.545632329 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.545711975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.546829512 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.546123287 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.546792045 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.546794527 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.546289173 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.546016171 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.548279038 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.548388004 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.54619087 seconds)
  done (took 33.883775342 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.546972106 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.547321539 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.54681067 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.5476822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.547243869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.546488775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.54743784 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.547912369 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.547433096 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.546756051 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.547776376 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.547239849 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.548121165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.548108079 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.549192565 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.547828215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.547694761 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.549011238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.548015002 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.550299027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.547686656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.548105365 seconds)
  done (took 35.468174099 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.547575259 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.547747832 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.54554976 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.55330492 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.548523885 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.548857772 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.549209886 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.550495722 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.549491187 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.546628258 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.546853987 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.547848117 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.549920931 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.555180721 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.551255041 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.556374899 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.549158589 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.548469657 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.549030014 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.550262663 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.556139739 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.558728585 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.550172662 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.546527205 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.551757746 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.550421026 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.551594377 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.550832327 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.547708523 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.552437779 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.549888484 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.547804108 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.55689599 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.554066404 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.550025687 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.553140465 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.550064342 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.550879153 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.551366096 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.553993064 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.561874937 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.551040525 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.56230432 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.560095154 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.551745086 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.55107401 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.55581345 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.552396531 seconds)
  done (took 75.889679396 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.551635774 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.551692291 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.551747924 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.552081903 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.552157326 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.551406728 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.553782424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.552769897 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.552605113 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.552807604 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.552916877 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.553495584 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.552702768 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.553963779 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.554039436 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.553375227 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.553478574 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.553685849 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.553905434 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.554033129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.554156963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.554265281 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.553989962 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.554019306 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.554341992 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.553409281 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.553700015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.554139111 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.554093139 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.55567663 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.555624834 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.55441071 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.555772108 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.555889453 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.55550944 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.55386569 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.555938104 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.555777718 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.555539581 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.55544304 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.555441446 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.555963817 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.556735246 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.557877393 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.555429835 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.556383555 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.556547856 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.555893653 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.555268733 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.556632835 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.555197551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.557621226 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.556727623 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.555469593 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.557238517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.558090366 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.55737931 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.556571488 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.557482572 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.556149348 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.557836328 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.557336639 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.558221126 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.55776096 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.55805138 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.559375578 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.558630915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.558252304 seconds)
  done (took 107.172004107 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.557993697 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.556243716 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.557447888 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.557996513 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.5573373 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.557686606 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.558359425 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.559600005 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.558812656 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.558326346 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.557586657 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.558207532 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.559891139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.558691345 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.558464865 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.559767975 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.559068954 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.559451127 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.56034446 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.559529984 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.558632412 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.560410625 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.558866618 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.559934899 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.559355445 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.55835937 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.559491118 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.560423463 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.56183124 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.559569192 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.560434811 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.560198481 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.560136418 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.560516667 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.560908364 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.561259807 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.560324182 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.559792458 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.560977073 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.562261369 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.56214154 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.561881459 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.5620562 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.562646427 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.561100025 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.561398092 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.561342343 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.561951596 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.564499802 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.562453276 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.56231955 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.562390501 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.56193763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.562296533 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.561827431 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.561295781 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.562500192 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.562113559 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.563477309 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.563396881 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.563449193 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.562322446 seconds)
  done (took 98.171928092 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.562730397 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.563604378 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.563987231 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.563516984 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.563608292 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.563647869 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.563123001 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.562813177 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.563481586 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.563381236 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.5636293 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.563431754 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.563276027 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.564079103 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.563156734 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.564560172 seconds)
  done (took 26.445774679 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.563670433 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.564536706 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.565478496 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.563577718 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.565554985 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.564692558 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.564913855 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.563196589 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.563467124 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.564597546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.565174893 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.565064866 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.565794209 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.564399089 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.565454614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.565097922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.564481785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.564692231 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.565224276 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.565074553 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.564978238 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.564706908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.565464945 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.565326579 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.565230434 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.565496496 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.565571256 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.567559971 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.565199254 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.566543489 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.566107874 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.567116461 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.566658313 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.565725257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.566859905 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.565916476 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.566621041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.566303062 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.568068137 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.566694175 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.569227712 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.567479865 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.567176899 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.568176938 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.567033687 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.567566679 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.567758081 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.567151089 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.567916923 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.568585127 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.567572126 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.56738296 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.568411211 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.5683141 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.568394892 seconds)
  done (took 87.565648105 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.567928421 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.567080444 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.568972035 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.568541966 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.568672693 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.568321842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.567801326 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.571371294 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.567906126 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.568937456 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.568536518 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.570601531 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.568963181 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.568760791 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.569569124 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.568634198 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.568771174 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.571228825 seconds)
  done (took 29.674145414 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.568971106 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.570486475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.569793023 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.56729607 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.57016916 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.56918715 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.569161087 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.569255331 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.570290275 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.569909662 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.569750659 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.570505211 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.56933602 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.570784236 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.571386036 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.569720687 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.572564001 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.570917576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.569526145 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.570568018 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.570461624 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.570768285 seconds)
  done (took 35.975488262 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.565364221 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.565472787 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.565803673 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.579986861 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.577078161 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.566086599 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.568177529 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.565614993 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.583266762 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.589870754 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.58700054 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.573842603 seconds)
  done (took 20.323177565 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571440725 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572810975 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.571298507 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572182488 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572015909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572032542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.572206642 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.572813635 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.572215119 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.57331221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572318768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573279175 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571691011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572287036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571569939 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573134332 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57177253 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573008936 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573561791 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57323893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572535772 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573201443 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573439399 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573047244 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572452015 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573026484 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573847751 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573063391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574214962 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575048739 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574390953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572669173 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574525715 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.575835666 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.574017308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57552183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576215822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574918176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574146497 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575323479 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.5745446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574985143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574523077 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.574195594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574937998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575227205 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57504507 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.575695128 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575359937 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574774705 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574498478 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575991341 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57588114 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.575482116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576466087 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575850638 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575008511 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.576050454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575977824 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.577311145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576222507 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.575924672 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.576167565 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576030098 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576954186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.577805078 seconds)
  done (took 105.335661098 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576968648 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.577545046 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576838488 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.57800428 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.576682364 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.577251095 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.577368388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57689177 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.577368873 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.577476436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.5773545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.576844387 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.57956885 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.578158622 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.577230265 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.577187005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.578021008 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.57707752 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57827852 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57747985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578096978 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578499054 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.578112469 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.578576842 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.578470577 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578410735 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.57858451 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.578842868 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.579311952 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.579334906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.579607897 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.578703261 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.578173439 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.579578338 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.579115141 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.579561787 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.579214527 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.578923027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.579690887 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.579789538 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580336276 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.579136355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.578847397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580840643 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.580684996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.579709462 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.581002622 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580735627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.580032213 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581368616 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58090161 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.581182146 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58103335 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581276267 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581039188 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581144271 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.583252479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.580613328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.580474798 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581488032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.581067696 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581035257 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581243386 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.580816664 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.580355239 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.581926579 seconds)
  done (took 105.672706779 seconds)
done (took 2016.404792415 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.746196092 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.701251598 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.664207523 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.630997219 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.60024287 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.593772007 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.588055152 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.238979843 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.282555489 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.038406279 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.647423763 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.781653727 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.622048128 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.550269513 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.68399417 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.688920717 seconds)
  done (took 38.505130632 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.61122026 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.587013562 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.721651386 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.585868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.610048855 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.806331669 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.656911777 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.583262098 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.789134881 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.585765072 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.586466527 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.608517369 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.584573929 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.58447793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.605963455 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.81313417 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.888690949 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.623530186 seconds)
  done (took 34.279047817 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.148209681 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.590276162 seconds)
  done (took 6.186928959 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.605163321 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.583589024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.584766291 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.58278653 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.573817355 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.573405224 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.581891589 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.578715158 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.579990636 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.740591481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.588149359 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.597522701 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.582492953 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.584489776 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.586405603 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.634255714 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.719271589 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.588931903 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.58677418 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.589834943 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.58260412 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.691027037 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.631988099 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.589177086 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.739293464 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.590239374 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.586175582 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.592242107 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.713305526 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.589139101 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.582750456 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.582789354 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.58510806 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.577335621 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.149821186 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.59554516 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.613656402 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.592608789 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.587757054 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.743574197 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.587045337 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.593114631 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.576262869 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.152491125 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.699610928 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.725438099 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.583735565 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.585852134 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.587267557 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.664000616 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.587434438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.587421353 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.650685197 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.480397029 seconds)
  done (took 99.479754937 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.624888622 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.571267781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.494220276 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.57407167 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576552996 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.570548525 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.573173926 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922596764 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.580099171 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.572522601 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.929827042 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.592219536 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.577702688 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.631559638 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.692256841 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.638493333 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.573200559 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.571730616 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.573213686 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.580886159 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.572815555 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.574253215 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.57888135 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.775663545 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.619972193 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.573759111 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.583447873 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.586191214 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.576267736 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.573477175 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.57526751 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.610974508 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.656472989 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.578478728 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.894220861 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.608167067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.573912686 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.582036238 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593392908 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.577308549 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.587382055 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.204955131 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.591812067 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.575905314 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.574795404 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.197766798 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576901656 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.578524594 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.577574185 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.55538904 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.575948891 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.577595346 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.593449125 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.576070457 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.574195557 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.650981998 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.631590719 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.576157769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575102708 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.575560163 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.617872263 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.580051882 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.585894175 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.581692173 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.58086928 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.576050754 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.862671955 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.581641848 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.588558069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.593972208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.5771015 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.577314542 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.597251687 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.578655243 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.784697573 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.581912417 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.577149946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577932924 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.585573612 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.577563216 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.578708117 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.57893073 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.922891187 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.599114719 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.581692598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.603820708 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.587014296 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.645792682 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.580853587 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.607566391 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.577755292 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.580274349 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.951331016 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.612209617 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.57851818 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.578977852 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.62499632 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.579605161 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.578088686 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.581087737 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.577303775 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.590409167 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.580164113 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581742049 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.578757888 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.581682753 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.5786392 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.579737803 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.582512963 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.603734459 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.581420643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.580031548 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.59689062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.585929772 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.787675811 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.580242496 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.957712282 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.599696116 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.583762403 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.583539729 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.580531054 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.588431823 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.580439821 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.583494756 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.58074955 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.939887308 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.600628261 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.58020266 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.584130553 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.581070691 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.587300441 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581222719 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.617836174 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.585374373 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.583914109 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.604973585 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.602217623 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.580982187 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.584695808 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.581390654 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.590460591 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581976516 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.581909461 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.90548232 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.799808572 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.582500413 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.58227392 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.581990072 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.630245744 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.493633869 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.582633702 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.585506687 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.893499985 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.791294378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.585789422 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.585711928 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.607134047 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.583760102 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.588071081 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.583550671 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.590575501 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.586038543 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.588664758 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.583022196 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.584759535 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.587193794 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.586547054 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.917182847 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.604247592 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.584233996 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.585839239 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.58463155 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.584621154 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.60831884 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.593523874 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.583286539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.584642217 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.799899046 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.514267029 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.585985635 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.596851435 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.583925755 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.596585059 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.585472931 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.588583369 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.589975843 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.5892642 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.622591872 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.589230481 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.594256269 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.583670119 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.592605566 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.290925366 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.589559058 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.587346316 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.519411451 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.604779892 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.589746624 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.587892689 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.588279733 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.624285138 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.585565201 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.609771638 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.976633655 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.592849931 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.631906796 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.587004472 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.62433583 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.586492936 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.589061226 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.586633526 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.58998611 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.588645181 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.375867054 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.586214719 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.589392312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.586441137 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.606719401 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.5887284 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.592021936 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.587254067 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.59096848 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.589250532 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.592287559 seconds)
  done (took 574.032003994 seconds)
done (took 753.93237512 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.586141242 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.592411605 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.591768698 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.592378057 seconds)
  done (took 11.821981336 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.601370088 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.596265409 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.600233385 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.595224284 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.600325511 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.595814607 seconds)
  done (took 11.050771447 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.589133628 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.592559859 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.591972226 seconds)
  done (took 9.234412827 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.846769496 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.600672203 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.020180784 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.592628249 seconds)
  done (took 10.521777254 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.59906459 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.602217766 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.600654535 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.600872194 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.602903367 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.605128872 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.603734411 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.601762222 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.603210303 seconds)
  done (took 15.879096879 seconds)
done (took 59.971368641 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.671109217 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.668711204 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.618421614 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.629589279 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.729604395 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.675547956 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.681383083 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.681266508 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.673798677 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.627031254 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.671887581 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.621124363 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.670324854 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.776561648 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.63137705 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.672911076 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.618438418 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.768754836 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.674975423 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.627494499 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.699634737 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.625617207 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.629159858 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.595896225 seconds)
  done (took 43.402271789 seconds)
done (took 44.869002133 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.627475318 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.688937504 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.597151629 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.597771743 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.599716563 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.588658511 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.623053624 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.599150448 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.613275914 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.614528203 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.589933148 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.609143492 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.614503593 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.614032357 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.633099505 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.599842598 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.598420767 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.610606008 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.616183881 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.617611849 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.600776588 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.601066156 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.627311744 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.59950998 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.607889367 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.607618901 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.605253802 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.592636994 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.60792383 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.615871658 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.60438475 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.606743911 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.618014855 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.612931055 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.602248691 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.612013532 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.60151307 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.691549287 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.62283127 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.613909809 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.610756837 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.617865079 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.605716486 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.604664976 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.614502686 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.629035409 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.610021237 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.617038707 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.605100259 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.609972716 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.622263122 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.614720697 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.611692137 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.608596471 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.600295527 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.61685409 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.612635937 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.622510573 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.610152619 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.606450722 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.637444519 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.623091668 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.614960921 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.610913154 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.611107642 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.617544298 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.613394422 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.621397089 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.613292982 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.606277506 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.604509227 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.614402397 seconds)
done (took 125.623962755 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.727386863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.60362298 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.759356407 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.61001668 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.774969699 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.728725237 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.609708526 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.609965746 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.609705714 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.4111078 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.609215891 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.611559856 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.605819881 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.610313389 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.726998324 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.611344142 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.610753249 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.31382421 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.610509567 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.744417681 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.608651819 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.609233937 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.613005342 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.403307529 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.605798519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.604549935 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.742176632 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.611124832 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.30262909 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.600436551 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.606489455 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.303316003 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.743864442 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.629875168 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.621233618 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.620811132 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.776387808 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.616353754 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.731929233 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.732553255 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.763049462 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.649634813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.602687637 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.600556086 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.614122191 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.61447535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.613172594 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.641700733 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.607030833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.61224721 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.311757547 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.622381172 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.622443759 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.6141944 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.614091165 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.63384804 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.614869452 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.614580939 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.745815746 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.613202183 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.733138504 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.406653718 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.414610624 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.614552879 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.608440231 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.61400131 seconds)
  done (took 126.770527379 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.679888051 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.686632072 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.732938608 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.610838247 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.660619162 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.737272231 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.610688691 seconds)
  done (took 13.190540238 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.616942419 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.616363625 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.660809289 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.660002938 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.614536862 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.782990478 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.613511148 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.623232652 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.616940555 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.662326548 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.615938941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.616566191 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.625911327 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.61255789 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.657981076 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.623691388 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.731004749 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.61432429 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.615573254 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.76467969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.6153848 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.626110317 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.661888871 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.622874711 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.616092182 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.619523455 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.371827515 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.616409453 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.616901933 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.617031639 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.616587277 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.678147497 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.617527554 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.60512631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.616090474 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.725943134 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.61773928 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.616318609 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.617729372 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.61329944 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.61738489 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.616952411 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.617617173 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.618102425 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.617103205 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.637913389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.617982567 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.618534608 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.618836735 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.619174937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.664906843 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.619000529 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.617196963 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.61818302 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.667822696 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.627738157 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.618479615 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.619606558 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.619447412 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.618669655 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.768074159 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.661302026 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.62021542 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.66177149 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.619688829 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.621135503 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.619870374 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.620533355 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.704797857 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.61991191 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.663026524 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.619224576 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.795452732 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.640540506 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.621555204 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.618544321 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.61852293 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.619900883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.614541036 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.62292665 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.620655156 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.6187466 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.624171651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.621000241 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.622912584 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.774245898 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.722783532 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.621941136 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.632461285 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.624228672 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.621502841 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.669413738 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.621479633 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.622834165 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.66856837 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.736893544 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.669905319 seconds)
  done (took 165.266809057 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.629412959 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.630597225 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.622108921 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.646404781 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.619089152 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.618309848 seconds)
  done (took 11.245807889 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.621300467 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.625637534 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.622384137 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.6234622 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.622842316 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.623677192 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.625712308 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.620692438 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.627009111 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.624275827 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.624218826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.622993978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.624365652 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.623679415 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.623244027 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.62416805 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.624073697 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.623758938 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.624841423 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.623960816 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.61589098 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.624552254 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.624638417 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.621951222 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.629449662 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.624906108 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.643937388 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.625854417 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.62434681 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.626700877 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.628930934 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.625906928 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.623102079 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.625473572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.628081751 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.623671317 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.630333139 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.625314711 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.624124795 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.626993572 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.625958861 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.626669687 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.626670833 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.627464335 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.62423399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.629549149 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.630915792 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.646218909 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.626256323 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.627376183 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.626715542 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.625930824 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.626961238 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.627953805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.624714338 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.627480647 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.629996472 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.626918353 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.628065226 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.626076276 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.630953966 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.627919984 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.62540343 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.630373116 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.629319679 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.628184166 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.626293125 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.632102589 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.629796233 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.627991571 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.629351901 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.627404584 seconds)
  done (took 119.590473069 seconds)
done (took 437.536837798 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.021954872 seconds)
  done (took 4.505507928 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.794474758 seconds)
  done (took 4.280013559 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.113024804 seconds)
  done (took 26.915059627 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.681285445 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.622860874 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.627096855 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.62622732 seconds)
  done (took 12.042918352 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.1909675 seconds)
  done (took 4.677245606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.640327045 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.630524495 seconds)
  done (took 6.759036574 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.032072952 seconds)
  done (took 4.517626816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.376437602 seconds)
  done (took 4.87090895 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.645232308 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.632369554 seconds)
  done (took 6.771488562 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.597250903 seconds)
  done (took 4.083093144 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.158871559 seconds)
  done (took 16.64515235 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.637205393 seconds)
  done (took 4.12540014 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.665304113 seconds)
  done (took 4.150420232 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.838424535 seconds)
  done (took 7.324480824 seconds)
done (took 113.157537413 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.619163356 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.623470782 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.620335101 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.619181295 seconds)
  done (took 11.968245888 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.694851082 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.695085018 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.699829142 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.689144098 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.688684778 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.697740149 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.656585004 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.671343726 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.685505927 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.683081929 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.700878154 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.688853653 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.697459514 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.656693154 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.6829623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.700529125 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.687750302 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.705705549 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.657760138 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.691242277 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.632925643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.690061339 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.685172969 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.633743576 seconds)
  done (took 41.859484372 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.148291548 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.709747905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.78409678 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.680075927 seconds)
  done (took 8.810324445 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.765652506 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.736973598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.760364622 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.792023029 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.820540527 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.752288651 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.661541972 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.654813575 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.641694663 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.73901474 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.812296537 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.737124165 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.954054294 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.634485558 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.951887968 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.633591351 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.633199126 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.737607596 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.786838871 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.816595568 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.633385105 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.737167703 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.74493504 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.739204101 seconds)
  done (took 43.367359184 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.641319092 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.650257612 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.637322205 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.635464128 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.636923798 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.638014015 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.648625095 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.636049438 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.643738842 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.636747489 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.636593809 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.636097852 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.649016481 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.635909882 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.635922977 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.643989151 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.638401192 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.643840881 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.645573412 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.637615647 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.635140857 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.643251335 seconds)
  done (took 37.575784767 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.625359324 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.625135055 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.977534721 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.882375081 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.624748776 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.629824737 seconds)
  done (took 15.856646421 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.719684915 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.87320853 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.632986857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.071913896 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.179165099 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.63775439 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.632862938 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.919351607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.32139395 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.335116065 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.707131139 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.716470395 seconds)
  done (took 24.241045607 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713737518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63221711 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.647681886 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688914615 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631682574 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63321536 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.690912235 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170466486 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.638737171 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908506157 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641647825 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729083372 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882032039 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652538676 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637587351 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.608110872 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863688239 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208924939 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637461746 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638531534 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66675591 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642181945 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649392907 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880895049 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63483801 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.634773719 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.896206388 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633535935 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989940551 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968379618 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965396355 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642756087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911248332 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130934474 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740591438 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879105926 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646444843 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636494305 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.639123103 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.644215161 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63693825 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.658109462 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962167114 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643444383 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.634937593 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637730303 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178375637 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.64482237 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.636181299 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.634966465 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962916313 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723162667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.642111856 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.635376831 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719713081 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635168261 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.643051014 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760558396 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273937597 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645119715 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638537402 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.642348974 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640134652 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660985371 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379674069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.647522026 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.643716094 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644969665 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636886241 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65405552 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664063751 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638329892 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.657764258 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638038918 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554274024 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652832519 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639367749 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272743881 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646432147 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.638803034 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86574348 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636589638 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637172669 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.638039817 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637240265 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.534651566 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647111696 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.61295028 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674077487 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.17847225 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885705962 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662091817 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668806984 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.861461938 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.613594989 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638370979 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.65557795 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642279906 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.660350824 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.181014263 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640806845 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.64533491 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889877657 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.853334897 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651255397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.621901249 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184110078 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649210824 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.670361548 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650836652 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894037435 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.379315372 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981662792 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648664208 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678813857 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.639864112 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.590894503 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650680102 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.653345353 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657701281 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965355314 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.615675292 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643165297 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716382016 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643661025 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641702554 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652890629 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643808239 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642733411 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.873165763 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648251079 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976623835 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.647509505 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642932872 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.653253611 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641992359 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.644857098 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.867060423 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648820184 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919753342 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642529388 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643445035 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643357525 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.863215276 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.643393319 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.675961835 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986713552 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64705871 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.65554952 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971113343 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679617818 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756655817 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677889355 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.647582156 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.899120863 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.650459568 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.651133355 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655822432 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647809016 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649998837 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.654034951 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646198164 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365189092 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64082262 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64910051 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645561904 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.660556127 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719020611 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652846209 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894132522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.645251487 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656225689 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.653680688 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.657156127 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87055 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975032576 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.663128869 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823413947 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.186253209 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389945417 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666905336 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.645845317 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.644384141 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.646136279 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647990083 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645428206 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.64877091 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893174368 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979981068 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.65044946 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393952878 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656224837 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.666851205 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.6545543 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976276518 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.662885488 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647570228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.658106001 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649927615 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667265423 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983399863 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876206307 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.662815231 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.648992479 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.16682801 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655930493 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64784046 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.647913741 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6744393 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.664537139 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271817333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990574036 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666832444 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981722903 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671967567 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.666685273 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.648019616 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647843909 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664303459 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.675679066 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665292993 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.899184852 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.670367047 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655708506 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287993284 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601887681 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338442152 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67576157 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.660633638 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656310866 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19549458 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65077994 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649766238 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947511239 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199551346 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649804394 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195182017 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.64867396 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.577456294 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980693121 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885770699 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670674643 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.670312231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986579678 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.870941032 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678881849 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664548034 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655918648 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.627491232 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276234979 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651666636 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831835385 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197269945 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669235052 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653065733 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.715682714 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.655260006 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12993239 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651597942 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652379646 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650611517 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.677561171 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279176587 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657454015 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653169431 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431859408 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.679675576 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.204392937 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652152637 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.902956184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.985856928 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.97230895 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.660031648 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.663878327 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.899574726 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985310059 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66038226 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.652030778 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351765757 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.518372264 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.662988568 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655377861 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.621557798 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65494651 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019504455 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.670259921 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.67273123 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658340962 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654700237 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654341149 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.654582685 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661166839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641778295 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236011837 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.651896656 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661630558 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665056833 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661006385 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905855758 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.672580621 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40403691 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891079973 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657616688 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692412845 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.663306126 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663177077 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.636563261 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655938031 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654892732 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.744703978 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879932894 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.655417173 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.63162852 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.718483614 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868755154 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656792473 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.65660524 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920084255 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.65605769 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.683834005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590747058 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689407953 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656199021 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680935343 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656548997 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691932987 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732211264 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909364236 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.989791416 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996709842 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14195112 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657134475 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66035879 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.673415876 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740109796 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657506717 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.674053453 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.658328522 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405237707 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591745847 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412331226 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000639508 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.665019462 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668653533 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658270961 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901618261 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65758564 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934498933 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660116633 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.674362872 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68163774 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65925706 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665306138 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876774496 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934128587 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659088975 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674896737 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662373993 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.660715263 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995906684 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.879256634 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24581788 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303279287 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663873638 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662494972 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.215505293 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937422448 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661223974 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662254593 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660619477 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.677031395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.665897471 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.669234584 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661853019 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886240741 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993414341 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176113935 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993963704 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.693249275 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.536976063 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666423976 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909629579 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49387198 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.911337519 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394086937 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509626467 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917123358 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735877395 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911382148 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.662710932 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899482339 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.676809653 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662186571 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662143209 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662201392 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.66129074 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993751104 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419007691 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925951291 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.669265268 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.680261842 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692959669 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.915718351 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887768693 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.56780369 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886729058 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002635769 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.676123993 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662206108 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4218477 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009878376 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669378009 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.670001365 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924855878 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667286139 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701314227 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.541600417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.663459332 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304512118 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.879000512 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685070478 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674098504 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.547308967 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423656693 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.681836455 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253092336 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667076753 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665802207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946012812 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.67420189 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.678029888 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959235106 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.672350879 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.676007961 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924775023 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.390953119 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.595969204 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.671632847 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680408905 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.67427747 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667123602 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747721756 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668733885 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667631316 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.139645793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.666400461 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668501299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680078998 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.666588532 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67310965 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.666151744 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668241386 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.676514337 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.669535373 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.645369491 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.6798548 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797347267 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29674577 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670543781 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.290493307 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.007072085 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917861824 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668551483 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.648855565 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.674141658 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668383488 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668161551 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669047214 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.690205366 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312564874 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.684328128 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.008210224 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681578036 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.881507903 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88213394 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.675267447 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926894881 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68760722 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695191852 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.643900926 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669157 seconds)
  done (took 1122.20050748 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.703360354 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.70635318 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.682238878 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.744195595 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.712646215 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.791284363 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.720771998 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.773881127 seconds)
  done (took 23.360448018 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.678545013 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.674571544 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.675200719 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.676908744 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.667517727 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.232924536 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.673966406 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.675774041 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.687606857 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.677168564 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.675053103 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.403976659 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.677102014 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.684035937 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.688447618 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.677376875 seconds)
  done (took 37.660777997 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.888369977 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.889828984 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.370577706 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.685294087 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.669600025 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.687530797 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.09099698 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.688054743 seconds)
  done (took 30.498385234 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.68213828 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.681535299 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.683305637 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.683259223 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.683310945 seconds)
  done (took 9.941177062 seconds)
done (took 1408.830980168 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.678479246 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.678202522 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.67844144 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.680204804 seconds)
  done (took 8.243937741 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.647345719 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.648938075 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.649043727 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.665757812 seconds)
  done (took 11.139381724 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.121803876 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.333283344 seconds)
  done (took 5.983861379 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.67334854 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.437632602 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.424284808 seconds)
  done (took 9.06407964 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.99796057 seconds)
  done (took 3.526815445 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.084472826 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.151360485 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.670516905 seconds)
  done (took 8.436371246 seconds)
done (took 47.928403511 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.685633437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.437785215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.827851407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.679408347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.83260737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.827482733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.942836349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.669454262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.687452617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.668852218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.67997125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.833225755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.928430048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.43947596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.927814683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.437806781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.8318127 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.68382162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.686514658 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.670504265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.941882141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677561845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.68244223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.687314331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.831194009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.816227461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.681035429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.440215369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677180982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.669924282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.818997864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.684055986 seconds)
  done (took 92.517945808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.671709982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.672670049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.670425166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.672348901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.690783805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.67150843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.672034965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.671712026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.686361106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.674708044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.670227686 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.683408666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.67435133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.674130757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.67197461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.671774111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674877532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.671984565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.673133153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.672654139 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.671326471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.671999388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.672412158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.674068072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.673001446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.674135151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.690164906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.672752968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.672636295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.672636319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.673643527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.673498191 seconds)
  done (took 87.118318215 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.675908584 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.675008392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.674840671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.673583024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.688828099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.675141419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.673739744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.673779504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.684599533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.681022029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.67399903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.698981635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.677604935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.675365309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.67483476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.674967164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674536168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.693228846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.673806665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.67411322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.677830849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.692627671 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.685775477 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.674826745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.674583973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.69576152 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.681810813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.692872409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.673933456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.688801862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.674918693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.679597313 seconds)
  done (took 87.295226198 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.914628322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.688474376 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.690338941 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.681557078 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.691571372 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.688017194 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.680705782 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.919524162 seconds)
  done (took 17.49028108 seconds)
done (took 285.956477641 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.6806468 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.685791935 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.710460252 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.69158259 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.705530781 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.710608997 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.918439488 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.710963156 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.909118505 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.684472927 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.704292473 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.683590096 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.65690295 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.831043732 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.682147345 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.684942181 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.701984509 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.680314207 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.684707473 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.937809975 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.712457424 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680332204 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.68815054 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.685142048 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.678377833 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.765799877 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.765751616 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.850402563 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.815069449 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.763807714 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.680993539 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.690714198 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.699863014 seconds)
  done (took 76.670218706 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.686021514 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.691066615 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.69162551 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.691616915 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.691457195 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.691490273 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.686973219 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.692185302 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.692604578 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.692356704 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.690927688 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.693143168 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.69300089 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.693307967 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.691997794 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.674490598 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.688234146 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.694228433 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.688153055 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.675920857 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.69365476 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.694544356 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.695696887 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.694096168 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.694087153 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.693788525 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.693639334 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.693270825 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.694060348 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.6938912 seconds)
  done (took 52.270243199 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.693512317 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.682964849 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.693917166 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.696630985 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.690821694 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.694037145 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.062531172 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.699870495 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.694362037 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.695517276 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.68295976 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.70242015 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.747669913 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.701034339 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.692872493 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.695666227 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.695420655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.692172572 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.682718418 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.734454046 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.075507684 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.701297371 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.059320694 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.709598844 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.695357636 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.693747418 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.699925819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.696825874 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.698597019 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.685819112 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.70152037 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.064986565 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.692385633 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.6846664 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.696987738 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.705211446 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.696679959 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.695050619 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.696144468 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.694181253 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.051258497 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.695310028 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.703085799 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.68622387 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.696987173 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.698928469 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.686444213 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.70717434 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.013603081 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.705995267 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.69437743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.697552485 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.700282572 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.697693715 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.012458768 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.701582111 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.695546051 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.698467379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.699515533 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.071776174 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.703241283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.696058429 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.706558839 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.699443979 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.699795577 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.702745372 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.709340171 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.698462309 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.707398514 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.698361435 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.689306972 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.697397347 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.70048552 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.688288877 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.71372671 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.692545526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.701628319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.689530932 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.693800374 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.071896519 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.707210243 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.688143352 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.085879247 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.704573818 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.703546997 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.703197347 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.702501239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.77334752 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.064963983 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.669058526 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.713166014 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.698097572 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.072834825 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.711598525 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.699253423 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.691303515 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.705585472 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.702162137 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.695393405 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.694133142 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.699345584 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.713842931 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.692137804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.703790621 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.073701669 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.710900845 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.704278893 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.700928016 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.77590143 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.70238207 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.712526111 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.705153484 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.085112275 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.709988778 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.704380696 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.691039505 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.702971684 seconds)
  done (took 243.569812273 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.693755552 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.695392446 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.693547252 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.693319305 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.693183156 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.701671609 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.693936235 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.696276082 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.699739666 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.694921904 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.695974111 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.704029765 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.701662311 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.693954601 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.716745607 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.695472081 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.693097854 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.719183486 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.695296336 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.692962927 seconds)
  done (took 51.512687725 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.706073093 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.441116298 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.397639866 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.711446209 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.705537677 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.702533435 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.769952299 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.706698605 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.705413234 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.093266712 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.930356145 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.7131113 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.705671895 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.704489983 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.392455384 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.711009148 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.080717053 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.437583177 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.711422275 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.435234566 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.711656136 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.705818023 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.701281692 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.438098084 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.10554203 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.082466622 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.779410801 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.440536323 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.712734885 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.715468657 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.44281546 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.711295902 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.704184012 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.428592655 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.714350012 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.721622004 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.706433826 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.775663284 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.77749854 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.099832437 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.452136489 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.088521905 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.727844202 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.896645044 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.711287403 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.686132582 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.447702861 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.715437406 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.686212597 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.711242275 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.714702996 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.405052696 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.712506301 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.40683529 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.713519887 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.709906782 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.44687924 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.411338894 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.407226413 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.928449768 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.704492513 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.081661081 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.715603955 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.453383704 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.714596922 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.710649541 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.712398639 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.930015641 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.453474648 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.087774403 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.110247991 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.109316383 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.717094245 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.784249841 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.711540199 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.105064049 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.787253158 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.155497857 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.107677351 seconds)
  done (took 155.92082537 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.02679768 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.814909552 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.183682033 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.375368504 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.314318642 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.869399437 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.837390952 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.991520777 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.72973174 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.803915412 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.530029208 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.821438763 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.556750669 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.79268624 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.828488095 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.846982014 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.182108824 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.702089358 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.453463495 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.505154909 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.71041483 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.824184267 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.557418802 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.149159702 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.715490291 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.540860887 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.704146605 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.351684869 seconds)
  done (took 64.276481547 seconds)
done (took 645.761226297 seconds)
SAVING RESULT...
DONE!
