cset: moving following pidspec: 14796
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.240920209 seconds)
loading group "string"... done (took 0.573958146 seconds)
loading group "linalg"... done (took 7.732647698 seconds)
loading group "parallel"... done (took 0.161530889 seconds)
loading group "find"... done (took 1.131722899 seconds)
loading group "tuple"... done (took 1.837376429 seconds)
loading group "dates"... done (took 1.241014834 seconds)
loading group "micro"... done (took 0.233083909 seconds)
loading group "io"... done (took 0.903343307 seconds)
loading group "scalar"... done (took 38.153136661 seconds)
loading group "sparse"... done (took 11.7927198 seconds)
loading group "broadcast"... done (took 0.921186891 seconds)
loading group "union"... done (took 12.867087784 seconds)
loading group "simd"... done (took 4.524096729 seconds)
loading group "random"... done (took 9.472819426 seconds)
loading group "problem"... done (took 1.817321505 seconds)
loading group "array"... done (took 20.950304655 seconds)
loading group "misc"... done (took 1.711161614 seconds)
loading group "sort"... done (took 3.35032951 seconds)
loading group "collection"... done (took 18.074609833 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535623785 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130435317 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138173866 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12717211 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153013175 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123815033 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131191005 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090539802 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.853097923 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157551166 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119729456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415671402 seconds)
done (took 5.382021235 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179304201 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087765559 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091201111 seconds)
  done (took 1.264981747 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071008111 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132824311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072555517 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073075007 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072652995 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072384439 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07202134 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072461927 seconds)
  done (took 1.654686029 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078230803 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073384344 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071306106 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073338175 seconds)
  done (took 1.384655813 seconds)
done (took 5.651254455 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.774880322 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212321193 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190043178 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398638482 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132632129 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179039309 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658086267 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328164592 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191218999 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081084979 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112260123 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35106826 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125657673 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645958072 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08300179 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099066171 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143333703 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451183635 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073137277 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087587877 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094666371 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133714796 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089560397 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078908842 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151604955 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072931996 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139268453 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085626399 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071813616 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218750226 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177876548 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657876456 seconds)
  done (took 10.412614728 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104818237 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103108302 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074016846 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130016751 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103182974 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075362262 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080870772 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072843783 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097492669 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134087392 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096609161 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110715649 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071343913 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074551517 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088522418 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214092689 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088448896 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088954774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077588688 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085563349 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112999474 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082812034 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085273277 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085002647 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134461327 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185602864 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10386176 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102573887 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071616566 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086357029 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119790321 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1318336 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071629203 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07102058 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129895169 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100290102 seconds)
  done (took 4.771049848 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.989955461 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147017849 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093902093 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137422669 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070528449 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090389236 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115562382 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070993051 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085182068 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212036729 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.448527915 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592825585 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115942287 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115533441 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108687905 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07305156 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074006183 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072321073 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.494690616 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105405784 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113394872 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086304884 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076422678 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074452838 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071043862 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073615312 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069484045 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073452308 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118612275 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079405435 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3102715 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124888119 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073217121 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.941413857 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169878151 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070891822 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.24411519 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171693311 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095296098 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143601449 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074375009 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070924414 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162917979 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069948756 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075178311 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069691885 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071129133 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089348663 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108496125 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12454784 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070922787 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071769897 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096970566 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175209784 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070293933 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083998813 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.153815975 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159300844 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071319416 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29391633 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095638621 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075849792 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070613327 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.200017806 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123787972 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073311389 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072400065 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074057987 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073860536 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364271986 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071356648 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.234215917 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073866817 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083175852 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074773124 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074664061 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078529834 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078021965 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094072756 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074045704 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078515831 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07139548 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072094259 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071986206 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087789209 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.487508264 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072050091 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073228818 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070490319 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09548546 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100336724 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074070521 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070886265 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104441129 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072774712 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072160922 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071938797 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087654512 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075110708 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118779164 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071758521 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101167238 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100972463 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069912675 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073626347 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103326523 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083874602 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073380864 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.44250683 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070953895 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073297867 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070491386 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073155112 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071621108 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08536571 seconds)
  done (took 22.571598241 seconds)
done (took 39.833990614 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248760607 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074288706 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075162781 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075138913 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075149889 seconds)
  done (took 1.722695224 seconds)
done (took 2.885049624 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126973088 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102799171 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070201749 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101784706 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069558663 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106093581 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106783457 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081912229 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103567485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069952387 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100921494 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069920178 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071692626 seconds)
  done (took 2.355600734 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091095568 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089366794 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075813563 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087910388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069252115 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088498299 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08660124 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094201179 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086632371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078339385 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069220774 seconds)
  done (took 2.071608174 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089543937 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088723263 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075200699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087200118 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071384407 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086559369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086688338 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090518096 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08671846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079770908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068823724 seconds)
  done (took 2.061965676 seconds)
done (took 7.635764596 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082943938 seconds)
  done (took 1.223544546 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544299545 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.63976123 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084585311 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108838885 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192974715 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115366626 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247015033 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088640195 seconds)
  done (took 8.323330213 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097148726 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075415001 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076710963 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088699743 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079141394 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076989279 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079207398 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07836464 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078327751 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078229907 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076774102 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079234693 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077116416 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07573491 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076187466 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079446387 seconds)
  done (took 2.488594068 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098730669 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098448589 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080524695 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08243469 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079737563 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079366284 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081107762 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0785954 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075572383 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077826016 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080278273 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078055538 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076715124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069486106 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078548896 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081078494 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075886663 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079602601 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079438623 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080518843 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079525003 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068755198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076492508 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078531079 seconds)
  done (took 3.157678816 seconds)
done (took 16.341606798 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114460959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075059164 seconds)
  done (took 1.335937658 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086627127 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087080101 seconds)
  done (took 1.332416845 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087632201 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.072248348 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093949206 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083546267 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072594768 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072035813 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092387798 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072692675 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072569514 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072401089 seconds)
  done (took 1.951629215 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075128976 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082423303 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075823968 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085890897 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079435538 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07072753 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078459837 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074450551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082482804 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069195143 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077289849 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089604 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077303511 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091636797 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077799464 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074756153 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076812979 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073548679 seconds)
  done (took 2.577177289 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072657612 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073583572 seconds)
  done (took 1.315728744 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073235563 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070007007 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072489747 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072301061 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070039113 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.068919777 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070086944 seconds)
  done (took 1.660965322 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399312022 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123358595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313334681 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079935175 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089228343 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263433347 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071792606 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077114456 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077031523 seconds)
  done (took 2.694854694 seconds)
done (took 14.029842776 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088839839 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095407236 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102983352 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.388467059 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097153384 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072722989 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118954301 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183708391 seconds)
done (took 2.318619665 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220268327 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.678058375 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417353824 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214436029 seconds)
  done (took 2.474685887 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346153757 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094885288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06711784 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075262847 seconds)
  done (took 1.757418125 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074351638 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077189288 seconds)
  done (took 1.329126818 seconds)
done (took 6.950383149 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093941107 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188765926 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07348424 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070640949 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071454999 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073098749 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07119627 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071388857 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073357592 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073729859 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073338068 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073670024 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073199819 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073292809 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071049823 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070940413 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073097978 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071105396 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071152947 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070867506 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073287342 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071040872 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070976185 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071767594 seconds)
  done (took 3.073136033 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089296806 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071201147 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075237051 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07507767 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073148167 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075359086 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07583456 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073369525 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077675861 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075910331 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075488998 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075451127 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07554476 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075589082 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075593639 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075742373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077617427 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073354373 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075439753 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073410996 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075346628 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071722531 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073717692 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075062588 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073437962 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073536219 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073668607 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07143949 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075242429 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073276453 seconds)
  done (took 3.434452416 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07751545 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069348699 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068665573 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075848454 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068193947 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068651907 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068039467 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070376833 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070741537 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.070202355 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071094349 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068912704 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069974235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070040678 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070735075 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074267593 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086725789 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070026828 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069688067 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071124384 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076833983 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070078613 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070020593 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069941558 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070061302 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070338126 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07125429 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070178916 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070941382 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07009982 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074039065 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07501194 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070561125 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078290527 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07431722 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070523078 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075041244 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07001514 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070900113 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070024429 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06981956 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.069914655 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070011328 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078206831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070689499 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071250149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070086726 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071461206 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070910785 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072664054 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069605763 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070089029 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072468102 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071694677 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074954315 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069815778 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070882987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069683862 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070688083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070018351 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069655597 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069867256 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073455236 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070900344 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087199197 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077979668 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070795248 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07198184 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.07100424 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07402206 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072011512 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08576927 seconds)
  done (took 6.371378621 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09463128 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091518816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071602161 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07133156 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068471077 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070967445 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077012981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070693625 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073004495 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090175763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071211143 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072425392 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073074268 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074711609 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071189274 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073294924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079608583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06858402 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070893812 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075074457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071030837 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076268498 seconds)
  done (took 2.856947947 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154658826 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076660957 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112553 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082392835 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077752938 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082313882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076770343 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076900084 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076531081 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074921205 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074664991 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076950413 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076993411 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072550123 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072810288 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072741156 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074963883 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072923771 seconds)
  done (took 2.677213231 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084863576 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073441517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095066852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073152611 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07332101 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075518105 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077495211 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08142017 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075711235 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07336998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081483152 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075054536 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075182427 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07240703 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075612435 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074145295 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075790624 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073087641 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080991377 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077587118 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077527638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080908871 seconds)
  done (took 2.891837746 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087539838 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07535034 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088455722 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075137179 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068186354 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070500629 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077699973 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073425704 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077450528 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075103798 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07288818 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070488274 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075109144 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072929311 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075724947 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072623552 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075245505 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073051752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074893925 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067915155 seconds)
  done (took 2.692122225 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09192579 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074326812 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074634424 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080747181 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074345405 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074303436 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08111865 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07457816 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074778899 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09545866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074330811 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074612977 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081279393 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081429294 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074702618 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081128709 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081585131 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081013877 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074459121 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074102284 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095987154 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073947477 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078626514 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072936276 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072393899 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072278662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0722052 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076451806 seconds)
  done (took 3.383156827 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074464027 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073328657 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.070957796 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070891087 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071143423 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07096484 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.070886404 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071269479 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073431996 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071079139 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073868568 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07372217 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073203501 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073250982 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073552759 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072501708 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072514681 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069657382 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069290292 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06980588 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072543999 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071165183 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071683223 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069699264 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069206004 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072228842 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069558517 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069042403 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072792589 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069730172 seconds)
  done (took 3.344367819 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082073445 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07802629 seconds)
  done (took 1.35636103 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069719049 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087301261 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.069552692 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078984085 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076305372 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07366204 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079831917 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076541329 seconds)
  done (took 1.801872903 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088694299 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08173765 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073177399 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082743418 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081997448 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089151821 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130896395 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072931438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080275532 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071617662 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086411238 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072811403 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080140715 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073965413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079877677 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08123403 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.07040364 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077715692 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074181411 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071808888 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073619798 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082480976 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077044766 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068574624 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075365229 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096781407 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084480219 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072004393 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076383425 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.080916204 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080225362 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066740295 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072978174 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072999914 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071123888 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081335638 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087667272 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076578591 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082646526 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073522835 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081052372 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06778647 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078411229 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080884357 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086153794 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.072933364 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073070117 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068365162 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071746054 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076158526 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068522232 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074026211 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067913427 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081054367 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.076998855 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084196094 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072087527 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076138922 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076886697 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076428902 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08044678 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075882909 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076913183 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072161004 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084750579 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079506568 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080451373 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066142153 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065509061 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069116589 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080732978 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094659915 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07732614 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071560528 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071608403 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069058447 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075556828 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071541161 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076940487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080534506 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073215643 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077587253 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081233546 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074605663 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07686614 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079555544 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071509129 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075179418 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071793095 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089233813 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073795473 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070469737 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071518093 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083393991 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076701069 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071966418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071323556 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07937402 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064561933 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069972978 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070299934 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071547575 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079110082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074193731 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075325585 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081335834 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078899418 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073181924 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075026128 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068568012 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197910799 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072509304 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080133437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066411299 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075617568 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073417234 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071657897 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080397081 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069507007 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07282066 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082510179 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080144904 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071207559 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070381101 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.076632501 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072649759 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075144845 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.081757552 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071689566 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067806324 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068269814 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077073247 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072675051 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077472106 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076538606 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077310928 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06770471 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070555441 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077255474 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082115609 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.073558023 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074728301 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079110276 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074887244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071806594 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080844301 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076251075 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072993396 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078800495 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074311766 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067700342 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074403143 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074873589 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069432646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076762641 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074240372 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075691032 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073596187 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071949448 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.078931006 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073184762 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07286777 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07401557 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071744964 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084315871 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07566575 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068232076 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070100134 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080429146 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072534532 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072284585 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073246476 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075567807 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072848188 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071127483 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072523239 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075824998 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081028354 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076002332 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073477715 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079388157 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086994125 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072264906 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076068442 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072593487 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072353804 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072157174 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083173254 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080303917 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076662526 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076375137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07007157 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078865687 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082057888 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073485779 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070655124 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073184866 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076449341 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07993588 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.076710302 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073557674 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071570567 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074639449 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075300791 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075945274 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071657169 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072217362 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.077053631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070793549 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077693454 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072701168 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083419549 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076539719 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067667873 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07382622 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070270593 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079517521 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06720341 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071281827 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072186959 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0723947 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071240378 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075144054 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066617702 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079809152 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080323785 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073412216 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072299016 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071468504 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079422049 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074316667 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076121819 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076736543 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07843126 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082905043 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072576386 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079358044 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082620965 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071539106 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066049962 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077627666 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07053732 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069953121 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068622737 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068052742 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074412149 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077870945 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078696818 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066539259 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075071822 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070528021 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072047015 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06727342 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076962803 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074226794 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070629681 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075859731 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068588648 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069023267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072340803 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068627724 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069565641 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068955184 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072135723 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068338282 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07117053 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068853404 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073370304 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06868676 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067054648 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071599422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068014756 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070841798 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073996602 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068256992 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069570604 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072058239 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068760233 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070322804 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070121946 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06954235 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072749072 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070668391 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070466008 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071715806 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064205873 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07665696 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068023507 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076251772 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069854199 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065607156 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072370599 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071538639 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071732147 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0684243 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068860861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070820877 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068017268 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071148564 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075925654 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0688518 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078703187 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075039996 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069770619 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071511172 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069669545 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070290637 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069007052 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070313822 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068296192 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069720997 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068321278 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072335955 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071151201 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070485428 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070605537 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068724144 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070403103 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068546669 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063808133 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068530705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069399578 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068212633 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077430701 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06861268 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069535024 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067655769 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068955331 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067989919 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065795619 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073239706 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07381088 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068666333 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074702114 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068052633 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070904072 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078433043 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063685393 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067067611 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.304048024 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.072242258 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082004667 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074008206 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084506713 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075470144 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074980498 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07186082 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074699004 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072621225 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069388673 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071985433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07879521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.076289591 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075486151 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.076602682 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.080128359 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076226999 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08546381 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.075215155 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.076910284 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074944651 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.072048706 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073801906 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072949281 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076198941 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073491337 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071760486 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070296621 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071875306 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074676757 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074960849 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072490011 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076336261 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080596817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072512017 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077158402 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074545939 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067402289 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076045303 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072226508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072204092 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072551394 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080683291 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078664149 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075499836 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084898614 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074084759 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076398704 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074654097 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.07207188 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073407725 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073523279 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073448374 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.074849874 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074975853 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083313124 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072019268 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078205722 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075107178 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.075197335 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08125862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074197477 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.078152528 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078869811 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07523534 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.077080321 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082007857 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07473125 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075469607 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071887088 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073945053 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077982565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071682208 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07885767 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073303175 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071602757 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073859 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070850046 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071424692 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07105628 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070652284 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07759857 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071297709 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071311744 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071693472 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069527822 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073118511 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073376831 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080335595 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074198532 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075157425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066702147 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068664582 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071572883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070175126 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073398771 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074313085 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077911661 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074251574 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072402132 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069519555 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080246258 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076795581 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075218632 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070358235 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074747662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07270699 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075442115 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074387699 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072550429 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071031548 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075174511 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072934848 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0709752 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077065624 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075023278 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.208433982 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074800493 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073931858 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07301034 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066911355 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071730246 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074097607 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07632834 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074276635 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070657736 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082383068 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070722473 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072288065 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072961087 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070870769 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076921773 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066700367 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074266054 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071543893 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071367744 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066328064 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071193372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06981761 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074069418 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071198819 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066686753 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082184516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08312245 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077010421 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072405612 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072103677 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068529784 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068351857 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07379943 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073718599 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076276672 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084298665 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07346137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073069358 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068393031 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072879357 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077348323 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077837329 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070556322 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068550077 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073455359 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07741562 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079975074 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072047752 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072320586 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077455578 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076811842 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071184582 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075778624 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071241831 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078575941 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086140134 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073233294 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075351145 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080063575 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082090765 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073490769 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068266341 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073330011 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077556585 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074786175 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074447313 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074002938 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08841108 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076931251 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073656429 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072118379 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.079588894 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073309334 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081982762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073627684 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073145136 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.079100157 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075741681 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08039772 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077979941 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081226039 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077236892 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077094796 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07220857 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07424046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071515833 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073471158 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07414036 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074186823 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07719061 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079742342 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073484544 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085351902 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083275655 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075442583 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070185097 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073639977 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073252286 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068220252 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073520917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071446091 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.07107093 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071325074 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071615585 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074728623 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078537842 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074065769 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072516752 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072350897 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06709992 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076003586 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075612296 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074566862 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069839084 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072711147 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.208612506 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07724467 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074095037 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070246067 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074047959 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073485261 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073431228 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066380378 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079540058 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071430045 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074053794 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.072143861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072357952 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073553913 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077406906 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074449787 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072083981 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074233327 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075889988 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072226101 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068605394 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069002914 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077236977 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069238876 seconds)
  done (took 46.146532226 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109220139 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068848714 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067121658 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066946769 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077126447 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068159715 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067792024 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067966043 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068191448 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070014355 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066881821 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067119661 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074807827 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081854249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077069462 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071569386 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066823418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068329864 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06709145 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069586533 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075997622 seconds)
  done (took 2.835513273 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080352343 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084771841 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081941383 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088900845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078409073 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076931437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082478542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076878876 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085434394 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080275338 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085760168 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076733242 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078151958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077519949 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077508838 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074839372 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08292427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076785719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074781723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079600592 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075410531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079534842 seconds)
  done (took 3.055784258 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073853619 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072859778 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075663357 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068109236 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072124938 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068212708 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07572339 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071226098 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075818293 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072775938 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07324029 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081870829 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075342319 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068265483 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074182229 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071130966 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115414838 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07495631 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071255702 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.072586586 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06675752 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073306328 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066520543 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067325369 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071359233 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073336536 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071344479 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069609849 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070475276 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071034156 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.071048389 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069835448 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073408241 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072725245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071307526 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071006485 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.073872601 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071352436 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066988042 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069764735 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072172667 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067338993 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070991988 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073933085 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069521387 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068911818 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073662189 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.071148404 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06666227 seconds)
  done (took 4.853852973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084253402 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113447633 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073246432 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092687852 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084049582 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077236658 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07518778 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094295188 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068494184 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069758581 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084949375 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083397772 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070421582 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074534672 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075264717 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070173816 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07156432 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069824753 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073769724 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069885831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073635369 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076999731 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083907604 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082336713 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074198715 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069714008 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070239258 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074679051 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081939956 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074319894 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07454564 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075235794 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084861244 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073076985 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06985221 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072382694 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085882526 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070926044 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072894665 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068811359 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074834446 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076763953 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.080566524 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088306458 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.073296161 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077701314 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.073595263 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069323233 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084391944 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075153342 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079736664 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086247863 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076249891 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072745509 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076019447 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084560497 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070936641 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068799707 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073386612 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081364779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068791535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073757646 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082849111 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072244665 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076847462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08323371 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07554441 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074036404 seconds)
  done (took 6.659982232 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084090054 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104595979 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089801081 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090015372 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083445124 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083664237 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083916563 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083954499 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083139827 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087387513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084087662 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122462342 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085483727 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082758869 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080970549 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080520023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080682831 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081080511 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080836848 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080833004 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080650905 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08691337 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08064621 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087202971 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084159599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076883053 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0805485 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080602612 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086823023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081703902 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086107566 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083145151 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08268053 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089710705 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085050102 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082337498 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072914676 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082532385 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083352656 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083439086 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078829032 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090202342 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082795954 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.077569433 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081292928 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08092586 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102989137 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083600375 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082485597 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084740342 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081455478 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087249724 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080397762 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080865842 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086914832 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089547331 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086636632 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086828218 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080257749 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087338193 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087008235 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089215271 seconds)
  done (took 6.587279226 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088572807 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080069203 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.091357035 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068772884 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070943845 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079697786 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071463819 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071155551 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080646679 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07993695 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082301972 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079171903 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080707495 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079708955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076882126 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079277705 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076689668 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077064761 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079578542 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079478952 seconds)
  done (took 2.919659096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.083281371 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09030752 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07409792 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077109674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074115565 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076373304 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076486597 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076695287 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074362587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075992349 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082417952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082607161 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074868688 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07863791 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082178906 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077292199 seconds)
  done (took 2.590660198 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.089911972 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.078538286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083370625 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070565622 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072024435 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06740871 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070804584 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066227501 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068997997 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085344209 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072401932 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084598272 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072494174 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071777576 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0695339 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078083679 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068679256 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069832003 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.07247301 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084167064 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076765087 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071096631 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076876209 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072618704 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075456385 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077606678 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07157902 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.074188349 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070097307 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072353964 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074583855 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076931639 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069363345 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070725293 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071578637 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069609344 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072275146 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073161839 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07863038 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072857697 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070976849 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075642009 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072627471 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073497881 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069396382 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072983631 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06915026 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075911473 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070382432 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076065465 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072760039 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.074890112 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072813095 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079003164 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073971011 seconds)
  done (took 5.398731701 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087900811 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076759719 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068033893 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07044111 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075546188 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072543782 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074248873 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072253105 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07379253 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070626622 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074722824 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076172011 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074848198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07661513 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074744945 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076863203 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068222401 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073338892 seconds)
  done (took 2.681079512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079497922 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073713463 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.08052694 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073612272 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072904598 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075065881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069221271 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071744638 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071444476 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073345463 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073485915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076073981 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071731566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075708161 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073665582 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073158022 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075700089 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071430237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072740918 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067485654 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075319405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071909925 seconds)
  done (took 2.952718972 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101939832 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090938379 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146699937 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08641529 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093785472 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079364667 seconds)
  done (took 1.938677109 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100267302 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107692141 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073484792 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075258658 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080052715 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07533453 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07497258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075725546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082433095 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079957131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077948156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082761848 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082147333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081304069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080007542 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080354652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075989284 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077285954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07412765 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089360823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077689389 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084729862 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077655491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077371547 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077545684 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084282942 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083730215 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080716683 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075369609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082422524 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080642616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074946121 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085029252 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082428831 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076626945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085565224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077658829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088401496 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082314805 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084325205 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076553252 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082376633 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084783625 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081619092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085351692 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077439206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08162281 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077540442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077850428 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091365678 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08344468 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084303363 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082811845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085269241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08510335 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09140726 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08170053 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083152204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080360523 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080566498 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081742397 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08081801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081887141 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080546879 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080502312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081778843 seconds)
  done (took 6.731890724 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112939326 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074432295 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078018964 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082412076 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084236242 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078191345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078140234 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077800965 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077850851 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074676839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115870053 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078113895 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084625603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084068206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077683092 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077520778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077979986 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084403172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074840338 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089932973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075450108 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081823902 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081815872 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081751616 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08003215 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080496564 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075761981 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075572033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075693251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075458012 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079684375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075273478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082073731 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072586446 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081645134 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075606772 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075904088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079317592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075457967 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079882333 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082501231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087001079 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075510751 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075170428 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07991485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075344995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075376885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07273866 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076421882 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074453425 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082478307 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082497304 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082668667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084318917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077614557 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077663581 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077550193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077723026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077840526 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083080586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083843247 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077632725 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090918662 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076822966 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077177214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083090416 seconds)
  done (took 6.655016532 seconds)
done (took 137.067611283 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209946479 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182336176 seconds)
  done (took 1.720112739 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076511292 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104106641 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084088928 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137597896 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072884574 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105814691 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104770389 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083351919 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071631343 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074079234 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07449458 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076773883 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139584168 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07220135 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071452879 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074318932 seconds)
  done (took 2.771732294 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105780623 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162379669 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106176623 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070266852 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103160525 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077322355 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073921002 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080018012 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075900616 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071044356 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077220709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075809864 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07096403 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075192304 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076013708 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077147002 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071001503 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076945539 seconds)
  done (took 2.87517515 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104504337 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094586219 seconds)
  done (took 1.553931973 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.168643032 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139987832 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209061265 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344886621 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163018023 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.152192142 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150215565 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148282557 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121545969 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142578895 seconds)
  done (took 3.089008934 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10841905 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157692447 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.281772627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12562812 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08095194 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098841705 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123968238 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084128172 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084952895 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083939315 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083781212 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081285937 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10417391 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078553739 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079991568 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080811828 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10779466 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079129125 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080328777 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080653337 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105966184 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071707352 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078625983 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079128812 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081725751 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083746334 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073973345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074009356 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082833414 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082689238 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083914979 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097493291 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084219934 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109221357 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07935373 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10739665 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081085039 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078144162 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.08072807 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077905726 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082368975 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082484103 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078759182 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08111964 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071752993 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081063195 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071668552 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071644602 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082222891 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072796253 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082313366 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081257629 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1061258 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072610858 seconds)
  done (took 6.278121034 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.115723091 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111161168 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076249931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116631203 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108614592 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074933762 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110393734 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103716586 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112041986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075594907 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073572462 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075212856 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083970609 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085388597 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119901162 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11183327 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077655236 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0749303 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112223738 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111323846 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074177981 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106233974 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102188782 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110744026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073378686 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075011339 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073956456 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075046806 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080457854 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081913771 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074007399 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083626597 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087325618 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081373185 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072817596 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074112784 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073829787 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082655826 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082928613 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08287403 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081483491 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072873862 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075800536 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076504136 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075558257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075111052 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084308186 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086008201 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082319802 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073382244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075366954 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073873053 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07484351 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082599135 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080487654 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083394573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082659547 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074037646 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073567438 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076597153 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083338674 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083397081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082413762 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076667974 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083084913 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073943241 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083862408 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087542241 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073965008 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075409139 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074139832 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07439329 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074662307 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08102362 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080728488 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075579265 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07404536 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074136023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083514031 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082751388 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074142361 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080718082 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073171172 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073692403 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074920823 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074366285 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079891294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082539645 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075466749 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073595953 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073463028 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073136942 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072521209 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079689711 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081567168 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081583927 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081028773 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074496217 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081453528 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080255249 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208555036 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082879648 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075169209 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076027649 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075278996 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082550185 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080975263 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083138283 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074246099 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073870274 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081762483 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084522255 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073996057 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081198527 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083228799 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08212957 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073396366 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084722832 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074988338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083049546 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073847128 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083746158 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073776788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082130975 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074572083 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.073478758 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07416316 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082715214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075068506 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073906602 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074756806 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074242424 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082100109 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085293692 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075247434 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080864367 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081359272 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074596598 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081387356 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073658384 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082288308 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073449516 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074957711 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07340265 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084652454 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074101954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075414048 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076348162 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086414105 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073871905 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083139191 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081061412 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073075694 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084997359 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083674347 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080564336 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083015584 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075126707 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07386085 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073726701 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075277286 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083732745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085036153 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078021159 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076320521 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082466035 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083069271 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073090548 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081832848 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081459383 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081675451 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073636277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074050818 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084012439 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083662019 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081073892 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081755877 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081590649 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074019159 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080652344 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081708614 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073852375 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087432889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074628882 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086924391 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082382078 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080407722 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082562498 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082669039 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082762034 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083393772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08568449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072694372 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074575383 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082931019 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073196806 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073271418 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080280762 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074456276 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076633249 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087801664 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072915442 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218123985 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073888001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082742129 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073744892 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075831042 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08794692 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075721912 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080695073 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084697961 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076534594 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084187434 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086849336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081646738 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073760627 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075103602 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082759549 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082769383 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07363353 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073812801 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075572486 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081604743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080755751 seconds)
  done (took 19.704867286 seconds)
done (took 39.357752065 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202915692 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150496111 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16936093 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122081285 seconds)
  done (took 2.078660223 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116942066 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10425622 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09513575 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072554078 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103155743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073143219 seconds)
  done (took 1.952977596 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284303415 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195301313 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178608087 seconds)
  done (took 2.039369338 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206164505 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191575664 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.438269294 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269095269 seconds)
  done (took 2.583761325 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145856119 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091504038 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071966451 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090348173 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134079969 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163330608 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103960091 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127497431 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084032763 seconds)
  done (took 2.449592968 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148344715 seconds)
done (took 12.635377046 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.104321357 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.11859502 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.216091461 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132588136 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.079769672 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090252977 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076226737 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.084221005 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.186721202 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241056639 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.211254476 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083429394 seconds)
    (13/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.234842107 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098989732 seconds)
    (15/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.099615208 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211041996 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206729445 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.193819364 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.082453999 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081279205 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088899296 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.396834928 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.080051395 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080302549 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.166655479 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167469022 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.237153773 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106281464 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119595104 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090283903 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091549886 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.079872157 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178906932 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082335525 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.227163091 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079789821 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.206585243 seconds)
    (38/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.167271943 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.163140205 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.08162718 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197925754 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070523257 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082439602 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070073797 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077609607 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.080370782 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161774885 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205553121 seconds)
    (49/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098766565 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.159669546 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.207660042 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092692856 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.072858295 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08778847 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.08012793 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057475181 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071251119 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071199449 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079909175 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15590959 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.060126372 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07272464 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07863675 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082604452 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183113303 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070053756 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077905268 seconds)
    (68/309) benchmarking ("sort", Float32, false)...
    done (took 0.137057183 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 0.135837202 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081246306 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.179406791 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.188488271 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093010624 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143467002 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082372656 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070684163 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.179647681 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182493829 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092642492 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136395974 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.273768024 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072591005 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080150292 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.221439701 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156849909 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.16638154 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071275353 seconds)
    (88/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.111931855 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062769059 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072068645 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.076572147 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136808957 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165620061 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081831354 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09537107 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175795782 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093327033 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077339214 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164960258 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072840447 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116560054 seconds)
    (102/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109066567 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.154928188 seconds)
    (104/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075892942 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083467712 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07639086 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145098754 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102062067 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158601071 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087711563 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143512377 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081439537 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079550296 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078545757 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094679312 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07806831 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079541034 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202447833 seconds)
    (119/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158057971 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07521188 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08160008 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082596592 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09771175 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08208326 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057616054 seconds)
    (126/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.110467908 seconds)
    (127/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198427318 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.168016799 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.060836676 seconds)
    (130/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.111936634 seconds)
    (131/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089606627 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098328345 seconds)
    (133/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087106064 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.08069594 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092931426 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093107073 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081913683 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148420897 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087150893 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087915205 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080907438 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073177819 seconds)
    (143/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.122580971 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.058927269 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122762877 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079807959 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077959493 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070874423 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057023206 seconds)
    (150/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.11804815 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057181036 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07888513 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057235608 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083083704 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077604613 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.113005193 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17729809 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123866743 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06249964 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.072790369 seconds)
    (161/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083520771 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.112144126 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.059644612 seconds)
    (164/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086386013 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098574036 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100059859 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104171189 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15063574 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.204582478 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129460112 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092378098 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101117735 seconds)
    (173/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078930651 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09294997 seconds)
    (175/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076754404 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108957419 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057938514 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056673222 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070479424 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058743183 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07853855 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07234162 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.248393064 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082592887 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058024368 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071727375 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080396117 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080062733 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.082031415 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098798298 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074221658 seconds)
    (192/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.122942133 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137715074 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073672388 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061699386 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.060845643 seconds)
    (197/309) benchmarking ("sort", Int8, false)...
    done (took 0.155031674 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059615432 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096054325 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076571092 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.072268319 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076082115 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073695395 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.060007514 seconds)
    (205/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.072185646 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05945974 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07440308 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081157021 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.059639431 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075099823 seconds)
    (211/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.071374368 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06123682 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121057381 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080663272 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059625743 seconds)
    (216/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061388077 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077338163 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.060338434 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082578525 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078451163 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07937726 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067943262 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146813974 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.073099891 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125578943 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057875176 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094670353 seconds)
    (228/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.058154413 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078875972 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071531481 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07134556 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15631415 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058898177 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059026956 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071950614 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.068052051 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.178270452 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070108138 seconds)
    (239/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.070318822 seconds)
    (240/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07357089 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.060496441 seconds)
    (242/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.058075041 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095195558 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073564585 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09617909 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057073371 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057207577 seconds)
    (248/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.059016326 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160552716 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074447087 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152479159 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057554493 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077386523 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07034027 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071239945 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058736647 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.057571934 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143355972 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102520669 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135976759 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073119194 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075499859 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.058792532 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073069301 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058683317 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078768584 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080268739 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076708156 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074135181 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071349245 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093709816 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057829072 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069640998 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094408506 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072247868 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100480018 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057533494 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070970569 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057134935 seconds)
    (280/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072019723 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070818415 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056964101 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070726473 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061733995 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079558919 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091611387 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071131859 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079150802 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077801182 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082361938 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071335789 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068332199 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123803443 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078026999 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079027645 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057141415 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071654491 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068728116 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076825775 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06946265 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094731669 seconds)
    (302/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194412911 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059014508 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057889032 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059236803 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070717211 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.352119175 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.062335443 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087325815 seconds)
  done (took 33.120201667 seconds)
done (took 34.516591609 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093147921 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100696187 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082227685 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100260175 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088566352 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086496984 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082930473 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088054724 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090482542 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.092023462 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08873601 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064922535 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.08500451 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.084309695 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084522413 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100410798 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.088305515 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081971503 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.080852777 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070988366 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080349307 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071957343 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073561446 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061469353 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085109776 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07895743 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080534136 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080717939 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07178768 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.07211226 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075999609 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080119399 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071548297 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085940358 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079764616 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079437445 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080834933 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083092784 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07364803 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071755217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081543812 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071567215 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078993836 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080368608 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078677098 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079355144 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080919936 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084151768 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097702113 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07482037 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081095732 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083442478 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084840473 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.080306424 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077805741 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08078024 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077582058 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096303633 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080021962 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073633458 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081316324 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.08003787 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077223959 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079478464 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079402631 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081768101 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083126989 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077444988 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081067853 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077935468 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0711861 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080463119 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.076453262 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076605363 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.085050175 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085384843 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.073435933 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080571329 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081047903 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080519891 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070910428 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073565424 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072962534 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078252282 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073521349 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061031475 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075935006 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07839574 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070805275 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080022763 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07866859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08062476 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073885893 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.086220603 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073602256 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079544716 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073820514 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073797901 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075039053 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07782446 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071358317 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0739166 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082426548 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072981525 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078318978 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084066951 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070608933 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07816404 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070050074 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070386497 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084099365 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080725832 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070872171 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073356603 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070176535 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078707428 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069767139 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07053918 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070646842 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070627455 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078186505 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070674192 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073152819 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078137138 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.224609507 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072004032 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075955083 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074573927 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071621602 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077695961 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071488886 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072531656 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075387778 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.071032995 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076614132 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073969443 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081261928 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076867204 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081659383 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075121075 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.082645165 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079058421 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.081152079 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079564127 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070432653 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067670399 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075352998 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07467426 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073498268 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07343415 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07487736 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073635173 seconds)
done (took 13.514281163 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074577785 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138254351 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099149254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100912939 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092484986 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074550067 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082985339 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101909785 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073971526 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10618535 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09571507 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094338657 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117062115 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072405854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.072786296 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07585322 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07346039 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.0862238 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100650603 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092036637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116202126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071056454 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095341622 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093039869 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09045788 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09672464 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072487422 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076243482 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075233227 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104521481 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094281542 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075881705 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072622592 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099880094 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099559792 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088263441 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.073483051 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088552235 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074544399 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073184936 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075501245 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103580546 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086748865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087813236 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.077693247 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082164294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073002207 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086486891 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092205467 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083390902 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088804798 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101927696 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074236557 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087577588 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070607121 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089115792 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08082612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074455564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072444318 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079886359 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072333147 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075907157 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086051114 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083582416 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075505395 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087819541 seconds)
  done (took 7.14626454 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.092693065 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.103864053 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087696014 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087964671 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071052523 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072931212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071771575 seconds)
  done (took 2.075282383 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075231749 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094409203 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094590681 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092904417 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085439115 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095368767 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081129723 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072486715 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096098613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073294483 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09189953 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102292355 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075792793 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.088637957 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097622831 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07234977 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09462917 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072353569 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075611264 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094676919 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080125743 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10308096 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081965091 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074441031 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087687236 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074772781 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120572985 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078566325 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07640886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.078064106 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074984928 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110901219 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084878958 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079631944 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073139419 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087511007 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086152819 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075648948 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083354632 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081412 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085510343 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072510449 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073947683 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073873917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076415794 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082147403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073683156 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07639111 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074996111 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090668522 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071140476 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08476493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075078489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077150823 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074034796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078405096 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082116861 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073198928 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090977287 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075019279 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089983916 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089909954 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087203518 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089708168 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076227234 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086027825 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087270501 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.076587479 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074655939 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076029853 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086941886 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071219545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074004243 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081996081 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074788649 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095109861 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09726061 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076215098 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088382949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075542918 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075467121 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074923433 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09736184 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079996657 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075087745 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079488317 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0781866 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.077742086 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073915437 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078673559 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073071581 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.080658486 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077983135 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078053596 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07741056 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090198849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.078084622 seconds)
  done (took 9.456230093 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077390843 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075199142 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07426175 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07322248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073066988 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073846657 seconds)
  done (took 1.953760231 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096663063 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073815796 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084387993 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076610884 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107900391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.09066314 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.09157594 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082001852 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08784972 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083476928 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090249959 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091792523 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095799773 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077509887 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090799805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076449129 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091306874 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079220663 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083077582 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077436054 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089922311 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077364411 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077914196 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086068064 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080447378 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077098481 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083384756 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083530089 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08314758 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08200531 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077648476 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080481232 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075383635 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082293816 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091154123 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07721757 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078732976 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082052622 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076770928 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.08037626 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092288326 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07761471 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078912765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081737633 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082078264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075386299 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081898685 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.085153486 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090711422 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082035314 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082110506 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076087352 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080651097 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08260199 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075786578 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081851238 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082020987 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092691818 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079956085 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078222778 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076622755 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.08358458 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083764855 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081183143 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082242541 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081889363 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075674412 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077634721 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077488406 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076540743 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082050556 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073503776 seconds)
  done (took 7.422497706 seconds)
done (took 29.523715715 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548372454 seconds)
  done (took 2.012547523 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607506489 seconds)
  done (took 2.10069452 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.148590687 seconds)
  done (took 8.636160259 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.377770961 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484752745 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717412547 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140351504 seconds)
  done (took 3.213202342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.730177592 seconds)
  done (took 2.228515957 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243570342 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230557438 seconds)
  done (took 1.981604183 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382190937 seconds)
  done (took 1.873775501 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137486533 seconds)
  done (took 2.627987602 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.244481684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18090333 seconds)
  done (took 1.92412274 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454790574 seconds)
  done (took 1.948351236 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.903691056 seconds)
  done (took 6.401133935 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233176925 seconds)
  done (took 1.770332292 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241873411 seconds)
  done (took 1.737283096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.758226862 seconds)
  done (took 3.256179969 seconds)
done (took 43.215610879 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.091342733 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090792745 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089917969 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086236458 seconds)
  done (took 1.833549107 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084535912 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078986082 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081252683 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077459872 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080910413 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078586859 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079767453 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080928776 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078427642 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078898981 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078288698 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078021041 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081477056 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.080414177 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07880734 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.082941182 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.082300359 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078343529 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081029864 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078092801 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076313523 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080284425 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080129496 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077366936 seconds)
  done (took 3.41375062 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.087041542 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080862663 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080887324 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077079905 seconds)
  done (took 1.83389784 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086193702 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09554537 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092650059 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083684374 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095138515 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090416882 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074771048 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07433902 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075892427 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08355327 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073744099 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099580261 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092498345 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083352352 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08595483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07029656 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072651 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091644191 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08464119 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084415179 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075546592 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083586641 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073811515 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093861107 seconds)
  done (took 3.520975084 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089204736 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107033519 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084980803 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09500395 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097019582 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0706609 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084790331 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097837151 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130937857 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071102969 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076742218 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071144512 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.081261187 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.075953846 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088707141 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115278906 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116748292 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074783412 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102561616 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071186445 seconds)
  done (took 3.315534884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080795634 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077583172 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.078140421 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073117758 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083735399 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078138807 seconds)
  done (took 1.986433094 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075894702 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074072659 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072451584 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072410931 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077494241 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072864252 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071220888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072764752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072827393 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073029088 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072161533 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071332427 seconds)
  done (took 2.389139499 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191558353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073950808 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074620064 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070932284 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075977478 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0729261 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086935468 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073204865 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096799817 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072152974 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072436093 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074160988 seconds)
  done (took 2.548029619 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198946778 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080168061 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228617498 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152749397 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110346516 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11511542 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114848164 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114186057 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139142737 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101870348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162720854 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162930958 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109534953 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138560598 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093893154 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106111334 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154460196 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165971406 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110183303 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163848529 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143786879 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128641855 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146286883 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10472225 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107458562 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120466211 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076562422 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083914101 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16653218 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132208558 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142659778 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113863711 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094274061 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17844373 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167344529 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139304914 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149029452 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087279912 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106361393 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13340065 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199463872 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091473502 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301490314 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114514877 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086373766 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134585059 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120021616 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122338433 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106786658 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093818557 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143864243 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177725093 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134246693 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089846533 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12480959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113982407 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113742381 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11516278 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172180451 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157348594 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12895173 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076706664 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110060695 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149048475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136005109 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109325949 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124620486 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094665584 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132544239 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152376876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123583064 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140468217 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116633291 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092117085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121768431 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137438958 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128320608 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158788718 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125319695 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07802437 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123093691 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102289545 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084888023 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148405035 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080291502 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172105338 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102981136 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109024678 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124142944 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110159443 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110233335 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153525611 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286478698 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108068921 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073088757 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108637413 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12103638 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143899481 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091223926 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110613153 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119782063 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083320443 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134420944 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080656408 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125346462 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.085752025 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128844496 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134640509 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085471845 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129462422 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109888167 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108246565 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134040828 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159299627 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094642808 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088734633 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167434906 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127294572 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108836135 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145822427 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157507513 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10600009 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102227804 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145577022 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166761887 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093140803 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161061419 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106910272 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087423348 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092024091 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12503033 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112803757 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125146956 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085774754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11939151 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163482391 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079975102 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098506092 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134535034 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083684384 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086732191 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10877345 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106426571 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099615442 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101055505 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103807017 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135009029 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275039146 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108971892 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124838419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101891132 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164078149 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091871888 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1066401 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106280664 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075785732 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13149835 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152387515 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083418061 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156789081 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123063625 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117643681 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120704466 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0880824 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13580772 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082988918 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075134085 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139612412 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113542664 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11072142 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147988042 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116964654 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124849205 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11977269 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131484545 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129875743 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129745094 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10968198 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092704543 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114980942 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128279302 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078578701 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093690907 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084342932 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108093351 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098456476 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087169585 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140135592 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123759521 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110207879 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114792917 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101174681 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145612009 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080703093 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126530432 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12094984 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098558132 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148988499 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149026865 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132865475 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101651219 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282911641 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076553369 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079762854 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090621308 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123585953 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087456628 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087834333 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115642179 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145061707 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128492407 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134040085 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125241115 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120680969 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152386997 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075491236 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122850293 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144509198 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122357443 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107628783 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094312184 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102713922 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140371388 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107423035 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172799602 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116129078 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12643048 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156249538 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106906842 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083787935 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105698018 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13201471 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105554338 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142904091 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101948467 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091893513 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110802203 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080478304 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100740403 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127285781 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118833741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137474049 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115986746 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133566179 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082447755 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115588401 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122973352 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122157843 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069514418 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118777583 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162709082 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09792945 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118283239 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296922456 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083897456 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138313331 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168461664 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143018545 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088989116 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112119864 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126382785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127800689 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120175932 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135882072 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107191528 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137567166 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115027949 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09300712 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092123615 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099838473 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106707915 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098026235 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104995206 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114853993 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103509071 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13490105 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109532092 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117446271 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123869789 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106454411 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.10038631 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101619767 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171970799 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119862246 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166021114 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104151809 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140111559 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158078571 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080025061 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083561676 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082949801 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13657812 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089237959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131364909 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113140884 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118821702 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125573476 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141311114 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100640876 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073909378 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110439665 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132089163 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123914344 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100419347 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103883791 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157982486 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102427484 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082444273 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26018605 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118961694 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106020875 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165490839 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068404371 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108896937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081736317 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083539785 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126676112 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147157203 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084695101 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102944642 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121673227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113079676 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126185708 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100562284 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110810637 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125051168 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144441843 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127263206 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093070674 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112175723 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130522175 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15235717 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104877393 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101586605 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168540313 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149594976 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156139067 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090312305 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116810656 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116643204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11244011 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14059998 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08921291 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158254925 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086308549 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135814451 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104666813 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091440708 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128662624 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113225155 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092521 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143941512 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11806596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08702296 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082001303 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115931564 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119760293 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105671319 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078961308 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286674202 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07941358 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133071103 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157431598 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085032594 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107854612 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098940369 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085071643 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106930533 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104295558 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090572091 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103551017 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166027332 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089149721 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144825077 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133077455 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113296423 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133777008 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107755427 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646056543 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084818547 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15207588 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120003505 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170994885 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106101532 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123481784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115913503 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126068705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145922228 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108178093 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.186478241 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135475668 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121477084 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08676488 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108534528 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110436049 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094133341 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113214929 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116649117 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117304462 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096412402 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117606836 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123941357 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086817325 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099624718 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154194608 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115752679 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141569033 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135427309 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088182767 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118756254 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136093723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232047969 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120309719 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148326579 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107282468 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101864052 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085103935 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10162585 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158427674 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079144743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156120263 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124463338 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111789124 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118033658 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113737203 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133994789 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110037569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124927085 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098488017 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111263983 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130919997 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086281369 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083774746 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110985795 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116114302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105850066 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10260036 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.106734181 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150829052 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077596024 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101454037 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117712219 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141536463 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167285742 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09281148 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087431686 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121385433 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118007871 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114578714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123280508 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083510089 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085847227 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084003022 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086618163 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113038411 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11650478 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115889233 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112311882 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158813988 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088424637 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227572408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09855536 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107080234 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075062724 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081437781 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098367589 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098448576 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105619561 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108660498 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153029518 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097802234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091573148 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091843792 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079129243 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085750072 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123458976 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110364454 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11625418 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10108063 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067687159 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105166091 seconds)
  done (took 59.636014757 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119025913 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089275686 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.103553886 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151028816 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127186698 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205388972 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158064888 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194313236 seconds)
  done (took 2.79889909 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076758604 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101784453 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108597474 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088901533 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072078467 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074300864 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227551257 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086973192 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071761912 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097451701 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083016664 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074856109 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412003924 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071737719 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074104845 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068634045 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072933951 seconds)
  done (took 3.460597226 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.402267253 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617789779 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345358468 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081972506 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.982786107 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095692519 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.314825831 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139155571 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084429906 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534031074 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.441469323 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137604213 seconds)
  done (took 18.784337693 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.090534052 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082173427 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093503451 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093204618 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082990967 seconds)
  done (took 2.048212465 seconds)
done (took 109.095484222 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090959953 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422483927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059835843 seconds)
  done (took 2.117879533 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094961397 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090413233 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089833692 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087697405 seconds)
  done (took 1.97827321 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082680628 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08259147 seconds)
  done (took 1.775024184 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229927521 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171535755 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101055173 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090589307 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08576961 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085138821 seconds)
  done (took 1.872796283 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080183564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080758174 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077608289 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080248988 seconds)
  done (took 1.926068049 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083787517 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059981621 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062089735 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064540776 seconds)
  done (took 1.87626552 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094444263 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.090248592 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084006427 seconds)
  done (took 1.876527047 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108484396 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092711491 seconds)
  done (took 1.813099716 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089355109 seconds)
  done (took 1.697800921 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096989487 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102993306 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135357879 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117774331 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141744855 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118459241 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08948297 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090498453 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083562754 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.0910164 seconds)
  done (took 2.679299758 seconds)
done (took 21.808510716 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08755858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376106505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3647226 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094288308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69881505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361781509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998088739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097945943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144759986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073566982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090116335 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655845966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988975765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335344374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976563751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335457444 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654291132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074449115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073930785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07444161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.98541764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074177882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073889103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074508149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655390697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378152318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074198125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.33637194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073947514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075706586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360768529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074166483 seconds)
  done (took 16.38201472 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09653491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126293761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078009047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088894105 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075842514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07501967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076914719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07406195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125002365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073376909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090423086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073430772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077707402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074874697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093286562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076965679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075170354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075137757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074293719 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074660517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09249918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074351987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074231985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074981125 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07393006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086545003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074678049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074772225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074942485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076094108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077222011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074852619 seconds)
  done (took 4.229056832 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12487995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128823497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078760944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10893948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116723116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076362998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148592405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100009326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135397088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07743326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091221527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074580618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107485453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076946308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095347192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074693557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075372204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074685156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074304573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074678993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093074195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074335455 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074447089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074821608 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07517167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087791083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074434174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074558633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074752065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076032425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07855724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075251353 seconds)
  done (took 4.472129572 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081113706 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082212443 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087491393 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087942346 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074363405 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077244482 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078163413 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074440758 seconds)
  done (took 2.270319948 seconds)
done (took 28.967111391 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087070661 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077613259 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080604449 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.096893443 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080716978 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083585417 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074181388 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.083758472 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081444524 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080789402 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08054846 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073033956 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077551071 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072461415 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080451284 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075892573 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087030372 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.08027359 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086938632 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.087106254 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.079300724 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081567422 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084004859 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087183156 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.086787523 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086757978 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085358527 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081476051 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076447916 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079347734 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085502813 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.09327552 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076296941 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08636992 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076088409 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0757331 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079857392 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075978565 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086421589 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084683016 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077727579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085210035 seconds)
  done (took 5.030810298 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096193306 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100415011 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092329958 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068681616 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073186868 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071194961 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094250233 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065853694 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066038193 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093748064 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063174346 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065688691 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069291452 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060578122 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066250517 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064033021 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067899561 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061595952 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066576096 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065860118 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095899862 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060580342 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083404315 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069397983 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063079848 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068638729 seconds)
  done (took 3.547917339 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083300995 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089910366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096075391 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146988826 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115266149 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083297322 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08399367 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097599517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099336331 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072391721 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076243336 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098693112 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093346382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079169003 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073180778 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089773737 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089984527 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074537087 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078507076 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100233772 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09136154 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090450701 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097015874 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086804524 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072507037 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074902077 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076930718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085876177 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075985355 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082539878 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075865157 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076639335 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075105027 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084512819 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075416053 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074604603 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098764201 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082724792 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083700808 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073938369 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080735255 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073963584 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09652319 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129666073 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072334841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078560548 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07650156 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083063814 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072751106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100046354 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08404598 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073325347 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076015783 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072337196 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072685738 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07575703 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075151664 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075451921 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081834023 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078849701 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096602126 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078170044 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089229785 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072622492 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081302746 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072072878 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074062555 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071966307 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097680717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07467275 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112837946 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073519519 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073996015 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082118004 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080981502 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080061964 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073018894 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088610347 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082629092 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076463616 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082842905 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076157516 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075798758 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101669729 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075206803 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074720036 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074179599 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078593905 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075486764 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074462257 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085815482 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073082612 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075982065 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089896258 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073251875 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074693795 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078572207 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077233455 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073013207 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0838661 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077068525 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074125422 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08318851 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073092989 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075870812 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084443244 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07916952 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071750657 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076683338 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077710458 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073336741 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074544311 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075443774 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075426344 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081696283 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080103094 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076910873 seconds)
  done (took 11.237956053 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171069347 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158472803 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079143654 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15291105 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082447608 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083878486 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151000871 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097784777 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073579824 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07446226 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074502558 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112314409 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108093885 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119446946 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082918466 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07316388 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095584348 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116982063 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152104755 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148343759 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096608034 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082711118 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075523573 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074515442 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075710641 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082997519 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089853916 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081776431 seconds)
  done (took 4.542264711 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08685453 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107715354 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080149689 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095315023 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094238608 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073655812 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075468726 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075165066 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090207722 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082592635 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073116307 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077856836 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080297483 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075848304 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074002064 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080060122 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079552591 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074162926 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077043165 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080886204 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083107195 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096802352 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076380341 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072882851 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07809774 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072871968 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068294891 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088070293 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073947745 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097975807 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071383413 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078177653 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087405295 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07464837 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073782446 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073224646 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073471233 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07346545 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074968417 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072017231 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071920882 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063334635 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072230399 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082996893 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086367703 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062288591 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077437826 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078100102 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078431118 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070515919 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076491161 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075926353 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076050334 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080769897 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077186595 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078751068 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074654825 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081743781 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082066365 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073763295 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070192953 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071823212 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078086262 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07001007 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08830887 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078066594 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07185917 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073416517 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074718981 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086291356 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073053838 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078477934 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071331093 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075548725 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077637677 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075110688 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074220302 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07190272 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073478824 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073963741 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061116957 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073321697 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058966432 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075987274 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071808785 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071839168 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073419832 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077694177 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083634288 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074754598 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079296398 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074858621 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072310078 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076250179 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066290284 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07602 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083349131 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08673902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073182982 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070945334 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08610843 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078211846 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072155048 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063309222 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077253396 seconds)
  done (took 9.742081022 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09977516 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075746317 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086945925 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094302285 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091000659 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079482765 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083326656 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074867403 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091563487 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082920887 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085322923 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076336584 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08664235 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.085841859 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077416136 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.086151423 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077534083 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088706867 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088032863 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073488792 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082007561 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085557188 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094966578 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08663434 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084477251 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086109152 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094906908 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082478166 seconds)
  done (took 4.061869568 seconds)
done (took 39.779881111 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.742623358 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.876448337 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.706766647 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.015222956 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.89426221 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.727119777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.90046898 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.709081583 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.935508308 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.744234348 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.045702459 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.801210207 seconds)
done (took 64.86822496 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.723719187 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.842828206 seconds)
    (2/2) benchmarking "String"...
    done (took 1.931650764 seconds)
  done (took 5.409213394 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.954380433 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.385113311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.945063971 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.708056613 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.711001399 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.963784355 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.512998089 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.232624896 seconds)
  done (took 30.093907752 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.862581828 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.933683819 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.408667537 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.439749272 seconds)
  done (took 15.325256717 seconds)
done (took 62.228628789 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.703139015 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75970013 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.744964778 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.690215301 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.763877086 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.723399062 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.109774185 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.817783328 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.704998662 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.700851681 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.709937692 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.137852116 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.718060088 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.274737541 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.705405587 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.716417218 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.713556767 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.18099357 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.863011705 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.720660117 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.725477829 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.764440242 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.706730915 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.714014897 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.75365149 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.707488425 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.111358141 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.720514785 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.541794406 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.708201368 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.758742845 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.239626764 seconds)
  done (took 202.545021502 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.707449998 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.865844069 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.870934582 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.721373067 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.438134091 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.887832779 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.811740363 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.468588899 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.711765981 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.733712898 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.972110779 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.706911613 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.001836827 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.726117787 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.759736832 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.822533253 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.917294942 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.99390316 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.760526134 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.879324451 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.736671881 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.864013801 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.829744985 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.947088647 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.711842807 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.720985956 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.713027263 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.731465879 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.897412721 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.892435263 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.712057974 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.744283294 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.915361165 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.580551738 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.716709405 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.730513068 seconds)
  done (took 168.839494367 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.899325347 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.713240282 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.71076567 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.711908757 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.715585214 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.710910927 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.711267889 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.835821107 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834983848 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.328217244 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.376445613 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762581658 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.710510969 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.517407704 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.70916563 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780223317 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.722211288 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.709153322 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.726974875 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.739751663 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711355164 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.713179604 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836898672 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.722956671 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.713699153 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.71913546 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.713145111 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.716640011 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.083159932 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.708634816 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.914822702 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.713769447 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719265529 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.955766813 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.710754088 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712990463 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568835695 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.539834618 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799104367 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.711293218 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71698008 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.713356276 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.932712503 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.710585699 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714684955 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.711199533 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.712425568 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.7162577 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.859090762 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.710527127 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839238875 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709954066 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.712422338 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.190287451 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.709710739 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.713530691 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.761047229 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.286884081 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.710363514 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.717199593 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.714296088 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.713257155 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.719142427 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.573186232 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.784235019 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.713362374 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.715811169 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719074587 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.71540658 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.86915282 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.71099362 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.742547663 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.774727327 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.945832061 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836473025 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715631457 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781670225 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804135901 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.710283033 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.714024219 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71544529 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.716185891 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.797114931 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.712441676 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.842123873 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721242235 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.71654819 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768843812 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.785351398 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.713814842 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563446776 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.717130218 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717440042 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979787549 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778105193 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.713455147 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.71704433 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.84085743 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836585386 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423768128 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.717160906 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.624757956 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.854005668 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.713281551 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.715366176 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.849408453 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.713301698 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798074987 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.718028222 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.717375147 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.747468136 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.715529378 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.772538475 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.713412959 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.089381472 seconds)
  done (took 394.725347662 seconds)
done (took 769.698027974 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.330304257 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.296265537 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.392904631 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.309443313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.285544712 seconds)
  done (took 13.255875786 seconds)
done (took 14.894346446 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.805045665 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.808802788 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740183436 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.8080985 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.736300688 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.806202883 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.78730064 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.741343848 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.77432636 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.739514995 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.777038399 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740150867 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.728662651 seconds)
  done (took 24.635190733 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.951978766 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.942492641 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783974683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.944693211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.758758312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.946012579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.874889455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.860548807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.864770714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.731974236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727936706 seconds)
  done (took 22.031754416 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.952864585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.946286797 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789253032 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.96103924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762198269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.956528386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.87602026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.86610211 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.863863232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730609166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729561723 seconds)
  done (took 22.077950842 seconds)
done (took 70.386718669 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.725237894 seconds)
  done (took 3.367528171 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.753095593 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.923634177 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.732723647 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.73022683 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.726931453 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.727736991 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.729935985 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.725802847 seconds)
  done (took 15.695603104 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.72322912 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.723041955 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.724911571 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.725558349 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.727359147 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.722940587 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.727350959 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.72449045 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.723672174 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.725755756 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.724385799 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.727072503 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.722713517 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.724209575 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.723809355 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.727251212 seconds)
  done (took 29.242823645 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.726360298 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.723857279 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.722706212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.723706766 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.723202278 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.724877571 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.723836292 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.723803072 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.723326306 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.723433408 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.724244026 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.724127644 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.722989088 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.724092743 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.725500873 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.725918983 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.725144572 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.725605422 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.728472987 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.725172312 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.724291893 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.725610005 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.72449762 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.725489673 seconds)
  done (took 43.038146262 seconds)
done (took 92.986907251 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.681191478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.236480217 seconds)
  done (took 10.56299301 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.728366633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.728121167 seconds)
  done (took 5.106931658 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.727090463 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.730284499 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.729151671 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.728904742 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.728335217 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.728105719 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.729238732 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.728851117 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.728561378 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.727084014 seconds)
  done (took 18.933601821 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.727133854 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.729460605 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.728293968 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.728648512 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.728952763 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.726606839 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.729363218 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.72735518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.727557012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.725767903 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.730587469 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.725845664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.727346071 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.727313613 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.727857398 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.726767394 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.725922024 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.726164953 seconds)
  done (took 32.746284564 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.728863489 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.729705301 seconds)
  done (took 5.108235791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.726630561 seconds)
    (2/7) benchmarking "second"...
    done (took 1.72682307 seconds)
    (3/7) benchmarking "month"...
    done (took 1.728279115 seconds)
    (4/7) benchmarking "year"...
    done (took 1.725880367 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.727368266 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.728069444 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.729901269 seconds)
  done (took 13.742620559 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.731028248 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.877159726 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.943800985 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.350501356 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.732848137 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.734672481 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.646846261 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.734546423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.734218763 seconds)
  done (took 19.135956549 seconds)
done (took 106.983146561 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.606083286 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.727112332 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.948998348 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.775234593 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.783843257 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.026599388 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.735274464 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.009270974 seconds)
done (took 42.261807836 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.809525213 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.489000217 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.510119284 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.748170959 seconds)
  done (took 15.398175678 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.723369135 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.046663421 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.731430969 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.549198233 seconds)
  done (took 21.756584203 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.138673667 seconds)
    (2/2) benchmarking "read"...
    done (took 2.074451228 seconds)
  done (took 5.869102032 seconds)
done (took 51.484129402 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.730686447 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731944899 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.733002882 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.729104455 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.730063222 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.731689031 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.729480882 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.729164529 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731914913 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.733521432 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.732772114 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.732969556 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.732960662 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734581628 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730933194 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730042165 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735353095 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.731663488 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731539769 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729630962 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.733801601 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.731019172 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.730322099 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.730506306 seconds)
  done (took 43.209688575 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.734054466 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.732066702 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.73323452 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.734841492 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.732178348 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.733198899 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.733512791 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.732681385 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.733590197 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.731798132 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730564274 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.730939596 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.732067084 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.730389545 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731612947 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.729224155 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.732145532 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729108424 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731650679 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.729769008 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.73225715 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730682312 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.730433314 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733637815 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.731141787 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731179981 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.734783166 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.730959285 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733402132 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.731211153 seconds)
  done (took 53.611682477 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.739028401 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.742582044 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.735306648 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.735067745 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.734222844 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.733358277 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.731869774 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.733655255 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.73245095 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.734449341 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.733317436 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.733905004 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.734799369 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.734683798 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.734520966 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.735530815 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.735869408 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.734858513 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.734150779 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.737084715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.733891468 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.73431792 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.736518105 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.736481128 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.735619559 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.736361999 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.736594531 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.735248589 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.736610761 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.735816855 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.735350215 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.735078103 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.737024924 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.734573244 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.735354015 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.736015293 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.741146535 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.744130439 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.737978893 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.73375946 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.736098996 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.7357695 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.737816208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.736377424 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.737042324 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.73635208 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.736310158 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.737305299 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.736150136 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.738223101 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.737225784 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.735646827 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.735907754 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.737902538 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737215881 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.738996818 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.735518698 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.734840308 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.735697778 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.736905767 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.739127804 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.736516341 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.736606517 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.737341161 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.739448579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.736558171 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.737145282 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.738716921 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.736961392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.73876746 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.737563469 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.737704622 seconds)
  done (took 126.66986985 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.738591666 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.735978857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.736372608 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734853851 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735216378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.738768948 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.735373663 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739046883 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736472213 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.738230984 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738251649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.737813362 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735627546 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740889349 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739823719 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.736573832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.737933944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735665824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.738448652 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.739329058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738396878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.735194689 seconds)
  done (took 39.880633356 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737550975 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739597268 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.733300536 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.738991247 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736420563 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.73894189 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.737853023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737514526 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7390044 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736007613 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736584995 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738831696 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736465056 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736195272 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735746192 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.735561311 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739663469 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.736001698 seconds)
  done (took 32.929154014 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.73723983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.734425023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.738280541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735480982 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.736521019 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.740084103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737129093 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73927196 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.739402942 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.736471184 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.739571476 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740581819 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.739686987 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736289708 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742162122 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.737736839 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.74072779 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736753995 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742508903 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736808312 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.738790303 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742976259 seconds)
  done (took 39.908987781 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74038189 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.739530191 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.740116388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.740046989 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.737374612 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.74041516 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.740693952 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.738284084 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.742856321 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.740264331 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736684817 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.740230166 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.737831789 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7381559 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.739372292 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737180719 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740527444 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.740371979 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740225653 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.739002376 seconds)
  done (took 36.449748661 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.74060213 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742478762 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744978007 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74135846 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742551156 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.743615277 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742476447 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.744528807 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.743097067 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74214781 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743322807 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743168072 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742435609 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74376609 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743298998 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743057129 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743902989 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74256511 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.743886001 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74432424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74326252 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743681188 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.74522909 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743647956 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.745186868 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.743374348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744590847 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745760424 seconds)
  done (took 50.478203222 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743666117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742423489 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.738516248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.741050871 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.739938875 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.740145351 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.740246001 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739510506 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.743205339 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739207151 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.743105966 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.744072881 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742623658 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.742501601 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743322587 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.744049635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744047812 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.742376211 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740888648 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741157496 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.742293504 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743648503 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.742383225 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.74174173 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738583929 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.742816969 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741529388 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740535332 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743056136 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.741001983 seconds)
  done (took 53.916869749 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.761492683 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761830028 seconds)
  done (took 5.186803065 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.740156822 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745456798 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.745842426 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.741221187 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740758925 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.747222833 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744943354 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74391314 seconds)
  done (took 15.614055235 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.743205025 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.742330849 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.74270887 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.744475724 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.744220682 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.743528801 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749111022 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.743484986 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.743513643 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.744073822 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.753052459 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.752594632 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.747866562 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744551514 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.743987531 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746424994 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.744453779 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.744046797 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.744264445 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.745961263 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74500619 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.747813044 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745459255 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.742304292 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.747843849 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.755957399 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.748191217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.743716248 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745795146 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.749755334 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744972561 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.743865054 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.746441514 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.746144153 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.746365531 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.745770312 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754095831 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744703661 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.752230454 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745071621 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746643581 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.74389642 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.748394888 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.74726204 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747027421 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.746149348 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.745309665 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.743979577 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.744321106 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.75146086 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.752048158 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746139159 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.741628014 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750897995 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.746639005 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75293533 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.746726297 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.748954139 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.758951968 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.759933667 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.759297373 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.75472162 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747612303 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.74568919 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75698168 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.771865439 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753473828 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.743809074 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.742268959 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.748174718 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.754159249 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758258738 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.755776878 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.746400206 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748451407 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746559267 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748230071 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.74723924 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757142749 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.747899443 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747803623 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745950269 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758629129 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775576216 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.746341832 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.748831256 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.747197226 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.750446866 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.748390615 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760013867 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.749542779 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.747709006 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.747408886 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.747371007 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.748794436 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.748857423 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.747210111 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749353302 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.744178113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.747808269 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750005401 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.752353093 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.760902947 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748252059 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747938729 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.756509387 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.747472617 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.748662903 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.756507428 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.747670894 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748772873 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.750428203 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.757188315 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747378992 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753354416 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.759178099 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.750308922 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.749024836 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.750082997 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.749560202 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761358056 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.777118302 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.748869787 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.750171631 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.753551243 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.767589053 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749993486 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.751903904 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.749629489 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.747017639 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.746710687 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.752246578 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.749205347 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.751648246 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751839866 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751905904 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.746793887 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.750479052 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.75214483 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.751703964 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.752736415 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.750973296 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.751953776 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.75357102 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.751389377 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.754326635 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.759418387 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.750971205 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.7521547 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.752173991 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.751270326 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75264369 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.752351979 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.752002596 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.750196055 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751923242 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749773742 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.752529782 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752614303 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.752335374 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752647656 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.753573736 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.757652833 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.755652661 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.756631843 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.751035652 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.749622371 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.751806314 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752029368 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.750024029 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.752243842 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.75158171 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.758071257 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.762735129 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.752401736 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.753443384 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.756890118 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753050659 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753190659 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.753531434 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.755235765 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.763197602 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.753215251 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.760428495 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.752617799 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75388938 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.755681266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.755301145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.753119943 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755420495 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.757594214 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.763229013 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76814149 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764991905 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.756995564 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.757785152 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.754543408 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.758999894 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.758544999 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.753959647 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755516283 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756049444 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75427886 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754835395 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.75485687 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.754773162 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.753371288 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.754087265 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.753901022 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.754410573 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754678903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.755982775 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753977687 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.752761626 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755448321 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756402436 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.755487432 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753938627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.755429875 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.755108259 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.756638413 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.757064458 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.761278782 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.75137958 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757293333 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756155347 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.757332614 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.755650537 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.756417949 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757498066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.754392479 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.762921148 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.754433429 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.756383824 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762106652 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.75473055 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.753671301 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.758638767 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.7555864 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.751595061 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.760034011 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.766943534 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.75544593 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.757708744 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.757768033 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.758028749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755358713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.762920119 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.751828827 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.756825877 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.7570918 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.757082252 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.755660745 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.75812489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.758074018 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.758584475 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.759543501 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755825608 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.758288326 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757325895 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.756211417 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.759742311 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.758900414 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76129612 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.766940844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.762722537 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.757724415 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.758917326 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.757887833 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.762665119 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.758691675 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.756158979 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.756448233 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770885033 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.76679056 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764524326 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.758069953 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.754858584 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.762068112 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.758420949 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.762184873 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756956464 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757279768 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.756673093 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.758076698 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.752699006 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.758692347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.757181827 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758008179 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.759706673 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.762950646 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.759333575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.758870584 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.762836255 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.759699475 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.759139158 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.759224292 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.759504194 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.762042713 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760820172 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.759011883 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.759726335 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767449689 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758269398 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.76177916 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.759405317 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.759008134 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.758712417 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.763143344 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.760718806 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.763442503 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.77045226 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.765330024 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.771586191 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.762216413 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770586919 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.759860741 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.763371556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.769393563 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.754869207 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.758141754 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.759719522 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.760248158 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768181027 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.761010405 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.761343316 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.766671408 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76009051 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.761637061 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.759045113 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.760838642 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759058758 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.761895536 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768294211 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.761083016 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.765795281 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762698129 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.757510562 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.761078317 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.761124659 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.760187984 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76350383 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.762231287 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.760430823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.763161905 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.76001914 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.760477547 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.762835736 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.761978224 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.760204637 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.760875506 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767551617 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.760200334 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767014164 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.762640738 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.772794321 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761312328 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76902291 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.763199284 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.762193917 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.763735808 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.762718417 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.765033992 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.762154523 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.763590301 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.761441749 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.763432582 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.76588969 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.764454916 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.764833078 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.763004764 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.764060951 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.763051032 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773694722 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790062801 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.765022367 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768908677 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.760583926 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.763603161 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.76934716 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.763887292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.759290407 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.765766834 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774847641 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772466652 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.763313386 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.76271066 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763323512 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764212957 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.764106215 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.762395237 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.76324659 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.764866604 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.764955394 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.764532394 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767745366 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.762727875 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.763094283 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766802214 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.765626421 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.776459168 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.76382087 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.765493391 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764287213 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.764447578 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.764698291 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.764811733 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.762426653 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76502041 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764390738 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.765847229 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773178799 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.772131673 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.767766887 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.763477378 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.764868515 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.763193016 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.765905532 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.765870383 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.764288482 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764537943 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.765581673 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.765197799 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.764845643 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.764296365 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.763904223 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.766841868 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766246042 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768142486 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.774316071 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766957707 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.761783333 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.767049857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.76785145 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.766360398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.766319618 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.772022959 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76797178 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.779005855 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.775997309 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.769616678 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.766450469 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769824519 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.77352345 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.763435322 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.765701898 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.768715001 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.767745269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.766201766 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.767975655 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765869488 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.773980329 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.765458802 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.765100316 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775169447 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.765793575 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765604176 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.769108631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.772080857 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.76540392 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.762634129 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.76621104 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.765475654 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773692653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.767556539 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767149732 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768439185 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.764241073 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.768119763 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771222671 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766589837 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.767613663 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.762096214 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.766502722 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767799483 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769714066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.763766152 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.767270733 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.768599186 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.770768958 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.776939808 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.764673424 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769358448 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.766633195 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.768047059 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.769359171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768448165 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.764943573 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.764486554 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.767750893 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769369179 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.767950493 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.769757411 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.765239912 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.769377737 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.769142888 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769314461 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772963737 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.780627999 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.777147527 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.766444362 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.768548411 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.769481472 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.771516776 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.769101583 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.770567939 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.770780754 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.771562464 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.768870232 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771675949 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.771124675 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.773243773 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785845424 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.768013848 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768744567 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.768479835 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772988327 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.76939141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.765807969 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.769256415 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.771228992 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.770778622 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.778278619 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.769460664 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774180799 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768729946 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.769588861 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.773619488 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.773084009 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.777943231 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.773766191 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.769492379 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.77147357 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.774975012 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.788155302 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769698734 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779810697 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802316606 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.769023693 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.770737422 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.772053149 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769973126 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.772769692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.773791301 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.770888962 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.770190497 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.771070589 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.771057256 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.771974104 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.777755982 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.772149627 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.770740841 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.76994855 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.772403735 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.772454205 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.766627324 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.770838775 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.771307588 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.770074468 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.771690132 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.771574739 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.771243085 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783969287 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.780834416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.771259093 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.771651924 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.767551526 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.7748939 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.774128637 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782682518 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.780531668 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.771555483 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.770899427 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.774900029 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773726536 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.7704435 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.772623116 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.771064001 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771579655 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.768976677 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.786610936 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783359069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.778043699 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.772231593 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77381025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.773271055 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774356681 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774115182 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.775013562 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.772981714 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.773082617 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779167874 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.773072374 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.773999882 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.777327865 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.780849298 seconds)
  done (took 1051.079626867 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770869134 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771007948 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77054276 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771783945 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770802443 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769913256 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771843612 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770770661 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.770752274 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770492126 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.769196807 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770321313 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.76904371 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770857295 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769378204 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770797787 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769139232 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.770898659 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772074325 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770341279 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771452135 seconds)
  done (took 38.874192295 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.772902688 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.770906466 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.771693093 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.771969243 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770250233 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774367388 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.771871302 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77334842 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.774223263 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769974447 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.771399983 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774080942 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.770599697 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.772699032 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771666649 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773520442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.773893666 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771819113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.774510036 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773496751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774357269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.771649531 seconds)
  done (took 40.688388154 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.774473214 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.774619114 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.774552866 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.7696505 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.775009384 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.77167046 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.776055655 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.774931658 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.775261094 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.774480685 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.773870357 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.776790194 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.782752766 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.780800851 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.776933422 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.776733254 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.918584617 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.776272253 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.775690332 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.777100446 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.772332742 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.782543955 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.772391973 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.772679399 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.774464272 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.774532383 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.774332498 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.775871288 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.776230759 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.777373477 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.783019583 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.773699635 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.77318568 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.777911442 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.774489023 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.777983799 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.782447645 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.775208004 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.772602147 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.775041854 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.785118792 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.798922073 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.776582609 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.782550758 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.774272739 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.775238498 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.777299887 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.784799458 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.771727313 seconds)
  done (took 88.895882487 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.775323354 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.774568844 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.770889797 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.774338915 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.773480227 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.772830348 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.774421177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.775333833 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.771772685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.772400606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.775220429 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.770856068 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.769481378 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.773216524 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.773519759 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.770676239 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771916023 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771471508 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.770206976 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771188427 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.771547564 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.775067643 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.774186308 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.772149001 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.774881685 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.770369974 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.771154898 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.77524582 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.770951816 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.771989367 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.774477854 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.776227958 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.774608636 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.771998067 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.772029505 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.773312869 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.774128582 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.772378555 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.772885253 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.768910525 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.772969295 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.771189488 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.771769202 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.769495684 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.764105704 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.765739189 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.764698614 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.764568859 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.764526558 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.765994736 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.766339158 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.762999249 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.766531475 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.763460761 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.769740486 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.766669264 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.763915756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.763063365 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.765925007 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.762306844 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.762828876 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766831537 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.762000433 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.76500641 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.769207539 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.763091507 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.764690216 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766798356 seconds)
  done (took 122.055143931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.76671444 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.767180696 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769503413 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767697662 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766553243 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.768066098 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.769398174 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.769604438 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.768992923 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.76901134 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767621653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.768688425 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.76917681 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.768097324 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.767951332 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768156869 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.770089844 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768571929 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770753816 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771078186 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.768961565 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.769785939 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.770204678 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.769360174 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770427213 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.767693501 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.769414395 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.769048559 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770050805 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.769365328 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769470931 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.770012992 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.770073789 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.769548696 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.769923053 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.768488712 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770301135 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770486484 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.768425018 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.76966063 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.769726036 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769437725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768333654 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.768043172 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769487561 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.769207193 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.769335195 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.770899652 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.769372173 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.767756607 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.769285805 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769660898 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768206753 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770601332 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.768728379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.767333751 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76911506 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769984309 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769930511 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.769330689 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.76917402 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.769788891 seconds)
  done (took 111.377486669 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767916667 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770940534 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.766055264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.766839754 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769816222 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765403609 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767564794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.770484448 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770862824 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.767400349 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76738371 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765672414 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764992224 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76433739 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.763862352 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765437079 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76283042 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76250633 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763169091 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.756657219 seconds)
  done (took 37.010000876 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.757568499 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.759119059 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.757812548 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757417406 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.759942705 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.755841309 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.75996148 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761297152 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757027808 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756517575 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.756318172 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.757347985 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754519531 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.755180634 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.75823176 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75412503 seconds)
  done (took 29.799619867 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.754468764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.755459183 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.757378287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.757870298 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.755715468 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.753594511 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.757066732 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.755018978 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.753587879 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.758730916 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.757200455 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.757847363 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.757538117 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.758291007 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.755907602 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.756203482 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.754637749 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.75470229 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.756905605 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.75903101 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.756248059 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.752475476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.75580737 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.755695949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.753809712 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.754775094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.754014061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.755102554 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.754567316 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.756855145 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.754787834 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.753924948 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.754561168 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.754493214 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.758129399 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.755500475 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.757043239 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.757707053 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.757724485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.757457432 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.75783226 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.754717733 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.757935269 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.75806405 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.755146042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.756672503 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.754577905 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.754392811 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.7535002 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.753661324 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.757136017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.757247781 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.756862968 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.756399161 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.756647443 seconds)
  done (took 98.257459509 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756197283 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.755225689 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.752744886 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.75510379 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.756484185 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.751482372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753775087 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.75184769 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75170847 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.75331892 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.753444418 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.754501578 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751048101 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753390414 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.752586337 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754447927 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.750456878 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.750590781 seconds)
  done (took 33.235103531 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.750939724 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750519826 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.754430397 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.74994763 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.749425239 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752851496 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750076971 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.752456536 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754511686 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.749895773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748690154 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.751674869 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751699161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.751922999 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748802292 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746972324 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.750178115 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749743838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.74731691 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748698136 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749779503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750489743 seconds)
  done (took 40.185956395 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.749323442 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.749342449 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.766704427 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.768879331 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.77145389 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.781977091 seconds)
  done (took 12.258566251 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747004532 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750590821 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.747702673 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749509817 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750825101 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747461597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748317174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746941522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748789433 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747090312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746646887 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749720359 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751540129 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746256937 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748878905 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749854765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747379095 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748047048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74667944 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749694115 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74654948 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749750421 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747032314 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747206075 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748689982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747360894 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749848063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747567423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747549259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751796854 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750151059 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747832812 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749174291 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747849076 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749896237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750055879 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747648073 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749944278 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748564199 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746980128 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.749740666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749533039 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749301643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747528823 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748612694 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747432371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747722932 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747075928 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746605239 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749525204 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749892542 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746904491 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749081769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749259441 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748836992 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74871512 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746478017 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746822171 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750024804 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745497707 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746494799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748415069 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745869026 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746442926 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749947303 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745662244 seconds)
  done (took 117.060894115 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745986372 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.745827394 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746339059 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.745933866 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745823749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746257929 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745406474 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744607853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.746506717 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745687732 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747500673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746374218 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745540911 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745252278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745906167 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745112596 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745641508 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74504286 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745141837 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74842766 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743229776 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743230493 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743105318 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743538233 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744121574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745556906 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744073273 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743108917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743259513 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744142225 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743755622 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744108334 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743062385 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.743311223 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74397918 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742463549 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741542197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744510577 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743534899 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745297749 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74363399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7459091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742300525 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745909179 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742980794 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743417966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742924634 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743765588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743405423 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742538812 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743177312 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743202902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743492726 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74259661 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743008683 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741955519 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742568753 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743355016 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742781326 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745506127 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74360418 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742704461 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745076103 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743799928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742165115 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745341234 seconds)
  done (took 116.794172819 seconds)
done (took 2437.08307377 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.792450159 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.746325811 seconds)
  done (took 15.204960551 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.909122571 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.860773787 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.744113723 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.769877574 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.744278531 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.767894126 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.770798819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.743158753 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.743072451 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.743677264 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.744595058 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.929341933 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.793835001 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.741790074 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.742321402 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.835171461 seconds)
  done (took 50.254375636 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.745732441 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.747091693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.756485414 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.749445629 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.74474168 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.75764166 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.780722677 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.749011609 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.778871302 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.759056361 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.814565495 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.759157529 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.745852495 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.793956319 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.762127003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.760238058 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.838696964 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.821632964 seconds)
  done (took 33.532009107 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.822501651 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.747780042 seconds)
  done (took 10.24286924 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.745201928 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.796886905 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.800358643 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.741960623 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.746247914 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.741442059 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.782736196 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.785608861 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.781272719 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.770756025 seconds)
  done (took 69.361950731 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.752014881 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.747998085 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.747424533 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.744392126 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.740774129 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.744931248 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.745934407 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.740427208 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.409907758 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.779967454 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.753792404 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.751898926 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.74798175 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.748032641 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.743767061 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.770464182 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.846361522 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.743504182 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.744798215 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.751718951 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.746955123 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.804732469 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.76084938 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.748046495 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.777999245 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.408515127 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.754383244 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.7533734 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.87045982 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.744825592 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.746633853 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.747636853 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.747128491 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.143488111 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.00676454 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.747304628 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.762397951 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.756129249 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.743989795 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.862451165 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.747758246 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.754144338 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.500648113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.987781937 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.847521244 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.788452116 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.067990111 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.76289403 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.749513736 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.775573076 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.751061993 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.74899342 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.762554811 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.236424308 seconds)
  done (took 125.544753048 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.743203137 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.094289291 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.912737153 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.744254557 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029368115 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952898953 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.745506585 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.792502195 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.746496877 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978789346 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99916294 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851728117 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.744866803 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.742856517 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.745495065 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.742037678 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.899818269 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.818275671 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.745911536 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.743730475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774389557 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98679585 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.868874548 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.747112143 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.774411443 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959445959 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.866379328 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.849099101 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.525086204 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.743169914 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808739255 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.74639591 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.744484784 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.742622284 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.902843335 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.839781717 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.827843342 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.745790323 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.741964034 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.743931433 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.494149749 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945564702 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.843115429 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.876083042 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.997393813 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95093555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.527740488 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.744188753 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.480241997 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.908932273 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.977403129 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.979587937 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.866610493 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.746652969 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.011979373 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7455889 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.744616119 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997030965 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968170198 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.844605346 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.746077383 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.742538967 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.74378083 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.037112086 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.746148853 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.841667623 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74578044 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.744364708 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.843707102 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844872836 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.977475388 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960592198 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.779027792 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.091664288 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.264028663 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993984925 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.813550814 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998122908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.746669298 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.744035787 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826441348 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.587664856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.000225415 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030294956 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992559981 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782040364 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471438007 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.744665398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.973646294 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96845944 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.006304789 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997462148 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.982433257 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.088680849 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.74510695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.74567468 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.045528349 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.872344076 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.749381211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.099304814 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977992548 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.277311405 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.775715376 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051969716 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.877431809 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.750198575 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.379047791 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.748016791 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977053409 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.787570473 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.74854919 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.747304401 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.969654257 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.744762808 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.74641143 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.648521366 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.81116968 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.75115833 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981481307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.749218668 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017109547 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.751233968 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981778592 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.150110572 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780755476 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.922343879 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.995681447 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.751473645 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.989880832 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992553049 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.864522353 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022796408 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.655275304 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.747000273 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.034793021 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750048151 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.747080194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.918792505 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.747247998 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.891996934 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.750603851 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042777709 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774971336 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979333197 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750763426 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009852776 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.783606069 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.799430244 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.74840486 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.872209568 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.747968311 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.582966709 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.907601041 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751055172 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.747491578 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.312707681 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.748643538 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.899404192 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.389460456 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771786227 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823081643 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.421474041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.749723688 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836003303 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.775399778 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.138874028 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.750002263 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.002431521 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.753188261 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.75013467 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.749204438 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.037017065 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.986716336 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.750659623 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.748684155 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.664202777 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.748392074 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.748482734 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.933133404 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.130537892 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.748228435 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953706945 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.751055194 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.880149495 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.755174695 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.829959918 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.086821032 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.74926338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.751112165 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.75105842 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.749581417 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.750280042 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.962430489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.776739116 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.258789725 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.889496064 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023909442 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.063098763 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.991122454 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.794750901 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.752001797 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010036517 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.751864774 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.814491631 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.751867258 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.774163109 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97880875 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.753807694 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.015213834 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.025059059 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.760007231 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.800765724 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.753645094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750392917 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.750104402 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.898786304 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.839011047 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.752148858 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.749483351 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.867198731 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.874130251 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961109496 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.752258471 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.776054037 seconds)
  done (took 876.668621805 seconds)
done (took 1182.47517011 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.749428965 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.750279085 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.739166098 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.754789574 seconds)
  done (took 28.6717248 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.759919526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.75813962 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.759749209 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.758853527 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.758925274 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.757435152 seconds)
  done (took 12.230499649 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.790298592 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.75175506 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.756200746 seconds)
  done (took 20.976741424 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.823429306 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.143002781 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.859856279 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.186053766 seconds)
  done (took 9.691751443 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.759332649 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.758559837 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.760075102 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.760510287 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.761356929 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.760912792 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.757727452 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.758361911 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.762245774 seconds)
  done (took 17.518957852 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.084671178 seconds)
done (took 94.851622594 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.790300609 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.247560381 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.054511289 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.437715881 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.830800871 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.85064273 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.861013327 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.841321569 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.831134234 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.001307549 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.760045235 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.778805022 seconds)
    (13/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.229616477 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.781222695 seconds)
    (15/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.767367084 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.927908009 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.938906138 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.000054088 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.78830299 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.922096399 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.084310234 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.231006403 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.789577755 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.785507518 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.75982516 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.964541901 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.232410662 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.082607114 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.526084976 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.905736985 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.565735796 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.854962979 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.748645917 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.95678205 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.273656539 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.037570819 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.044136861 seconds)
    (38/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.825911324 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.992388236 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.050118145 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.062310936 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.051240762 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.768750335 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.860700126 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.775914969 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.805773251 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.869194528 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.158644991 seconds)
    (49/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.787153317 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 1.976464652 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.744321603 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.365862542 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.459009658 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.013559925 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.783656698 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.047956963 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.382312761 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.916411816 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.779723892 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.775737398 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.750606822 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.960087084 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.005951729 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.761533242 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.15785982 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.84728191 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.858137405 seconds)
    (68/309) benchmarking ("sort", Float32, false)...
    done (took 5.49867954 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 5.535625201 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.778069436 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.249155251 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.15868696 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.115236179 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.757792356 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.540620196 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.021094288 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.61041167 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.758579526 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.663454714 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.787521103 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.868575598 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.914547154 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.896026845 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.159087869 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.864284019 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.744082421 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.777590915 seconds)
    (88/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.840459349 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.745455486 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.125188905 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.430250337 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.860775096 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.988673813 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.786088384 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.691796811 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.945769267 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.678350295 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.780551362 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.956120769 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.765405511 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.745832593 seconds)
    (102/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.236584204 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.078816149 seconds)
    (104/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.853081946 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.631493932 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.869713407 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.767308931 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.852071814 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.889708466 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.772242955 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.835671759 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.769092606 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.891660781 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.95901439 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.899132871 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.168838796 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.795116919 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.057184344 seconds)
    (119/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.861600097 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.837397559 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.863935399 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.775325292 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.769005355 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.857454529 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.232291847 seconds)
    (126/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.870874556 seconds)
    (127/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.759099134 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.044883536 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.759669354 seconds)
    (130/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.719761174 seconds)
    (131/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.622536374 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.77474755 seconds)
    (133/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.761630004 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.809501861 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.782281436 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.766826367 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.866291196 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.768363199 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.268184211 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.956409962 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.025118271 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.097083108 seconds)
    (143/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.000755299 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.909198524 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.777617416 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.864619022 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.506981201 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.149406348 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.168607384 seconds)
    (150/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.931135727 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.016104696 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.801559947 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.937420435 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.790150891 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.184395276 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.896113561 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.774113272 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.885245147 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.755043255 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.86737725 seconds)
    (161/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.853832727 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.834759485 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.875485982 seconds)
    (164/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.91059884 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.390478079 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.823954158 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.717483612 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.7746468 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.759555602 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.975583473 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.175900308 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.884943319 seconds)
    (173/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.778662507 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.785229761 seconds)
    (175/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.197168619 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.87363236 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.761938131 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.185201434 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.124729379 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.947549946 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.990686714 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.181230474 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.006154369 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.864129826 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.988504743 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.778214726 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.953062752 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.796489853 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.877158286 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.624610079 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.776911943 seconds)
    (192/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.418752155 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.920168497 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.035872025 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.070158674 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.762938979 seconds)
    (197/309) benchmarking ("sort", Int8, false)...
    done (took 5.7782691 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.961856476 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.708960706 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.916893835 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.758059579 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.18879089 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.798144255 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.87831222 seconds)
    (205/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.026691121 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.941908313 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.779018575 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.91201838 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.007755567 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.939328511 seconds)
    (211/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.897233716 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.767285348 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.029544483 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.028835632 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.137893406 seconds)
    (216/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.205812811 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.848278225 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.115040479 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.620055983 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.976492776 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.797961596 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.215047719 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.777946751 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.779233926 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.000716352 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.149396144 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.796504428 seconds)
    (228/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.260186064 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.804384322 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.068008575 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.181668188 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.876078759 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.102897008 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.197372585 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.782243558 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320695838 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.780732205 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.91593726 seconds)
    (239/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.957275575 seconds)
    (240/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.868071556 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.180409156 seconds)
    (242/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.945300842 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.942716316 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.142702333 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.554757688 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.900799543 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.960463513 seconds)
    (248/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.293713992 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.363809304 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.838418242 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.776186873 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.63743613 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.910289039 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.911700008 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.179398031 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.27942949 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.915930551 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.921532008 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.894416005 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.813253486 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.16271038 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.840249961 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.873758745 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.779107011 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.242039052 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.125597519 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.640424629 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.796514868 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.878275336 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.036231615 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.097247591 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.884611604 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.01994243 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.125232912 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.902176845 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.904491657 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.096654488 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.060336729 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.958779662 seconds)
    (280/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.918579241 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.967785972 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.027009177 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.02471039 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.206806097 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.900315341 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.927764979 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.698918184 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.791587051 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.588750248 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.462963064 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.104101537 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.909857133 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893219824 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.801526006 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.792355185 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.148422969 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.783130863 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.058433579 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.822684705 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.816964611 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.423147584 seconds)
    (302/309) benchmarking ("sort", BigInt, false)...
    done (took 6.78956397 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.661817805 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895418015 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.055116974 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.01062079 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.782269436 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.833701376 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.369027512 seconds)
  done (took 978.003310423 seconds)
done (took 979.754949896 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.820922337 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.804058862 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.787775575 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.80955339 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.89984337 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.815902413 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.799845353 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.790626625 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.835771803 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.838471656 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.785382078 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.81514508 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.789947521 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.790318877 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.789036728 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.802839228 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.10423634 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.824367014 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.806442381 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.798086503 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.805179076 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.786299925 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.838915883 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.816092575 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.793732616 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.791106917 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.792506485 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.80897457 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.901252437 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.791990419 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.790904239 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.801939786 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.105973942 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.824116715 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.784797523 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.808395424 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.801626236 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.800303588 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.794576688 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.824331648 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.188568281 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.831295049 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.791574576 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.791446758 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.79341903 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.793465619 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.7922584 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.796448745 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.804771043 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807009453 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.182928299 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.848123187 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.794651226 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.791433619 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.801381826 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.791736592 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.79311197 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.806758537 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.811257373 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.807358852 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.088976903 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.829474755 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.792978879 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.808599181 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.799392115 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.219282612 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.830071299 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.796846584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.190325985 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.837521753 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.217959806 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.842778565 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.792318781 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.805873706 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.823591174 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.106706654 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.820466115 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.791373816 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.799456237 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.789110158 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.801114566 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.805563251 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.797488144 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.793417447 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.805316031 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.819802119 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.802284026 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.794262811 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.80175561 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.81194246 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.799833206 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.803549663 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.795729428 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.787905364 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.802578686 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.797671471 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.795103368 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.795856055 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.799605748 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.802851755 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.189008501 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851622916 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.790871192 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.791171282 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.793179929 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.807002394 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.189636622 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.836727571 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.814931806 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.841201635 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.794779441 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.088187263 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.828498767 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.808923621 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.802594414 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.796258159 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.788795037 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.089477786 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.218399793 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.852199147 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.795120675 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.790813658 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809482295 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.79631985 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.790654771 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.108855391 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.827502534 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809279426 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.91604548 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.806668603 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.826475707 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.791290787 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.797277566 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.825712063 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.810952704 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.826080615 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.798408499 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809754334 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.809932591 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.79149119 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.806622243 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.806005244 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.796253923 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.800574862 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.789210263 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.826350861 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.807612466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809107995 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.816089768 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.916013747 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.792370814 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.091989324 seconds)
done (took 282.07738715 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.865399551 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.789643677 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.886096652 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.791731904 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.872072057 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.877318478 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.789038239 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.788060677 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.788956204 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.162123406 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.789985357 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.789860178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.786019144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.788747967 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.873863226 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.791955138 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.789364574 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.188622128 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.793918884 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.863078562 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.786285871 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.789829432 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.791850319 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.207252675 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.79062964 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.789125776 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.86324781 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.792460846 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.129582236 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.790606627 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.789781672 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.155683233 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.883399649 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.811276362 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.803147398 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.800103797 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.874286449 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.798132027 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.8739397 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.873316571 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.888350279 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.8342062 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.791959502 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.787092299 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.796698999 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.793966848 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.790970012 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.830176352 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.787743146 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.790768926 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.12671079 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.803391584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.800983526 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.790961279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.79258172 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.815436192 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.790962609 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.795569707 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.884213981 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.795075652 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.856134657 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.165303799 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190782108 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.794733539 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.792465493 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.792680776 seconds)
  done (took 179.252123911 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.860407126 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.871696403 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.860386976 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.79935234 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.844892474 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.861270202 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.799129921 seconds)
  done (took 14.60953931 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.800474644 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.795724973 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.845019881 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.846032078 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.795368659 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.94778608 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.795646152 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.8071635 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.793183458 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.844942712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.796064214 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.795680983 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.803494318 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.78709571 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.84594348 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.806813869 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.911311542 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.79548102 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.797147826 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.946324588 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.793181051 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.803686039 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.8297829 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.808301553 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.796341837 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.801898163 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.361187389 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.796317385 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.792897297 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.795494077 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.793784703 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.837410703 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.795478405 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.798155481 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.794428244 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90902978 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.795096529 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.793412013 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.795580407 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.790549124 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.79625264 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.796649972 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.797492749 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.794710638 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.796318874 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.819573806 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.795833532 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.796743147 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.797143482 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.797162637 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.831802066 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.797116701 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.794359137 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.794977652 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.850607693 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.804634336 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.798070298 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.794877727 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.798177009 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.794813391 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.94768066 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.846785601 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.797239376 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.848475144 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.797424425 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.799733223 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.797588125 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.797493719 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89437347 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.796880493 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.848118559 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.795277265 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.954712143 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.820456865 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.798550799 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.801831839 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.800216979 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.798093857 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.796486945 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.804653327 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.79584939 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.800455062 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.804698798 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.796181652 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.796960088 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.91009121 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.902372095 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.796187197 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.811808185 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.807095202 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.795989264 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.833127955 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.798748046 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.797311818 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.855610468 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.918689401 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.853499288 seconds)
  done (took 198.619750581 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.806205065 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.808167217 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.801046992 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.816093965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.799360896 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.80046744 seconds)
  done (took 12.549558655 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.801144774 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.801588001 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.799981824 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.799440776 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.800993186 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.80030561 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.801088567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.800723896 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.804161683 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.80042111 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.800204207 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.802376108 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.801354403 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.80037093 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.80272079 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.800644848 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.802098624 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.798002358 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.800282728 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801914967 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.954293214 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.800071734 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.801523581 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.802760003 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.806640879 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.801333729 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.808710583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.800765236 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.801547301 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.811119914 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.805632462 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.800941276 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.8018452 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.809151485 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.805807729 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.80309123 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805527772 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.803719131 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.798910866 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.803282357 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.804425974 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.802992193 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.801211613 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.803285252 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.804958396 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.806627844 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.807815178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.809158141 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.802629666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.804825465 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.805095844 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.802719182 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.803713564 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.803829866 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.80547674 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808983976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.807642868 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.80339077 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.802989506 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.805411268 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.805787198 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.804768351 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.805070158 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.807330844 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.799265647 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.804620713 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.803326491 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.807624746 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.803446079 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.803493346 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.804667843 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.80184044 seconds)
  done (took 132.715186009 seconds)
done (took 539.474173588 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.939241858 seconds)
  done (took 8.660520802 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.902116745 seconds)
  done (took 8.666528308 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.291773413 seconds)
  done (took 10.018441175 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.825873544 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.832571401 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.815214846 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.808079348 seconds)
  done (took 29.031962204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.866125848 seconds)
  done (took 8.590412019 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.824859798 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.799124083 seconds)
  done (took 15.382807178 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.805234056 seconds)
  done (took 8.530380249 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.949358169 seconds)
  done (took 8.696418307 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.828401918 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.834716964 seconds)
  done (took 15.400598186 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.784948693 seconds)
  done (took 8.50907414 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.440897493 seconds)
  done (took 11.256723029 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.811904464 seconds)
  done (took 8.63825212 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.838516597 seconds)
  done (took 8.561607068 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.85332211 seconds)
  done (took 8.578105964 seconds)
done (took 160.242371784 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.80407424 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.801857525 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.803818744 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.801268506 seconds)
  done (took 28.934073434 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.839443783 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.838059713 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.840287027 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.849867285 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.842470798 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.839203312 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.831548856 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.830424621 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.84827218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.841365418 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.841513966 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.842717383 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.83883935 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.831522724 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.842374179 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.84102147 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.850251178 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.839877649 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.832044466 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.842298049 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.806320766 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.852248802 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.839640649 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.806734075 seconds)
  done (took 45.833500337 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.999891548 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.880345106 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.960467014 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.861132457 seconds)
  done (took 9.426394591 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.857411911 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.860556447 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.869900086 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.90988774 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.933549458 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.869953776 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.829121779 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.828667783 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.813388937 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.860257721 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.935165225 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.855260211 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.959809576 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.806812436 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.993407936 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.806244416 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.807261404 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.858007002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.909584363 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.935771942 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.807386424 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.858358134 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.862998029 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.855553896 seconds)
  done (took 46.609951931 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.806204096 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.812618204 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.811487735 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.807938863 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.80712126 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.806147071 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.812738337 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.80746445 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.826912769 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.807149911 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.805795871 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.805316255 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.803948823 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.806521663 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.805448113 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.820084467 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.81913453 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.806552723 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.809738206 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.813178863 seconds)
  done (took 37.926055778 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.80160427 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.653853372 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.150552134 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.05820913 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.80507625 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.801433239 seconds)
  done (took 30.996923791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.820904802 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.814056109 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.806903684 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.864588391 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.951232464 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.816982534 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.806683807 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.819679743 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857374256 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.876704272 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.828593881 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.837515546 seconds)
  done (took 23.827485947 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.804532686 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.805286484 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.803400109 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.8213401 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.817894554 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.815766948 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.814670135 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.80246182 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.821167239 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.826435512 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.814927642 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.819147327 seconds)
  done (took 43.496972395 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891648787 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.694630379 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438052435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60775463 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337721032 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012590279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437423694 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985516292 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.809599868 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075879554 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.419524391 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052352443 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.054666448 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803897138 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878155587 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.271138894 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104193279 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03487646 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835834305 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493349731 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927293117 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34697778 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.605855838 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93395916 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014816799 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.936702817 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.064602456 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.75381678 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939569726 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844927235 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813764833 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802694242 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077850112 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032073029 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893080185 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813916753 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457104978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.521963352 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.795674449 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.51106919 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.510562331 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942690171 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8118097 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80629976 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.738568244 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352507442 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99053875 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.810985457 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.506741827 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.806202844 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815684568 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900825936 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.808830081 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.621867477 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763633387 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.083671851 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.803864498 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815916604 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359600995 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891601862 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469336304 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.747259053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.89887193 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547361505 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286051562 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.963899075 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.809296552 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812189555 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739245263 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.549221191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936362503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950866913 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.82704746 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454411067 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121444809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.49177928 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891091074 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104141085 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.629268935 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.747353056 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036380717 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.756013094 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7444086 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.660472598 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.738956819 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077666645 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846292612 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.467538317 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850976716 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987874341 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.819143252 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826490296 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81451076 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.028801028 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.692465056 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809123484 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.376513054 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.098709656 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831463474 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990057941 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743603161 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.812639723 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061808587 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.025609184 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.071118319 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.294540209 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982350762 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811765318 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.89827474 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.748255377 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.825205676 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.093359853 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877812199 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90273795 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945394598 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.766103083 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111280352 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842043713 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.986545441 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.447015977 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08147404 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.14338885 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064556567 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895185206 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811852082 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.811680486 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.574790276 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438753562 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.037664673 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.810796566 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328239674 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.825486645 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.81278059 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743862855 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.482824604 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427262791 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.932552745 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033393102 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.774664884 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089442868 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743277144 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954583259 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.803753421 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.033030087 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.463726331 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.897879292 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074162581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325081794 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.075184306 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82715403 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834766248 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893807057 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835430046 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.247997672 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072168449 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.817122273 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.818774131 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.623985341 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897494881 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819167466 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.818610361 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612134784 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110859776 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.849290632 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824982281 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708229999 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.829973068 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899184154 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81939085 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824441901 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.340264654 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657438775 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.82828159 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.457196044 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040126218 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825832766 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.575198171 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013982293 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.907203911 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10555563 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884769305 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.747771159 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.518478687 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.518702433 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819678722 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.749673605 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.817192477 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823338917 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826369549 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.070456936 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108480436 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871573171 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.580135355 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.936899498 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826634378 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.821464714 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817306987 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.31520847 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924715587 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451360057 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.827981508 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95216852 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.82981075 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.749326711 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.82143834 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820377248 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817582276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.773033318 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866706806 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.595055532 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157745693 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076448547 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.462047086 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836525535 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.566921037 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.951976795 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.839199916 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.391499707 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806556293 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.958309457 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891383509 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.828507949 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.587951186 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.603123279 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374399829 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131410862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153271441 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274881734 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.198767683 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16144218 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996723461 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05192893 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345838518 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879626575 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005915776 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762489838 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909639287 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.477018859 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180591743 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83241873 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044370926 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21144072 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.474925953 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985798288 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029069712 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852857999 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.632436149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850741843 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.341129194 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972258288 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.444782416 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049542639 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998129301 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.411076728 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936444882 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.81826746 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.298028929 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903491976 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.528588892 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178324405 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364120147 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.483646148 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202997217 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.821559451 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26341233 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182241479 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.155281697 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.917858697 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754150041 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.829523608 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.829980608 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.818523415 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.796512628 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.694219998 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.07148877 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831376201 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054121058 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.10217227 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100358853 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.73684662 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.82547112 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822071406 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12445961 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.5749746 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064458345 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.170832123 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395622921 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828852923 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754393443 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754595162 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.524412082 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.82888553 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795788143 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065198052 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.932481011 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781187224 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.225378584 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135007701 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074434632 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.836030597 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109163223 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108486209 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557462044 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850679742 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.923243929 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.400493489 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.576075739 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.044664871 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.056127259 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620308356 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052584951 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467278498 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.802553935 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.822307486 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039297277 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.043933218 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.482931395 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081201103 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.548227696 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.838043556 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194211749 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889600175 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.476042502 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.042625368 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.915086496 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832960115 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903658372 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832794607 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.834033005 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.833877299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869850967 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.477553868 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967513857 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.836596077 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940180839 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936432282 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411926501 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.834087451 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114333664 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195515146 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168970225 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894767603 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825746887 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827356071 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756425645 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96197425 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.268447905 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098119423 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.95463389 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.015119857 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848727736 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.402233508 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.126879599 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137719798 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100280077 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.720399181 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825946843 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915977377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.047886321 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836663817 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.035341005 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066613036 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158799114 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301716804 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.964229895 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.107570386 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101022286 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192924426 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82740286 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417645562 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.839135892 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358503562 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.870697564 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.473196304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121017135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836759173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046176112 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.847828196 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.021292749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.278349785 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540872883 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193587854 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.824659366 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.892720086 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114865361 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250003452 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149571338 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908746461 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836825809 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.525389192 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966986241 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.736303228 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.072137783 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829953762 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038487454 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.540034409 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.83736579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121907126 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147419432 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.826870319 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.764000021 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872135634 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.836110376 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048842757 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101392914 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085034149 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836773927 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.836774986 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.645623894 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11938718 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896108774 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762213613 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.831674209 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931142922 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07618969 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849778219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.346952357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.529605606 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133125016 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.75110841 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850787074 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277505156 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286058677 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182675747 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.35966282 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068609711 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.389721419 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.688422569 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204456104 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.833453765 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.236084456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207626785 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.832794622 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353903368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940987819 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.118158134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161533526 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.84998233 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658615241 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.879052575 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052431845 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426734489 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772659107 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830562749 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.891154045 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.830595405 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.830384104 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840174422 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.801471899 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.702054365 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.668159873 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320806127 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.835122008 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.873696472 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.425525903 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39872057 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938334435 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988155543 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841206163 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.532355227 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.120648446 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083446212 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339265461 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.903422006 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.832488701 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832472131 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757836322 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028182709 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.085860996 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144292824 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.171405502 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.940005541 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833789944 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.046039701 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041533507 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.502480126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995667102 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222070729 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943094336 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.759565574 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.542069349 seconds)
  done (took 1655.065501118 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.83544902 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.844366053 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.840884182 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.869860011 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.836642868 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.853179612 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.860453994 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.838613477 seconds)
  done (took 56.534014664 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.830918443 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.014318535 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.839916065 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.832117736 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.857088336 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.832559366 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.022878203 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.845092145 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.865996213 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.843710614 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.833948083 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.845843151 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.150249349 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.857226894 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.832478973 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.853857365 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.863363782 seconds)
  done (took 73.781539046 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.836816707 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.005127693 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.855837335 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.860781872 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.705708048 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.843544487 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.768464405 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.843411258 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.833925527 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.000860799 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.168138314 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.883139509 seconds)
  done (took 89.361451667 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.84800798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.839343693 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.841688739 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.841495592 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.83980733 seconds)
  done (took 10.971337079 seconds)
done (took 2154.507246951 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.069689503 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.022187504 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.084736209 seconds)
  done (took 5.860391438 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.982484194 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.03056112 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.150396257 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.153352415 seconds)
  done (took 10.075570743 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.120317886 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.217757467 seconds)
  done (took 6.09164722 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.160551199 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.854560719 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.215996524 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.83581611 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.838206261 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.831481369 seconds)
  done (took 22.266600168 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.836621118 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.842250839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.83789711 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.839096013 seconds)
  done (took 9.109130712 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.820497762 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.533322385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.822436849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.834653655 seconds)
  done (took 20.766058462 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.989810571 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.963883976 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.982013273 seconds)
  done (took 7.692043314 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.46969331 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.477511247 seconds)
  done (took 9.700500687 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.002142208 seconds)
  done (took 3.758610748 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.868068602 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.109994297 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.354845592 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.408627632 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.472258647 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.146291635 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.184292948 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.072631139 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.303546276 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.332376345 seconds)
  done (took 25.009120625 seconds)
done (took 135.382053848 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.393361815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860301065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.043556528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.207761066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.073312004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.040292921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.047459188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.197036633 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.886334396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.877135645 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.214259428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.07932017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.005958606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.855745987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.007140237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.854171399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.068692776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.231524632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.887121214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.105897895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.069656547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.845260474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.039235374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.859198697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.074379532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.987793786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.393970246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.858154882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.025334848 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.405439456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.99184668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.241578759 seconds)
  done (took 167.483543276 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.838774569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.837250492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.839146699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.837935533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.304793024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.840693707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.839919945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.837502753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.300494275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.296072059 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.841128524 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.293515704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.842579686 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.837465461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.83950779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.838951763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.465693503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.837454099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.839433819 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.838192727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.83838708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.119407797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.839196898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.13577443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.450640219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.840573763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.837591441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.837228783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.840763701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.83670313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.839836537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.843058609 seconds)
  done (took 208.261477713 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.842100162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.840853948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.835119553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.838783638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.841354575 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.840734806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.839819727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.839853233 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.459614209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.448029733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.839852788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.840083912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.84575194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840829331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.846961644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.836622935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.845177629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.845071989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.849358235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.852041859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.854531572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.474718768 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.856809335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.462449601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.845427386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.844442526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.839079851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.846069492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.846968226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.848256804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.852831602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.838283449 seconds)
  done (took 219.236594584 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.098035208 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.843721911 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.847007068 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.75616994 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.846766113 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.847956041 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.85189491 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.093673503 seconds)
  done (took 18.958521907 seconds)
done (took 615.701828256 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.34800775 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.198281792 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.029732086 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.869190454 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.13200912 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.905154422 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.868705465 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.935750406 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.488475386 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.941093262 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.51803194 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.890116826 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.603637778 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.900012278 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.98947489 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.925246287 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.436853531 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.52763009 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.049709746 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.952558966 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.042214104 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.793942059 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.950435996 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.527687331 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633039497 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.859122498 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.936496821 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.444847149 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.877487446 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.030974354 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.649582649 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.188133194 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.88042723 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.865552402 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.923325964 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.899830796 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.13809461 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.880640482 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.988904668 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.604089262 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.950368281 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.401939255 seconds)
  done (took 101.73368887 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.838924966 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.836231253 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.836718886 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.836996231 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.836192282 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.835813076 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.834656914 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.838332407 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.83736583 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.836476945 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.835780925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.838323906 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.835645539 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.839203917 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.836066961 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.838451005 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.835958237 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.83737527 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.833991855 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.834536485 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.839452434 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.83587513 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.849641251 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.837146155 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.836933282 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.836262063 seconds)
  done (took 49.540752697 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.851932788 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.018496125 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.090568714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.868460023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.847144529 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.854795028 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.870725217 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.856204564 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.853697058 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.850629711 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.956360386 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.85413385 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.871352196 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.092273217 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.867747166 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.853133078 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.851570226 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.850622397 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.0246319 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868296049 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.871183863 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.85580009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.87283993 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.864622575 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.853063269 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.854163877 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.855471188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.322859178 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.862121434 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.957219325 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.910680033 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.876533088 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.266858409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.099406763 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.912488627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.864553662 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.851010371 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958596805 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.85913331 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.851761372 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.867595115 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.860211786 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.090426899 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.350719031 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.869899896 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.852203162 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.333064887 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.972026284 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.894101672 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.86695587 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.093652715 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.872648932 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.854295263 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.85310571 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.887865638 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.860864737 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.851752962 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.204140908 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.869011981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.869062305 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.860541163 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.852534094 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.027574772 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.861850483 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.016743445 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.866572005 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.860351298 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.858086701 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.091413919 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.870249883 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.356730937 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.867736351 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.84909172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.955364844 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.020571382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.359904641 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.86387966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024543848 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.278223179 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.876573443 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.860402957 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.310483033 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.878912286 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.8591594 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.851627058 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.851412953 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.849968675 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.891668755 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.867731871 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.280352148 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.355913066 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.217776959 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.878620572 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.865142107 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.852323886 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.198750599 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.861549271 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.85153389 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.083977736 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.36352877 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.866151125 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.857836691 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.337603031 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.868322764 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.870204781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.859826874 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.091052228 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.872101095 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.895054817 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.854076678 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.860817531 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.856981173 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.875080606 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.863072005 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.855218061 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.334287812 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.981809382 seconds)
  done (took 230.260524943 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.85288229 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.862736695 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.84978964 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.865344614 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.850719122 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.855502572 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.85028651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.850696897 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.854744742 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.851745465 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.849618446 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.850256194 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.852258469 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.851168276 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.860515558 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.855932202 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.453870401 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.849086988 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.851286744 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.851708399 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.515151438 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.855654892 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.852097107 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.849216265 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.850851666 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.849713551 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.857186182 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.860835536 seconds)
  done (took 166.930285215 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.855347798 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.972829174 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.877140658 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.882886654 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.863955761 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.854815816 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.878237423 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.870359001 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.860047923 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.856674605 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.856580603 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.91911167 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.868164453 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.956257997 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.887501316 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.887421445 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.958700228 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.862634926 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.854224043 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.855703788 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.886478869 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.849213254 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.918234844 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.985551035 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.87927188 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.973689739 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.86370759 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.856385051 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.856308368 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.974017769 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.876207553 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.918533008 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.887475423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.874386421 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.978718513 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.977840483 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.961950745 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.884879257 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.85800988 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.854984624 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.854652079 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.844647818 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.974845489 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.88014912 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.858706498 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.963909672 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.877429959 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.860212151 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.867290638 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.854188546 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.870836714 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.873044407 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.923505548 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.990770773 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.895814471 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.881967315 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.882681366 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.141077142 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.867268568 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.958344023 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.849405289 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.976726919 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.87984152 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.842626176 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.856994871 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.861252352 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.887798895 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.888297345 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.961625806 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.864894468 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.959126352 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.890690075 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.865169612 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.858658506 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.85947965 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.977903925 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.981467614 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.892051496 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.894046499 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.888999108 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.852605897 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.858236772 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.846824308 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.875559284 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.861931144 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.977614077 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.981513982 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.865562946 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.860926717 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.861855668 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.86039169 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.883127562 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.9835441 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.899072035 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.954274697 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.925859934 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.940052339 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.879125774 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.872420077 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.86379708 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.924024972 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.878982854 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.871404014 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.188725775 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.930482774 seconds)
  done (took 201.323377405 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.318441693 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.910896344 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.915864609 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.190925567 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.212004543 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.785383558 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.909159753 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.908453361 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.93058538 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.106503156 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.982743735 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.927653287 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.896783331 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.881010256 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.904259382 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.925093204 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.915201046 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.228007886 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.016707774 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.062497482 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.891296874 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.221819081 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.180955932 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.314134643 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.947507389 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.246821149 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.565361743 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.069035623 seconds)
  done (took 61.146012647 seconds)
done (took 812.69219983 seconds)
SAVING RESULT...
DONE!
