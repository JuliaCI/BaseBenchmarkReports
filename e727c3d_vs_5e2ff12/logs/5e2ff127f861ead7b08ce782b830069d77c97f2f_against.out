cset: moving following pidspec: 22183
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.17863292 seconds)
loading group "string"... done (took 0.524435802 seconds)
loading group "linalg"... done (took 9.940975297 seconds)
loading group "parallel"... done (took 0.169279027 seconds)
loading group "find"... done (took 2.63474352 seconds)
loading group "tuple"... done (took 2.135278238 seconds)
loading group "dates"... done (took 1.415117575 seconds)
loading group "micro"... done (took 0.582419662 seconds)
loading group "io"... done (took 0.554005917 seconds)
loading group "scalar"... done (took 54.229139641 seconds)
loading group "sparse"... done (took 13.453287063 seconds)
loading group "broadcast"... done (took 1.304440638 seconds)
loading group "union"... done (took 2.550274503 seconds)
loading group "simd"... done (took 3.543553131 seconds)
loading group "random"... done (took 13.410109845 seconds)
loading group "problem"... done (took 2.234296362 seconds)
loading group "array"... done (took 23.187703407 seconds)
loading group "misc"... done (took 1.08228228 seconds)
loading group "sort"... done (took 3.720231749 seconds)
loading group "collection"... done (took 20.313312075 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.765838037 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.16529359 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.246423441 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.888805574 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.301838284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.207615319 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.201446856 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.181353824 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.610344039 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217483787 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.196633368 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406095947 seconds)
done (took 7.177843652 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.408733596 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093124991 seconds)
    (2/2) benchmarking "String"...
    done (took 0.216359493 seconds)
  done (took 0.945954307 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096896984 seconds)
    (2/2) benchmarking "String"...
    done (took 0.146695967 seconds)
  done (took 0.873932112 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138526225 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169983029 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148884828 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.134592383 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.150013381 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.133949571 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.150501971 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.149126318 seconds)
  done (took 1.666488585 seconds)
done (took 4.664692321 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.517503901 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.911357869 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.58632454 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.20777065 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.357066103 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.317569844 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319923731 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.276402716 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135540209 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115287275 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.211066296 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.468445187 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.468856343 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.973088957 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101247454 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.157466685 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.174969138 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.849023115 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.124633223 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155817113 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.534402051 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.244335033 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.16358182 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137428129 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.246225144 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.236728307 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169903723 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148233605 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.786077947 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.180502132 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.240189609 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.129243796 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168502004 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.202037855 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.282893715 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15947981 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.789214621 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24708217 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127645277 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.146567921 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.794714527 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.172494119 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.242689918 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.156204676 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114611593 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194913968 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.145083385 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.123736306 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.160516281 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.145733746 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.226144929 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.552780374 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.15285915 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.233002961 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.155610862 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.803643414 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.148489953 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.344208314 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.186847369 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.15317246 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.124072437 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.150723238 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.215940891 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.141937823 seconds)
  done (took 23.264156156 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.210307394 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.228688417 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.142976937 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.206470274 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.173819147 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.143132318 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.135244217 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.142353139 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.160739611 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.243160011 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.186537997 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.239160334 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.121587922 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.154850009 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.200331319 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.280930037 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.174206469 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.172130139 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.136297149 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.158305707 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.172322574 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.161690474 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.156244729 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.140762303 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.219561582 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.254602231 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.170686833 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.171437119 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.150841996 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.14442087 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189776867 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.207548592 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123142171 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151319498 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.221213891 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.169517023 seconds)
  done (took 7.074938869 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.271057797 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.149820508 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.276388908 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.236121544 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.233944839 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.193180315 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.226038887 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.229326212 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129663242 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.319911586 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349704678 seconds)
    (12/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.249177619 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.225144144 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.164881611 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.157931692 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125649909 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.143176555 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.128410248 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.141480425 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.889617455 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.200611201 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20788818 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.220645864 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160003295 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.144688665 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.75350256 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.150579824 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.148774314 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140230518 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.113040021 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129216505 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.254553027 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.158253649 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.523143845 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129825362 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160114048 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17553997 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.237618121 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.18210437 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.168419389 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.158574706 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.131604173 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.257034326 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163578683 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.124855238 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.142527078 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17789256 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.163295891 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.158093179 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167483347 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180532908 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.132683514 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173072509 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939945666 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.243033739 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.184327082 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.150509478 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327307217 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.154085074 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.164989907 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.155415481 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255101565 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18435073 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.144173029 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.126254829 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159279972 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.126804877 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16623501 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.813881139 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.132688529 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.208267628 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158975807 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.163608932 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.737499214 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153133959 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.149988922 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.153352292 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.150804902 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128001634 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.150054449 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.128061489 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.153658644 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.123463327 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15230485 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.128271679 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211938156 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.143726088 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.167942173 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173792052 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.137125571 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.147341898 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177335613 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129954171 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.15057912 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.225803602 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143026833 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.142573772 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.160088207 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.190112534 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.133662775 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.265719668 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129016708 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.172286656 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146992338 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.159366553 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.159801831 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.128419776 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149599528 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.144432315 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12900357 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.210590849 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.132897868 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.145756835 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.135678574 seconds)
  done (took 28.998906019 seconds)
done (took 59.965621059 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.409555825 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111472278 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111771643 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.131185796 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112485868 seconds)
  done (took 1.591006195 seconds)
done (took 2.288852811 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.232954702 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.33460607 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.249988987 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.154802072 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215530517 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.219279403 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.200054519 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213920179 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.218981697 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.233937662 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.134598222 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.243381795 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.232074859 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.222606444 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.129587486 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.257018794 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.210335073 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217328298 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.254935681 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150681006 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.166789924 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153053577 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16790188 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134457344 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.150071333 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167883126 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.169829067 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.149574165 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.144084052 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.151921481 seconds)
  done (took 2.411497113 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.198735088 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149670749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1673049 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.141198611 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16572644 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134874586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166255285 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.148660814 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.169903819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148690422 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.16208446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135100411 seconds)
  done (took 2.393037005 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.153913867 seconds)
done (took 10.05965522 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.086005746 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.634104137 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.199636595 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.276500751 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.380315904 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300680936 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.599591434 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.237539035 seconds)
  done (took 14.552445149 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.214414986 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.162479108 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143805697 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.158929243 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.141832924 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.159583625 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.140929272 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.160156127 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.138962398 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.159699813 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.141650583 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.156758984 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.143899253 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.159971742 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.144458582 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.156239488 seconds)
  done (took 3.248351905 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.16837147 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.184019541 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.147087273 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.166881999 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.144647089 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.163899109 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.149523389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.165135262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.15974245 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.145422824 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.165157991 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.147122383 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.164777378 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.144007257 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.164297533 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.150125667 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.162192847 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.148606405 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.164840988 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.148918819 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.16456582 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.147201244 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.163596348 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.148100501 seconds)
  done (took 4.560480261 seconds)
done (took 23.064969947 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200137432 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151498193 seconds)
  done (took 1.072079116 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.203874997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.223352269 seconds)
  done (took 1.153253634 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.163473157 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.157092615 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.174573488 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169180148 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.142468051 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.156789538 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.181386627 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.142320554 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.158453246 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.14186356 seconds)
  done (took 2.317719201 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.144847898 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.16154753 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.155367599 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.208615293 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.149375417 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.16087431 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.162505435 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.143571446 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.162836184 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.139827157 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.162095439 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.157428076 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.162499798 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.158682411 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.161932225 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.145478995 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.165280153 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.144670172 seconds)
  done (took 3.579571311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.140513476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142260779 seconds)
  done (took 1.013973401 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.143023983 seconds)
    (2/7) benchmarking "second"...
    done (took 0.156940016 seconds)
    (3/7) benchmarking "month"...
    done (took 0.143104683 seconds)
    (4/7) benchmarking "year"...
    done (took 0.158842448 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.140605479 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.157545243 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.140674021 seconds)
  done (took 1.77107647 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.617071952 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272332792 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.424744248 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125409585 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138563971 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.368308891 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157618589 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107448207 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107433947 seconds)
  done (took 3.078721301 seconds)
done (took 14.714486798 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.141345186 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.229168634 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.659407893 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.164506937 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.157931783 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.200585911 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.361228788 seconds)
done (took 2.655030494 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374912895 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.185299123 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.122188935 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.144401088 seconds)
  done (took 1.561779908 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.132565632 seconds)
    (2/2) benchmarking "read"...
    done (took 0.166092043 seconds)
  done (took 1.0441947 seconds)
done (took 3.350569267 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.157485372 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.161546588 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.144396717 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.162337502 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.145195947 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.16204171 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.144413031 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.159133458 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.1444977 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.158548478 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.144141385 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.161542502 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.141474381 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.161232457 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14256557 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.161090809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.144378994 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159530873 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143229288 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.16095741 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.144492105 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160441409 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.16067981 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.144735316 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.161158836 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.14459464 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.159094861 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.14229045 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.162473629 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.143939934 seconds)
  done (took 5.320926869 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.169450989 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.15487231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.140763416 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.166154229 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.13828096 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.141300806 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.155129483 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.138946291 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.159974958 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.141588578 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.160502672 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.141233409 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.277804084 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.143864933 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.160449087 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.165162123 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.167204264 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.140051208 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.155113488 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.1420659 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.161750461 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.13871194 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.158787104 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.140834581 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.158063169 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.13797639 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.158865844 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.142186128 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.158613699 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.140666168 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.16126731 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.14410479 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.157881613 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.151136694 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.161293033 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.140862779 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.165576664 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.138590569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.160874545 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.137022862 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.155713516 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.141561096 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.157026454 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.146779144 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.158771551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.140405678 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.138327614 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.159486733 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.140557151 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.160439953 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.137769781 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.154608827 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.142907514 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.158968637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.144282103 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.155699594 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.142977484 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.155558326 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.143270303 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.157890108 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.138030382 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.155938187 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.145704988 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.160133039 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.157756347 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.165137164 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.139075217 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.161240229 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.142680354 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.165274463 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.144868731 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.170913546 seconds)
  done (took 11.769698238 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.141646224 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141356667 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15867483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141735152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159349091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.1416818 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160677829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14189251 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159537785 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141727174 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160357087 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142378704 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159741763 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143024808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160107101 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.141865324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.160339871 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.14193909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.159773504 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142379498 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160648349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.142767931 seconds)
  done (took 4.065095834 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.287069454 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1510945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.209061487 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.176330166 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.160330696 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.172078133 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.145900631 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.166700565 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148262596 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16952588 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151876531 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.165124005 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.180319222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151905041 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.171797322 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.153351948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.167410006 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.152580334 seconds)
  done (took 3.844973287 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.142904222 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.143043517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.161477393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1424935 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.160863671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144114647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161029876 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143439767 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161342085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.144812841 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.16144278 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143671509 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.161584789 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.142326626 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162139961 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.142624207 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.16250118 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.142412397 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160511054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143183183 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160717785 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142915271 seconds)
  done (took 4.099202767 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155801632 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.163837966 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.161694985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165829883 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.14325264 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.16297861 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.149101333 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.164202744 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.150702533 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.163745607 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144599374 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.161864072 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.159194943 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.164516148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.151438545 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.164887029 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146163735 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165566268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.146698369 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.163786282 seconds)
  done (took 3.920220772 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.234901085 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.180883449 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.180608702 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167840169 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180615103 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161631703 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187773662 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.16118676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.17922166 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.190177238 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161489519 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179380691 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168468591 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.185418982 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160912072 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185252025 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188688463 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.167843989 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.179887887 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161069667 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191171103 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180225985 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168156143 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.180930174 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.162601103 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18015372 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.161579845 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186116412 seconds)
  done (took 5.747529569 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.156520076 seconds)
    (2/2) benchmarking "in"...
    done (took 0.174027589 seconds)
  done (took 1.107502436 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.146025133 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.148180991 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.164671411 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.14648025 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.164536879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.14690668 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.165954335 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.147745173 seconds)
  done (took 2.005138688 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.209343623 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.231698469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.17199637 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.157757753 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.233101521 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.22165321 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.227701777 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.14865376 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.165343046 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.138186124 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.226585083 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.138141535 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.165385641 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.166070783 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.144598853 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.170571856 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.14543181 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.171946816 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.151694177 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.166298538 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149183775 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169345263 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147579594 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.174847305 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.140091861 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.168599246 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.151161044 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.173955994 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.142769519 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.167798379 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.145597885 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.164532286 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.14955785 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.169435366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.146010949 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.230958986 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.174005496 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142864643 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.167177188 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151936086 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.197865576 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.146816433 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.167181171 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.147228046 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16839748 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.171100041 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.151262022 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.145549622 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.156908089 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.161225401 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.147415201 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.143454151 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.16487563 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166893149 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.147173407 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173071986 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.148384928 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.162089814 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.143377965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.161520005 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.145276954 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.163777903 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.148915313 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.16775856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148983522 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.166927963 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.148129127 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.166028569 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.147005888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.167021879 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.146802598 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.20385486 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.14976719 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.179449168 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.152439274 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.166301152 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143859538 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170463104 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165708036 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.14750086 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.169548414 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.173198662 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168570251 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142287266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.162357809 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.15563572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.167532509 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.150644143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.159255525 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.155709589 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.168525088 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.148459057 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.159906493 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.146772675 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.162397414 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.150365991 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.160908871 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.147752907 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.165314095 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.151668631 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.17135274 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145975097 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.1697575 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153351241 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172278132 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.146288245 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.212830783 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.164396984 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.14338434 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.167990837 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.152949727 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.162327078 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.146801296 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.165512755 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.144430818 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.162569025 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.152750004 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.168226818 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.15021421 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.17115123 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.150322717 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.170119286 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.149338622 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.166559199 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.144606319 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.16995249 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.155760922 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.168874854 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.150985679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.167351019 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.149053214 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.168515759 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.151462322 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.166884363 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153255821 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165991208 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.147332994 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.168519303 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.153543757 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.169063069 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.145116196 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.167058043 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.150124539 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.167150263 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.152518006 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.170086828 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.144229285 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.160628557 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.17043959 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.144892529 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.169309453 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156345633 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.164138592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.150461521 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.165060723 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.155899873 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.164571836 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.153053013 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170149618 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.154476052 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.172186057 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.142004199 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.16612771 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.151483251 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.17015318 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.145190211 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.168163875 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.14850036 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.17521413 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.142504127 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.171938636 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.152319912 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.165570838 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.154234492 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.169560762 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.151370095 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.165643131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.186834433 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180051642 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154601592 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.168973429 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.150500187 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.171639648 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.148220584 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.171821913 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154167315 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.173537932 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.148076608 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.167300591 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154040254 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.165090324 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.149895235 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168160586 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150785746 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.161236512 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.149923162 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.160982088 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.153569989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.171635162 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.154318015 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.175354199 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151149582 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.167909003 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15699525 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.165398232 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.151637918 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.162332114 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.153693399 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.178378316 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.175262896 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154816788 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.172358074 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147484834 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.170515063 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157223365 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.171289141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.149786969 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.170321334 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.142492408 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.163254431 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.156641836 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.172072648 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.146513074 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.168351285 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151363649 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171086535 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14780141 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.162563116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.153483027 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.173411355 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.144810964 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.169553631 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.145769913 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.168303451 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.157281218 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.162836509 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.145825729 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.170937851 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.154535173 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.169525555 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.15051012 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.172376958 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.155862104 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.172668652 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.152083946 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16769224 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158569927 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.168630083 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.150513861 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.167017956 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.151900396 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.166596184 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.151072977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.171279867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.147313143 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.16609509 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.153355324 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.174603365 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.154299732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168095882 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.15360373 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.174872027 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.155627558 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1685424 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.155085954 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.165447282 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.142415114 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.167266333 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.141932474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.172150246 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.146319713 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.175981719 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.168629027 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.14954852 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.173148612 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152749133 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.167749839 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.155277678 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.179846523 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.14474285 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.163168334 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147786058 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.169532537 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.147025759 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.167139348 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.1508247 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172527715 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.155249036 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172053099 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.14762497 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.169842289 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.155822369 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.166287238 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.156444614 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.176976192 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.155677958 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.166092034 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.157674532 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.16834396 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.154287028 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.164151395 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.150592547 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.170895355 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.169878658 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.146961973 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.168214008 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.14701935 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.163808884 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.148969541 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.176428019 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.148971862 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.172918317 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.151507885 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.168718901 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.147684554 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.165808684 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.156462275 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.170028982 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.157313544 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.170892661 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.144691064 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.163950614 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.15570129 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170818298 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.155763854 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.165511055 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.154607976 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176036249 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.153904863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.170745233 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.159321027 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.178917043 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.15542102 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.176714746 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.143893493 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.168367762 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.155264775 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.172646791 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.152765371 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.173512645 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.144782412 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.174021496 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.155358279 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.173843152 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.149760471 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.166612139 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.151115622 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.176086841 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.154542106 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.174848465 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.15224656 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172249672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.146973696 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175693032 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.156047383 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.174063383 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156405672 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.172020901 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.154951842 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.168150165 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.15652325 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.17394306 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.147079275 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.165680015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.148182645 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.17833177 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.144601539 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.175491118 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.154802142 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.168784567 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.149124364 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.17591901 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.147219514 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174619583 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155672965 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.171054606 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.160024666 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.173019352 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.149377867 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.176696498 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.156348917 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.165741232 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.150597573 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.172484867 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156861546 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.171769058 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.176057089 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.153293083 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17599119 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.15337841 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.176996913 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.156062993 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.177460571 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.145428923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.178991526 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.154983442 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.174706841 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.149567085 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.169311563 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.147322363 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.171497741 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.158405609 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.169802858 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160084742 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.175720648 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.149918896 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.171269585 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.157040844 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.171956901 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157507815 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.170234758 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.153162687 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.166385678 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.154406926 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.172901083 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.158164501 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.170862421 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.146708152 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.178737985 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.156816246 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176929987 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.156076597 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.178090045 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.145455746 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.16569948 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.154654492 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.169344168 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.160182124 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.175414195 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.149906125 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.171203966 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.154210234 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.173832192 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.158880524 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.167441592 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.149884878 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.174014564 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153248949 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.17152373 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.168146301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.156024188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.172394837 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.154347056 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.172752985 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.146970586 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.17321482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.159936277 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.17157574 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.150550665 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.171437542 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15873926 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.172970697 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.150189593 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.166966845 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.158764293 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.17558079 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.158931873 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.170051043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.153312648 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.172513616 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.154637796 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.18071245 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.151599502 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.17409266 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.150767861 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1786808 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157657225 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.165035678 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.149910383 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.182184914 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158074598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.176629072 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.155390608 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.174118269 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15912708 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180074953 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.155922912 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.168712082 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.148305671 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.172953847 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.147125801 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.176198682 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159110849 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.175037641 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.17195872 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.156906431 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.177036069 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.156026573 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.154526707 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.169159883 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159143189 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.172185401 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.177756688 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.148570896 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.167354439 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.155299783 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.157781193 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.174487274 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.175231292 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.153924188 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.156063425 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.16852168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.172223226 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.158250936 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.17830296 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.157658224 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174569213 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.152761138 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.175648154 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.162945473 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.17503267 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.153351349 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.181697073 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.158987878 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.175744403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.15481449 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.177373851 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.159621423 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.176352431 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.159790012 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.172258033 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.153755504 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.181887185 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.162115176 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1842971 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1527763 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.16958669 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.157880943 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.171750461 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.148964289 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.179602369 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.161493314 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.180099777 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.154011894 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.172798255 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.162239128 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.180327073 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.176330563 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.152935474 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.173835082 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.158549741 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.173515602 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.157073902 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.172297666 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.16097803 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.181775338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.160592632 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.183533718 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.149175015 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.181589879 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.157006116 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.182789694 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.154836109 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.169926103 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.148867087 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.17678915 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.161636295 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.180394062 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.157195806 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.178472956 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.158697412 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.176331682 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.154729458 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.17398339 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.160282647 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.182140753 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.15529112 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.177502678 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.153340496 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.175768532 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.155154751 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.18037695 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.161213323 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.17601932 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.163438189 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.178280133 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.152701861 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.173448788 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155488845 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.177840035 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.156824079 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.183377256 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.151923514 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.169581075 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160666961 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.183631561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.153984603 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.183558655 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.161725015 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.175876109 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.158608008 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.182271936 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.159742732 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.177392351 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.156817408 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.179004116 seconds)
  done (took 97.89614826 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.202769731 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185593048 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157442402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.178204629 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.173156108 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18042046 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156505906 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.179454093 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159244773 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.187184409 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.15723027 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.177229251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.171770605 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.199131333 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196372441 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.167312989 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.178240688 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.158652006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.17757353 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.158417953 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.192814369 seconds)
  done (took 4.567090751 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.156994378 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.155851818 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.177500323 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156475479 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.178264533 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.158028368 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.180286027 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.157128208 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.177708366 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157051614 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.178116702 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156898474 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.176386383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.157671627 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179011527 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157290702 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.17805696 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155739116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.178825964 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.155901085 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.179711915 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.156817489 seconds)
  done (took 4.539821139 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.184522421 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.18261984 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.154184031 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157165968 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.181134032 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.157518747 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.182024604 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.158567185 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.186499914 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.150943523 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.171145282 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.151504899 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.176642215 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.157455157 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.174083546 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.158503596 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.185673946 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.160840621 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.184181478 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.158102231 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.170559762 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.158032635 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.180768499 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.148801457 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.185154704 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.161369718 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.183402086 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.161239966 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.170485545 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.160127093 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.180630135 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.151377725 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.170826343 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.148480245 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.171036814 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.160816607 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.183417577 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.157521588 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.180204673 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.149926557 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.159690438 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.183845417 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.151709499 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.17949765 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.157290549 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.174036654 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.160293205 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.179076828 seconds)
  done (took 8.932246158 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.184592622 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.216109153 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.161988088 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.209881931 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.194686003 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.166841124 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.183845075 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.187422055 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.183568684 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.161391865 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.195821048 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.194772754 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.162349026 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.186541942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.164165529 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.184581726 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.163973614 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.182230213 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.166494115 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.183011058 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.166625214 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.1848981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.17040954 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191264361 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.187021492 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.160766509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.182181092 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.16559949 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.191889379 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.16701892 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.187942453 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.166086595 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.192879001 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.162450865 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.182938561 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.185181769 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.171479112 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.184947204 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.162865074 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.181247384 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.16344872 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.186376256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.163297784 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.194445211 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1630715 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.185334685 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.162806932 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.18109683 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.191983264 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.163253587 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.190798221 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.172859743 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.187839683 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.163170017 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.188082079 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.171692697 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.185145418 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.161931815 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.185567499 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.193241694 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.161153301 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.187694932 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.17221881 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.185459888 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.168410725 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.19401863 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.16506051 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.186479419 seconds)
  done (took 13.125959466 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193749979 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.188361138 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172337344 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.196135201 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.16648978 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.187370598 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.166117247 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.189742954 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188592658 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.170465056 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188922495 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.296918134 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.16849601 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.193032328 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.167241557 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.440166004 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166326101 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187534808 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.165800852 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18829017 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.189928873 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.173817567 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.189540729 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.174826151 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.199498442 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.163561727 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.188489354 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189497492 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.173503216 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.188866994 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.178124123 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.189702125 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.166995108 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.196066347 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.199710341 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.16764776 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185196427 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.166555546 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.188562315 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.167565712 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.186255076 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.173127573 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.188740714 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.164191075 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188354245 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.16826807 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.195549027 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.200402664 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.170071145 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194196923 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.166804773 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196231189 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.190679949 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.168016212 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.196096247 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.180726877 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196769421 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.19704588 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167719131 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.196489659 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174629265 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.204445632 seconds)
  done (took 12.580769789 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163654828 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162738602 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.18416017 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.163441892 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.185009988 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.162611448 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.184414917 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.163234225 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.185523575 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162388099 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.185318871 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163197766 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1858717 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163615243 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.185070944 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.162540479 seconds)
  done (took 3.670268405 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.17962877 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.202020733 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.265747861 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.164539234 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.187199537 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.170210449 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.188429993 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.164235848 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.185736521 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.16777618 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.190980755 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.165145107 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.202818389 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.164842084 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.186047624 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.16511725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.184781391 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.167509947 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.18516322 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.267686347 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.16650219 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.18895841 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.163569016 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.190806354 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.164286047 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.190061712 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.169307156 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.185087738 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.166406065 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.185867571 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.164961396 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.191341681 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.165375689 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.189656723 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.164918401 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.187071837 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.164197828 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.186056463 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.165949322 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.18640253 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.165887899 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.186744375 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.164235743 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.187551452 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.162570435 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.186554483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.161982484 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.191279578 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.164780541 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.187993714 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.16399819 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.19477559 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.192445114 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.170922862 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.192643445 seconds)
  done (took 10.876270836 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174672086 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187919719 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.175200788 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1851304 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.164937331 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.188965258 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.165404682 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.189025476 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164122295 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.185912672 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.166482917 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.189249178 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165550725 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.189622257 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164990655 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.18833054 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.161344621 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.189721607 seconds)
  done (took 4.108662469 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.161097977 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.162824446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.186081682 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161938122 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.185757082 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.163454934 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.185184362 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.16286362 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1859619 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162608113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.184886756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.162596953 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.185762474 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.162854785 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.185662298 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161968625 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.186415283 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163163892 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.186989017 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.161201041 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.18525057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16310972 seconds)
  done (took 4.722143116 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.173333139 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.263461797 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.193572967 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.272710967 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.159864512 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.182840297 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.169066793 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.18421551 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.177374236 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.182971218 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.159613766 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.182551555 seconds)
  done (took 3.224336699 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191952121 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.223134305 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.166503586 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188594084 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171985878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193290102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169301061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191589175 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175378906 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203714484 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191682866 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176643046 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199002669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17717999 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194611442 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196363229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168912651 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191659125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165957543 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206678355 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169782266 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198372651 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169964969 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191474251 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192234873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176462519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198860602 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.180292179 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193615665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17568969 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196358892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193245208 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176962268 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203600595 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165723269 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198442924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169648753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205542898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197110618 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17623175 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18824832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173864563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200712251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175789908 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198125272 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194471202 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175036226 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193751437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170434116 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.212720058 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196699496 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17751507 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197602431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17736968 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199912706 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.212859467 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.180215146 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202010881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173819656 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204663954 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200574232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173720107 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200043465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.181953364 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197951816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199911599 seconds)
  done (took 13.359866836 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202088639 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190931756 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170879991 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205613903 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177930111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194612243 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194041078 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171014893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194963129 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166834594 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.235301004 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172561464 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200443611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.20285012 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170876727 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194742056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170609149 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202417956 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167620601 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.213548829 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194025979 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177248548 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202195913 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178627413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204498844 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196904637 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171232251 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193348896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170938883 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195923769 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174486292 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194158042 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177485277 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.190943677 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177131381 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193515093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195127615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175639919 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193860089 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174654821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.20243611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184368306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194267039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195449747 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182283459 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196267525 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172805726 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191401445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171327743 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191993204 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.181879845 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.20570764 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.206757865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178065391 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194245281 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170788186 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193170107 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171676556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19388634 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197790873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177737883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195403889 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191496866 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195378184 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194482596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178091002 seconds)
  done (took 13.374886499 seconds)
done (took 237.598674665 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.314705746 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.344402938 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.165338937 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.392025039 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.157333542 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.87868941 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.767885399 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.226741742 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.182542576 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.156882674 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.181793194 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.174977011 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.551202955 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.158937825 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.179820807 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.196342172 seconds)
  done (took 31.963458294 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.351442752 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.398204567 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.174966121 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.186299268 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.164273221 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.187140439 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.161666382 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.189649151 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.163697265 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.190659759 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.163173246 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.181285596 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.191615026 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.158892985 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.187345685 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.163924098 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.191322597 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.163201569 seconds)
  done (took 4.513696621 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.181282029 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.236008713 seconds)
  done (took 1.375900698 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.192129704 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.284872677 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.38799784 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.236540761 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.184684279 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.203104341 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.238046722 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.176391288 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.275023458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.197590644 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.174884918 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.185578807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.189033455 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.191817288 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.180853745 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.185296015 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.191162701 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.202283452 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.177978857 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.186992575 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.211648985 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.16542412 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.191862002 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178249793 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.267386494 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.199665771 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.167602495 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.187478742 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.16478135 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.201493996 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.170445062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.202988149 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.175380704 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.245615012 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.191708117 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.240588543 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.167287354 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.188055127 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.177670996 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.186701292 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.166655645 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.189848209 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.198340568 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.162544863 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.185706301 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.167860816 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.186329756 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.16445719 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.196335309 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.167837051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.195103757 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.170300254 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.237554049 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.191021216 seconds)
  done (took 11.655162759 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.997381069 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.212645902 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18746439 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.150732891 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.20949687 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.17728356 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.024971844 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.192047095 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.31464245 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.083250624 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.17902029 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.196430051 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302607214 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.343641605 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.36172593 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420235724 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.855952017 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.175078832 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.220114292 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.229796612 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169423551 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.205107796 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.203536942 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.485460395 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.190004268 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.163679172 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.192572325 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.196310574 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241217697 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.164369417 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.191596202 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.265347071 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.360377389 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.275638007 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163880263 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.187968236 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.16268402 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.251468652 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331021093 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.304153259 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.233058494 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184614925 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163124973 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.191715885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.202465184 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.161477895 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248342788 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.259080675 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25767485 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.168426715 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.196685045 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195826685 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.167930509 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.244549105 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.187689911 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.425681976 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.429673023 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.189484707 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170287143 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.201458609 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328854566 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191857414 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301471515 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.210967545 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279023983 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.164965585 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.883372453 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.227760849 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.187859252 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.193197003 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.168498025 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.194201369 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167786322 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.246534817 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.487951376 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170398954 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.193134846 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163473673 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289522734 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.190388061 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164039346 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.244688508 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.192156455 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.170614985 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197077188 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195484967 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.233006944 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.340093348 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.195796325 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.195319134 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.169265711 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199092521 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.165172284 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.298198627 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.295084133 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.24169884 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.297359258 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.195506466 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.248837591 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.254285361 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.169922171 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.254767001 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.194914799 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.177569485 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1933164 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.288436964 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.224764757 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192606208 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.169213831 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.195225688 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.202120209 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194025339 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.17159514 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.25480808 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.54573401 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.251870716 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.188781431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.170514537 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197488835 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.246043489 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171029873 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.350409151 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170734669 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.253614861 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.195437829 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.163246945 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.195286958 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.248042906 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.172607728 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.196389479 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169316423 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198394016 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.346446008 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.287457825 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.199586229 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312919556 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.26156279 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.170719625 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.261081269 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.196500666 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251439321 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174295583 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193775508 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166886981 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.868382072 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201309378 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195917993 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169702045 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.272880327 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.165987831 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.193734495 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165749234 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189224935 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.860925224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.169058361 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.189648091 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.169492935 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.196447729 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.196107111 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171509044 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.19671017 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248074864 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313790621 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.200409635 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.169324724 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.191998184 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.264605705 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.167793364 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.192061965 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16502433 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.19158112 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.172021086 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.195820127 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16955837 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.257887103 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.247187683 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.297615241 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.670025795 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166206988 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192151102 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308004736 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165985885 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.415083056 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.171979271 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.327601454 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.251912494 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163909247 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.424409153 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.251415474 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.274221297 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.195797243 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.259405009 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164177894 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.198044942 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.247980698 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166598899 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198582955 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245867805 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.174804905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.198654137 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.319805467 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192748984 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.288528777 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.190462887 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.258108088 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167983697 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.197284515 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.396800421 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.193408282 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177681629 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.249305883 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.197447416 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.167627818 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.993602879 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.19923506 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.177241072 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.198626499 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.300586188 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.251084694 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.200004652 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.174432053 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.201059888 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.251981253 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.296341927 seconds)
  done (took 62.612163382 seconds)
done (took 113.065301445 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324327302 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.231822797 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.428305458 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238820623 seconds)
  done (took 2.276410846 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.352719818 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.207737398 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.309646333 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.190282728 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.317214439 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.163173857 seconds)
  done (took 2.54518683 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235081978 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.23345805 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232657121 seconds)
  done (took 1.710247947 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275005518 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.278190277 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41668268 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330634296 seconds)
  done (took 2.370492928 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343571919 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.182122939 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.223186974 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.294404417 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.310966627 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.273542067 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.190192447 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.243304305 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.222897172 seconds)
  done (took 3.326073693 seconds)
done (took 13.23509767 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.205549486 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.223613618 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.187547514 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.205549421 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.197394726 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.226270184 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.195913009 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.223703725 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.195522769 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.206379781 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.194893642 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.201920628 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.288475942 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.196063932 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.203618657 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.193908473 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.2039463 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.230297552 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.196174438 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.203921778 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.197031056 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.203444082 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.177753609 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.212769605 seconds)
  done (took 5.97308172 seconds)
done (took 6.98556529 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.272264444 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.184348313 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.17558914 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.204611849 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.282692385 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.182693877 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.221110829 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.176808969 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.21284243 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.17584798 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.193530669 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.190205078 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.200338475 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.276334076 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.177994101 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.194168328 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.167016549 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.213776164 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.191928321 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.217858007 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.284699423 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170525913 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.213999463 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.16671764 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.284788892 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.197626765 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.174548076 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.20386686 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.189109384 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.203253585 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.176484718 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192926823 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.192769216 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.219791521 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16761922 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.203197985 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168550488 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138496807 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.204381294 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.179628898 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.216067013 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.1791167 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.202790729 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.195415936 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.17997556 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.203761791 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168331625 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.206264471 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.166700707 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.204064151 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169973444 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.219057113 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.176859217 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.193159819 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.167937875 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.194753196 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.187452155 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196062573 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.191463113 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.195043483 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.168362979 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195785105 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.17904799 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195799385 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.177596177 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.195480983 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.17771328 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.20640658 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.177703146 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.199406419 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.170193103 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.205091828 seconds)
done (took 15.125517485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.173227577 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.242749615 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.28013403 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.257690109 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.227122768 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.212978365 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.183149794 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.221483646 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.182867881 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.235504971 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.204959243 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.227487427 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.291434657 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.184647651 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.211237835 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.181131029 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.20877613 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.201769687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.261112914 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.223237196 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.219800925 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.184984427 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.223158368 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.187474582 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.199871997 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.205702791 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.204613575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.181769755 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.198642937 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.182425136 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.221696425 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.198931129 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.176880671 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.22001255 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.191047877 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.211022539 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.184088761 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.209164658 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.172754552 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.199957187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.180297612 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.218019766 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.172197666 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.210166373 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.207884153 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.189200371 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.207375172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.186117866 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.201532985 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.180768044 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.201600512 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.197688808 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.215125534 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.188023713 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.212911083 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.193058699 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.213984739 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.187340913 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.204017293 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.187433747 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.202180192 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.174983107 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.201053319 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.218580077 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.178077411 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.214196642 seconds)
  done (took 14.550350366 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189616261 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.230127009 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.183933038 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.212559649 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1787556 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.195139027 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.166984313 seconds)
  done (took 2.391932145 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.167734717 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.296203246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.294780318 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.294641803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.289346365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.299580398 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191964233 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196965814 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.208264543 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.207655759 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.296322206 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.32940922 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.179946127 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.212686835 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.297875214 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.167799425 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.296562287 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.277322412 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184757747 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.295843509 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.215747431 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.231685188 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.181019057 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.198431359 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.25920784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.198887944 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.345817052 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216688404 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179503359 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.212979821 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183732498 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.279681905 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.291502069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.184489576 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206031366 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.29277365 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.288847327 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.184872489 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.302713936 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.202030949 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.288255997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.183706249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.21358299 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.185161903 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.213982562 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.280487939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.191049527 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.215333353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.184224557 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.302444511 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.209197586 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263951623 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.211913022 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.186174004 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.209387614 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.214996468 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.192909995 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211183484 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.272966182 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.219932862 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.29366127 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.294255418 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.293388895 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.294275415 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.196489459 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.294336725 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.283272044 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.184367421 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.288988052 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.217329296 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.296008387 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.183928042 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.210595162 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.284204573 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18957228 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.296621811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.29693747 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212194587 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.1853651 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.204492592 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.184394338 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.198719344 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.299590501 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.185154174 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212010155 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1908277 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.21256404 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.185710419 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.287220368 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.2242013 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.185451543 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.210721478 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.191216271 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.215647803 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188890169 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.296444774 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.212017276 seconds)
  done (took 23.824014591 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.172502369 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.172675045 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.203008096 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.20006021 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.173236025 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.20009803 seconds)
  done (took 2.197851684 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.210298981 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.214793251 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.195091988 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.215355128 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.239796342 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.298886663 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.306281095 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210766374 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.203740472 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.223681678 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.304966511 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.307674157 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.306202317 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.191396356 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.308960426 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.218644105 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.307465805 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.184127906 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.224014098 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183151147 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.215500027 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.190145275 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212346884 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.294085903 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.187539227 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.217373019 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.179156374 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.225164176 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194706053 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.209203319 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.190985773 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.214481315 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.208348541 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.182948131 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.308426269 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.209146484 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183081796 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.218597202 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.189716314 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.215194115 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.309043481 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1840601 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.223169107 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.189973047 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.211826308 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.181439512 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.218882083 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.17962913 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.306241445 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.221847854 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.190461263 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.217802819 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.189176628 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.218788344 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.208218153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182201351 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.218731466 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.311639152 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1920256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.210363618 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.18866668 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.218251799 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.182378966 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.220045302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.189724472 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.218057224 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.181424382 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.215851445 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.186227718 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.215547921 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.219072451 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.189473634 seconds)
  done (took 16.965055353 seconds)
done (took 60.956407993 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.718029874 seconds)
  done (took 2.796531965 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.242098294 seconds)
  done (took 2.322517117 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.193947132 seconds)
  done (took 19.309561548 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490951282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.416366364 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.110750436 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.242810127 seconds)
  done (took 3.344260385 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.158394629 seconds)
  done (took 2.254341419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.485923747 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.348651801 seconds)
  done (took 1.923764187 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.821014135 seconds)
  done (took 1.924955554 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.809404152 seconds)
  done (took 2.903482177 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364538291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.288689174 seconds)
  done (took 1.757472619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.684063104 seconds)
  done (took 1.791406198 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.626207493 seconds)
  done (took 14.733920439 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.321091747 seconds)
  done (took 1.430242757 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359641239 seconds)
  done (took 1.47043076 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.721227322 seconds)
  done (took 4.833373604 seconds)
done (took 63.88963494 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186567703 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.217508868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190610838 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.216132484 seconds)
  done (took 1.907254602 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.190695413 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.21473193 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.190540945 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.214064417 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.193140714 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.214707196 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.185826852 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.219722921 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186825445 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.217294947 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.186797819 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.214486053 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.190233486 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.214427733 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.184708182 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.21745188 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.189973872 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.216564758 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.188306554 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.216379153 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.187776181 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.216900289 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.191188531 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.219528003 seconds)
  done (took 5.971950484 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.183618916 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.205670772 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.179721217 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.20594932 seconds)
  done (took 1.885981173 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197499038 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.229824702 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.199878679 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.225575714 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.203385065 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228753112 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.187198882 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.213155966 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.186639223 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.225800644 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.205484642 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.230634503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.230208475 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.192500409 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.227827969 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.18174374 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.220331725 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.200730927 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.226089665 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.199186624 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.219207308 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.19633316 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.215946562 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.198477026 seconds)
  done (took 6.149853701 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.26489115 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.229478206 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.214094461 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.244940683 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.186485758 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.2434383 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.261759403 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.194590213 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.222465463 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.193138112 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.217715657 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.188783894 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.262814865 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.222226387 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.198629834 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.217535992 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.196886726 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.221791965 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.231406965 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.220276069 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.194035498 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.228207682 seconds)
  done (took 5.975332642 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.277988169 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.209047474 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.17855445 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.206381322 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.220540334 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.180603795 seconds)
  done (took 2.393288511 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.177993496 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.173391776 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201069671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.174059066 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.205124382 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.174552569 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.200583583 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.174061752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.201563207 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173684701 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.201360303 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.173238482 seconds)
  done (took 3.354235226 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308650967 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221547638 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.354219387 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.469072364 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258938006 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260613528 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.379485762 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231158597 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.279640345 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23668146 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284634781 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230890826 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256046633 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308879942 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212609336 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.247017926 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272728123 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303392758 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24055829 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338593576 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260558925 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.280282526 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.263625745 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249353793 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240801442 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233200453 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.219486063 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199657752 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265573747 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267894692 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275977546 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251798241 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212061737 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291125242 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311990685 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27537623 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.36944278 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229264722 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.231913668 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.291518044 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.334539849 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242114233 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29333346 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254271855 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200646963 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314579178 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25054093 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.256628947 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.235728489 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246550428 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282001759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247619863 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.271392368 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238049195 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400389965 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2037435 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.241343056 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281638149 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291373025 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303368753 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251343804 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.225477058 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274283782 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289771301 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316568814 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.212078633 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.264765407 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225184985 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238172272 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311415796 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283794319 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26294209 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.289073714 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201442144 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27330202 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268898042 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22530727 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306837334 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271318298 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.221859296 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219023924 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233652481 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197301086 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.289793929 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222304395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318186746 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200509154 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273337159 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279195292 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223397531 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262062722 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261648257 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233496758 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248502045 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157808349 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243892259 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.262048016 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227053025 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229947643 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255015208 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209262743 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225935192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223004094 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.224259773 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271263259 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.193706949 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260124203 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271953267 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.204185831 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284189046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250199051 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.234660727 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268986429 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297684076 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201402143 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233403125 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32603547 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272154526 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.207516248 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274536727 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.301615272 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.239574756 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205521638 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266868885 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299039719 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21621544 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304125036 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241672403 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206126346 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226440351 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276861334 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261597473 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.232200995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228715376 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.238020245 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288337788 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.228605678 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209633849 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285311421 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235855422 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195955859 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237960065 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237543929 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.214302174 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.25367005 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.209662952 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255476618 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270503778 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268307012 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227026889 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23620057 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273925681 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203317395 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.273201715 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251583164 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.190136574 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.279114973 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301853157 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200156378 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283162898 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.26294351 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281474091 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273653847 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200485342 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.286324873 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199524077 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.222356667 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262636946 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240443479 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264363772 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.291915048 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279552891 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.264895827 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.266765846 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219368843 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269288 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.289463484 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259627253 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.21182427 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277862052 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271607126 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.191800913 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.225450471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.199347224 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23884898 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200820555 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238631555 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281754206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267514591 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276179684 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239698472 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240565339 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.296945434 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.196132356 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261323713 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.284025606 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20992188 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.29358305 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293371895 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28334406 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242678768 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23364916 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.222542437 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197420939 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.236235284 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264437929 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209338449 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238570113 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213030478 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.295648847 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269811274 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250366792 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290926626 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267404135 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275849215 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.225632637 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.264250635 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235719812 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272029197 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.290228148 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204727923 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.262726168 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296724741 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211851421 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297875389 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271621229 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283072272 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295414301 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.239389187 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234377137 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218498578 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264291387 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242191196 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232888246 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.246960008 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233760108 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219874641 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.240735931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210981045 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289156767 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24614049 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280171332 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.22622504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270971418 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22848266 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214676681 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277622228 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24883748 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163930139 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268254053 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294634931 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222274115 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255083316 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273122251 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202857717 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.451481549 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28221288 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275582928 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207657929 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240213228 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279978716 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260798722 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23047492 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.289419454 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245565246 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313545359 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243778587 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.243738349 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202476995 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251607477 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253055821 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197788354 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.256397493 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.26660665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.216442465 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289910001 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239121855 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27582924 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251452689 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.250123676 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.220848266 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242215911 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.331174332 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273970137 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277277409 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.239379628 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.267111499 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288998312 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196961021 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229429933 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.204797873 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.288788825 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23305028 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25172834 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.267212544 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28256131 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277034742 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267508945 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21330272 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.232795404 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.27263463 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220109848 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286097325 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236607949 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.241796509 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258142567 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.217825222 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204959126 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266572154 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395046175 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247791876 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241611752 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.196950281 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.385001572 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202528357 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236773064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233007441 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274183653 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.236703106 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.260409737 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277570224 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246761856 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232574052 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238990864 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.281036857 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282991456 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239261494 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277723161 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.248663975 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267168942 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227977606 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274838796 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251143312 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.221101028 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263461463 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301386878 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.248955895 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.235610359 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275730704 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2439286 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278428706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275266301 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245185232 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257078537 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232472074 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269554204 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211112684 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230499039 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232761368 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.269432307 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231932466 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277368445 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246288543 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235564975 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232028456 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220446298 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269933388 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24409834 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.204522296 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288754979 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.202638682 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288215232 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314571357 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234904676 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242602323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248420328 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233971559 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211817049 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247691237 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206434679 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.279509891 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281596257 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.203962921 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277179387 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268784114 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237631974 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257379487 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246480923 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.344382086 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.23266099 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29955086 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223779983 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.324075051 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255405735 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28555048 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245424146 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253406827 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271438636 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220045684 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.327423749 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269048829 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.273509193 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205823903 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248559384 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212720859 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.239999804 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258405583 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24509567 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246566313 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.210711528 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.273234762 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250422623 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.220304909 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24598907 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306367923 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225517971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291389946 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.296553091 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242547573 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251479186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27779689 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234570018 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.269466269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246587628 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24923133 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257904354 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.208129911 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.242791301 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320905589 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.200576432 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265519591 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282601217 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244424979 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28011835 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.240725579 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255120011 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24620247 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283231478 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202429296 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.256442676 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.278516725 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209555135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.232291676 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248963166 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262962797 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.271964587 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.250785093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.252136429 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299887614 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.199186935 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239133959 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393658481 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266507908 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270885945 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227122024 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214427725 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251148505 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264800398 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.240853265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277134756 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.237657852 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204498979 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.251600026 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.222544412 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.227190587 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276028396 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257130106 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261016011 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297131638 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.210307107 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.362502161 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249859573 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250043805 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209371804 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.204739172 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246333112 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209678571 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246214485 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.285841394 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321413214 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.270977684 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.222359232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241404363 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.201978503 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236089374 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270135319 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223736038 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275841353 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255743127 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.165342111 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249338083 seconds)
  done (took 123.525443604 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300925249 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.303732992 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.266922813 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.34467322 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292706827 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.408439694 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.328533469 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.359961297 seconds)
  done (took 3.853067151 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.194600062 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.262325467 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.250138199 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.223532109 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.18481515 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.550183746 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.246188502 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.192894311 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.267643124 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.235064043 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.213317743 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.648825714 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.225964151 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.192547866 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.22430806 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.212101369 seconds)
  done (took 5.57340745 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.320419091 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.64192802 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.370421095 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.374510636 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.342981124 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.291303862 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.911553994 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.273353605 seconds)
  done (took 13.781772718 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.251925043 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.282580233 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462435731 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.389794771 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.301486472 seconds)
  done (took 2.950848512 seconds)
done (took 178.421402525 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.200115328 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.233271359 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.201540753 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.235763163 seconds)
  done (took 2.116159233 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.238709441 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154387069 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.188566448 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152309268 seconds)
  done (took 1.989259661 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.476703149 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154545509 seconds)
  done (took 1.916139388 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.220732482 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.241561384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.211645308 seconds)
  done (took 1.948732881 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.211236612 seconds)
  done (took 1.479959413 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.195007059 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.226892165 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.289335611 seconds)
  done (took 1.980024442 seconds)
done (took 12.694617511 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219733151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.053735433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.661357245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.211287697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.827498962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.474751511 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.554163739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.256651115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.317217963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186931837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.253760941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.767894571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.539600324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.956889391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.522732392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.956709112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.801844272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188073597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227166872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189607795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.535561045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186151136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219165825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.189406942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.80007444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.49614755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217127977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.000760121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.186666773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.228573765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.475544347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219101899 seconds)
  done (took 24.174898329 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.189881199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.279274781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242023808 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.222606425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.197193675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.22185099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199779943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.233146599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.326754158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188400792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.244939857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18724594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228670935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189109214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.244763585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.188936105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.222604579 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188996347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227327833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191618832 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.24360952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.220637793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.190589374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.221444918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.188640278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.238690647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.18793471 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.23289934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188218548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230700802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192484741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.220865464 seconds)
  done (took 8.24044832 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.232749646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.28966217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.244544673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.261006711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.278227186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.190094114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.311582147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.262003278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.299888334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.22166213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.212136994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.220644616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.263806866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189850789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.247281049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.189433665 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.225887097 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.190648468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229513828 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1922269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.243545349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.188186841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.223211412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.189687239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.220917575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.2120699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.220206476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.235112758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.189432289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.231992451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.193189823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.222933003 seconds)
  done (took 8.599434975 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.202618196 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.2373903 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.213382181 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.246798958 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.199907214 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.235884423 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.202723857 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.231381942 seconds)
  done (took 3.047339115 seconds)
done (took 45.336364893 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.773246808 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.243761234 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.209805927 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.239238385 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.281451944 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.229819293 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.208856895 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.230280517 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.205366269 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.245226157 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.188858175 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.23101073 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.209340418 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.234411204 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.317272161 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.205139588 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.322762746 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.319020399 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.198687887 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.24013422 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.196809311 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.322062778 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.239765283 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.198284256 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.294724184 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.19526789 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.30809185 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.235460203 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.202113216 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.224836744 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.321253824 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.199903916 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.232345939 seconds)
  done (took 9.774454199 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.298435232 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232998301 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.200588023 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.231672633 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.199879334 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.232564238 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.335997469 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.197866436 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.231380105 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.198025511 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.232545785 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.286262317 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.238238467 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.194211321 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.234418069 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174925361 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.337927515 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.23339515 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190583905 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157876729 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.228158914 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.198380904 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.349566584 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.228681137 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.198209003 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.231880593 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.215671903 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.236331698 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.201134079 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.231567834 seconds)
  done (took 8.250862381 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.202256605 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.245488828 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.218996292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.301872645 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.228713238 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.244647188 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.216138355 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.243743766 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.22091847 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.225909545 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.208204951 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.261052295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.243250158 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.203113326 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.225529189 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.207662666 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.242335365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.192854382 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.23350647 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.211193642 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.24485284 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.208849641 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.247752303 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.201810349 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.224731075 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200341159 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.235185821 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.205814153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.234805389 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.208112494 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.227695314 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194772055 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.229756958 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.226833718 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.227216681 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.207804666 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.246176189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.206546768 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.239670921 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.25988715 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.194768815 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.228876394 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.219344183 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.286210678 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.194258804 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.237546275 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.195842506 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.2417036 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.190467922 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.245013164 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.234737444 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.226733387 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.214722257 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.225260932 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.191205881 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234849426 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.19327097 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.230328343 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.208164145 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.227318465 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.214241963 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.234554899 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204817819 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.2297326 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.205084554 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.226301369 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.192868896 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.231077393 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.220099353 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.234677113 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.232793017 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.225881167 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.206263784 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.240077764 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.207121015 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.239137736 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.195157308 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.238695888 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.20526607 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.23043227 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.207358531 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.229218257 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.19528853 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.243072361 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.248004733 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.207291673 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.239087543 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.202857947 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.228688653 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.19441447 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.245979728 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.194790327 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.230875435 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.206593803 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.227601085 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.198075152 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.238663886 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.201600439 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.225987199 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.220568435 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.231744407 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.193911873 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.255540339 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.197126242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.231857682 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.202370607 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.270895271 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.193113404 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.236202561 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.204965227 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.227948795 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.201719598 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.230098067 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.192663588 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.244233871 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.210532566 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.234719414 seconds)
  done (took 27.343263635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.417130271 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.409523573 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.298546202 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.457926358 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.243227423 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.330344768 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.408227773 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.411975282 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.195323639 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.262843552 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.285373151 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.374160145 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.195778094 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.259108905 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.416205624 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.493319599 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.224717617 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.268289684 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.264039941 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20812871 seconds)
  done (took 7.748993304 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.202250687 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.262437562 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214771105 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.246903431 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204725896 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.240880359 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.195518506 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.250601835 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.207134749 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.235392812 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.198400806 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.235756449 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.207889025 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.242622883 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.208415569 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.252992492 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.201105246 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.229857768 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.217682753 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.231027873 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.21328926 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.253033119 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236297285 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.214107337 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.248245372 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.205058952 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.228766053 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.195988799 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.236268524 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.203200118 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.228814526 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.202028433 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.235533862 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167766437 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.206567928 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.244319445 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.201331197 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.231557794 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.202524696 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.230559837 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.206406211 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.24149558 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.203407402 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202561958 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.248039426 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177000082 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.239306487 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.207367249 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.207114837 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.215000231 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.2409651 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.205971477 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.237149979 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.213815224 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.235249817 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.21153731 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.236882164 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.206004878 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.230282157 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.193665352 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.226428352 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.198121145 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.237889196 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.205403541 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.241629075 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.203057573 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.236741932 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.195287285 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.230798983 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.197411363 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.23164902 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.210856228 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.250684213 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.203853162 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.237190787 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.206227902 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.238477204 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.160937785 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.203428744 seconds)
  done (took 18.690477921 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.219355811 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.240412239 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.212190272 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.262716647 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.206981009 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.23624875 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.205772323 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.249680354 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.207997048 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.249128964 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.207701394 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.244385826 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.219538391 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.24120493 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.206023429 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.246386045 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.207355005 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.267981728 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.208890066 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254817258 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.208040247 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.23505893 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.208737717 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.242406536 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.221797124 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.241652367 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.25423805 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.207450938 seconds)
  done (took 7.765419237 seconds)
done (took 80.851802219 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.524748539 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.666088036 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.442382692 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.446475755 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.463152129 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.442063862 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.442222446 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.442238071 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.017620048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.421057016 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4407723 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.440061136 seconds)
done (took 31.577027728 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.722541334 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.099531295 seconds)
    (2/2) benchmarking "String"...
    done (took 2.11214802 seconds)
  done (took 5.556147175 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.090315245 seconds)
    (2/2) benchmarking "String"...
    done (took 2.109841117 seconds)
  done (took 5.530099621 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.430910135 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.430252836 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.827345493 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.433031692 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.430707814 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.430715905 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.430396808 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.45402735 seconds)
  done (took 17.767189828 seconds)
done (took 35.33677792 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.497317397 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.811869338 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.696875587 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.428578593 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.431191912 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.431460275 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.430615932 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.50896145 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.435198665 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.417350339 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.872292606 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.713359412 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.436288563 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.843584402 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.43196023 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.431502908 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.432244173 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.796956603 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.432099971 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.479761828 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.421432596 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.418603415 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.444586628 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.444369659 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.44352841 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.438784082 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.466065899 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.446329464 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.775508213 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.449951135 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.417388187 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.450334404 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.46542087 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.437983027 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.433448999 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.445417079 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.77644126 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.445900206 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.433453919 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.441175889 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.794880678 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.456603483 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.449365483 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.442312935 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.419329864 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.471762236 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.424473938 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.552820364 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.455580425 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.457730568 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.532666784 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.849727195 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.444030354 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.450828541 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.437435995 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.763447144 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.438913241 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.56163929 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.467334139 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.451180197 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.447737058 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.435525876 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.499190063 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.444721042 seconds)
  done (took 159.938053311 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.437128269 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.438498521 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.438424233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.444968554 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.437327476 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.439340939 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.435732882 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.4357884 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.439189623 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.466124722 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.436884754 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.436016619 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.439191702 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.404510492 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.446854116 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.458386334 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.439370911 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.438130172 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.44778288 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.436820015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.454523755 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.437268648 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.438007624 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.437026534 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.438644894 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.53398845 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.455058399 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.443695211 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.448213304 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.438396171 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.445824553 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.438100393 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.14981969 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.311418293 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.451423333 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.471886764 seconds)
  done (took 88.925343151 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.438083454 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.438128383 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.438353287 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.474296885 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.439164587 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.437632795 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.071911307 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.102829745 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.441773847 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.506733875 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.900154556 seconds)
    (12/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.844607422 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.977450922 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.746337269 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.437804892 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.536373977 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.451441026 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.440277901 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.441207976 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.537223711 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.465715943 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.442205787 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.440994825 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.105445226 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.45669623 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.434525069 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.629969991 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.439806897 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.476335166 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.839252989 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.439253202 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.440039305 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.477009287 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.785506394 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.477675914 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.439891292 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823886704 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.643654333 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.555379459 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.443252473 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.478176146 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.440900352 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.731531449 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.440570015 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.443131614 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.444482126 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.124315612 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.441899556 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.07631329 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.442176721 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.46985311 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.442146057 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.441463041 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.943612693 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.208683551 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.442254895 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.441891171 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.444905558 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.442204595 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.441881364 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.479109468 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.006132082 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.379938624 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.442121111 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.44663068 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.480799135 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.442305316 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.443305794 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.816079599 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.5075538 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.646668743 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.107567661 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446233846 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.890995439 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.541172744 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.565131428 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.44221381 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.443078861 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.443522527 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.444658644 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.560144705 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.443946653 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.912919855 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.632917384 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.445023658 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.002641202 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.545384965 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.443533484 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.853993544 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.444124993 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.44360268 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.23758021 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.542342144 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.444568939 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.445050182 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.443636047 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.91638143 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.108824686 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.774356194 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.444553514 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.472664304 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.44922843 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.929687871 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.079953859 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.128145677 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.445424135 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.56030292 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.634495403 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.447259536 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.445144829 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.002229053 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.445023303 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.505674761 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.446225558 seconds)
  done (took 398.974557669 seconds)
done (took 649.168339026 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430558343 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.431633832 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.431733399 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.431155096 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.432266316 seconds)
  done (took 13.50142955 seconds)
done (took 14.844552919 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.66637563 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.65563272 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.655466924 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.515417499 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.668550968 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.674503451 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.583346073 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.670125579 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.672861918 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.657495572 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.483333512 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.672132234 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.63936103 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.675138697 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.505205353 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.571640343 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.601048098 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.595694326 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.590235477 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.755834486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.831300002 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.515273993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.768060443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.493888394 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.797122168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.787597699 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.667298555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.628616537 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.481599149 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.471802046 seconds)
  done (took 19.544870086 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.56756329 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.762220169 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.797404872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.518719478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.735113058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.497041044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.773831453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791794446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.671112118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.625538073 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.478230599 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.473257764 seconds)
  done (took 19.472046863 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.466827266 seconds)
done (took 74.150634693 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.489717363 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.557703793 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.49704339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.470464952 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.469206247 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.469786156 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.470852582 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.470549747 seconds)
  done (took 13.242658443 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.469615081 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.468779326 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.468392033 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.469092998 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.468958773 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.468406765 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.469158766 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.469671837 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.469581292 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.470471466 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.469868229 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.46967259 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.469748347 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.46947168 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.469326928 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.469677809 seconds)
  done (took 24.858324873 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.472001187 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.469372759 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.46958617 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.470441585 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.470364185 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.471163318 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.472914928 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.470951707 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.470984308 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.469859752 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.470734849 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.471183126 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.470897631 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.470816518 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.470439934 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.470967383 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.470155299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.471408723 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.474466227 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.470379525 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.470732816 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.470800983 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.470216747 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.471023355 seconds)
  done (took 36.651342352 seconds)
done (took 76.100108271 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.454997706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.470289335 seconds)
  done (took 6.276236408 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.528827998 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.52905158 seconds)
  done (took 4.409145158 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.471989808 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.471881244 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.47244555 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.473236346 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.472857946 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.472666981 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.472480763 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.47260224 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.472706409 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.472104234 seconds)
  done (took 16.07704425 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.472184824 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.472202104 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.472247733 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.47342344 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.471865009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.473677703 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.472489898 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.472614026 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.4718915 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.472776195 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.472847577 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.47266538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.473368628 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.473343056 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.473449887 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.473669219 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.47382903 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.473858746 seconds)
  done (took 27.864301676 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.487802872 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.492277262 seconds)
  done (took 4.3331655 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.601088147 seconds)
    (2/7) benchmarking "second"...
    done (took 1.515774332 seconds)
    (3/7) benchmarking "month"...
    done (took 1.578734762 seconds)
    (4/7) benchmarking "year"...
    done (took 1.569941992 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.515283629 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.495252742 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.515851161 seconds)
  done (took 12.144187211 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.466749783 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.771379103 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.958721493 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.64406311 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.459007384 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.480917577 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.442300197 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.484834572 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.484313583 seconds)
  done (took 16.545869987 seconds)
done (took 88.999928282 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.459427964 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.488271707 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.477331689 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.494781604 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.814361847 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.515336348 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.460439266 seconds)
done (took 18.064155138 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.457171337 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.462230578 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.455161982 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.468751729 seconds)
  done (took 11.197192387 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.476340719 seconds)
    (2/2) benchmarking "read"...
    done (took 1.785678152 seconds)
  done (took 5.616444422 seconds)
done (took 18.167463115 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.476533146 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.475871222 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.476984864 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.477354014 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.477512576 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.476966779 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.477887838 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.477223271 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.477344805 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.476748276 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.477675597 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.476968866 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.477120781 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.478183711 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.478603954 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.478244891 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.477956328 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.478879425 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.478704662 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.47833268 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.477653989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.477559341 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.479025407 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.478023999 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.478960376 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.477994524 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.478297891 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.477888482 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.478147559 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.478953295 seconds)
  done (took 45.689687866 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.482780741 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.482723858 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.479049544 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.477883355 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.479832559 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.479739142 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.47986509 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.479151092 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.479610345 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.480004208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.479433398 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.478507922 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.479428657 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.478848202 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.479665192 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.478454292 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.479541093 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.480042295 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.479997971 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.480522666 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.480291601 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.480166898 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.479601307 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.478676305 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.480560484 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.479212164 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.479299957 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.480970379 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.481120305 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.480623055 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.479550868 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.479183547 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.480940814 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.481001725 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.480635063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.481163574 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.484791479 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.483364642 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.481108373 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.481447194 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.481693625 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.48205131 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.481201793 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.481562054 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.482301278 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.481170561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.481097625 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.481660649 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.481501737 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.481477769 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.481886132 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.481044258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.482806815 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.481016635 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.482141929 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.482106434 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.483140702 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.481527765 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.482375908 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.482820052 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.482504293 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.482815852 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.482110864 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.482780323 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.483563539 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.482916295 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.483371784 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.483043283 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.483628044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.482999742 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.483186024 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.483121917 seconds)
  done (took 108.000826921 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.48384877 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.482828924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.483270881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.483592432 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.483214622 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.483095979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.48429542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.484190403 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.482730677 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.48387294 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.483713719 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.482797548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484015711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.483592863 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.484306412 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.484410911 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.485157457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.484416565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.484608344 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.484604382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.484280374 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.48433101 seconds)
  done (took 34.007216171 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.484544639 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.485453207 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.482757624 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.486438983 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.487772862 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.485903953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.485509747 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.48547901 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.485563934 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.485500687 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.486442531 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.486799795 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.488574106 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.485950002 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.486293224 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.488385751 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.486504102 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.488628862 seconds)
  done (took 28.114938487 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.487422829 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.485953686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.486579184 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.487683083 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.486602512 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.486877088 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.485778975 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.486749737 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.487390929 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.486878488 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.488295865 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.4869772 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.486725597 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.486176382 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.487541043 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.487525887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.486654501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.487505935 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.487672924 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.487559204 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.487997711 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.488779725 seconds)
  done (took 34.081489576 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.487738685 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.487820568 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.487747802 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.487772195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.487073024 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.487613903 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.487829525 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.488142196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.489998765 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.487706248 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.488246467 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.487643788 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.491593616 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.48803914 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.488370208 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.487927454 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.488587969 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.489823098 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.488483483 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.48818003 seconds)
  done (took 31.131247456 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.488871725 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.489118033 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.489730413 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.489342445 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.489596949 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.491749047 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.489221323 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.49030216 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.48884832 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.490071859 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.489295835 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.489175578 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.490502297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.490219952 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.490142007 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.490224559 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.492059141 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.489841925 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.490513905 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.491436947 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.491133847 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.490235907 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.492026032 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.491193982 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.491687658 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.492241953 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.491587466 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.491594927 seconds)
  done (took 43.098564054 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.510939133 seconds)
    (2/2) benchmarking "in"...
    done (took 1.51174988 seconds)
  done (took 4.391169117 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.491398801 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.492134295 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.491491824 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.491973418 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.491826024 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.492279615 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.493622462 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.49191926 seconds)
  done (took 13.304754407 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.483937366 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.493080101 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.493920311 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.492559805 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.492515545 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.483639924 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.492994671 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.497971615 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.486825935 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.485448686 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.489150698 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.488507524 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.488359577 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.487117438 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.485541685 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.492688827 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.496625985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.494701544 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.494088136 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.494742421 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.494166425 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.488413259 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.491080792 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.497901917 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.485601204 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.500026191 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.496378586 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.498012779 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.487643331 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.492607175 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.488282947 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.498444442 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.49526479 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.496019053 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.49396037 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.495704921 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.49739646 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.493400271 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.49575625 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.501409006 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.496426089 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.49568201 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.489112038 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.491771999 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.493191512 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.50000929 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.496432938 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.49650257 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.489132052 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.490993526 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.499675363 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.486577814 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.498669264 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.495911412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.495369011 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.500114506 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.503573894 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.492384441 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.493122315 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.501077723 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.509710718 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.502466185 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.4993497 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.502641028 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.495081489 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.501545125 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.501891288 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.504694598 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.498486915 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.498567821 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.499032609 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.512648078 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.505495206 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.50297689 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.498599697 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.497869888 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.491987414 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.501419249 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.500399437 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.502581737 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.504565208 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.500003212 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.496249098 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.499466169 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.49294098 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.502855812 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.499075403 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.499729449 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.490710855 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.504937027 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.508404524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.499804592 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.491173453 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.494420904 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.496563913 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.502823715 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.491135743 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.496170013 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.503045762 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.499591427 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.50035122 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.494197288 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.500316333 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.505062704 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.502685197 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.50470254 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.50946303 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.494038255 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.506119506 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.509588533 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.501583124 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.494154527 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.500468972 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.504865964 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.49571205 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.500927977 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.506849235 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.49765327 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.50605542 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.502089685 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.499183775 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.508741072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.509433819 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.502277568 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.497292336 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.50875036 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.503381476 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.500428086 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.508153824 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.503532598 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.502889311 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.49810992 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.509357176 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.496828526 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.505458968 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.498357563 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.506381292 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.503148176 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.503827247 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.499366219 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.501205161 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.500812012 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.502479993 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.504574278 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.509974162 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.499812761 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.513017345 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.503961223 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.501934441 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.502804185 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.509152096 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.504022839 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.498021737 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.50938903 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.497150447 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.506249814 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.496354226 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.508753493 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.504511183 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.503879153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.504426106 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.496387911 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.500811453 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.509044674 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.504116231 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.504465752 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.509038107 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.505784074 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.505271114 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.497642329 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.50831495 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.497678131 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.50049715 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.510772919 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.505242713 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.507372855 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.504162951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.511754677 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.507879052 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.506565241 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.499884013 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.506890675 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.511933188 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.50824903 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.516085678 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.506999938 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.507675393 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.500397082 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.500927852 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.509437808 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.502780233 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.513587381 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.518131245 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.518483172 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.503691763 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.510626737 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.498852566 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.511526456 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.507450015 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.515469072 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.508368704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.508191387 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.501426907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.512039509 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.503135725 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.512479472 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.499000644 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.510709078 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.510270466 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.508785993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.507958008 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.501806342 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.506874475 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.512694514 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.509110238 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.509910125 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.501512367 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.512478917 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.500247203 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.50222387 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.513390108 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.510716718 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.51186969 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.518375641 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.508338723 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.512792118 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.509988964 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.505357319 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.513359858 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.507478385 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.509854437 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.515755497 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.51264954 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.506879099 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.51659824 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.511999447 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.50407086 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.512069682 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.51869198 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.511643406 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.504329891 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.515959585 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.512976805 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.511833045 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.510228761 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.50453847 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.516716932 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.513799907 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.520789432 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.506303632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.516793359 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.507513191 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.515445527 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.508226914 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.514084741 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.512254666 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.514730946 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.521474251 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.514632831 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.507538955 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.516540357 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.514242184 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.513476984 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.505952048 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.518546252 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.515268186 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.513839964 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.511244174 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.511075478 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.516459556 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.506128891 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.516897023 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.50801228 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.527897638 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.532248091 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.518744813 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.518807135 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.517666838 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.516558282 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.516007797 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.511416208 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.509770184 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.512011457 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.510584562 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.509167225 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.518612765 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.508869122 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.517628079 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.511806708 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.5152691 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.517725729 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.514608035 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.507370508 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.519170043 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.516117816 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.515705353 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.507097129 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.517908007 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.511479723 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.517210172 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.515857573 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.511098825 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.52168816 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.51965897 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.515246214 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.514379377 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.511253656 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.509888506 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.513943136 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.522488878 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.511800987 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.522501901 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.510810946 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.51575993 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.512055836 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.521298874 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.526716644 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.511099162 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.52257114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.517227626 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.509192033 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.512330616 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.520342997 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.522711842 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.528785152 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.50990677 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.522739314 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.518738754 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.519003704 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.518454232 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.518017006 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.518544176 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.518517735 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.523387704 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.52232874 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.514254416 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.519116441 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.526110542 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.518835091 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.518317099 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.509541965 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.521469029 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.527168739 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.51454886 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.518458262 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.514169697 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.522205542 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.520081323 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.51974438 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.520151208 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.51916581 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.52251012 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.5236905 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.523158042 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.520090882 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.524253883 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.530394953 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.525168244 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.530811196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.515081913 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.526690034 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.520682486 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.514791816 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.516035756 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.516658449 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.524153427 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.511498073 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.526622217 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.521159616 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.516933388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.521370328 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.529383293 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.512931587 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.520647203 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.532007034 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.51411321 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.525514234 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.521347176 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.513697777 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.526144079 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.522761691 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.511834413 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.516783668 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.518874976 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.52709585 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.51491843 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.5265313 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.515688507 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.527613685 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.522332633 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.522599525 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.523728256 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.522416443 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.515793295 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.526079863 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.523480868 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.530846862 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.516773506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.522590275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.5191954 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.52881819 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.532782025 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.518285729 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.529386029 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.525433355 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.517713846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.521597853 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.529558254 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.518740063 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.529338327 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.516050926 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.519238433 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.520549182 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.524586964 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.525490169 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.529309562 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.517532932 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.519852045 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.526036284 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.525181399 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.525805866 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.520944143 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.53230137 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.518275344 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.51880797 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.527477569 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.51989582 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.531493244 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.518955507 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.523627978 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.522352048 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.528365202 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.52606985 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.52637524 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.518288473 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.520283534 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.532218871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.529439938 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.523900667 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.523633651 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.528965501 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.519497118 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.524095012 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.525844737 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.521957307 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.522829368 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.532327055 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.522195819 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.522476391 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.522104434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.528848631 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.530469824 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.528752866 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.521877098 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.534832058 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.533998088 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.535147825 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.520474241 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.524704206 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.524020878 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.529589128 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.528384074 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.520832518 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.535669869 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.533210714 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.533700796 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.52437278 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.526781666 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.520866742 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.532837695 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.529092793 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.52402286 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.536217662 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.524110516 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.536268305 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.52922944 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.527128974 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.520044104 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.523737127 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.525632709 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.526697349 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.531472815 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.527050926 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.529614478 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.526936284 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.536044819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.529765656 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.529748335 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.530335629 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.521922445 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.531831335 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.52197008 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.530472555 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.529553137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.523941437 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.533927622 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.531896602 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.524315709 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.528605045 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.536802079 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.531017295 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.523509286 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.529546189 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.534217787 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.539346942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.532850951 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.525084106 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.531447721 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.535743805 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.53315595 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.531466797 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.526476281 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.543599109 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.543241127 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.527119417 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.530257878 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.535514836 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.540780916 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.531462115 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.532408458 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.528607953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.531773546 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.538641346 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.53320683 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.535115058 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.536378582 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.528504717 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.537052361 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.525203746 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.530854666 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.532517982 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.5412586 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.533266828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.527464119 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.543622637 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.542146808 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.532145558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.54756275 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.538327364 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.532786039 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.53985457 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.5243975 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.535700681 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.529759777 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.540516833 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.534755869 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.534169087 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.534266743 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.525335433 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.535426514 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.53944521 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.544747718 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.535375696 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.526851324 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.529707947 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.538065121 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.536059112 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.53662752 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.535855614 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.534887779 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.537505275 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.529415519 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.551269368 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.554636848 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.542224291 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.536533215 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.535800768 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.535369985 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.539018822 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.535106803 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.543868624 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.537401608 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.536521497 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.534910027 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.548053765 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.540887612 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.530832373 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.532432262 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.533050352 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.54128464 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.548979381 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.57263038 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.539550134 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.550874243 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.543701428 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.542546288 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.533099271 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.54452294 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.540316866 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.532934446 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.536644705 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.54235447 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.539460488 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.540864853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.531568022 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.546240264 seconds)
  done (took 904.768699607 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.537842858 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.538034436 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.538208303 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.538545751 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.538246797 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.538915199 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.540438849 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.539726701 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.540000688 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.539439198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.539012814 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.540051553 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.540572593 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.53980585 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.539197886 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.539787086 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.539723067 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.539714114 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.53914252 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539140581 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.539879768 seconds)
  done (took 33.73456397 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.540255923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.540490729 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.543147924 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.54184113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.541649858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.54183163 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.543350152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.542626406 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.542464344 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.542680106 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.54300982 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.540518678 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.541257509 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.541087756 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.540861033 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.5418835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.54284905 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.541640928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.543078877 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.543487679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.543419433 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.542878072 seconds)
  done (took 35.33727429 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.54387993 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.544181006 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.535375484 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.546491144 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.543522804 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.542197627 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.543777247 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.543019908 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.54261191 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.535940799 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.536823764 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.536186664 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.540325431 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.550093951 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.539725459 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.550294393 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.54453611 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.544639309 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.545323848 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.545049779 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.547137424 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.556320427 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.545042544 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.535915903 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.548531578 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.547149241 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.544907996 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.546343271 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.537067177 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.549663151 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.54639786 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.538939139 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.54563893 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.544312903 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.539567498 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.547767372 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.545519562 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.545205506 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.545335387 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.543992194 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.556658268 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.546585127 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.552715142 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.556680772 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.545729314 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.540237694 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.553319954 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.545544893 seconds)
  done (took 75.564772631 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.547820827 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.547426451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.546460895 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.546328345 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.548412258 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.547536316 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.546982542 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.547013866 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.546328551 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.548244674 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.547406902 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.547963443 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.548757036 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.547311268 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.547688718 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.547690179 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.547443722 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.547631201 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.547314024 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.547744805 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.549229692 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.547353913 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.547478014 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.548143486 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.547092444 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.548844327 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.548267182 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.548617009 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.548950619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.549082481 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.549030786 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.549065535 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.548614736 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.549479524 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.549007849 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.54949951 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.548196465 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.548945551 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.55038112 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.548749732 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.549776191 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.550459534 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.549910084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.550499531 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.550137022 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.549755675 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.549760887 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.549515868 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.550180515 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.550096676 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.549476698 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.550922174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.550353794 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.550904384 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.551434216 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.552750021 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.551591718 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.551542667 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.551987954 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.551609854 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.550446859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.553496262 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.55187401 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.55163092 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.551277266 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.552723559 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.55308954 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.552085407 seconds)
  done (took 106.770131268 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.551450025 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.552686191 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.552554512 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.552398773 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.552878376 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.553188716 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.552728138 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.552768297 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.554342233 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.554084559 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.554504554 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.553543149 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.551865961 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.55421817 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.554057548 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.552822158 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.555195744 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.553365948 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.554565368 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.553304126 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.555147429 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.554404966 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.55432795 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.555627206 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.553988755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.55561782 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.555093318 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.555128921 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.555007411 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.554458374 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.557140737 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.556024771 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.556265603 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.557062785 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.555713053 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.556236782 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.556127968 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.55671729 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.555585389 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.556492 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.556450323 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.55673361 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.557610957 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.557455753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.556851618 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.557320417 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.55690716 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.556345476 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.556893967 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.558595287 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.55636714 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.558362007 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.557249923 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.557694697 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.557839001 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.557781442 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.5584389 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.557624211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.557848589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.558290265 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.557842266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.559142216 seconds)
  done (took 97.866780248 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.557595644 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.556928145 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.557282151 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.555918971 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.557146182 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.557084459 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.556151346 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.555846443 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.55760414 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.556098379 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.55922675 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.557494546 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.559397104 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.55830996 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.558130685 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.558898574 seconds)
  done (took 26.343839221 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.559282805 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.559948218 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.560052148 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.559385231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.559321186 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.557782367 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.55948383 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.558466445 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.560347124 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.55996451 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.5584448 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.559604448 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.559947129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.560750394 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.562273932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.56004773 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.560899471 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.559476301 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.559136109 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.558581516 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.560665792 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.560014391 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.56047584 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.559551106 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.55998782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.560493663 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.559274347 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.560384495 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.559286082 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.560290384 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.559643596 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.559702599 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.560052245 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.559134771 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.560445724 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.560055581 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.56008859 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.560067842 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.560974558 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.56039111 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.560448043 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.560187315 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.561719039 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.560435844 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.561015346 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.56038378 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.561097257 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.559686051 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.559773745 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.562804395 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.562388591 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.563395946 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.561641861 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.561630953 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.561414515 seconds)
  done (took 87.239156082 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.562653002 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.561668294 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.561033953 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.561534579 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.562004344 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.561943889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.562863943 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.564891421 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.562330154 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.56268003 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.563172229 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.564569961 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.56281654 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.56365418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.562714241 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.56236564 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.56279418 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.563189945 seconds)
  done (took 29.557194835 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.563428816 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.563425206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.564803226 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.562278661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.563133319 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.565179075 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.56415963 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.563358972 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.563975594 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.564191327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.564256581 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.564247169 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.565767597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.564735068 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.565801214 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.563449451 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.565214406 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.563564276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.566750036 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.563321624 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.564322739 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.56501953 seconds)
  done (took 35.845105351 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.554923926 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.554883715 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.554859162 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.568868929 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.565152941 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.555934425 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.554982436 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.554949 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.573245952 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.580613013 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.57893212 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.565144971 seconds)
  done (took 20.194503438 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565277547 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565583281 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.564119974 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565264543 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565696872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566459998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565611698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565612466 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56628678 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568268595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566974267 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56588495 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566744333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.565824586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566978073 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.566642603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566743097 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56632918 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567904229 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567227938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567372908 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566583871 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567968647 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567793833 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567576137 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567417381 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567288451 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568250737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567716289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567360416 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567659256 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567423647 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567845644 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567856687 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567645998 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56834294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568409048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567651164 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569630371 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567992111 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.567906813 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567778245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567898659 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568388857 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569783528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569166225 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568594677 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568918865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568694949 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569737717 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569775359 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568808797 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570433499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569314421 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569491282 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569663764 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570580984 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569215936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571225551 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570215557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570508153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569009475 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570163795 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570505822 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57006405 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570813854 seconds)
  done (took 104.921879861 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570249569 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.570903314 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570976304 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.572160584 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570422055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572179278 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57198982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.571111941 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56996119 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571206195 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572122154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571996088 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572541011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57195975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570944831 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570556285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571953495 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571207558 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572487752 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570981078 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571687729 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571993328 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571807695 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572815219 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572968041 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572164671 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573017938 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572801768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573594116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57371573 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572075204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572079425 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.572106153 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.574012662 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.572652242 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572962676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572682974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.573997726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573296366 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572561941 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573996026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574063602 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.574212835 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573868499 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574608755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574634499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574272661 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574939362 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574025879 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574568154 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.574827466 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573746122 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575299408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57384099 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574478373 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.573652888 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574759559 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575518866 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574154836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574409536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575487341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575551984 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575813845 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576437999 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575981766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574932414 seconds)
  done (took 105.263252782 seconds)
done (took 2006.581947204 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.561884195 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.560202827 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.57051815 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.756183122 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.565602921 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.241611097 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.141804625 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.565901718 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.566721578 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.566210915 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.566505068 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.560133909 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 11.008534256 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.564611432 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.566969741 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.560439588 seconds)
  done (took 58.364148494 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.598205987 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.576616949 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.707859309 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.575403813 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.598283454 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.792792141 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.639642822 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.572648676 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.774055122 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.57877582 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.577810245 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.60119117 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.573479145 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.575871889 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.597358585 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.791619614 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.873727381 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.570569949 seconds)
  done (took 34.016834407 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.108800822 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.597954078 seconds)
  done (took 6.14794262 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.594989607 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.572346 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.575862189 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.60977283 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.565168229 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.564738271 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.571114098 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.564872432 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.569362475 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.727017452 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.580329161 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.587745889 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.572852216 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.574655872 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.580971814 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.623025386 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.709666472 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.581616421 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.581365596 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.578936745 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.572854936 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.757172236 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.621915354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.58291677 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.722582002 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.582565364 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.582970375 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.586921493 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.726921446 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.58354872 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.573226135 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.575129656 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.576074114 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.567205265 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.148250778 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.572104883 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.611075162 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.583423977 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.581658301 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.733617263 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.574631584 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.58208405 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.566315612 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.147761777 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.705372549 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.823028062 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.585919366 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.580714516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.57637717 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.730457622 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.579724844 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.57720998 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.640678357 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.573449901 seconds)
  done (took 99.426310104 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.593560906 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.568477196 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.755468541 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.595181824 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.568141069 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.591037304 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.573054981 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909220224 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.624692139 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.569122818 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.90908672 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.265874012 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.580518657 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.617126936 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.615460826 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.607675898 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.569940731 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.568515996 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.569280391 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.575452298 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.182482688 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575292378 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.597736395 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.730223088 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.61390676 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.183515148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.568976478 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.574358411 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.570299562 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.570622706 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.250221422 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.576043474 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.632431588 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.571313646 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889744503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.033602465 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99195705 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.577772452 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.604525014 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.57008352 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.606111297 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.184365181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.015013551 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.57197196 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.5732453 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.186127578 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.571369911 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.572501233 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.573893834 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.846732725 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.572641982 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.576065324 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.572037438 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.574843291 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.572099618 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.631960665 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.617024967 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.186748092 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.573223814 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.571455221 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.612613878 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.572933293 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.575014508 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.575541153 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.576122896 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.01732205 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.741326063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.576576295 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.016075818 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.234464081 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.57330443 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.31675552 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.576963487 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.576852846 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.647890637 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.573497743 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.591480372 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180932281 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.606351858 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.574952863 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996095332 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.575695135 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.911066741 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.593040148 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.577923446 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.203117168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.584747399 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.638696732 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.575335519 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.586838833 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.573641479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.578620791 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.899160354 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.647089157 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.573993248 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.575006507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.576529789 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.574874903 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.57653634 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.585080286 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.32133717 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.585071243 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.574237557 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.57646514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575661907 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.579065601 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.577206284 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.575108159 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.859303022 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.57609847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.599905785 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.598419724 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.577131484 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.580271088 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.730392024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.582059966 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.96697085 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.585126625 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.590343438 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.579296573 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576039867 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.645558437 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.58054978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.575652219 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.543600717 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.901809872 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.597960727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.601315801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578632234 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578380125 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.598168802 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581841693 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.609676894 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.582890836 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.448557445 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.58935468 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.591131549 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.578334498 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.579565856 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578177658 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.583151703 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.579862842 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91191815 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901802836 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.773513835 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.579320019 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.578858168 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.44707899 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.625061683 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.769223473 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.599545287 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.57987353 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.884856726 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.766793105 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.582494622 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.579344012 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.580703366 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.870115194 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.580364061 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91524641 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.263402809 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.580714571 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.587977571 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.440991817 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.341576686 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.586896153 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.584700298 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.913291339 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.59945685 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.580395544 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.57979037 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.58099816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.581075501 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.583307791 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.583957745 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.580765314 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.582323589 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.694307221 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.781019136 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.600164728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.588369309 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.191138878 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.586101202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.581988518 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.586670721 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.586335675 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582086554 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.609473515 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.583577231 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.613390723 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.582637799 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.592957095 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.22491094 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.582129458 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.584613082 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.781675072 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.401659381 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.583068201 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.583391892 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.582773506 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.612952409 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.222105815 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.632864737 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.961799913 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.583699479 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.627242712 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584607336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.628324979 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.221647029 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.584631502 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.58480024 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.386121366 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.584008011 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.27423675 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.582389549 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.585365132 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.32839361 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.584569388 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.58781526 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.591447391 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.586787778 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.90268205 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.584596225 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.628926775 seconds)
  done (took 555.699349558 seconds)
done (took 755.094096587 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.584369859 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.58993326 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.588289462 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.585120695 seconds)
  done (took 11.808194784 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.603560615 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.591870363 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.602939244 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.59052903 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.602543273 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.591203547 seconds)
  done (took 11.044375931 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.584350651 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.589405542 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.589466236 seconds)
  done (took 9.225746004 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.841070205 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.590828452 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.03616277 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.591354758 seconds)
  done (took 10.523216929 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.60068135 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.602548467 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.601032706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.603600777 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.605051623 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.60460413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.603762588 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.604944383 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.604450107 seconds)
  done (took 15.892676066 seconds)
done (took 59.955572551 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.668882161 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.671782896 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.588958374 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.631014496 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.738717033 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.677318132 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.67901737 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.682560435 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.679913998 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.628210212 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.673207991 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.62323698 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.670656668 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.808722363 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.62744868 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.67561719 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.619828736 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.769747255 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.67460872 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.628776427 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.697017298 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.630004578 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.628657462 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.620969355 seconds)
  done (took 43.458957777 seconds)
done (took 44.922493663 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.618456491 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.689879962 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.59910733 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.598030854 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.600067578 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.58903274 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.638007666 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.599483014 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.612775987 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.612313567 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.608498588 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.606373097 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.615181954 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.60980249 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.632804007 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.599575128 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.599844594 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.608965401 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.613820955 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.616594041 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.599812134 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.602699016 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.627707786 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.600083382 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.608669979 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.608355169 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.607234795 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.595673823 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.606721421 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.614452649 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.605054064 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.607361511 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.616785787 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.611759266 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.602412663 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.609996744 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.605024739 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.693337466 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.622910408 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.611077593 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.608413165 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.6166152 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.606450641 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.605994847 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.612021487 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.628850419 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.60972213 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.616844348 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.605194188 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.601147331 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.622611908 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.61339624 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.609567488 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.601999718 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.600522391 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.616398798 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.611942014 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.623179689 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.609773474 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604586093 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.636128727 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.623672155 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.614079186 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.611503055 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.610663729 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.618951325 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.611953116 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.617684599 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.610442281 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.605186325 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.605970619 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.61050215 seconds)
done (took 125.596034416 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.725453758 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.599179016 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.757057408 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.61019398 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.771114135 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.727716191 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.610631325 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.609881381 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.610186118 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.400716253 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.610556831 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.611990145 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.602559256 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.609805384 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.726445612 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.61258844 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.612235777 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.300277683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.611889014 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.744023307 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.602365736 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.612343736 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.612616324 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.40830491 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.601544279 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.596489918 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.745155535 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.61411106 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.304319055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.596779331 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.598469754 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.304957379 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.745469116 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.630847433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.622302757 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.620503293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.776308939 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.615699804 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.729651172 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.727846283 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.759471404 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.652132895 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.597737638 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.60412437 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.615289478 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.614436974 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.614225533 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.643457786 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.603317446 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.614025758 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.301936226 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.623023352 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.614160484 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.614221621 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.615833943 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.644140874 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.614377826 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.615837169 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.747368383 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.615552568 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.731763557 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.408263795 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.40642081 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.615234512 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.602304629 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.614898256 seconds)
  done (took 126.707409167 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.676962384 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.681145128 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.730517545 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.606770538 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.658650938 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.731149923 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.606525479 seconds)
  done (took 13.165468376 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.613464266 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.615807431 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.655706713 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.65554527 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.615392166 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.781556073 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.615806801 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.617730444 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.617078672 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.659177191 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.616523769 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.61739998 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.626120464 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.607960717 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.654606163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.619034039 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.726066775 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.609319834 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.61679259 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.763704551 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.616968455 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.62512284 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.659562487 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.620965093 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.618961947 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.615193204 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.383662165 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.617708967 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.61858617 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.616551227 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.616909751 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.674925793 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.617561307 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.608312778 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.618933153 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.724258166 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.61890653 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.617878053 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.618575136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.602778047 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.617156576 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.61950484 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.620477849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.61866412 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.618419574 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.633279501 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.61971029 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.619374365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.619823725 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.619231523 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.659449452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.619355675 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.618928281 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.618695524 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.663646436 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.627702601 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.619275235 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.619788607 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.619143922 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.619041116 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.76793571 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.658609369 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.620308107 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.65914962 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.620478032 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.621373577 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.620690292 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.619745042 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.705876095 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.62031063 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.65951515 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.621345592 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.794737622 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.636442819 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.621720325 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.615480712 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.615594887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.619887701 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.609329521 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.618872984 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.621085276 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.613705597 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.619037912 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.621810729 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.62206072 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77406876 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.723010775 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.621294433 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.627249724 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.619923644 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.621388334 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.664949609 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.622110289 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.621979515 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.664862174 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.731210506 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.665368004 seconds)
  done (took 165.168466909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.624263905 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.626745573 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.618017752 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.642088227 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.615114134 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.615475634 seconds)
  done (took 11.222491962 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.615968696 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.626218368 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.622968784 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.622952788 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.624401379 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.622876498 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.625043734 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.616539943 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.628784245 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.624225455 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.625129777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.626194806 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.625740415 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.626183805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.625675738 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.625715537 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.624879399 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.62405299 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.624369989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.625825898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.613267771 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.62500286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.625109042 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.618301659 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.628333695 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.626744824 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.641493978 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.626287148 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.625471176 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.62401964 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.628413609 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.626460009 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.617149964 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.621897176 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.629766656 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.618403148 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.630500034 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.627735542 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.625281951 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.62641554 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.628985252 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.628057366 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.625891284 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.629156642 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.619530802 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.623037651 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.632220926 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.641153895 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.628373839 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.630168788 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.62954636 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.626469936 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.627677459 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.629990262 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.622532169 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.620750617 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.632447931 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.62767673 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.627496404 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.621332004 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.632928886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.628663131 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.621829576 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.631782022 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.6286996 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.629245856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.621925621 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.633379687 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.630097547 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.628993494 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.630182532 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.628567137 seconds)
  done (took 119.573505863 seconds)
done (took 437.306370491 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.125628876 seconds)
  done (took 4.612427108 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.816411676 seconds)
  done (took 4.304817492 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.815141526 seconds)
  done (took 27.310617626 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.672738019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.61766651 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.617229851 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.617090863 seconds)
  done (took 12.008931246 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.24993302 seconds)
  done (took 4.73586898 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.638044974 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.627521553 seconds)
  done (took 6.753712654 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.013427302 seconds)
  done (took 4.500621584 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.341062353 seconds)
  done (took 4.836417865 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.63355891 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.63021199 seconds)
  done (took 6.757624113 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.632054987 seconds)
  done (took 4.120140713 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.07596176 seconds)
  done (took 16.564787403 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.638817846 seconds)
  done (took 4.129215765 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.706632348 seconds)
  done (took 4.193782242 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.811568403 seconds)
  done (took 7.30170025 seconds)
done (took 113.617631499 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.614671512 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.619248803 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.616593821 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.616276066 seconds)
  done (took 11.955305714 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.69575171 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.695494838 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.704372604 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.690138575 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.685064829 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.698012537 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.657013861 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.658383074 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.687349762 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.684557177 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.700806124 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.688458002 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.700008772 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.658326034 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.683293828 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.701160073 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.68770153 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.705821527 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.658035937 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.690074399 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.632929428 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.689964872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.684503287 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.632298693 seconds)
  done (took 41.858322659 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.121196705 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.694422829 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.783920727 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.676483256 seconds)
  done (took 8.765855211 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.736777563 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.739677718 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.755632107 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.792835436 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.83981818 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.750606221 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.660417812 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.656057965 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.641088304 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.739907669 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.812185107 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.738627021 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.956785089 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.634813714 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.951928426 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.634790359 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.634296091 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.737370508 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.788276247 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.818572458 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.634633061 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.739364159 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.743138822 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.739507004 seconds)
  done (took 43.368625201 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.644242639 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.652099739 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.637118341 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.636515155 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.637001379 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.638631399 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.652188232 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.638968844 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.642056788 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.63516482 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.636506496 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.637847468 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.650160463 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.63780243 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.635864779 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.643519144 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.639388421 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.643455193 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.645464167 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.637377193 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.637732737 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.644598573 seconds)
  done (took 37.596953377 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.621479941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.62086354 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.973577689 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.876832617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.623229493 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.626341643 seconds)
  done (took 15.836312505 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.714366541 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.86800943 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.630243884 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.065949134 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.150685658 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.630097757 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.629842641 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.916945098 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.292134468 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.324759515 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.701786728 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.708992581 seconds)
  done (took 24.128885008 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715935998 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633139467 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.632981256 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685677594 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638493104 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635499834 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711129056 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.194353978 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.640171523 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909557275 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63300063 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73689808 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881972388 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649210095 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634073289 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.607644354 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862888678 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252293193 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637245755 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650049919 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667035252 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648567168 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643321833 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898610222 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.639602629 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.634584296 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.897743338 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.635045321 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983126154 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957648304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957500159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637301962 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911269023 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172478519 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746731727 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895703435 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649211866 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636195735 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.620117992 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.645637281 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648985271 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.638705749 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956976978 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639151883 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.635597773 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636546575 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200840645 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.645708935 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.638267337 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.636577787 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962167822 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721798123 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.64336281 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637875546 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731468178 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641503061 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.642277882 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757315589 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276977075 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637949572 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639485583 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.642816654 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.65174984 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639254903 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373466055 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.64699959 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.645324063 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644642393 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638200144 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638000679 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680441343 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639107509 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.657554665 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639206906 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564402276 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.639724688 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64004629 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314186568 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650429498 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.642685299 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866994233 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638445765 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638043673 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.63847354 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638908851 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.601415538 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649263944 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.614279636 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671026675 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199883331 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90326691 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665206716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669380349 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864080172 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.6147675 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641083029 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.640672938 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641640171 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662585119 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202531571 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640201278 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.646540602 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889255349 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.853290113 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655438693 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.637893084 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236667977 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652011607 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.664506892 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.658853598 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908452441 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.362560019 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97265667 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657965792 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677551759 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.640291266 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.640852071 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64795048 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.652311581 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642682546 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960044701 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.617549029 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644882388 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71547306 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643864501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641900098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64126866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644299591 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641673251 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.88721912 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648259708 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969382491 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.646386452 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643536703 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.654220108 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650175149 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.644561865 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866115277 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6552716 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919401936 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643755311 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64497969 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64625916 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.865126363 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.644680793 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.65243437 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985689202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644006463 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662511515 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972694908 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678928823 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758180579 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678790275 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.646515568 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898215268 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.650962933 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.650475313 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646302829 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648455645 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650132539 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.653251383 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63701847 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363677024 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648425054 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.651249605 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645942789 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.66185149 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719905446 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652945975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911242806 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.667511393 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640750586 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.653580074 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.656262668 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869697547 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970129296 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.66175109 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819005162 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.237652449 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37088707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663805816 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.647113507 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.644747115 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.64509433 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648920608 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646466686 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647823227 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910150195 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981288624 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647477368 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373661152 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650883979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.647429238 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.674024687 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973264525 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.657423607 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648614459 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.655994515 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647986371 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649259084 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.977437826 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870859051 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.664379822 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.648438475 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.168540591 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65623725 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648561463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.647156665 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674336854 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648421301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28506771 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991194122 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644504918 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997270214 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665407187 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.666882819 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.648998722 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655386524 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65636215 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.656325711 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658765397 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.914465283 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655704934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652103862 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287298674 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577772462 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313663736 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651464024 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.664263976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653842689 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246885762 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656323457 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651831759 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935291979 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244422053 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654788124 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242794455 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.660248726 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.571979446 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982448078 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879459318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652481527 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.657135476 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982619668 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866469205 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678628489 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.658219149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65584248 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.627137927 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286028666 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65602394 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831873401 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218979201 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655972572 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654259189 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.704772563 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.657294489 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167166964 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657190804 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654640732 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665337574 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.659233674 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293974739 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658885532 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654904667 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406002092 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.671249636 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.251404016 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659052868 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.914952395 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.985466014 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.963328906 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.654299155 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.663700244 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.900593834 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992611159 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660391604 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662340581 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349685093 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.528685259 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.662797037 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656137592 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.663106554 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665537008 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019367633 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.662874619 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.668766714 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66143655 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655737197 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655258206 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.655150863 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662130383 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655705991 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272544859 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.659310293 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661764859 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678682308 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662002609 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908298983 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.673970015 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403273979 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890961548 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665967854 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693047015 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.662892599 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65557973 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.639097492 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.657829379 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656477744 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751633004 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886788755 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.666499062 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.635940953 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.7142644 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877371432 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.657707247 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.672830513 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93951631 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.662661549 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.676483986 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589254374 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690713098 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661974742 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660980765 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.654327904 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691074738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734864224 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92854715 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.993041696 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98961728 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175917482 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669878821 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661993697 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.675142956 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739534357 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657784245 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.672582912 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.659672822 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403470868 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631396638 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416121826 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996521757 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661656068 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668522604 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660230494 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901368322 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660356927 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935910073 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66127612 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.653276805 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68380372 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673922374 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662849798 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877015137 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937350822 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660682622 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682035954 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662793326 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.662571899 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996550898 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.877462304 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284434874 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347415514 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664166473 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.677734669 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234921569 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940123654 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662510858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665190157 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662264302 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.681200502 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.684791086 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.674277944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679578364 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889026549 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991040629 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206069245 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997337229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.687510299 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.538266447 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67099682 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912947004 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499084249 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932142147 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398448737 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529763651 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922852272 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739174905 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933475535 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.670160317 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902299009 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.682054648 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.664223488 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665206692 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663361479 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.663965222 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992136789 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394372622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92203746 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.669332049 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.666065497 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695664822 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.933848151 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894944539 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641286696 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88823294 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999187614 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671047205 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.665528602 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399283151 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998445114 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666175949 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.672123707 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943611569 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670991816 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70368184 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.539195698 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.665449576 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350450319 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.881463249 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686542908 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676766097 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.545031404 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404133469 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.682364694 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292105688 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668935377 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667290232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946468422 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.674363683 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.682970028 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958248322 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.67368654 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.668534476 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943061061 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.402427815 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.596756919 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.690797412 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668791932 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.671485298 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671304702 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757552938 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673240586 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669476412 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.178698314 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.672954219 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669494161 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681724295 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.667293677 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683627403 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.671859564 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669245635 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.675520071 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.678411552 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.659267479 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.681309178 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791943542 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312998374 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672131985 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.285863643 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.007493291 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917924071 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.675022491 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.647669921 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.678757579 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671237941 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670215453 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670224608 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.689932021 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355882749 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.677326294 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.005213108 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678369303 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.884344412 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884120763 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.683007462 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943362556 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692679372 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69635333 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.646057871 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672236031 seconds)
  done (took 1123.677596431 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.753844403 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.72210619 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.678429028 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.68476832 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.723681837 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.79694031 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.776207231 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.767593722 seconds)
  done (took 23.432270769 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.671464968 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.671125237 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.67040187 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.672727886 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.68154376 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.223649045 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.670808864 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.672488548 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.688898218 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.672740745 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.670931749 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.384255698 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.674634308 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.66507636 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.683273205 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.673644541 seconds)
  done (took 37.583411317 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.951903864 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.886276037 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.302898975 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.680382662 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.719705645 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.674840693 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.08933461 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.692938611 seconds)
  done (took 30.529222359 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.678613097 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.680824272 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.681565583 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.681644108 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.682483859 seconds)
  done (took 9.93534846 seconds)
done (took 1410.156590721 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.682616842 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.682131737 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.681931291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.681115525 seconds)
  done (took 8.258742996 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.649221766 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.649406615 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.649980846 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.663703457 seconds)
  done (took 11.143543146 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.105455813 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.341478704 seconds)
  done (took 5.978317029 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.676484307 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.440542803 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.425457208 seconds)
  done (took 9.074383603 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.996813561 seconds)
  done (took 3.529441531 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.076216085 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.190657897 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.667330825 seconds)
  done (took 8.466620737 seconds)
done (took 47.981788033 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.682476853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.438125019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.823192354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.676783672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.830105143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.823464308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.958649289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.666884791 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.682786488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.667566658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.677174936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.831781075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.951293883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.436086932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.952471963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.437943578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.832864946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.681534217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.683022191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.666584693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.966769976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.674195492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.681497944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.683810137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.849950892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.813558452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.676212038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.437539224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.672436177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.668206809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.813712531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.681030718 seconds)
  done (took 92.552853668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.668212346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.68456529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.669208655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.668398044 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.68741291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669472102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.670741143 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.667913834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.676293826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.669801674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.667698472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.678017534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.672025986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.66981226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.671592076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.670389849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.66969546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.680106003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.670045621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.669000854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.675371622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.670280243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.688123304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.669446259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.676778253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.6712624 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.680636165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.671560527 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.671451283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.687851394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.67171213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.671844351 seconds)
  done (took 87.092065872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.670319725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.670336824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.671605782 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.67042223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.691602983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.671591909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.694642804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.67125228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.6828238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.675563173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.689601173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.671513403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.673634109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.673681795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.67254065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.672665661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.684706547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.678548173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.671979968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.671460185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.676197953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.672350697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.68152003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.676234444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.676884907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.674105168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.679717263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.692849441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.672657421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.683295162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.673098308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.682213354 seconds)
  done (took 87.208074835 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.91636196 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.68851435 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.691853695 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.682271718 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.691660587 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.68922217 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.683300688 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.920662191 seconds)
  done (took 17.50180587 seconds)
done (took 285.887055515 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.696095563 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.682715044 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.710601651 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.684801367 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.700460312 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.711609091 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.923476094 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.709693019 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.911647454 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685421969 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.720780771 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.686706952 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.658242907 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.837548056 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.695674238 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.687218383 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.696633681 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.677681783 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.688210048 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.941269161 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.71596125 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.678467864 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.688778886 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.689373604 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.681237152 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.763281251 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.764098432 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.853294046 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.820266833 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.762390282 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.679504777 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.712544478 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.68813083 seconds)
  done (took 76.744449832 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.684066686 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.693888319 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.692970444 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.694199213 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.693913455 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.694871483 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.683709769 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.695407092 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.69430672 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.69548646 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.694031369 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.695000292 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.695826116 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.694232997 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.693456704 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.671436612 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.686848126 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.69340676 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.685950434 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.673028066 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.695546735 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.695930997 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.696344501 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.69450252 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.694986386 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.695262241 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.702367833 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.696772409 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.696268815 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.696195925 seconds)
  done (took 52.312103567 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.696146456 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.694842602 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.685459075 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.692697914 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.687126854 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.691411805 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.048651684 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.696155492 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.691659927 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.691593772 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.698511938 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.701658912 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.745381767 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.693415398 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.689551463 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.698818645 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.696862075 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.68830891 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.681878309 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.705752276 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.056938514 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.698914634 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.051108411 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.707027872 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.692822335 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.691243459 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.69559562 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.682750984 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.692044787 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.68456663 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.689833317 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.048889293 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.683485416 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.68289766 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.692451362 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.70212508 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.697637317 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.684086129 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.692496941 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.691182281 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.046915652 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.691211688 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.697991658 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.683158246 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.692210409 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.701063241 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.684269654 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.709189606 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.996465286 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.698074147 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.692597519 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.693730248 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.702736667 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.69333703 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.996092817 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.694630771 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.693197496 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.688747745 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.696070544 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.051841057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.703675358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.69195282 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.68609644 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.694547707 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.70361276 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.695379937 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.708163802 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.694192376 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.702414239 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.695297971 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.687351699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.693733005 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.70319969 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.686399345 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.70464388 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.686064481 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.715830258 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.687582344 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.695745007 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.052403499 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.698088906 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.70100192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.06424408 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.697903744 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.705572953 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.705038097 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.704293632 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.776439109 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.051367515 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.652248851 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.70890316 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.689180305 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.054864404 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.703742616 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.695506596 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.692256403 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.703966394 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.703551603 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.701862679 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.688441383 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.69689376 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.71059178 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.690422513 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.698405245 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.058526535 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.702874806 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.701802037 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.697704422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.778813598 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.705901593 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.710613497 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.701557629 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.064781297 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.702885431 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.705842074 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.689969499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.700829766 seconds)
  done (took 243.050713883 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.689700468 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.692507199 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.692102018 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.691624212 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.691379588 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.699159409 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.691679207 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.692585453 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.697695847 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.691521772 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.695443239 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.700291765 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.70002829 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.69216485 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.710700323 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.694482592 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.691924292 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.693783509 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.715131996 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.693244101 seconds)
  done (took 51.470365939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.708170875 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.393086508 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.368729216 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.707887034 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.708135945 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.699500804 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.769073011 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.71165951 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.708334385 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.070576217 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.918931221 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.709864224 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.709071279 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.707878947 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.368948191 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.711079821 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.071139888 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.39557497 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.710620281 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.394078097 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.709061444 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.710648142 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.699856765 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.39572162 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.083489929 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.060948292 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.771452395 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.398702691 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.711247148 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.710283794 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.39486467 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.710522306 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.702355359 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.388005698 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.712149927 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.72543193 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.710223277 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.772660227 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.776985782 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.076474251 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.404041765 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.073480221 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.721930173 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.878822137 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.715121586 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.688406405 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.411545529 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.71223369 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.687801112 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.713462618 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.719599083 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.386286681 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.70285206 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.387137847 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.713552565 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.711367446 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.398427541 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.38772726 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.378440403 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.919919366 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.703268436 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.063358752 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.713343785 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.411807239 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.714307465 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.712008434 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.714315625 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.924460913 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.40307879 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.065987861 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.078635045 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.07891958 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.714324017 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.78766549 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.716418535 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.080396964 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.785441087 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.121320743 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.080379253 seconds)
  done (took 154.901698943 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.023098736 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.81765222 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.157536879 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.347538348 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.279319835 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.866376459 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.836814591 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.978442537 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.713190075 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.815488891 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.495315148 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.809200424 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.52671811 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.790153198 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.825344976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.84198207 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.185994081 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.710935461 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.429080487 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.466133835 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.722625125 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.819418559 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.528555999 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.136579625 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.705365385 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.498266667 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.707748186 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.306253344 seconds)
  done (took 63.902216248 seconds)
done (took 643.91963211 seconds)
SAVING RESULT...
DONE!
