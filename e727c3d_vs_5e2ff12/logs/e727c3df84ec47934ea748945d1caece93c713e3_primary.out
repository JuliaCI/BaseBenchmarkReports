cset: moving following pidspec: 29370
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.153600847 seconds)
loading group "string"... done (took 0.503163036 seconds)
loading group "linalg"... done (took 9.442370087 seconds)
loading group "parallel"... done (took 0.16474047 seconds)
loading group "find"... done (took 2.627675618 seconds)
loading group "tuple"... done (took 2.149826025 seconds)
loading group "dates"... done (took 1.391146064 seconds)
loading group "micro"... done (took 0.573416012 seconds)
loading group "io"... done (took 0.506207987 seconds)
loading group "scalar"... done (took 53.463932626 seconds)
loading group "sparse"... done (took 13.728906862 seconds)
loading group "broadcast"... done (took 1.342832287 seconds)
loading group "union"... done (took 2.53358914 seconds)
loading group "simd"... done (took 3.788118018 seconds)
loading group "random"... done (took 14.227592899 seconds)
loading group "problem"... done (took 2.336538547 seconds)
loading group "array"... done (took 23.251097124 seconds)
loading group "misc"... done (took 1.106994096 seconds)
loading group "sort"... done (took 3.728833834 seconds)
loading group "collection"... done (took 20.451531391 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.757404333 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161031101 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.246103014 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.901734708 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.301373154 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.209464206 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200895544 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.176709378 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.678222413 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21823819 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.197401831 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407007422 seconds)
done (took 7.265434576 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.4300181 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093369195 seconds)
    (2/2) benchmarking "String"...
    done (took 0.213490252 seconds)
  done (took 0.948783391 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.094516367 seconds)
    (2/2) benchmarking "String"...
    done (took 0.149526176 seconds)
  done (took 0.884997483 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138337931 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172247205 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.15048652 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.135680139 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.151605216 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.149293628 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.136251361 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.150684445 seconds)
  done (took 1.684766598 seconds)
done (took 4.733248557 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.523189341 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.981293821 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.605634531 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.202871719 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.350300419 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.316523922 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31673572 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.276662521 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.139395043 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115579268 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.212550609 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.472639196 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.462755651 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.964031711 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101860131 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.159915533 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.176236817 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.875273171 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.127725089 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.158760066 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537491199 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.24450785 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.16519448 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139026401 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.248552351 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.242305314 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173406265 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148033163 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.800133012 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178887291 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237192744 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.131801085 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.174213407 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196855194 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.278974035 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158186948 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.777170584 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24747531 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127756415 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.148464182 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.780080756 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.173590507 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.236980807 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.152448697 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.118580169 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193330721 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.149713962 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.124471327 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.161565265 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.150665032 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.22674014 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.527564611 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.152117163 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.228352259 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.156626568 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.790936651 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.149581573 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.341731521 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.185548659 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.15592851 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.125935655 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.152645877 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.215757946 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139813909 seconds)
  done (took 23.34535412 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.205203644 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.220066787 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.143714046 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.191570101 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.189483903 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.144011544 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.13512167 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.143084327 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.160097874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240129223 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.18058498 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.231985165 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.123352961 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.155430409 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.182685292 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.299650652 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.171671138 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.15271226 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.155058041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.142441957 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.191392545 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.157697254 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.142715645 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.158111991 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.217380005 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.255215686 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.15853413 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.175724232 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.153447906 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.145264757 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.192063645 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.211495123 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.121680309 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151508154 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.235335374 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.152740611 seconds)
  done (took 7.049039065 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.264670722 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.151171767 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.279522358 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.238414411 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.196690874 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.228960156 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.231884643 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.319495883 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.384474328 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.248974256 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.213798594 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.176804706 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.158033498 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132350596 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.144947664 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.129346607 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.874047571 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.224375229 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189404145 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.220590863 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.163513475 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.14797958 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.770136541 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.134588472 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.151159097 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143155282 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114817083 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.255932594 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142202749 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.521631314 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.14986358 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143811403 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180977848 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.257878398 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1682569 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.187896754 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142221371 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.151263903 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.260617474 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164023663 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.127788401 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.145536662 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.165796872 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.179076976 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.1581513 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168671167 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183660044 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.135822279 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.17482728 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.889607343 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.241446845 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.199907057 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.148954179 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322383633 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.172919214 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.144310117 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.156960829 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.131784186 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.257590625 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.170309901 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.147546474 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.127811491 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.160256174 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.145707522 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152675588 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.307646585 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.141782694 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204989053 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157059423 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.147357782 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.214299905 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.757697477 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152597011 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13531477 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.172262046 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.135214554 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147391186 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.134042508 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.147826819 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.136626749 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.142079585 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135222422 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.146556102 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.199978516 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.158798717 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.154512765 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.177296936 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.15219286 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.131618119 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178516689 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.145405227 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127153526 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.151125148 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.22009082 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.141443779 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.148599833 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123918543 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.166395007 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.194556156 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.152034571 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.260201999 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.132669238 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.174345059 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146755426 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.161065779 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.157935077 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129419641 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154632797 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.146880548 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.132367844 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.209917439 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.13694881 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.147842926 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.13747678 seconds)
  done (took 28.592691244 seconds)
done (took 59.624641197 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.39885901 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111271665 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110749239 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133489264 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111384757 seconds)
  done (took 1.581119702 seconds)
done (took 2.283839022 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.227693188 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.326963854 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.243405609 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.154906197 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.214823936 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213058799 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.195103674 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211263111 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21276191 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.228823585 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.134037341 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.239388208 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.229252523 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.216354706 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.127251681 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.251072735 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.207937964 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213376385 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.248421981 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146170409 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143540313 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.16455611 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145511257 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147523946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144368156 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166877266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148665594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166380981 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139967812 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.149180938 seconds)
  done (took 2.368407138 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.176816389 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144557554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.165097417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.140686845 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.147376498 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.152614045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.146890799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164635789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.151207117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168076779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.142843407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.150621721 seconds)
  done (took 2.383220227 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.138488189 seconds)
done (took 9.886540007 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.061870209 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.583534628 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194776224 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.268546182 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.378115317 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.293450192 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.585186345 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.233220252 seconds)
  done (took 14.432388721 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.16701947 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.158844273 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.138761743 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.155929962 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.187533072 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.160489553 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.14068972 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.157664553 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.143739478 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.164148615 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.141087374 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.162392485 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.142945361 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.163219595 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.146595493 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.161404061 seconds)
  done (took 3.249534877 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.168052878 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.184216497 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.146086275 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.164807731 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.142535627 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.163563076 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.147395652 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.165145779 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.142615785 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.162095674 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.166828315 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1497492 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.167094618 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.144405782 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.166791218 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.153384133 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.161841301 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.149722134 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.16794437 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.151303849 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.168877527 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.149441205 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.167079945 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.150664881 seconds)
  done (took 4.580751189 seconds)
done (took 22.97360651 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.203403096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153214095 seconds)
  done (took 1.075708629 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.200333659 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.218232135 seconds)
  done (took 1.146867065 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.16318189 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.159222099 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.179097256 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.172122205 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.14478987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.162282729 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.185665826 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.145044451 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.161240157 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.145854339 seconds)
  done (took 2.346269672 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.14441316 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.163011449 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.160905321 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.210669102 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.151267258 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.166394384 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.167690769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.148179811 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.166747109 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.143741842 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.166550238 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.162967654 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.167336018 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.164258703 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.1679458 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.150682166 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.170755692 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.165979854 seconds)
  done (took 3.671260059 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.144561991 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.14165109 seconds)
  done (took 1.020949596 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.147087104 seconds)
    (2/7) benchmarking "second"...
    done (took 0.160123049 seconds)
    (3/7) benchmarking "month"...
    done (took 0.146491401 seconds)
    (4/7) benchmarking "year"...
    done (took 0.16329209 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.144325906 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.160553219 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.144639147 seconds)
  done (took 1.803538043 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.619287307 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.281270068 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.425008921 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.128556385 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144413694 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.377803185 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158488083 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108549961 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109467003 seconds)
  done (took 3.119103842 seconds)
done (took 14.91460126 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.147043325 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.232233086 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.655255322 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.165898374 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.163507968 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.205280205 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.344937633 seconds)
done (took 2.658103323 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37094209 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.185172074 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.122569033 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.144526461 seconds)
  done (took 1.558885642 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.136012397 seconds)
    (2/2) benchmarking "read"...
    done (took 0.170331763 seconds)
  done (took 1.054543997 seconds)
done (took 3.358821455 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.1597699 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.161236121 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.147945649 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.164975857 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.147553965 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.166308728 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.147646524 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.162069215 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.148449576 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.16216517 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.14625385 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.166414642 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.145265121 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.167971699 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144824235 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.166043454 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.146964592 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.164072191 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162119117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.149445072 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.1653451 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.146950905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.165605478 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.148592823 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.165917116 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.149097906 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.163273496 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.146259375 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.167174334 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.147787959 seconds)
  done (took 5.435745557 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.170175326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.158254234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.144801414 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.170492002 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.141771318 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.145143104 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.161003708 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.142242111 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.164020963 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.144341413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.164447676 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.143797375 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.161581259 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.270935676 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.163318843 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.169791092 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.17166943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.142015176 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.160116898 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.145690719 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.167011569 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.141269728 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.16503773 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.144636478 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.163649656 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.14299512 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.163705494 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.145249619 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.163443271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.145858075 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.167250123 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.14857787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.161841278 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.156224768 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.16540688 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.146398276 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.169285968 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.142483411 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.164401578 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.14318329 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.159981658 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.1435808 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.141684709 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.169114555 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.144754986 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.166209679 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.142643928 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.164487156 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.145587458 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.162740809 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.137712282 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.156699685 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.143726217 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.159987691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.143407058 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.155812792 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.141023486 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.155343917 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.141427392 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.16077291 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.13936621 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.158229208 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.146813213 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.161206769 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.156210539 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.16545409 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.140748225 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.16500409 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.147770266 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.169549995 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.145448335 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.172945591 seconds)
  done (took 12.002533429 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.142743939 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139530297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.162428819 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.146165478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.165284298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.145213982 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.165681522 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145508887 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.163863608 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.146842773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.166164627 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.146579404 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163989922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.148200715 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16365261 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.146274331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.164943364 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.146535168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.165247223 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.148409676 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.163983424 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.147362949 seconds)
  done (took 4.157661346 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.29164419 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.151103669 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.216617103 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.178097457 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.163995452 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.176050624 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.150723079 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.172366924 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.151314849 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.17742675 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155845384 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.170899963 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.184568409 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156471034 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.174690426 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.157810107 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.171296166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.157480967 seconds)
  done (took 3.92380692 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.147345048 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.146473254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.166722175 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.146627517 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.167316287 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.146812764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.168421958 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.147007734 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.167020975 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.146134048 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.165412021 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148084091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.166131896 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.147282445 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.167696015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.147309902 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.167712138 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.146630668 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.166103512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144600248 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158929596 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.143094891 seconds)
  done (took 4.188459354 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159309413 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.164834938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.161912641 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.16913349 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.145857028 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.166936167 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.153656063 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.168015085 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.155969523 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.170134271 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.149953665 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.169148618 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.158686501 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.166941938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.148218273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165585858 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144804519 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.167968929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.148806721 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.16927198 seconds)
  done (took 3.975793053 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.233778711 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182402153 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.184871729 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169573098 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180890442 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161358629 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190383937 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.164653407 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.18574118 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19618748 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160578124 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181735745 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172630072 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.191189874 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.166148566 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.191085556 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188314233 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.167793618 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.183080683 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166167707 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.197614682 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185515363 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175514846 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.185994094 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.167851483 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18836297 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.166195021 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.192288412 seconds)
  done (took 5.849671284 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.16041607 seconds)
    (2/2) benchmarking "in"...
    done (took 0.179245637 seconds)
  done (took 1.115225322 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.148450143 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.14716379 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.168739144 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.145540858 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.166080858 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.145650779 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.165599462 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.144831574 seconds)
  done (took 2.001993926 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.202573499 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.227340778 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.170162498 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.155970344 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.229438675 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.21813873 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.229226293 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.154167772 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.169414016 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.141963772 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.229178375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.141872143 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.173791971 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.172149417 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.151064769 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.175036426 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.151921244 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.179541493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.15818462 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.171956835 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.155102066 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.175772013 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15204155 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.180258207 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.144911387 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.172400497 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.153534638 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.182636906 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146034319 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.171018478 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.148603488 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.171471126 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.153501681 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.176115291 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.150942525 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.231102959 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.177354261 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.145574884 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.168137729 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149854965 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.197690714 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.145385633 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.166156551 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.146183178 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.17427681 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.153746705 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.174644914 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.148618713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.163588284 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.14531684 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.171532768 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144337219 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.171324822 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.148605315 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.16892189 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173687554 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.149617038 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.158871071 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.143409152 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.16408632 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.148030883 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.164098275 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150445274 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.169773046 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.153907233 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.17232467 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.148654981 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.164667311 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.14734205 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.168126537 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.147424394 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.205345167 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.145824555 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.169995035 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.163259823 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.167369631 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142617468 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170221441 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.144115885 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.165480613 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.148900388 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.192206377 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146759329 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.161017842 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.141226955 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.171940651 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.147578771 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.166681866 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.137661374 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172599493 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.166820086 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.148931845 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.137430513 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.163650556 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.15961571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.149735271 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.139059743 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165922073 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.145178466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.169528914 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.170547548 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146202904 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.167095366 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152600019 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168859343 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.143979375 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211346586 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.142975005 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.16302689 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.146909034 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176320843 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.143510686 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.172819238 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.14766055 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.167990466 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.147499326 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.180545172 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.151296408 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.175360543 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.159494886 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.178070462 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.155980023 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.177630786 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.153759838 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.172138744 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.158114026 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.183584624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.156336169 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.178096102 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.155054667 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.177963141 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.153149606 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.179674534 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.172371739 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.161352186 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.172633418 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.155005544 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.154267403 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.181792321 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.172661616 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.143341608 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.166110155 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.151305117 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.167222586 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.154911388 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.175982776 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.149875473 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.167111884 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.152907417 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.169915871 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.152242883 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.183693341 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.144887355 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.176198215 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.15034875 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17570722 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.143517328 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.173640128 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149759641 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.175002978 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151697419 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.162082643 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144899218 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.171088173 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.149175956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.164640121 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.149019813 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.170128069 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.155394814 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.161665587 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.163449155 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.159884225 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.143224202 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.174524118 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.149128898 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.172656017 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.142690893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.206399461 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.159247116 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.172036437 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.146591105 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.167517972 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.151764351 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.167980912 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.152881175 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.184066395 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.155540319 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.173733197 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.14857378 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.183664595 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.173585846 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.159819346 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.176449332 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.158578158 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.171578488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.161128093 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.170833109 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.163936612 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.18014974 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.163272475 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.1832482 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.160276299 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.176799829 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.166331716 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.174198221 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.161616453 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.17072488 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.163093647 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.18743515 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.165394736 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.184426058 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.159419555 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.170948151 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.154704724 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.181790844 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.156813163 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.17362155 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.155655423 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.165951641 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.145791333 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.177488631 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.154789021 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.167331875 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.151949348 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.173015899 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151121976 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.165577767 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.142074213 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.173716388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15103927 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.16511536 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.149176489 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.164723972 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.146647032 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174211139 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.141306652 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.165047101 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.149343048 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.17312528 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.150069086 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.16903866 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.151799873 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.174849797 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.152828871 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.17213753 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145846703 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.177107551 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.148017979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.1711928 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.146421054 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.174054999 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.144983888 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.177579685 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.15296722 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.171792848 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.149066475 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.179181737 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.158820852 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.177748397 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147076147 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.17350889 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.15587919 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.176424693 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146368931 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.17569665 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.144507852 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.162468314 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.148169937 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.162913762 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.153587529 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.166389874 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.152572544 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.167582688 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148160365 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.174206898 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.172500878 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.147645939 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.17279733 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.159845533 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.163486707 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.143540172 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166787994 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148286187 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.166572174 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.14798055 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.172091241 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150404242 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.172444717 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.152228659 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.169345252 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.150650025 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.178346347 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.147657014 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.177376236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.156919117 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.178024888 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.148082729 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.17853398 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.148192973 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.176646925 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.145892072 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.176345118 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.155682554 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.177407624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.151913065 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.177772151 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.150961361 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.172086463 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.153430822 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.184056904 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.152149495 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.180517877 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.155382904 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.173758928 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.148539514 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.170848732 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.159448227 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.172908426 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.177199952 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.151876983 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.144695999 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.165003115 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.159147375 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.17455126 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.157972134 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.169129168 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.159155162 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.186199006 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.159544005 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.183705416 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.164230929 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.185617426 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.180454521 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.158645755 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.168863248 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.155226026 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.182607425 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.158120754 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.180795495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.158717375 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.172760885 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.157083118 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.182766038 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.155786879 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.171184782 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.148023575 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.179025896 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.165964105 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.182600835 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.160752178 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.182165613 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.159009568 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.173895972 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.161963893 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.185576061 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.158197081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.183841185 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.158525966 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.184470488 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.156239022 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.186642799 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.159190441 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.174254106 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.151518732 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.177338387 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.164693426 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.172587558 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.16161183 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.184054791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.153968035 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.177464971 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.162837067 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.173874053 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.160329487 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.184290754 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.155079642 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.188213162 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.156881704 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.178322045 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.162731502 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.182831006 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.147082122 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.176089284 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.155243058 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.181470047 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.155044856 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.184191768 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.157274356 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.185260993 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.162324576 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.185065717 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.16426278 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.184453724 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.150816884 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.187344025 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161715766 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.183274424 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.15264457 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.177678237 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.15532043 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.180495895 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.161667179 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.177579667 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.163260074 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.176101033 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.152460703 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.178672524 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.161224857 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.177672074 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.159954496 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.17091643 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.155794833 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.172734507 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.156996771 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.177723325 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.161205045 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.175431671 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.150827615 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.185767923 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.164123679 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.187033299 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.159940799 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.185604617 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.143074011 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.166483295 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.157483148 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.177877781 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15807228 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.177262609 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.170626775 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151344187 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.177446753 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.154465055 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.179303055 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.145829165 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.168026438 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.15342705 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.173512707 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.151883985 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.169272068 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.154676886 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.17105878 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.152168779 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.170614066 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.147630445 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.173476653 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.157433742 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.169178837 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.149810622 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.171429152 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.158879407 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.172699484 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.147754843 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.165464311 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.155928285 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.174387654 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.156515589 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.171106039 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.154737918 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.175056797 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.159444576 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.186768019 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.155068899 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.182455176 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.15074428 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.181887299 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157158375 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.167392948 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.154007931 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.188489209 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157298657 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.180264135 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.159755999 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.180355977 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168550801 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.18558912 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.158198405 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.172789496 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.150276176 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.174218441 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.149290643 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.179106282 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160783425 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.175526092 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.152183725 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.185195359 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.161925832 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.178476956 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.154573376 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.172799311 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159649376 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.171867965 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.155230961 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.16779361 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.147632296 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.176815561 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160164567 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.172366924 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.150269491 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.175681167 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.153114043 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.170744872 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.152569469 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.175951193 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.154857508 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.18013535 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.152886035 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.171623479 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.156934602 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.184148366 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.153958349 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.171626241 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1780766 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.161633202 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.177162094 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.155036553 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.176084051 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.156970695 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.177266692 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.163130921 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.170650943 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.156555717 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.181839775 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.160375697 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.182801511 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.15215552 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.171712072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.16234643 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.180136172 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.155973628 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.181931384 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.164398497 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.191660251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.162122394 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.182136681 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.169625521 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.189139842 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.163243477 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.184470253 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.15908605 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.192495491 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.161515383 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.189194623 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.156195204 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.193796313 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.165357875 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.187932492 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.165493773 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.181442468 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1655612 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.187820626 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.167555742 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.18974635 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.151776644 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.178800492 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.162909133 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.193077032 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.166660079 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.188029465 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.156408229 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.182052205 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.157996475 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.180583182 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.151056598 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.181203911 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.158843453 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.176147618 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.157931858 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.181467955 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.155498819 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.178037022 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.156406895 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.182629502 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.155326133 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.184936859 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.160625608 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.179070252 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.175050209 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155655941 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.181323555 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.157605862 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1835421 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.150917366 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.166772499 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160555325 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.181498187 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.152388207 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.181214401 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.159957662 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.172675805 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.155548144 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.187413866 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.158151249 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.17675638 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.156099582 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.178858672 seconds)
  done (took 99.556266095 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.205030002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.187332147 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158318015 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.182901964 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175008636 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180653739 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156990788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.184163975 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159059053 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18888312 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.156984517 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.181158719 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.169327495 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.199899148 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.19847967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.167968031 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.18372806 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.161693392 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.181716617 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.16174312 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.199263886 seconds)
  done (took 4.606309891 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.162700233 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.160150704 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.181897685 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159265799 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.182630278 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.160001852 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.182257811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156810587 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.184255068 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160802306 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.185577963 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160876747 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.179786086 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.159882807 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179445331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159571702 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.181359922 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157820646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.181936245 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.161860856 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.182653966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.159112248 seconds)
  done (took 4.614930371 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.191577261 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.183273988 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.158446836 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.159291587 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.181379417 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.159266676 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.189242881 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.159569922 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.188481551 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.154450993 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.177831276 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.154607708 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.18658543 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.159394401 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.177901498 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154659717 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.191460032 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157998256 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.184256856 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.159609275 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.17720246 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.156447341 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.184847778 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.148580111 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.193091559 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.172900378 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.191553904 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.16858476 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.174200358 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.161828164 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.186514353 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.160024678 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.180795553 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.158063419 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.182355647 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.164942107 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.18792222 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.159550688 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.1865535 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.151158666 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.183777909 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.163963835 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.152068179 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.182363657 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.159672536 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.177416102 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.165733154 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.184734381 seconds)
  done (took 9.124158315 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.187453115 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.222631437 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.16273842 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.212745201 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.196672647 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.17099649 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.185637286 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.18791721 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.184171294 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158750756 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.196345535 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.196481469 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.162771717 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.185620334 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.163683712 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.188901084 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.163756031 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.181796721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.166138253 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.182773263 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.165482716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.188918534 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.171269126 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.193811916 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.189320373 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.162192568 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.184357576 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.164548094 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.195018198 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.16536977 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.191513294 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.170052588 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.195136592 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.160546212 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.186153204 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.186603933 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.175497448 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.186802806 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.162907358 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.185794466 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.16683883 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.192899888 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.166837195 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.199842403 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.163887579 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.19090489 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.168194737 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.187537725 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.195352001 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.169813399 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.195233122 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.178225605 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.196435059 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.164637565 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.187961983 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.170620898 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.188087933 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.160241867 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.188964247 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.197287295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.164819078 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.184373907 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.172324178 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.187228407 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.166906065 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.195794624 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.163616289 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.189798259 seconds)
  done (took 13.256122266 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.195812942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.190522391 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175381976 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.197266977 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163471453 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.192353798 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.167146533 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.187210263 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188290138 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.172568597 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187862072 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.291774477 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.166189969 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.193345525 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.165886439 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.194171856 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.420279328 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190157678 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.166127373 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192140919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.18642418 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.174737567 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.192088224 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.177347791 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.199518831 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.161311599 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.188005106 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.193040738 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176633551 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.191541826 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182789777 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.19671248 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.171159216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.203452468 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.207340255 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.167244223 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.181033496 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168267492 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.197447634 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.172881752 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.196242015 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.179878787 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.194240979 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.167611527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198386494 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.197778681 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.184822351 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.205235639 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.174664173 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.198606026 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.171764159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.200717823 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.191223905 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169902807 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.196565635 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.183620101 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.19968488 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.199578212 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170026062 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.197862386 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174958699 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.207427129 seconds)
  done (took 12.740183738 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.165751404 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.164959181 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.191379599 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.166054555 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.189663216 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.162090273 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.186235845 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.162620653 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.188228099 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15931959 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.191130442 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161027099 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.183249444 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161053676 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.187745806 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.160697387 seconds)
  done (took 3.682372148 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.182010311 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.202685389 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.260803595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.164795293 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.187053286 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.169036467 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.186444899 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.165835764 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.185245256 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.169025902 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.193899114 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.168745762 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.208391172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.165981952 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.191733036 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.16731964 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.185564605 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.164765253 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.186879741 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.259580493 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.165765348 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.190971612 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.164122264 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.189000478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.162660982 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.195962726 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.169179329 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.18930713 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.166457768 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.19449067 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.170756024 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.199552767 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.165375476 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.193490894 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.16575878 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.189094004 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.169294327 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.196952821 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.171849199 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.192694497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.170064816 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.197200727 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.166909421 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.199823241 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.169242806 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.199276427 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.170195786 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.206432849 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.168678265 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.195794704 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.16270808 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.200756342 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.173088756 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.199351523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.19972635 seconds)
  done (took 11.050121013 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.178133136 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.193364281 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.179050436 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.190939484 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.165491067 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.194695813 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.169294822 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.188228732 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16721666 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.191773968 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.170509669 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.196499737 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.171553008 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.192571109 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.166753253 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.193037596 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.162225094 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.186647272 seconds)
  done (took 4.169651936 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.16586336 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.163825499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.184708704 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.165900986 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.193099075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.166639809 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.194253477 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.164765575 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.19383256 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165994698 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.186957792 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.167221554 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.189925943 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.160342385 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.188874907 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.16390247 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.192247597 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.166075175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.191126828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.165234137 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.18786153 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16374756 seconds)
  done (took 4.795088528 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.176038461 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.261390036 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.196840754 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.266066502 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.162728101 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.179897741 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.171125752 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.18813674 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.175498731 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.191123643 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.166641468 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.188092774 seconds)
  done (took 3.244348567 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195624503 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.223105414 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.167697091 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188090425 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172782843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197639379 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171767905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194882371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203724336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187326612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194830212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.180912017 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20184806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178746494 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198136476 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196954014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169301009 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190716541 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163765485 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210155137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16974147 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201028025 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169361459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198162779 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196627928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176242092 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202534638 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177674022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195169264 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198313596 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174742784 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198952551 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180599317 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.208715791 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168939392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20334006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168590193 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208407292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200358234 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182294048 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.197794678 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177774317 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205230527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194806521 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179362653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196661689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177634414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201709836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175355315 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217192492 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19869882 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177434243 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203529161 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182096581 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207165896 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.215003533 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181960783 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.20365029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178355746 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.208896382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.204802956 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179353216 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207238738 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.2054948 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175646761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201953212 seconds)
  done (took 13.546190201 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.206788213 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.19187271 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16930275 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.21129963 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179602489 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194509713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197456197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174626245 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199403094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166622345 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.238904874 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168172132 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201398478 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199304985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169293855 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191513671 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169047956 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20051259 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166220734 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.213369604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191589865 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177829389 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199934399 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175202819 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204558624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195130857 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169818934 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191704292 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170365152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192749281 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174071255 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193787553 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174750446 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.189666229 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19819773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17039561 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189611429 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175094382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19269958 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173176361 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201798298 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204308326 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169771056 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191160994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181109739 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194487165 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168399835 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19063311 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169148857 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1904644 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203978748 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.180533602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.205026567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176181371 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193602289 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167837025 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193349169 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192950466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171815742 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196762939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176914937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194904365 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189931502 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194146952 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193590479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178357011 seconds)
  done (took 13.312256412 seconds)
done (took 241.093536422 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.307586906 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.337271592 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156239596 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.222131956 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.155234054 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.927304129 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.845563927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.244249335 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.180877579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.155935496 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.180489329 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.172227607 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.613103695 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.156882774 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.1809437 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.170863476 seconds)
  done (took 31.93501383 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.342704915 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.390989981 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.169935811 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.185441743 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.161287847 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.186146781 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.158540415 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.187833432 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.160379956 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.191585943 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.160127838 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.181107766 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.188566626 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.159207857 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.184257735 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.162559131 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.190013664 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.162247791 seconds)
  done (took 4.469013164 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.185477495 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.279878777 seconds)
  done (took 1.418473804 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.194143288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.278452 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381829549 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233372688 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.182578592 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.201888976 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.235630198 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.173581556 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.274697081 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.1965961 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.174278213 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.182393038 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.185714695 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.19064339 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.177329822 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.184903023 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.188009041 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.200956569 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.198575597 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.164954843 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.2100504 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.164082993 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.190512244 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.176942314 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.267248961 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.195861931 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.165369043 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.185957334 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.165623385 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.199096468 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.169401554 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.201747361 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.173200728 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.245525916 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.190404511 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.242242161 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.169220636 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.187141091 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.17550953 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.186392026 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.187949639 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.167926348 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.194816903 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.161350293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.182989484 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.166144118 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.183203458 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.163594871 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.19325674 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.163459542 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.193873326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.167857787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235999735 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.190288402 seconds)
  done (took 11.563254505 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.998200416 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.208443917 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1869557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.143430084 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.206969451 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.174615405 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.01554114 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189093956 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316166931 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.072994636 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.181287827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.198134989 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.300558081 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.341326034 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.357337854 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.417849273 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.850511013 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.202403648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193446725 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.229310797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166983989 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.205685908 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.20196835 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.482235993 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.18860118 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184249142 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.173644289 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.198512009 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241748718 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.163769091 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189259276 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.262052394 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.359197074 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.272615577 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161132896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.186061936 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161064219 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.250502277 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327705025 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.301146146 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.230386537 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186110326 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160685754 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.191921558 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.198688718 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.162011268 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245405509 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25602982 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25846869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189947405 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.172436165 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195072406 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.167411232 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.241383714 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.184398613 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423285103 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.421809432 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.187190763 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166603309 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.199733429 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327443319 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.188947763 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.297607349 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.208741656 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.276911841 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160293671 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.89369198 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.24926573 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.162958088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.189864272 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.167433052 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193048863 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165378414 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245757311 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.486653187 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168694732 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.19236846 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163598593 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.29784448 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.189295187 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.162001103 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.243717244 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189973203 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.166895137 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197273363 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193134085 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.253657167 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.335404751 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171174527 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.193041363 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.16885878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.198063447 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.164604291 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.29285394 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.314249715 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.217588636 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.293907417 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.192289014 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.248941891 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.250536831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.166562452 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252821225 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.193633492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199607605 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167851423 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.286762953 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.222680937 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189487552 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.168076519 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19549898 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.2253733 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.168077388 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.192770383 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.25095278 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.541957726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.24996636 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.162772401 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.19139275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.171071138 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24625882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.192938769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324596019 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169512863 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.250382162 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.192338914 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.162173321 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.193009773 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.246973194 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.171758589 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194084604 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165764366 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198343877 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.345342405 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.282500989 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197222736 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311448523 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.260674248 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.168439532 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258394763 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.196511899 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251127776 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174220915 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192861394 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164503081 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.893321182 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175998319 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.193477474 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169401208 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.272085499 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.187902584 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.168301011 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18707638 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.16511647 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.857980566 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.192767117 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.16250668 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.1929346 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168488606 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.194371134 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169635907 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.194399829 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.247510324 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.3077119 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.198534174 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167053372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.189683024 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.244572077 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.165338113 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.190291056 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16500602 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.191143086 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.170176273 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.194995534 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.167604186 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.273290633 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.242846315 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.320581025 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.643754389 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.164232693 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190592592 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.305536202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.188881808 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.389814398 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194503354 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.300117734 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.249640214 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162869402 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.446193688 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.25168807 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.246877284 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.195979975 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.258365838 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161818373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.195468324 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.245402305 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.164303021 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198398807 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.244156257 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.173146786 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.196847388 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.316382417 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.190803345 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312464917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.16291075 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.256735892 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.19201251 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170540268 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.41569344 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.167551796 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201763787 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.245190871 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.170223219 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.189680816 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.958961836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.16636214 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198574105 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.169727866 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.320806799 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.248090065 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.173022384 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.198165636 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.173286886 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.245115187 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.294442529 seconds)
  done (took 62.144541219 seconds)
done (took 112.469487349 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.326415111 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226695081 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.422033771 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236507269 seconds)
  done (took 2.254434851 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.344570193 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.205508924 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.300678282 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.187627063 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.306212223 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.162865377 seconds)
  done (took 2.506292679 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.234383558 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230472762 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229545556 seconds)
  done (took 1.698683179 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278515045 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274193966 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.411237118 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327449461 seconds)
  done (took 2.352163972 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.333419555 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.180831552 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.221104587 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.284718367 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.304373149 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272187492 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.187052509 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.237813031 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.219556011 seconds)
  done (took 3.277359378 seconds)
done (took 13.089218378 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.205448834 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.218899271 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.18570632 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.204488217 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.193031691 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.221375373 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.190694318 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.217382492 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.19148841 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204369638 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.189416225 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.202038696 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.281036167 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.190186919 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.202016042 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190315376 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.203124896 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.224772343 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.191795772 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.200237977 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.192870498 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.199962888 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.176407661 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207432253 seconds)
  done (took 5.88147029 seconds)
done (took 6.890571504 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.265932577 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.182251404 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172779328 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.200977907 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.275266465 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180419596 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.217667803 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.174519312 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.212330961 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.174709914 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.191221813 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186151619 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.200562933 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.271297824 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.177214128 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.192077535 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.163975814 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.214677198 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.189341555 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.21740893 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.274466336 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.167656517 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.210062578 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.164732892 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.275564579 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192944319 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.174092091 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.201564104 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.189724517 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.201150297 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.175128634 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.190214422 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.192369278 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.215737658 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.164952871 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.201936702 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.164758149 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.160897259 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.177782654 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.200672019 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.189228296 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.201084933 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.176538083 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.191887482 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.177587506 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.201581181 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.16684919 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.202914925 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.165508568 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.201435348 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169268011 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.215508667 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.175279425 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.191168178 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.16542711 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.193144449 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.186294746 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193287679 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.188890149 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.193452366 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.167637801 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192378989 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.178592284 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193184447 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.174925639 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.193389964 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.177113518 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.204794769 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.175128321 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195046556 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166058855 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.201221202 seconds)
done (took 14.9352632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174433123 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.23653431 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.273034896 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.252151766 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.223482521 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.208761545 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.180358517 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.216540797 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.20097494 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.211031891 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.201013969 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.225896005 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.281973302 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.182784187 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.219446121 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.204229077 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.178536655 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.198214187 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.280193184 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.192155342 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.216309412 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.183048851 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.220086543 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.182356029 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.197168298 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.215762805 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.176037491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.20358602 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.173775888 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.211839814 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.190823258 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.196556329 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.174330906 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.215444972 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.187510183 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.208413683 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.179739576 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.205901795 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.169263516 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.196884756 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.201837696 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.188096352 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.196447958 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.182801995 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.207299072 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.185341425 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203522166 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.182982309 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.197704941 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.179136037 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.198258661 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.196322557 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.21404521 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.186020953 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.212164627 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.18307214 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.217023539 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.184493607 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.202940828 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.208342055 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.177771861 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.19539654 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.174302853 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.219594087 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.174138371 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.21060661 seconds)
  done (took 14.338389253 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.192843263 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229045649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180931594 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.21168931 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175438912 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.19433197 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164908097 seconds)
  done (took 2.384522836 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170934943 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.287874237 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.284826566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.285009807 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.282341634 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.294618156 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189864152 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196088399 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202770123 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.205455318 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.288590839 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.316113256 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177863107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211088219 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.28849246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165321193 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.286625732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.268361628 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.211107916 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.286100931 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.185091006 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.22921106 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.179040492 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.19565773 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.281569716 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.168634844 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.334435364 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216875534 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.177069904 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.20985851 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.181369644 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.271268061 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.282425954 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.209718915 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.176108784 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.282125876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.28405656 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.208997834 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.266619117 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.201577869 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.282754727 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.182149462 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.213397674 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.182584126 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.212998149 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.272369464 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.187433188 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.214212225 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.181153788 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.290892025 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.208462502 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28551494 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179765993 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.210636531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178988055 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213267982 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189367708 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211553547 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.294524933 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185090075 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.282076125 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.284916095 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.284873599 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.28553811 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220698403 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.285567305 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.248152543 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.21241263 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.28432963 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.184471308 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.28649715 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.211934604 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.179590029 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.275448356 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.215973725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.289629391 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.288065589 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.182869178 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.20853492 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.172616805 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.208425863 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.170453148 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.289874937 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.209331758 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.182687399 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.214946328 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.181966747 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.211986223 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.281430262 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.192811635 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.212117027 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.180159842 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.218651417 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.183416261 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212956032 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.292348815 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.205995019 seconds)
  done (took 23.396957392 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.176997223 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.170834184 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.202178779 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.195697991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.173300427 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.195987259 seconds)
  done (took 2.176675115 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.210711855 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211443407 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.193341824 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.211157246 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.227933948 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.293108056 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.298732656 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208101709 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.19958359 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.224255428 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.298224877 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.297109521 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.296138397 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.185575822 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.299105131 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.214954462 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.299803915 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.183757456 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.221031792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182121663 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.213246621 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.186011365 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208617588 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.288341575 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.184961465 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.215473846 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.175923736 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.222612815 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.191277029 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.207397954 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.215253284 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.186633348 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.203961457 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.180113587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.29928496 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.204749634 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.180998697 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.216197056 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.187317259 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.214614087 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.300253757 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182419384 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.220452645 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.18710635 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.210506109 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.174687045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.215938035 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.202602574 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.272809914 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.21842555 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.216227523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.187816018 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213877845 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.18966993 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.203989995 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.179134677 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.215466299 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.304116847 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.187846306 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.207838259 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.184685997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.21657841 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.178040791 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.217083909 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.184677008 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.216251287 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.203538345 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.188000387 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208698041 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.187543354 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.216114234 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.186046038 seconds)
  done (took 16.680653389 seconds)
done (took 59.999141307 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.640352716 seconds)
  done (took 2.705725226 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.177893576 seconds)
  done (took 2.246638452 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.916670829 seconds)
  done (took 20.01667021 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.484821823 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.413064192 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.085260715 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243367526 seconds)
  done (took 3.293111106 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.162670774 seconds)
  done (took 2.246565515 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.467146778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.340206843 seconds)
  done (took 1.88815084 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.821925384 seconds)
  done (took 1.908520142 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.803982476 seconds)
  done (took 2.88761292 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361388276 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284825131 seconds)
  done (took 1.741486723 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.681286283 seconds)
  done (took 1.777924057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.603689322 seconds)
  done (took 14.700866096 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.322058823 seconds)
  done (took 1.413865898 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.357786485 seconds)
  done (took 1.455410505 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.77438921 seconds)
  done (took 4.876132319 seconds)
done (took 64.239472283 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.190976116 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.21421343 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189596347 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212055976 seconds)
  done (took 1.893522345 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.19463352 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.210548105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.192644684 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.21080252 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.192339209 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210402004 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.185396792 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.214483285 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184785444 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.214798859 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.186089355 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.212357568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.186967196 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.211187884 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.183856075 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.214595812 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.188801737 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.213575114 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186216115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.214391054 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.185841016 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.2152148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.189717678 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.217639399 seconds)
  done (took 5.914562151 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.187138201 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.201590993 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.180153846 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.200729287 seconds)
  done (took 1.872496728 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.199889966 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226305634 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19920373 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221801231 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200528571 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226264553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18455752 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.212615245 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184377721 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.22417306 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199548461 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.229091572 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.225547622 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.192020339 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.22420305 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.181453214 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.21560581 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.201190823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.221493735 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.199744941 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.217138433 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.194887372 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.213865015 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.19604635 seconds)
  done (took 6.088575976 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.26303623 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.228227062 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.212901637 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.245371557 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.182802396 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.244328314 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.262052716 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.191538073 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.22052865 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.190723066 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.216944961 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.185731522 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.261293034 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.224811922 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.190426059 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.214444974 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.194941885 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.219984163 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.225737145 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.218853765 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190686996 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.227045408 seconds)
  done (took 5.918390283 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.274327473 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.207962575 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.174751659 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.204245922 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.21673958 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.180826649 seconds)
  done (took 2.37025036 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.180166561 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.169570821 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201778549 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.170879839 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204528876 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170859762 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.200296093 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.171202319 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.200654084 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.172368976 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199867162 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169131803 seconds)
  done (took 3.323465805 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.3017374 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218838883 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.344254854 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.457889031 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25975837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254447876 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.370588952 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225984655 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27311185 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230465768 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27654548 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228855576 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248460992 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302888173 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209936611 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.243847925 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263173044 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29451868 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238676668 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331010721 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251798623 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271802672 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259657647 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247029211 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234109766 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229000748 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.217746093 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196127452 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260007564 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259882556 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27020031 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217371346 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241088579 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283050521 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303161117 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268718025 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.36020028 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229403887 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.228624806 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.289048164 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.32438933 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239525234 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284580119 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217795229 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228875149 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.311237865 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242793578 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.250322464 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.232299815 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239553867 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244599178 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273099051 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265114209 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232970505 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387286802 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201779486 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.240804742 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275585326 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284111179 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268033339 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27591518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.222897167 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.265547709 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288413552 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312730332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.207577813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.259708124 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221849233 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230940842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304837375 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276430895 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256216718 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.284226008 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199003248 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270639443 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261154218 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217652298 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303390957 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270496027 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.215717776 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217048757 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231763623 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193634858 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.281984221 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216821218 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311864769 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201481171 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.27032504 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272943189 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219799067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258136046 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254909552 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228086673 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244260646 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155697015 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24164179 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.254163408 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223008408 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22714134 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216385209 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237641258 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.222924769 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217728601 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.221051138 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266449636 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.192614043 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253545093 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238098594 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.231812545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278684602 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213653326 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.261527223 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263637365 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294741053 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19880111 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231292444 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321636666 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267736296 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.204275206 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267820759 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296894831 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.204964558 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236085958 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262083902 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289438603 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211120666 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296620891 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237047281 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203320296 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.221377248 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271841673 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2241037 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258565287 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22523438 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.234395548 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282782987 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.226960588 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206915266 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280147288 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231653856 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194263087 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234664411 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232650207 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.210687893 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.250986485 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.205334025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252385559 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268307568 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234221836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252470236 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233954249 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26773008 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199122563 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.27083318 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242780858 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.190355658 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.270184818 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298406508 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197126997 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277671734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.257830677 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27386554 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27064803 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199031909 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.280241663 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195448629 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.221701505 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258762771 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236366875 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259669596 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.289602417 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274341408 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.261977162 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.262341044 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215806248 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264045586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.288894706 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253314219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.208480982 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272816621 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264010916 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.190166336 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.220803004 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.197768651 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236550087 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198117717 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237295767 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274088924 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259605394 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271879571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237021514 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239551338 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.29071747 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.195312176 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256923398 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.279272066 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207173094 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.290197414 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290617891 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279731808 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208567915 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261247405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220628554 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19546 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.23336231 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256932759 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207584711 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234254705 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208930932 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292218985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266564108 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244882305 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285971589 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230871034 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30129361 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.222880862 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.225732205 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264351553 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269514172 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257626682 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230636355 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.25721457 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292684966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210887885 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289837894 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268938007 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278045348 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259121324 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.269083819 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229051122 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213928269 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258617206 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237003177 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231452246 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243494602 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197140823 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246086054 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.236896274 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208515252 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282164631 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244173442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273446293 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.222754067 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266206097 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225968645 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209154604 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276588932 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245066754 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.16236232 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264704728 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289831986 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21899844 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251138981 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267200581 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199260762 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.412840805 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280134849 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267941252 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206200742 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238569657 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27292151 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227601082 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258516745 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.285671454 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210120756 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307644596 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271601579 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.238613243 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200976141 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246969562 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217266771 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.224770646 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252334195 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.232272229 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.243539641 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283333633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234581112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241134089 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279590992 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.241224549 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.220138817 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238770812 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329096327 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267192058 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239579599 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.268557145 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.261846756 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250643731 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227055651 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225634365 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.204713844 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.285948504 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200656982 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280099145 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262789237 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280209176 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278053764 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261329522 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209645499 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.229339654 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237801365 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249657919 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28130254 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235402231 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.206336339 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285535706 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.212986117 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202184922 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259629537 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382610322 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215894183 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268189284 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.163051111 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.377877578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229904633 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202239908 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258281302 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268177613 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.201076867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.286820726 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276325416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208392662 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260527628 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234222436 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27466723 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250959836 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266418148 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272681668 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.245824919 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229297168 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256451344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270378953 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214906256 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.249266196 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258250551 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296602471 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.24459955 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.2338048 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269623618 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239512854 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274953656 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271382337 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208501608 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283206499 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229154661 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234075404 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239528908 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223572566 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227019972 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.266776183 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232081047 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269950208 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241379562 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234055234 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198973338 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248291152 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267453094 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209664489 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.232865445 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285378468 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.200302259 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284289539 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312504562 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200042668 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270460641 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244607392 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201136842 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240612891 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245245695 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203203485 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.274499871 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245704985 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.233520209 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27152009 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265486149 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23231636 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253198944 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242601035 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.339025009 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231310769 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293828433 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220317599 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316823719 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252205608 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248730858 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273424267 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251770243 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263536872 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21627498 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.320341094 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264803158 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.238971415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233423259 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244834771 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209155438 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.235365818 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22019124 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272933052 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243790419 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.207152849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.271098863 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246060852 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.217406779 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243704462 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30308778 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219451865 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285845529 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.288740698 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240190904 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246990223 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275503231 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231567371 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.231511992 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271604637 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247542475 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221353661 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.238832123 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.23908933 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285574745 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.23023754 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259689308 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245582827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274327423 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27827496 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.20507574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280663796 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245276312 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276838859 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199686964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.253393561 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243199503 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240453201 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.229687322 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.246752507 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260016941 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.270529469 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213671297 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.282307333 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2977694 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195999068 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236282157 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383240485 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228325063 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295723651 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.221261564 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209913344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248462162 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227096964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.268531991 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276962926 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.202016769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23268901 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.248550305 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.220792992 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.226326361 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242501994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285811723 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259511999 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287101576 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.204087022 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.355605238 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212114187 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278273235 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.206703688 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.201954147 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243849693 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205041375 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245205784 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279861818 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320895104 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.265938019 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.218698445 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237385331 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.199967835 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234227447 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230548219 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252027556 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273990826 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21833361 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.195752909 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211754958 seconds)
  done (took 121.424938434 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.329846001 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.289032575 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.270924103 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.322850946 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288484142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.388627805 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.329120474 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.342090273 seconds)
  done (took 3.799011142 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196107772 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.260983748 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.245382489 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.220400734 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.18446913 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.531654453 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.239039913 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.192166477 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.265663314 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.22640494 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.185609317 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.634821739 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.227786324 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.221366966 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.224344238 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.183533623 seconds)
  done (took 5.468822349 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.198538747 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.639666472 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.259663879 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.370565121 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.338680964 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.288422202 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.912521463 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.2692361 seconds)
  done (took 13.512804112 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.249063733 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278205747 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.446135469 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.378172103 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.294569787 seconds)
  done (took 2.891637077 seconds)
done (took 175.567160631 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.201548876 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.228385866 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.198720944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.230633194 seconds)
  done (took 2.085407239 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.237117246 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.151723168 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187042341 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.151400801 seconds)
  done (took 1.963458931 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.465445611 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.151256502 seconds)
  done (took 1.882315112 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222486856 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.240709539 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209800057 seconds)
  done (took 1.926574477 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.213812293 seconds)
  done (took 1.463915226 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.196833679 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.222534319 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.282772031 seconds)
  done (took 1.95270995 seconds)
done (took 12.519886545 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219377514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.048690379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.649237786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.207728029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.825010581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.47562752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.529083184 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.252820642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.307318324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186924618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.249911045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.765438528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.510261717 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.954798205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.497006887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.954054784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.798595763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184853774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223149322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186000689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.502463065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183494044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218422997 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185122583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.797404482 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.491699553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217695963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.997491141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.185832571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.226001001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.475605948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.215897498 seconds)
  done (took 23.954097479 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.190475449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274024873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236049647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220392408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193636601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.221412531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197408446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.231160532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.316816993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.189751312 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.240517778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.185308787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224814648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186991774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24206073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186202228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221593374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187298966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224987509 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187303881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240425229 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.216111422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.189391796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.218882215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.186655009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.235240805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.189660222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.229631879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.185757529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.226086615 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192641453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.218667946 seconds)
  done (took 8.135245422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230785756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.283639155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236337757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.258200142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.271539645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.189345339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306792431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254537842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.292912541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.224155714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.208591105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219224248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.259363524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189187425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24230759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187251246 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.2207768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.189018405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225713924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18946177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240919427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185696169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220318341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186735322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.220121525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.206001926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.220127958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.229746209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.186847216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.228289551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192206431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.217921244 seconds)
  done (took 8.46993987 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.204392181 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.233317659 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.210982267 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.242896602 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.19981452 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.23272381 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.2033134 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.227880189 seconds)
  done (took 3.01259702 seconds)
done (took 44.826606962 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.728177361 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.23501233 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205077366 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.197259753 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.307555232 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.225173553 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.200462511 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.223824638 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.196932023 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.236746298 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.185869901 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.224019392 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.203531997 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.226785624 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.309133292 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.199808769 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.312871322 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.310481056 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.190848532 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.23319643 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.192053877 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.313181939 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.230956239 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.191470668 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.287160562 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.191014521 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.301819481 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.227274883 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.19517043 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.220762854 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.276493983 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.227461989 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.191558403 seconds)
  done (took 9.447450042 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.294432334 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232057345 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195556265 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.230143762 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19729446 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.228913446 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.331318905 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.196245359 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.229271586 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.196609236 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228084778 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.312877033 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.201897257 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.224172248 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.199265037 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.173254372 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.329990589 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.230207401 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190318099 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.155701343 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.226796388 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.195357514 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.341246437 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.227121123 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.195652076 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.229590219 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.197098931 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.235751003 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.198434209 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.230147626 seconds)
  done (took 8.132555669 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.20261818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.241307256 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.218183903 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.297003174 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.226394142 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.24262962 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.213819068 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.241720765 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.217896357 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224163402 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.205362258 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.25969879 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.239932217 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.202139536 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.222258634 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.207477447 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.237666732 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.191814892 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.231471086 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.209666457 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.240678835 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.208435346 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.245121519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.199496451 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.222330735 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.198434599 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.233685925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.203737454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.233246586 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.207034485 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.226293658 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.192795344 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.225709189 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.225094351 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.228832559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.203473565 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.245464437 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.203143925 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.23790352 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257360266 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.193945034 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.225512852 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.218523917 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.282556382 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.194119219 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.233681884 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.192591559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239375581 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.189887094 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.243157963 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.234822599 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.227176093 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.212223224 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.224825142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.189224969 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.233812813 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190628312 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.227947251 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.207100926 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.226691066 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.212089023 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.2335147 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203203886 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.2277154 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.203348384 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.22392727 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.189899271 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228848124 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.217539251 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232298564 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.229513145 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.224539377 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.202653945 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.238262533 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201967958 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238114009 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189554687 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.238089749 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.202295355 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.22914715 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.204333537 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227448065 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.192771856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.241818306 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.24490781 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.206687192 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.2364933 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.202652012 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.225683559 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.194377367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.242904445 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.191910927 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.227724692 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.205557895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.225154756 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.195888278 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.235633661 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.200357398 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.22331347 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.219263459 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.229176194 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.192724258 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.253137745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.195535062 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.229513361 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.200851629 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.266168007 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.191544959 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.233898189 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.202375351 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.225024544 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.199771292 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.22611411 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.190857092 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.240368748 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.207584286 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.233319789 seconds)
  done (took 27.072905655 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.40601042 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.400005665 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.292534021 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.444428945 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.240026585 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.321999831 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.398715314 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.400100906 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.192548636 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.261001618 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.281504811 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.364525662 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.191102903 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.256627187 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.402147847 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.482960289 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.222025718 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.265449342 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261902683 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204049043 seconds)
  done (took 7.586478701 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.200977204 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255109034 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211971475 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.242508013 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.203256644 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.238131289 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.194008968 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.246949405 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204599583 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232286284 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195543474 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.232125484 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205597099 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.239949941 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.204903586 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.249190734 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.198381232 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.226765624 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.214072859 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.227975862 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.21054978 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.25257226 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.234162775 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.213034582 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.243275003 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.202820667 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.223096355 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.194489166 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.232719926 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.202805303 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.22541757 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.203112284 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.232609509 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.166744289 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.202975972 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.24289718 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.198620918 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.228798184 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.197574842 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.22894046 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.204592237 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.237432677 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.200648488 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.234197675 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.21277389 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.175282385 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.238085441 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.204401086 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.203828192 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.211899245 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.23896146 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.203446319 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.234279612 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.211011796 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.233886353 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.210559786 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.233316296 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.203681308 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.228596675 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.191760546 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.224525611 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.196221818 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234971932 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.204706967 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.238463737 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.201986639 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.234362303 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.193403242 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.225977635 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.197223584 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.228419344 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.207169881 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.247324655 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.203029006 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.233790294 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.203869492 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.234833215 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.160423327 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.20136596 seconds)
  done (took 18.460743768 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218526645 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.232624842 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211733092 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258208406 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204932125 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.233390825 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.199867765 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.245544038 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.201676408 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.242456306 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.201375256 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.241022219 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.214784936 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237992269 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.199965294 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.24223363 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.202630952 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266291413 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205696707 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.252804937 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.200586897 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.233325276 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206114853 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.241756094 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.218716585 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240065939 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.217457604 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.237000285 seconds)
  done (took 7.637514544 seconds)
done (took 79.594472944 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.46693688 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.650304594 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.415673354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.422594199 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.458843446 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.417767048 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.41800386 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.42813446 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.072045134 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.398107173 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.419833742 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.415415401 seconds)
done (took 31.342805378 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.687231259 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.081054106 seconds)
    (2/2) benchmarking "String"...
    done (took 2.08776704 seconds)
  done (took 5.493028291 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.069391585 seconds)
    (2/2) benchmarking "String"...
    done (took 2.079917954 seconds)
  done (took 5.452210058 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.404369214 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.415102589 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.7991774 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.408777658 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.404558157 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.405918478 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.405998173 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.428991717 seconds)
  done (took 17.576531212 seconds)
done (took 34.921498668 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.42404819 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.829517392 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.71330578 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.389413344 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.408760814 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.403831798 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.407917083 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.48240776 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.414714347 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.392092854 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.853238847 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.727677896 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.415286001 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.861958677 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.388786591 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.407535758 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.410808266 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.861610162 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.411401047 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.45363721 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.388589507 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.391012342 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.421366878 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.425681487 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.423455609 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.412948689 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.398495993 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.405924407 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.812367475 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.449743616 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.390752248 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.424287242 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.392778089 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.410294805 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.41310014 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.422263769 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.799881348 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.428972504 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.396562871 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.413702138 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.783733435 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.427547217 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.408020918 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.43408278 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.400351071 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.470203686 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.399221576 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.536054067 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.428063826 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.422030888 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.479755865 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.834431941 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.422901755 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.416634126 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.411706784 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.743969207 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.412788796 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.526629925 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.436861774 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.417400274 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.407270855 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.427431034 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.445360067 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.428300055 seconds)
  done (took 158.509764256 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.409415154 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.409484819 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.409764582 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.417313863 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.413064353 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.411867275 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.411677925 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.411452208 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.410335028 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.435161624 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.409690166 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.413155383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.412440513 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.422558057 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.420948567 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.44259358 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.413463615 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.410883571 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.423582123 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.409732656 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.440372717 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.409885362 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.410741773 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.410883086 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.422530517 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.511527196 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.43752571 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.428295999 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.424279589 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.420223672 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.429734396 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.416804038 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.12587594 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.281966488 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.425746728 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.410305592 seconds)
  done (took 88.034154148 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.412436481 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.409295206 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.409741748 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.44978564 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.411557977 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.082940728 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.090138837 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.488622631 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.967837469 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.817787478 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.112800543 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.725308 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.412610077 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.507229934 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.427637014 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.414297456 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.512011675 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.438340029 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.410621418 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.413240567 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.082535276 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.431748624 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.426595938 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.603238139 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.412822663 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.449281695 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.813624892 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.413476527 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.451096307 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.757735347 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.450659287 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.412451072 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.837930469 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.930015798 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.528814234 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.41851139 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.450109923 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.41410525 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.702942637 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.413415452 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.414853282 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.418718027 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.119344567 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.420842164 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.089447982 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.42086076 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.445950248 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.416442461 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.413419789 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.909673661 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.223383605 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.415371935 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.416102282 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.418187588 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.415148319 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.417774692 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.455641176 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.416080212 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.020360176 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.417586641 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.419826039 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.42142842 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.451909208 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.415695422 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.416051682 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.480022484 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.483526546 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.683237166 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.086498024 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.419617212 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.415921765 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.561702237 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.515621046 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.541187641 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.416092872 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.41760348 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.414261799 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.415061549 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.532264943 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.418331317 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.885120232 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.605176331 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.41953336 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.999366635 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.517952303 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.419060788 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.863819988 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.418620967 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.417197831 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.21792956 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.417638211 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.51559375 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.420602732 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.416847173 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.417424608 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.41788464 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.891045697 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.09097787 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.751867178 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.420661724 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.523185633 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.420255804 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.900826216 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.065795155 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.115106758 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.421069882 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.532259545 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.608617626 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.4207601 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.418783758 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.986314606 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.420805198 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.479350259 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.419881934 seconds)
  done (took 396.502543953 seconds)
done (took 644.35497772 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.402003774 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.403181443 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.401937115 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.400853008 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.403076625 seconds)
  done (took 13.329294757 seconds)
done (took 14.644013114 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.653438142 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.643352416 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.642879848 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.496411428 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.655532712 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.664645457 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.555427603 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.646592569 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.665135675 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.648507753 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.465268015 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.661960316 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.626436422 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.666334227 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.483356456 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.546324904 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.577161855 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.571168599 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.563670863 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.752528036 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.789297198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.488959174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.733118527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.468917735 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.77384791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.783290389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.647470067 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.591081565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.451459334 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.441814694 seconds)
  done (took 19.242742098 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.544664203 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.751881088 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.788295733 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.493442585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.718750415 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.468990148 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.791387105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.77334419 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.657396458 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.602070579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.452537148 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.447434597 seconds)
  done (took 19.266641138 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.443294641 seconds)
done (took 73.250509006 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.467011413 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.540129676 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.462009066 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.442091375 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.441094154 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.44549367 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.446460593 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.442969707 seconds)
  done (took 13.01125529 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.443295859 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.440215329 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.438553686 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.441850931 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.439160618 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.438831342 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.442648808 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.440464052 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.439833421 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.43943738 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.440864805 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.440303613 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.442858654 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.443918696 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.441760296 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.442903442 seconds)
  done (took 24.3803789 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.444999926 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.442063645 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.44304595 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.441944724 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.439659309 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.442373558 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.444509557 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.442989977 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.440289362 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.442586516 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.443364632 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.443116089 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.442498522 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.443330312 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.443344416 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.441669209 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.442896683 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.442103407 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.446301465 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.441144412 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.443485199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.443451426 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.44210775 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.441390194 seconds)
  done (took 35.948942091 seconds)
done (took 74.662850902 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.446855953 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.43247643 seconds)
  done (took 6.205899795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.501978971 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.501035068 seconds)
  done (took 4.329809991 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.442727439 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.443265832 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.445761609 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.445467525 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.444651201 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.443976956 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.443492362 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.443800553 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.444485011 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.443077138 seconds)
  done (took 15.768114934 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.444614371 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.442137799 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.442161039 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.443969793 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.444831979 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.444919323 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.442098401 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.446271643 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.442967722 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.444538976 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.44462733 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.444639142 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.443627462 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.444998952 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.446460165 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.44663534 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.444688027 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.44414925 seconds)
  done (took 27.325489341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.457663371 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.462795177 seconds)
  done (took 4.247025257 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.575846733 seconds)
    (2/7) benchmarking "second"...
    done (took 1.488107509 seconds)
    (3/7) benchmarking "month"...
    done (took 1.550356239 seconds)
    (4/7) benchmarking "year"...
    done (took 1.542284966 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.487376003 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.465683739 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.486881615 seconds)
  done (took 11.923724622 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.440397918 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.735053043 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.929903547 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.60946651 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.432149967 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.451155886 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.413690222 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.455860424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.453455925 seconds)
  done (took 16.246761868 seconds)
done (took 87.371949677 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.432426599 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.458561168 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.453854374 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.46518948 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.742421458 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.43690982 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.434995106 seconds)
done (took 17.753855478 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.4258073 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.423441777 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.418256618 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.448690333 seconds)
  done (took 11.044540904 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.432033781 seconds)
    (2/2) benchmarking "read"...
    done (took 1.760825875 seconds)
  done (took 5.520866181 seconds)
done (took 17.892927537 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.452582143 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.4472225 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.448510855 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.449824139 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.448839693 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.449564001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.449511422 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.451048527 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.447902109 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.447757016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.450832301 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.448710571 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.449936674 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.450451622 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.450387522 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.449074617 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.44951588 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.453033931 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.447134138 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.449869216 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.450020583 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.448481382 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.450139959 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.449793287 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.446518103 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.448309297 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.450556896 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.449510508 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.449331753 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.449705861 seconds)
  done (took 44.814814677 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.455832367 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.451164197 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.452632019 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.449262562 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.451357379 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.450329843 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.450880048 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.450729156 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.450789426 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.450566852 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.451356359 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.450612932 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.449338044 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.449966088 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.450899866 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.450528516 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.449313778 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.450225012 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.451430056 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.448946131 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.451842785 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.450171862 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.449990664 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.453258004 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.451687265 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.452836634 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.453662299 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.452558446 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.451880837 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.451796405 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.452088491 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.454715069 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.453003872 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.451396321 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.451182639 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.451131257 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.457377148 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.456429823 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.453608276 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.452296268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.453088583 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.452082395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.45092415 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.453210121 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.449471748 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.451854826 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.449529052 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.453503419 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.454135773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.453264655 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.454481534 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.453043989 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.453485954 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.453927613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.453956465 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.452213059 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.452867918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.457959548 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.454197329 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.452182065 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.453710993 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.452982664 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.453865175 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.455180485 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.454472917 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.4523577 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.45373574 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.453863793 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.453424731 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.454161456 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.452763339 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.454222905 seconds)
  done (took 105.907942572 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.452554549 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.453596517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.453034341 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.455927817 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.455341422 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.456064326 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.452965892 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.453316381 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.455221226 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.453865927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.455687146 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.455209502 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.457274341 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.454028352 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.454837914 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.454612195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.458875541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.455974534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.457785503 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.454334664 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.455713325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.456500638 seconds)
  done (took 33.348480781 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.457626531 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.456026242 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.454151688 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.45629007 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.458316084 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.456956994 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.454672407 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.454955561 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.455589275 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.454818875 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.457492817 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.45774628 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.460105464 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.45695846 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.455757377 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.458518209 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.458889617 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.45949757 seconds)
  done (took 27.561121268 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.460169001 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.457689802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.457768008 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.458105679 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.456629155 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.458772266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.460843859 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.459234862 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.459428745 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.458153117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.456770132 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.458458007 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.458419529 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.456834145 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.46008224 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.458898448 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.45946195 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.456362777 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.458219458 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.458358167 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.460053666 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.460008415 seconds)
  done (took 33.427672495 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.459365458 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.456829531 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.460110457 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.459711404 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.460768363 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.457613464 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.459797982 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.459368552 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.458471904 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.45949255 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.461253897 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.461462368 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.461805186 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.461992045 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.461444613 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.459311097 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.459944772 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.461600857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.461327358 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.462032575 seconds)
  done (took 30.545432611 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.463917185 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.462247021 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.46176206 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.461282043 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.461865911 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.464569896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.463579806 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.465553223 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.462527063 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.461134787 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.463056702 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.46210988 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.462986696 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.463057892 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.461972187 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.463839715 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.463436781 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.464163617 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.463634292 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.461035236 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.465352287 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.465336293 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.465212319 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.462385168 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.465519096 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.464203204 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.464417507 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.463208941 seconds)
  done (took 42.315032006 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.482125373 seconds)
    (2/2) benchmarking "in"...
    done (took 1.479885967 seconds)
  done (took 4.304742133 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.461182434 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.464100307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.464499799 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.464013889 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.465001197 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.464930184 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.464391887 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.462638624 seconds)
  done (took 13.054599173 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.459551094 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.46366741 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.46291475 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.465299265 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.464373647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.457165848 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.46353271 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.470962575 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.458428932 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.458945392 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.465310557 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.460927505 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.461172655 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.460111473 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.457489583 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.464195449 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.470739073 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.467655503 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.465600487 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.465889848 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.46605954 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.458814679 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.4648692 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.46997593 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.461387429 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.470620694 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.467359629 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.4690333 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.461371016 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.466123113 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.462436645 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.470674606 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.469837216 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.467782836 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.469234615 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.467834598 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.471663717 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.466284429 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.471240441 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.47118345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.467169899 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.467817331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.463677894 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.465334344 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.465650707 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.469580678 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.472356549 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.468275129 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.460602287 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.466815069 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.476340576 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.462868015 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.474529757 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.465681871 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.466476166 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.472452731 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.47646489 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.464418121 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.469411134 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.473747091 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.483421996 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.476475399 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.472846038 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.474459612 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.470971821 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.475627281 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.475214623 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.478338704 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.474325618 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.471138016 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.477482551 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.487494413 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.481665592 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.477731287 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.472758737 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.47236483 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.465543758 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.474619024 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.47506103 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.478363535 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.477798319 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.472852812 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.470392665 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.472872003 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.468249927 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.477317042 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.471432601 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.474053859 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.466475238 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.476548558 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.48112184 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.474906361 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.464701336 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.469712326 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.467061724 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.475710943 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.465315528 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.473752787 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.481246103 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.475248827 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.47382575 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.468295367 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.47277658 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.478836581 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.474669589 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.480370749 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.480547493 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.469733126 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.48307573 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.481568017 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.475896472 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.464929641 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.477079803 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.48039841 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.467796166 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.4741849 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.480021676 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.471249023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.480083686 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.476035627 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.475250313 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.484080589 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.480214857 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.478509361 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.47022333 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.481771755 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.474071121 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.472928871 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.482661671 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.477979682 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.475736066 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.472598001 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.484498579 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.470810534 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.483190582 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.472065978 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.482869059 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.476146738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.475189953 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.471774245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.47736239 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.475637912 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.476278307 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.47999135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.483206291 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.474542101 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.48885342 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.477486292 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.475454208 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.481179557 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.483798061 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.477123523 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.474013471 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.480695713 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.473580461 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.48679437 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.472356562 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.483086222 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.477978271 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.478946723 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.477085932 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.469233421 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.476508732 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.482526236 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.47872326 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.476923606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.484475807 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.478631761 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.476696538 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.471472859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.482944662 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.470493302 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.472929559 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.483118501 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.480897057 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.479596865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.476861347 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.486809708 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.481168137 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.481618787 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.474101796 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.482998972 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.486212281 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.483794254 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.488526559 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.481328386 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.4808629 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.473944619 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.477781457 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.483781426 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.474470604 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.486267295 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.490241099 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.491472168 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.476786144 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.486094707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.474792902 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.484107295 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.48120473 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.488018671 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.483695327 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.481037299 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.477435466 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.48758685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.474134142 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.486848 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.475196901 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.485262055 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.484394684 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.482407942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.482355365 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.478675326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.482042715 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.490330881 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.483906129 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.482410575 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.476139189 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.490158787 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.475443603 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.480760313 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.488405878 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.481498091 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.486921171 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.487733761 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.481681122 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.485424063 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.485401136 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.480527838 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.486302364 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.481953662 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.483254356 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.488507669 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.486921141 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.484581368 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.491778522 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.483648893 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.478396184 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.486131191 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.491353158 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.484381787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.478408205 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.490077772 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.487275631 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.486370812 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.486230503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.478648513 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.489504694 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.487886186 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.495495577 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.480277137 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.492645891 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.479792471 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.493935058 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.481529565 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.486397766 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.483349643 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.488312394 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.492763994 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.489163752 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.483793141 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.49145925 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.485728358 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.486822246 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.480323865 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.491301139 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.485854485 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.486948271 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.487854725 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.483151606 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.49386058 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.480884318 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.487767186 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.480695846 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.502219039 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.505024842 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.491361068 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.492192823 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.492154877 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.490449208 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.487817602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.481613692 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.481537642 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.487213114 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.482618432 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.484619722 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.493724063 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.484969346 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.493344638 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.487817559 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.487248232 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.49248255 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.490710071 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.482704106 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.493386779 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.488668299 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.489997316 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.478845713 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.493115073 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.486797113 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.488484911 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.490099156 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.483839752 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.494875693 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.494640915 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.490290562 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.486610455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.485168314 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.482617566 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.487879608 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.494461469 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.483091465 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.495704596 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.485474047 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.489435589 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.486138638 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.49548692 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.497222953 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.484719351 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.494600326 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.490032591 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.482425083 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.48679921 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.493475018 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.493522995 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.500799867 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.483389813 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.495019533 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.491423103 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.494189617 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.492471998 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.491745969 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.491557477 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.491271708 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.496699607 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.491743374 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.489595947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.490500844 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.498658406 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.490696312 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.494686389 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.484676772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.494958883 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.501055758 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.488847356 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.492768229 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.491353503 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.494958084 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.491893818 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.492431661 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.49503898 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.495983081 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.497608625 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.497620544 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.495831118 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.492712971 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.499955428 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.50014521 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.499786096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.502217195 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.488892414 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.498249495 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.493187648 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.490618786 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.489542037 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.488444753 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.499409313 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.486960172 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.497227073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.497176796 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.489370398 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.495573016 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.502045888 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.487350396 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.495102935 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.508074248 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.488323119 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.498707464 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.495284418 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.488568956 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.4992805 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.494525016 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.488723019 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.490767268 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.494374928 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.498569053 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.48906982 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.500331309 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.490717775 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.498832615 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.497112078 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.493939137 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.496221584 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.496422441 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.490940762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.50149565 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.500835523 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.504728519 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.491792028 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.498747372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.49059709 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.506053891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.506105382 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.492776397 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.502884292 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.499263734 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.491604367 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.495279651 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.504886549 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.492710355 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.500030376 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.491611361 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.494445714 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.495327786 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.499708391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.498898651 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.502167551 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.490246708 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.492840257 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.503043691 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.501076214 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.498378114 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.498225373 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.50950257 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.493431451 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.490940184 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.503093239 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.493888332 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.503963693 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.493872252 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.494539462 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.498118614 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.501744586 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.500085342 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.500401278 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.494367554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.498083292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.507801699 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.502975464 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.500387386 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.496450933 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.503325602 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.493135525 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.499415096 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.498770132 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.496493117 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.501441871 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.506678791 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.495771777 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.494434259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.497738318 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.504848523 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.505149647 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.505106517 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.496357939 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.5107764 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.509724257 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.50968208 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.497215282 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.499327987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.499007858 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.50512841 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.502729577 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.494033609 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.509617929 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.507793134 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.50589173 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.50226605 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.49859041 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.496720266 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.506384854 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.502004231 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.500225131 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.510085541 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.499917731 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.510520362 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.504906895 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.502435438 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.493460634 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.497793647 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.497418195 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.500593271 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.506560847 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.501480308 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.505572006 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.50305016 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.511038991 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.504835267 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.502620726 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.504620551 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.49766306 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.506854395 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.495489616 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.50552245 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.50725407 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.497898706 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.50538006 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.507457625 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.499152292 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.504280271 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.509377231 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.505085585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.499877305 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.504243491 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.511566686 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.5126312 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.505852085 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.499495911 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.504494491 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.512617428 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.506248474 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.504504102 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.50008717 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.51708969 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.520587741 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.502456162 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.503794127 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.512794589 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.512010521 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.507451042 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.506293004 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.506329214 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.50766226 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.514909216 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.506738248 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.510410276 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.513031065 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.502151819 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.509152716 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.501984129 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.502941514 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.507786026 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.517020496 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.507331304 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.501821533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.520183037 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.51615396 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.507077434 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.520223674 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.511444527 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.507921571 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.513656034 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.499380139 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.508786547 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.504434978 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.513126574 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.507836118 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.508867399 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.509678892 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.500830475 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.509927727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.515739817 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.518521892 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.510101993 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.503547786 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.506261891 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.512700236 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.511963097 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.510950356 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.511864964 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.509185445 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.509812755 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.503451157 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.528599363 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.526315755 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.51596331 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.514498499 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.511105626 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.51226662 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.513246632 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.510066575 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.51590536 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.512746001 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.510383324 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.509589165 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.520826844 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.513925736 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.510247102 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.507460243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.507135078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.515208878 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.522472233 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.529389324 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.516739855 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.514189297 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.513417803 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.514742217 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.50834832 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.518997173 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.51280231 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.510788346 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.507751808 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.516707922 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.515984088 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.512929596 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.509324078 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.521416139 seconds)
  done (took 889.238177605 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.515587969 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.514089986 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.512069864 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.520721255 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.514754619 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.51213144 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.514451073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.512776668 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.513315151 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.512572836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.511735968 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516401188 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.514785365 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.512891724 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.514224266 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.514409042 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.512460479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.517947566 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.516470001 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.5159193 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.512473207 seconds)
  done (took 33.188600501 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.518079222 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.515444265 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.518772574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.515224158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.513658615 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.514388768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.514875796 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.516419682 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.517151872 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.524609998 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.523669013 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.523846446 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.524241426 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.520329347 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.519951052 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.520662801 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.521059918 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.515590541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.514484046 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.51511386 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.515167187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.516206398 seconds)
  done (took 34.784607169 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.519486254 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.516374613 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.510969546 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.517878175 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.515639572 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.518093529 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.51653094 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.517095211 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.516322654 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.512875 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.511549475 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.511967004 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.513861546 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.522999572 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.515774077 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.521032914 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.516742747 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.520503388 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.519754717 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.521128841 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.522890688 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.528292306 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.518730257 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.510895821 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.520616512 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.520093024 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.518155998 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.519874385 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.510268853 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.522197768 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.51975032 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.511695292 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.523459986 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.516540772 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.514475042 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.523007795 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.520880319 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.518701372 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.519894513 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.515447848 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.530647612 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.520781238 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.524961326 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.53009764 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.520642949 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.516434945 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.523919005 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.520510767 seconds)
  done (took 74.288185302 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.521613445 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.519913204 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.519744434 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.519231072 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.521763484 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.521872302 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.521770851 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.520012226 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.522024344 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.521733262 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.519947957 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.520923472 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.520563586 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.519468185 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.523263379 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.51955408 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.522692332 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.523301152 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.522325759 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.522048396 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.523531873 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.520377009 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.522779078 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.524295578 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.522360007 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.523193991 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.522494 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.522241372 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.524531488 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.522083178 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.523491969 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.524808004 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.523994472 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.522745977 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.524447524 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.525986645 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.521732777 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.525053851 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.523189744 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.521165961 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.523751204 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.522710112 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.524620465 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.524157069 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.522231217 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.52215597 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.523804043 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.524264849 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.524724862 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.523547009 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.524976857 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.524579375 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.524300005 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.525402601 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.523083672 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.524614077 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.524958486 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.523335751 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.524167677 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.525394624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.52566742 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.525083901 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.526949284 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.523964228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.525803064 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.522447455 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.524634856 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.528292088 seconds)
  done (took 104.965024207 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.52567605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.524799581 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.525930075 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.526127911 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.526664229 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.526255623 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.528547288 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.525458415 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.526989828 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.525642612 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.52401699 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.525941124 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.525566705 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.527621188 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.528704024 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.525817109 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.528855633 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.524968442 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.524979113 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.527620491 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.529679508 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.526296914 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.528136089 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.525308875 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.526665919 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.526350627 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.528057861 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.526598411 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.528960033 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.527859427 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.528010962 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.526548403 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.52835502 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.527615411 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.529511564 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.529049617 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.530399693 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.530150186 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.529363728 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.531209733 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.527318329 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.526898139 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.528454049 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.528590782 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.529669792 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.528622353 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.528369127 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.529080008 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.52725223 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.529581927 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.526803138 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.530481287 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.532063708 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.531618061 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.527399981 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.528561503 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.528394027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.531474078 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.531354249 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.529050059 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.529374279 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.529308387 seconds)
  done (took 96.127269096 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.529485703 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.529294875 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.531505821 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.529232656 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.532609847 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.530294087 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.530951421 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.531993295 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.528704619 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.531341397 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.530246456 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.529912735 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.53180968 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.530401991 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.530436057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.533012048 seconds)
  done (took 25.892468486 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.532990339 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.533459244 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.53182448 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.530932624 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.530870388 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.532656938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.533301846 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.530847259 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.533039533 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.532636393 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.535449656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.532045345 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.533165963 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.533535029 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.531806101 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.532831091 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.533226731 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.530873853 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.531030583 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.53269096 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.53371366 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.532460456 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.533038687 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.534747004 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.531485263 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.532796816 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.531316338 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.534567749 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.529950932 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.534298197 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.533983789 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.534255419 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.533643354 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.532871942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.531880897 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.533419673 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.534341789 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.533408669 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.534177737 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.534183616 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.533264705 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.533905427 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.534916834 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.533796445 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.534895494 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.533330757 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.534104655 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.534103738 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.533733803 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.535244301 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.533873389 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.536119143 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.534407542 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.534947978 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.53456453 seconds)
  done (took 85.730265333 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.534129044 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.535470106 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.537135208 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.535126389 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.534604067 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.53575341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.537597505 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.537042047 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.535770974 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.536881731 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.536861272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.537647132 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.536471487 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.537181588 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.537466591 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.535314936 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.537201857 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.535458092 seconds)
  done (took 29.058729749 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.532147702 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.536715305 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.534775545 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.533630148 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.535033724 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.538180573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.535987845 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.538419645 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.538126621 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.535401232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.537965377 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.539554191 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.539105484 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.536609532 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.538887203 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.538334444 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.539274691 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.535596284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.539711194 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.540080081 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.538746272 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.537515001 seconds)
  done (took 35.226259527 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.528106293 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.5288292 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.530405293 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.543414328 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.538580948 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.532549527 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.527491703 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.528214528 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.544670209 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.555915255 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.552678425 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.538397288 seconds)
  done (took 19.856678714 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.539115657 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541119913 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.536523881 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.538949799 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.53961595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.537065059 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.53793276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.538821908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.53844133 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.540130816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.538883824 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.539186025 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.538668738 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.535916392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.538496333 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.538101662 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.540155217 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54203305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.540569157 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.540107025 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.537998612 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.542196383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.53889236 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.540538154 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.539801398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.540539975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.54026472 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.543307642 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.539487419 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.539900348 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.539616722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.540985239 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541935415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.544236344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.542268143 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.544211066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.541462849 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541115688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.539896091 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.54112708 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.542202598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.542874953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.540327413 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.543634986 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.542186443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.543809819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.542116328 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.542413127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.544117924 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.54257885 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.543655784 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.543156428 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.543584998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.544291224 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.541968718 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.54334794 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.544166851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54026113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.543736532 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.542132558 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.542707626 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.542629547 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544353192 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.544938521 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.543813483 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544373538 seconds)
  done (took 103.132217251 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.544939814 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.544208166 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545623477 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.543174034 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544054291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.544081504 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54692703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.543537759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547876824 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.544338639 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.543161851 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.545789974 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.544243346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.544920731 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.544751466 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546024946 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.543894253 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54582233 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.545275038 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546136443 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546812755 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.543732608 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546053703 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546835212 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548769846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547885692 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545888663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.544628023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.546321267 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.545525639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547427329 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546165349 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547095603 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.545290998 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545306136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548206692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.546978288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547560299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547659406 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546475565 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.544985023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547557573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.549103631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548225971 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547702458 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548441496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.545993559 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547945206 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549540154 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547524814 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547607887 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548679364 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549073416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548442074 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550642855 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.549374893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548076917 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.549605486 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.54805425 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548260205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549633707 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.54931097 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549972951 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549985499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.54891582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549471586 seconds)
  done (took 103.505613437 seconds)
done (took 1971.604323104 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.538764549 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.537355898 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.538602113 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.591874672 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.539226623 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.213793059 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.20119756 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.539023391 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.540321945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.542391882 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.541809446 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.540077446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.944644434 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.540970986 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.542274305 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.534765768 seconds)
  done (took 57.843289102 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.576495446 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.589283121 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.692178227 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.545317302 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.575396474 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.769625856 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.613587159 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.548039502 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.754680293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.547905895 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.550575399 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.572220703 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.546600271 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.544275309 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.566275713 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.769553651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.846827622 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.550425093 seconds)
  done (took 33.576801148 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.090240442 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.562530629 seconds)
  done (took 6.071246773 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.569909838 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.548263067 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.547413708 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.545549199 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.535155003 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.535672869 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.544542999 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.543224994 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.552092347 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.693677481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.5448426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.561014381 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.547848337 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.549512727 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.554174841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.596432216 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.683981474 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.555192802 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.55383112 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.551857027 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.549222616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.728762066 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.598542676 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.555782575 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.69458475 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.539489224 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.57286036 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.561944676 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.702575997 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.558121308 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.547405982 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.546299295 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.547145165 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.54208619 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.116903878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.541699313 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.600840147 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.554535875 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.555590225 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.705203654 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.551179341 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.554364067 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.540917492 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.112764856 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.67412522 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.786410225 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.542134821 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.551466815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.553475094 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.704649355 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.550874306 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.548623612 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.615765661 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.546710144 seconds)
  done (took 97.899663825 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.558643872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.5383751 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.72819389 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.569857291 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.541161646 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.541862569 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.561737706 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890940912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.6004037 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.54286425 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.89483935 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.245146017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.547699371 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.5944402 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.589429797 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.582610962 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.543684894 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.539255268 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.543715643 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.545536677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.162145059 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.563500749 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.544661625 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.698138262 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.588552618 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.161433654 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.542588618 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.541996338 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.547352541 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.543399317 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.213891841 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.550143619 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.60113886 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.5455775 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.865025176 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.034828544 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.995801893 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.549078023 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.547961941 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.549703927 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.542488689 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18667994 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.020465547 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.545780008 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.550830518 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.18579259 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.548059308 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.54845059 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.55639878 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.819386497 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.544159285 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.54763743 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.543150484 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.545810432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.542222449 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.602059101 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.589020154 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.166161051 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.545155338 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.547330217 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593880827 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.547095628 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.55748148 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.54693231 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.547238 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.994381686 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.733577295 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.554248637 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.992956174 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.20959111 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.544572772 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.289115388 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.546501291 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.552539426 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.618877288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.546806132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.547041775 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.161436631 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.578287206 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.547266504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976503961 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.546387862 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.89969151 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.568435133 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.545008547 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.184249353 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.558406944 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.611774211 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.54701248 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.565237217 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.547005876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.553180022 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.87950166 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.569531368 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.546465044 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.548193092 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.558278854 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.549237317 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.550758311 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.549030474 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.30798003 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.553874733 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.54896504 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.550541662 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.553161926 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.548235116 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.549163066 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.549174299 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.835081115 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.54671294 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.56806067 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.549718878 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.632413682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.555268733 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.70222161 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.552834458 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.928649181 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.55671763 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.561186298 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.551421393 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.548409433 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.569699209 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.548534221 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.557241072 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.51574555 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.876173233 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.569174623 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.564563288 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.550869967 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.550356428 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.548328613 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.550977523 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.578062246 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.55357543 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.430620592 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.56148792 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.56527465 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.549627485 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.558893874 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.550117375 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.54933411 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.551406691 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8916123 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.875894015 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.756360496 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.554229104 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.550848553 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.435269325 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.604855294 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.741375933 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.574322238 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.55337155 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.857710109 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.745000337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.55059962 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.554011372 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.556024593 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.84563404 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.553008092 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895159323 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.258736413 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.555427951 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.564845639 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.434517727 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.313489977 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.553414451 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.557394542 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.885674219 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.572732393 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.554547505 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.552551089 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.550626603 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.55549246 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.559827224 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.560059091 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.555305225 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.553274962 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.666806167 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.755427035 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.573471354 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.560369839 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.19495487 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.562712265 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.56229574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.557617266 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.55970824 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.555251617 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.586094979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.559635683 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.599671748 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.555877016 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.56286094 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.227535658 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.560047122 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.557049035 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.756031801 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.385647048 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.557800779 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.556439923 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.556293311 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.589485747 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.221954025 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.622337521 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.961841105 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.562186693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.600215947 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.555457336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.584291006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.221132442 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.56055461 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.55406455 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.381457738 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.559307548 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.241880274 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.556179997 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.558777762 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.31694447 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.5584817 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.556726733 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.564535176 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.554500957 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.873508324 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.555508465 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.596127389 seconds)
  done (took 550.030405678 seconds)
done (took 746.839257579 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.554718702 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.556676749 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.560448817 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.55818377 seconds)
  done (took 11.661792822 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.57405369 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.564106132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.575550652 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.564629894 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.574990807 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.562793095 seconds)
  done (took 10.856015067 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.556186233 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.557088749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.55951499 seconds)
  done (took 9.10633025 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.810664259 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.56107238 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.986747992 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.571685413 seconds)
  done (took 10.366727673 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.571989032 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.576839098 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.575515369 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.573294402 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.574691682 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.576031117 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.576282218 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.573973708 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.575603962 seconds)
  done (took 15.610425056 seconds)
done (took 59.033187578 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.641446742 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.646515876 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.583925508 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.600939056 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.710347838 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.651677323 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.648890599 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.6481435 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.647431776 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.599223197 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.64372929 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.588752287 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.641421414 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.781894767 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.599398256 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.645478824 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.593319316 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.739243548 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.647855272 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.601632412 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.67030752 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.601016512 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.599700922 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.563742725 seconds)
  done (took 42.732472066 seconds)
done (took 44.169810365 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.596193737 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.663357464 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.5713698 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.570300361 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.571420949 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.560813216 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.589150649 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.571178855 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.584380637 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.585787507 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.563674528 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.575242491 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.585851901 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.580706594 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.602924025 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.571055208 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.568955799 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.580962067 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.584176455 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.58843486 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.572031497 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.574269555 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.597630275 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.569983564 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.577422602 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.580632949 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.576593031 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.565211818 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.57799797 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.585106621 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.578916607 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.576377477 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.58675823 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.58013754 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.572502278 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.582471136 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.574048326 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.663445213 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.593452532 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.584206956 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.580781132 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.588476584 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.578167778 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.577826073 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.583356555 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.601613551 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.582310944 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.589643859 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.580324869 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.580318879 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.593967054 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.583831731 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.579659835 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.578409565 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.579022477 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.587467428 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.580234755 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.591590917 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.578998553 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.577047548 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.605826702 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.594769662 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.58444221 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.579981185 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.580565482 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.587418126 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.58256929 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.590272323 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.57915489 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.575626708 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.577603347 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.578276371 seconds)
done (took 123.478225503 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.697806328 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.569861536 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.726852254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.580064051 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.746135678 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.696710476 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.58202538 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.583321091 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.581843857 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.387635474 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.58429473 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.580359066 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.575651183 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.58480964 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.704261392 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.582302527 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.579968352 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.288504143 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.584468012 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.709636416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.573765334 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.585028034 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.584275627 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.401713968 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.572240865 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.569792564 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.710440058 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.581359071 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.300405196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.570650546 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.5710457 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.298057155 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.707869521 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.601087865 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.596796783 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.5941856 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.746142073 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.588890076 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.701794352 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.702591708 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.729383383 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.622307546 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.570011612 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.57297273 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.589331758 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.587170756 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.589437784 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.615310671 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.579232171 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.584156979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.296626681 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.594409291 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.597411796 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.584921471 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.586776674 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.6073868 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.588952632 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.58561066 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.712333675 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.589695884 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.699550996 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.402206567 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.393182644 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.588050346 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.570389179 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.588793225 seconds)
  done (took 124.953044454 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.647717886 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.653435659 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.703682355 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.57845727 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.629949539 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.705668892 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.577314502 seconds)
  done (took 12.941810669 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.582438148 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.58990896 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.626938653 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.628902149 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.590278537 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.750696948 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.590273605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.588933885 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.586061583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.628191793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.585157422 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.586792408 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.596250832 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.579000805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.625954504 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.589632197 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.697906302 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.580467319 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.587336158 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.736500101 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.586714989 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.596011943 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.628481341 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.593706519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.587274493 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.583806962 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.339021887 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.589870951 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.588535617 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.589073464 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.591043428 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.647784479 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.592340265 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.580684302 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.589732783 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.696464077 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.588270492 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.588909212 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.592204206 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.584454605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.587336982 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.591839801 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.592882223 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.59101254 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.591291376 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.608216976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.592592896 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.590829959 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.589071421 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.589932035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.63567264 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.594671364 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.590843615 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.590855132 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.636747419 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.601118135 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.593263849 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.591020985 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.592163529 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.59222219 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.736899602 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.630221469 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.590768926 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.631187375 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.593577592 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.592501334 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.594265887 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.592645696 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.676458849 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.593538579 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.631347334 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.594329961 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.769186047 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.609024085 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.591558563 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.587269679 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.588318595 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.593666403 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.579029113 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.592042483 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.592997404 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.586724059 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.591533924 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.592861331 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.595362649 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.743732754 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.692783452 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.592500733 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.601696448 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.59202351 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.594182316 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.639015255 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.595173 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.594918116 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.637857316 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.705729311 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.638339077 seconds)
  done (took 162.412560342 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.601885364 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.600605223 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.590339957 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.611431584 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.587987755 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.587701935 seconds)
  done (took 11.034962164 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.589008643 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.599648138 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.593976743 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.597222545 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.594076579 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.596720164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.596690352 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.590244944 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.598375064 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.597380612 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.596554712 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.598507577 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.598021398 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.596639236 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.595302641 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.594213115 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.596208553 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.595796014 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.594889405 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.598701991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.588209068 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.598498107 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.600572429 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.592378971 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.601704169 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.597413045 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.61266859 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.59867525 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.594863934 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.5980597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.599401459 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.599835077 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.589225161 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.5953007 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.602109633 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.591030147 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.601829698 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.596610346 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.597932321 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.601156761 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.601576074 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.603125403 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.60020025 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.597511705 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.590968272 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.597471951 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.601328782 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.616182745 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.603350143 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.600877358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.601629078 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.600682545 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.597838088 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.603018501 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.595590539 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.59600463 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.606656669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.599626335 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.602668979 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.599232347 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.605946785 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.605675283 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.594624649 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.603139106 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.599517883 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.605093465 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.592387466 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.60418475 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.601115775 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.599428315 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.600558055 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.600542067 seconds)
  done (took 117.561150822 seconds)
done (took 430.343812026 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.987219052 seconds)
  done (took 4.450185198 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.837048492 seconds)
  done (took 4.299256864 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.612248636 seconds)
  done (took 26.083312867 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.651650681 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.587124815 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.597201917 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.591073502 seconds)
  done (took 11.885843469 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.278530932 seconds)
  done (took 4.739632873 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.59748135 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.60530926 seconds)
  done (took 6.672326383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.081891803 seconds)
  done (took 4.544202345 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.363324879 seconds)
  done (took 4.831299716 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.618397282 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.603736105 seconds)
  done (took 6.69301123 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.58251425 seconds)
  done (took 4.044240086 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.406950004 seconds)
  done (took 16.870269975 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.614152872 seconds)
  done (took 4.081413452 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.58970751 seconds)
  done (took 4.050319919 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.939076236 seconds)
  done (took 7.400694181 seconds)
done (took 112.104508968 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.586213724 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.587479065 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.586323316 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.584658767 seconds)
  done (took 11.807024922 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.668257181 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.666758722 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.67325147 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.660082383 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.659570353 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.669196512 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.627141016 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.627704461 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.658655927 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.654959992 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.672567949 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.660944795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.669640501 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.62799339 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.653384579 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.672078264 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.659430168 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.675683703 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.629650401 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.662262334 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.602970131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.665173097 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.65742482 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.604397053 seconds)
  done (took 41.140460388 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.097293925 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.666588108 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.747229934 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.646825541 seconds)
  done (took 8.621433466 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.70535062 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.710019932 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.728781579 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.762656465 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.798413543 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.722270569 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.628721621 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.62837854 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.613265662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.71170058 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.783579959 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.750534588 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.925346723 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.604836075 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.925042666 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.606051618 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.604413071 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.708840104 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.75874874 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.787934295 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.607779647 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.709058766 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.715858365 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.709163868 seconds)
  done (took 42.669878422 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.612951883 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.621598552 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.607847305 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.608041487 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.609310283 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.606817479 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.620068137 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.6089097 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.610571232 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.606430778 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.607718458 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.607695629 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.62270993 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.608670399 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.606917794 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.615210864 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.610601767 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.613642558 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.618654957 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.606675053 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.607929074 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.616081259 seconds)
  done (took 36.919405655 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.590382413 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.591179642 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.945472643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.847156062 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.591401497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.595068857 seconds)
  done (took 15.625763326 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.682889776 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.837533499 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.597639424 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.036015133 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.122217554 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.600251224 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.600035519 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.884762244 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.265257365 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.29994319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.672923353 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.680952501 seconds)
  done (took 23.744998696 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681114026 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.599977317 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.604098267 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659646358 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606521133 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.608231974 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.620385631 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156360327 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.609358354 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880201613 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612518519 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686558713 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.852698217 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.622253107 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.608617553 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.575391046 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834357626 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238961787 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610302559 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609443309 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637216911 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.622890565 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.615502195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856194026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.604635415 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.6061335 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.866882587 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.605236664 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957658872 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932455586 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934990419 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610985095 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880020898 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128540899 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712642479 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852346506 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61511832 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.605724751 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.610262969 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.618518076 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.62291219 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.60472165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923422163 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607239686 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602287183 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606808197 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150084147 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.612725221 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.603532757 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.605142894 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923330251 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689408315 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.609741073 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.603291018 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625155064 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608231546 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.60868438 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719719436 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242014537 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604815577 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607782971 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.610441607 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.59680855 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607728663 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347681916 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.611405083 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.608855799 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609744294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606498867 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.626471609 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627874352 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606684372 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.626062944 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605274669 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577286153 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.623094212 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60651864 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307697367 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622936783 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.608419588 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832775356 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605504659 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604919207 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.604210017 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.604710395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.553859203 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620040911 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.577890625 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641724713 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175611933 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858761523 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624816066 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636159129 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.830537415 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.580424066 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605612903 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.618203983 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607580289 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628745849 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151870969 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606136561 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.617374845 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855913993 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.818789729 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621898522 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.584707615 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181449235 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621847054 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.632849666 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.624940525 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.861363802 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.331355763 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937669349 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614729076 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646631258 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.608348723 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.626763979 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627803245 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.616235602 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.623850047 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925632135 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.582873068 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612985307 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681474581 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610478948 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608803489 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620329549 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609498498 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.609121001 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.842387336 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628591316 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935145609 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.61617915 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609379333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.625199481 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609833354 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.611625586 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.831758612 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626101005 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887530971 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60951419 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611675107 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610311497 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.829151148 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.619076757 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.619317977 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950373215 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625558833 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.61400387 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940014228 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650411154 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725193346 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646155805 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.611949212 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866596236 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.618377708 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.616715907 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.622510639 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.613498256 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620010745 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.621224233 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60042662 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345830119 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605570935 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.617717617 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.614016389 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.626207387 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686269894 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62023877 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863799338 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.613253277 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607417683 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.623918946 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.626909666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836643935 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93606591 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.631472833 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.785733252 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.187925784 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342225053 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627208176 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.611782474 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.613328598 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.613691493 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612864637 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614297313 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.612614148 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863541051 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942572992 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.613063442 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342434872 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617443537 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.634199961 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.620813967 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938527214 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.624558261 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613701193 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.627774012 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616574307 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616426246 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942005698 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839513813 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.631773031 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.61459533 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.132744447 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623223837 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.616944657 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.61677265 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643244169 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.615364693 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264132512 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957798549 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630015413 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94423821 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637368293 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.63316721 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.615773886 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633378813 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616623247 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.639386353 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630259967 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.869223361 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.61692664 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639511108 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253436156 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571653988 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.28852076 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624472901 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.616762861 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.62041099 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167377408 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617739592 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618717499 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903788679 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197440696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620252537 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201446734 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.632298586 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.544365729 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943682932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850710795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620811242 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.618707454 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968020412 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835030924 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643692378 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.626912897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621832002 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.596255492 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248376742 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620137026 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79785992 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167721808 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619453722 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.622322133 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.63763847 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.637295069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124014604 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.622991926 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619401804 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.636151704 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.62393478 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252602723 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.623936453 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621071123 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3685623 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633193693 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.176316456 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621197252 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874485625 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948953767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.931953141 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.623008367 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.633833027 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.866892246 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946983816 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625684523 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.630245067 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.312904364 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.481104065 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.628888545 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620406611 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.64029598 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626303795 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977374613 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.627245414 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.644118746 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628453896 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.623336641 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622240608 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.622067947 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.631108291 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615425819 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255942373 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.647631083 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637903685 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.627391103 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626808424 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873017616 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.63793843 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353793975 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84952244 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635904065 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659723474 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.630274483 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622432679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.59841242 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.624924933 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.624485731 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684684281 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.850252758 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.624027005 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.601818289 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654699752 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838370926 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.624275941 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.622480472 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887847328 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.623471574 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.649484447 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586094247 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654762688 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.624287366 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648824011 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.632425329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657218696 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700965806 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879134466 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.953031077 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.95790451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132994012 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649072556 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629193064 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.641203283 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707131458 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622921821 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.668674854 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.623641345 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359361202 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605416353 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366856412 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955517851 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.630296003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636383703 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626148254 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872124839 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.625438052 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902949406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626747029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.617319038 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64827221 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627960474 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630115155 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842588273 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900993245 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.626422564 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626642855 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633516817 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.626479952 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961900537 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.845229051 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275352036 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328805581 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633181098 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.633047431 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.186093885 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90360171 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631123119 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628650005 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628705402 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.630302732 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.651015838 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.638083218 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63033294 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851950688 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957848947 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164316754 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958398086 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.669204386 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.516128792 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63138557 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.877363094 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461058484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.886652317 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365109435 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489806007 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882906379 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704632891 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885015649 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.629603022 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867105534 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.632148861 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.629702012 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630025492 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631472768 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.628562273 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957833283 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367422573 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885046949 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.635046728 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.630929167 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.660895645 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.88714682 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.854996571 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.589038232 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855835439 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965760132 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.643545798 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.631669562 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383621768 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96504199 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634508829 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.640885557 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895840034 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.632475275 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667153049 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.498178047 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.63226265 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334499115 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.850507594 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654554172 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644661479 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488971082 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368340704 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.633421427 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270648612 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641028043 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633725462 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912574945 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.639585409 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.644413189 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924496396 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.639001111 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.643959253 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894433785 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.386377788 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.568981797 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.644083387 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644371077 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.638992972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635379497 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680210913 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638515431 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63727918 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.12843272 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.636402373 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633472073 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647236249 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.637986179 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644155497 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.637133225 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633769188 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.644311785 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.65628027 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.612715763 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.650048843 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756725751 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285851115 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638874879 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.249956095 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.972508954 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885657945 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645814037 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.61257246 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.64144144 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636865261 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634807895 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639747585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.637139047 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317846238 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.648353674 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.977487851 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645884348 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.84778503 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84910557 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637595486 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908123783 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645541316 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661197904 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.611742009 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638245425 seconds)
  done (took 1107.102459955 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.714849382 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.682792443 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.698015193 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.646008963 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.655033315 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.7601418 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.657024496 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.669159011 seconds)
  done (took 22.977914979 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.633069903 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.642264061 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.647513121 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.64426606 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.636863658 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.221262196 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.651428448 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.641774917 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.65763108 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.653042434 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.650478316 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.396038967 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.64613086 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.641136723 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.634372535 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.645106667 seconds)
  done (took 37.150494174 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.915651832 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.859364491 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.416362038 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.654741888 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.639672961 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.632033605 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.063335269 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.653986612 seconds)
  done (took 30.334479267 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.646761193 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.646397369 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.647763326 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.647849444 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.646098405 seconds)
  done (took 9.73356688 seconds)
done (took 1389.292277268 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.64719542 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.648635806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.648387266 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.647794381 seconds)
  done (took 8.092094763 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.615152325 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.618626043 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.61603735 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.628693224 seconds)
  done (took 10.978008699 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.081362164 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.334573706 seconds)
  done (took 5.916224039 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.644273402 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.408650943 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.394078065 seconds)
  done (took 8.949080804 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.964115738 seconds)
  done (took 3.466724795 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.048748469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.133970473 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.636183387 seconds)
  done (took 8.32473174 seconds)
done (took 47.225447451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.63292101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.405727613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.791686613 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.651510107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.796665118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.79166912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.918453564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.635156442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.635246377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.639959403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.649844688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.79761193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.908379908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.404319585 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.909919413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.405494389 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.796135881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.651697363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.636561981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.655070918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.919767959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.645187308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.648933798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.637281518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.802331444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.782131493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.651538247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.406558113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.643239449 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.635645196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.78518803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.653014276 seconds)
  done (took 91.427095194 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.636772848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.655999748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.636927604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.636118309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.63465356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.639102881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.637887305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.638761015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.637525923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.635646339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.634972619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.636936075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.658780781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.637488246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.6385933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.636618992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.636958392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.664324247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.638040676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.656734962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.640098975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.636969904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.636733855 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.656634447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.646018452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.640251852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.65192456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.638431007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.639645293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.6528349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.637741233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.63873506 seconds)
  done (took 86.049577415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.654285307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.637926793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.64058958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.637247886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.657735556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.640552739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.641304986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.638352172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.63903302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.659409037 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.64987321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.638889214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.641547598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.641245036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.639973457 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.641602427 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.639852171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.641839805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.641348245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.638800314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.642235735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.639910975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.642401532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.641227751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.645162295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.64067923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.655888708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.6398945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.658653371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.652473604 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.641819887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.655814744 seconds)
  done (took 86.122326076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.881856063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.655257471 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.659346488 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.649686433 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.661089991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.658778581 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.649916305 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.887820571 seconds)
  done (took 17.209941352 seconds)
done (took 282.31469057 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.648816811 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.655207993 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.682272924 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.649681005 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.673142566 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.67981093 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.889148782 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.679003449 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.878936273 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.65613763 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.669017913 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.656900144 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.631035527 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.804113245 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.645013748 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.676194672 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.646544134 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.643929036 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.66856366 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.909449011 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.680491511 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.644500076 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.653068851 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.652274234 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.627496799 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.730577349 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.729563933 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.822066138 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.782538024 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.726472134 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.646235461 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.655884554 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.653860819 seconds)
  done (took 75.55539016 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.650578548 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.658889473 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.659064922 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.661395179 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.660333456 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.658212332 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.651787705 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.661689818 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.659661359 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.659664268 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.661879517 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.662579614 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.66273273 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.659032008 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.661728072 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.639067036 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.651381182 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.659863721 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.65302796 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.639323654 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.659200051 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.659970528 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.662150508 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.660997327 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.660352755 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.661954633 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.661343356 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.66189206 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.662556101 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.659913782 seconds)
  done (took 51.256911694 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.661327513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.66422446 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.651839092 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.662894784 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.65319326 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.658078891 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.016776697 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.662339778 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.657434177 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.657634165 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.664441571 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.667532906 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.710180223 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.655003488 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.657717952 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.661726641 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.661777216 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.65466053 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.647929338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.67900181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.037609619 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.669861391 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.017073121 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.673545474 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.658800604 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.658128456 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.662559887 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.649053551 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.659047138 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.651145801 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.654841293 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.019072679 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.652076362 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.648949299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.666199224 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.670344938 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.664048766 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.664489279 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.660585871 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.65653387 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.030554665 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.664062826 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.658433474 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.652546006 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.66393503 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.667982341 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.655227383 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.655662737 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.981736983 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.669340586 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.652851891 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.666135119 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.668083974 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.663004868 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.976414621 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.669702308 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.657820127 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.652358385 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.671086371 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.01915864 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.670605829 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.660794245 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.654498937 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.659958049 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.653270167 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.663200467 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.67518774 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.661248357 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.672438312 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.66374601 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.653906788 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.667783573 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.669488004 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.654737767 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.656542427 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.654001286 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.662144058 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.667976587 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.65637699 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.041516907 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.667656522 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.65421495 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.033362893 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.665014058 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.671727917 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.671549621 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.669636992 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.734293533 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.020602011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.640481657 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.681587517 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.671400416 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.026666686 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.669738792 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.664250054 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.676222731 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.668916101 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.671243626 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.658712158 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.658438491 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.665334497 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.676357807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.656998534 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.670229457 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.025297251 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.668120796 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.658942329 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.667786266 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.737943601 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.671106582 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.678841213 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.669109704 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.033075885 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.668576995 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.671426529 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.655018786 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.661624668 seconds)
  done (took 239.244389777 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.659313787 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.657352295 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.65891516 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.659700673 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.658742965 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.666764779 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.658135324 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.660430284 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.664872129 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.657865019 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.660509866 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.668493472 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.663168885 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.65721246 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.671980127 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.655833945 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.658883402 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.684560533 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.659489983 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.659547592 seconds)
  done (took 50.76457157 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.673380513 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.364159527 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.337370259 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.674915627 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.67665148 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.665690758 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.735850621 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.677820889 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.67477885 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.038378301 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.885207297 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.676734443 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.674290941 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.67317095 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.338905734 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.677314428 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.038869498 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.363182384 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.674034885 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.365008167 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.675984607 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.676979929 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.665433089 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.364519794 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.04824309 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.027019594 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.737460882 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.365313226 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.676734755 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.67612296 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.36527931 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.676714325 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.668399225 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.354813352 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.675601455 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.689156472 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.673822278 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.737379343 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.743399606 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.045918081 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.370840481 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.0385442 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.688704226 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.873830172 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.677397626 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.652783513 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.375896584 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.677899984 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.651662451 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.678966346 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.681506575 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.352568034 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.670856312 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.351948679 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.679860526 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.677115051 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.366806905 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.35548631 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.34706054 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.893147953 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.675700943 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.031529113 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.680544931 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.379973171 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.680321536 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.679674781 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.6807935 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.898112718 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.376729072 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.034228104 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.046026079 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.043826144 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.681660252 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.756114399 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.682353456 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.046465528 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.751295286 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.114245841 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.050209 seconds)
  done (took 152.308054213 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.008684096 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.784928754 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.124175828 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.325565006 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.249832683 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.823805256 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.806401129 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.953894879 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.700128588 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.781902583 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.459002805 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.776953685 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.519750622 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.753443462 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.798040265 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.814215845 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.152429684 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.691229553 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.396856515 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.432483631 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.674326649 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.787658344 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.504271104 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.106901319 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.688467205 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.505021915 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.689961896 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.27575757 seconds)
  done (took 63.114208561 seconds)
done (took 633.749966358 seconds)
SAVING RESULT...
DONE!
