cset: moving following pidspec: 31449
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.303570795 seconds)
loading group "string"... done (took 0.588988738 seconds)
loading group "linalg"... done (took 7.157869227 seconds)
loading group "parallel"... done (took 0.166062695 seconds)
loading group "find"... done (took 1.118772858 seconds)
loading group "tuple"... done (took 1.974448671 seconds)
loading group "dates"... done (took 1.262194177 seconds)
loading group "micro"... done (took 0.234461679 seconds)
loading group "io"... done (took 0.962569172 seconds)
loading group "scalar"... done (took 38.256426552 seconds)
loading group "sparse"... done (took 12.310381664 seconds)
loading group "broadcast"... done (took 0.964744182 seconds)
loading group "union"... done (took 13.044506961 seconds)
loading group "simd"... done (took 4.402413385 seconds)
loading group "random"... done (took 8.920744433 seconds)
loading group "problem"... done (took 1.924959577 seconds)
loading group "array"... done (took 21.092795944 seconds)
loading group "misc"... done (took 1.915931334 seconds)
loading group "sort"... done (took 3.191960462 seconds)
loading group "collection"... done (took 17.883000092 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533625483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142532446 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119500799 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139478257 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185947554 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133659893 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14590129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085858392 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.058053789 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167556577 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140685483 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478866043 seconds)
done (took 5.096119319 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204811889 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088490048 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096846101 seconds)
  done (took 0.88785111 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066604719 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126796574 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081372683 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06929506 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067605815 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082465743 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067999766 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067383731 seconds)
  done (took 1.274637394 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075318448 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069824872 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085180974 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069079612 seconds)
  done (took 1.008752208 seconds)
done (took 4.162957451 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.900974054 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2390637 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192486449 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454305547 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149159358 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190463073 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657649502 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319372964 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213407748 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102338405 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10704716 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378754751 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108017573 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653250544 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076879917 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106412711 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163915123 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429195526 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081844517 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083662596 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10430446 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142231453 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101686574 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078374354 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169330815 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071329134 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148732651 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096254606 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070531093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.247167191 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191089103 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677339581 seconds)
  done (took 10.46463491 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101921436 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118232884 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070901078 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140501327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104890125 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087855235 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072261279 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084342296 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093310576 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.16048852 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116723622 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107958503 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082287058 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070879737 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101989549 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213335393 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111052126 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087830985 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088379624 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076802689 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123546633 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084521538 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095413574 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080379523 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153723352 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197815174 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113154263 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114222218 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072440216 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083126117 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132319251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144461928 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069067693 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083964902 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142489219 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112884964 seconds)
  done (took 4.61391284 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.030312583 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161799628 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093254367 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153520933 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.131807794 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081769114 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070343864 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1284049 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066658606 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102409265 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248619048 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.147512184 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.477559781 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129249376 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088872295 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068712566 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086941671 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068151492 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.512625653 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14663167 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103083367 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10469006 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090806422 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071695768 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3589057 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068886194 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067948358 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085598084 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061520254 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145889702 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069164384 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.214832855 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090397184 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088804757 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102890171 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197827145 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097448799 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125515185 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067907975 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08282008 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170885292 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076312457 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067678106 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107385522 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11949436 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106373193 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085150511 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069113183 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181392768 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068149558 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10077106 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.896497921 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167426621 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081047735 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073498958 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289431405 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085040379 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08580842 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065922484 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258504471 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069211178 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152049701 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085489818 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068431712 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066761038 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086299187 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367792371 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069433648 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.014795025 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073106779 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080839025 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08598495 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068842916 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089553738 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073107544 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101782969 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067495066 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069314658 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084350472 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068028566 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085415131 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086590562 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08100644 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205627089 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068042342 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067755172 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083616611 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087170097 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113378079 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072769396 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082547669 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101215081 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084419674 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067938787 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119793112 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067332601 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103956442 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086025981 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115124297 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084772647 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145967325 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069367414 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112743305 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072771997 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114499812 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094622921 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069576087 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153928321 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065772822 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083007979 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068523181 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065734877 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08534467 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070214768 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098919027 seconds)
  done (took 21.35847766 seconds)
done (took 38.17887857 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291237794 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092214843 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091302249 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075446809 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092590595 seconds)
  done (took 1.439232761 seconds)
done (took 2.201092939 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121759982 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116920827 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064362122 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11339326 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065167293 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116552427 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114539716 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082804951 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11920945 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065553101 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113515135 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065435544 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064788951 seconds)
  done (took 2.021048272 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086963623 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08796451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086768464 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08241324 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07945949 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083539678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081598512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104971736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082117226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0892532 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066060261 seconds)
  done (took 1.692330106 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085939206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086018216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087168642 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081875156 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079396857 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083558382 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081491408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102807193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08176249 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090256287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065530819 seconds)
  done (took 1.689369446 seconds)
done (took 6.158003507 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081553741 seconds)
  done (took 0.840015786 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700460264 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.484791571 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084856364 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134699895 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221762283 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155942224 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.436470929 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110224271 seconds)
  done (took 10.262577973 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091833859 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100596333 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073448013 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08840075 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070068317 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087174124 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073602342 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070913069 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084925326 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071338782 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087576544 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069650195 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086733384 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071551443 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073802754 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087996652 seconds)
  done (took 2.114642245 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095081886 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092339407 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091318761 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077752933 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090982352 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073863666 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09255735 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076187395 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087541353 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074958614 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092251833 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076552225 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089077897 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067244965 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092703307 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077660498 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088180964 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076915728 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092552893 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077777841 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091865212 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067371629 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088793531 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076890963 seconds)
  done (took 2.879569772 seconds)
done (took 16.860466803 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133393031 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077468062 seconds)
  done (took 0.978024679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084626217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098419157 seconds)
  done (took 0.956908752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085390536 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082230236 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090536764 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094113529 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082193249 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068074438 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104829545 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068651916 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08174567 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067100317 seconds)
  done (took 1.597316963 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071103686 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093746913 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071667899 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098264205 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076155103 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081960486 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075251026 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085306417 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079992865 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080509009 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074167297 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099072118 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072786123 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101006652 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074857717 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085931794 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088321166 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068807131 seconds)
  done (took 2.252268049 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068499727 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069268858 seconds)
  done (took 0.910457293 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070707018 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065492948 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082887912 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069042612 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080210879 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06496973 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079604688 seconds)
  done (took 1.287163248 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400585591 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109381611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.24203399 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088954206 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104469658 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262841506 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083992159 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072960456 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088607787 seconds)
  done (took 2.26312712 seconds)
done (took 11.01813957 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083109046 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087856764 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11109115 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4192288 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107414226 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067829003 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142398279 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.208119977 seconds)
done (took 2.002977703 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127380062 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616038385 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401020551 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211999273 seconds)
  done (took 2.008719322 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.375628885 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092768487 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07451192 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06809636 seconds)
  done (took 1.393714428 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06817047 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071499694 seconds)
  done (took 0.920978913 seconds)
done (took 5.229721349 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069907015 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068393232 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080790564 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067301041 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.101556166 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065134164 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065650519 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084711304 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068038732 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067749305 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08380791 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070625267 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083917092 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065744525 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066167691 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082633703 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065773883 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065852125 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082706851 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06558672 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065765888 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082548416 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0659105 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065012457 seconds)
  done (took 2.570630496 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089362801 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083701158 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073631079 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088844007 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071974881 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089185765 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073536348 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068165923 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089037247 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07111334 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087730364 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072322537 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084496732 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072508901 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085348658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073013396 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089294325 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071353473 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070462888 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087911677 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073240129 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084218038 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072668748 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088267238 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072215444 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086315159 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071377033 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083815839 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072922859 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087533442 seconds)
  done (took 3.171053363 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073575569 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065186374 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080953246 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072214661 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065396662 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08210725 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065414025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082060926 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067206815 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066011123 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082323878 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065723024 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065858207 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082355573 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066794169 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084462158 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081745872 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065578329 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081457342 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066487478 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068463296 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081538269 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066519977 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080916892 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065140365 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065068821 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081393136 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065739359 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066731957 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081763862 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06841629 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068997357 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082059934 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071381794 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084391538 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064898116 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069288094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080683914 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066494569 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065832163 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080505476 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065950638 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064936558 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08727137 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065975228 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082896165 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064889793 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066654256 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081462263 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069377137 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081285177 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065783248 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068025952 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082417367 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069884795 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065677643 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081633309 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065851016 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082319607 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065465319 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064861854 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080645869 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06805299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065962133 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09680219 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07235648 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082019498 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06753267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0670289 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084477597 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067590268 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079324409 seconds)
  done (took 6.049316766 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119204203 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092829015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083927326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067830795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080111837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065119081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069387083 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08167786 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067669086 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087478652 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06644343 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066670417 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083173519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078719559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082083312 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067493491 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088051091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064154595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066613339 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085270305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066484074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085421115 seconds)
  done (took 2.508639892 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188769125 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08897646 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110752842 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090920932 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086022969 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075890941 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087474147 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071702246 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073096484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087214936 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070759608 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087074726 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070102874 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086161938 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071225747 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085239768 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072348402 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085979814 seconds)
  done (took 2.381636817 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081326099 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068105128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107355592 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067762914 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08471237 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070894914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088996509 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076745066 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085744626 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068716332 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091818329 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071613198 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086449547 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068213884 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070011835 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083549993 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070631343 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083671852 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078194849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08892352 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07398148 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091572006 seconds)
  done (took 2.549185345 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085710204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06982375 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101180215 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08733436 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063815865 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066878059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090118943 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068162133 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089737327 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069695724 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068332499 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082412416 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073679535 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083408013 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073099993 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084392482 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069387681 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068340379 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085199404 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064696458 seconds)
  done (took 2.336919267 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091519239 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085188424 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069607322 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092599787 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06893437 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085685998 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077887624 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085298752 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069200752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109677707 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070187386 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085547864 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077943053 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090068684 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069431163 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092554716 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076798265 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093230193 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070271047 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085346135 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219569227 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069240863 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092915964 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069681669 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084251036 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069817836 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070125398 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090104599 seconds)
  done (took 3.211075238 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069595281 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068082352 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081601156 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064823335 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06631686 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082012113 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066531932 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066418738 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084598127 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066285623 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067933113 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083659927 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06815576 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084003051 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068227088 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06824787 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083403013 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065865029 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066422459 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082376755 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069129175 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068809509 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084296559 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066246665 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081496761 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067857755 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066482427 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082521047 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068392278 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066506154 seconds)
  done (took 2.973170414 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079105414 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092717498 seconds)
  done (took 0.971585483 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068765917 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08383703 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081752927 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072209894 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088253511 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069398995 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092383874 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072619585 seconds)
  done (took 1.427327155 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084771362 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081556887 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085667425 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079896481 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09524412 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084219603 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154238561 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085479908 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075139573 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082823034 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082412233 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067129207 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090743296 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068466927 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090295702 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074554957 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066531139 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089785087 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071203884 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082870956 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069962388 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093360371 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070664939 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065128019 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085590181 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077513433 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094420817 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070069144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087204577 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075469156 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073109259 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078771615 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068675542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084793067 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066677345 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094671629 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083458827 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087213126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07721509 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069567913 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094582294 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064338003 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08842989 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074174632 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093507145 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069181268 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069240891 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079982464 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067214141 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085852671 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064808534 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069111995 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07989944 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075494288 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087863101 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078748172 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07009719 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085833082 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070701495 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087228172 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075551303 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085665465 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069823875 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068735208 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093769113 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07309656 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092967831 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064462416 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062207123 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082857039 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07746454 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107377356 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075397026 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085440879 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070376981 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082919051 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071455633 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070630826 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089690672 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075230152 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085211801 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075196037 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091489616 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068566544 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071163217 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093248186 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067147733 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086487478 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066742454 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099945348 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068678182 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082265767 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065939887 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078587854 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08721024 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069479432 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082386259 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073880014 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063038142 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08542248 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069771857 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084947389 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079202616 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089331273 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073423641 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09273671 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076786142 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068232456 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087811745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065698363 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086391867 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067116964 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075369853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078304519 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071291411 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084600202 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069608643 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076500519 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083497753 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068594845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091172718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074110476 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083352917 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06569972 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071220933 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085242562 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072654939 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092494282 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06701091 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063666291 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080624056 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072177998 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085311078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071703632 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089438085 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071263807 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063471623 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08216269 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073078326 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092730306 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069682226 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068225882 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0912241 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069619278 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083448155 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075174647 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087154321 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067030296 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073982474 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084982183 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064287941 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087751032 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07050216 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066982035 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087849422 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072681982 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086885351 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069838442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083902532 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074031358 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069394961 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084170611 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068191333 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083275983 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079481023 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070363836 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080019822 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066140534 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091965822 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066137588 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068241905 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083567045 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070714313 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086053393 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067003587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067664262 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086391441 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079199124 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089913825 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069196067 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089314775 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07963047 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084377373 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071154561 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067748158 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086660144 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069934159 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092912182 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073312178 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090490077 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071090389 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065214098 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090346161 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075816426 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083636552 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066268119 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06672181 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088273516 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074434042 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088627683 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069283987 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082831484 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069383921 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071981316 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087536909 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068438324 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083504222 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073182473 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083953065 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075062763 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069990247 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095114078 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071314228 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080825157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073386461 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082536269 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073675951 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064525314 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082957767 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067491343 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087068615 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067041282 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071008243 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079006748 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075464654 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09203522 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068821798 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067915742 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085049558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075402721 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085952491 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072044353 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070796973 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090800091 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077748677 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083838636 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071573171 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094670722 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068942641 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062946302 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090465706 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06802394 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084470786 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068314327 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066440487 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087794896 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076550602 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091541001 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064047253 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087193639 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066182646 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067347462 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081137391 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073092489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087188109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068657532 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075024969 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086578482 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070147021 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089082624 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067782394 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068992878 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086078892 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071956683 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085964206 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071279396 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06672473 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088087181 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067106957 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083515997 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071071134 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068585047 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085132587 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073617572 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084620393 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068731498 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086277704 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069620341 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068927023 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084713083 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068519037 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087972015 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069330083 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069160182 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087720864 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063637566 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092034898 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068401877 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075942541 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085322107 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065642078 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090419644 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070868795 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072407394 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086472729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070084298 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086415131 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069142632 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086797603 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075507201 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06634282 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095173257 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075768101 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085576589 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071526465 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06757322 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086503499 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067850088 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086307081 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06956492 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068322241 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084878847 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073544031 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087183303 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069348376 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069534165 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086752317 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069409315 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086268183 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063951604 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067545432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085444329 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068672897 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094817803 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069668903 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084407956 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067768602 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069604903 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083801035 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065894638 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092476577 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077281407 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086110048 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075522248 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066425285 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087106203 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078444017 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079949107 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068035657 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082544744 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066273038 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076040296 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086248616 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077523039 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085026942 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068303127 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065596985 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08631406 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068117441 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062694048 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083229338 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072074759 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084759501 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067287375 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067867809 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088745616 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069671366 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094281621 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068040378 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086419754 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068706429 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065439201 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08402408 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067747513 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08834538 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069044595 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066568954 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083078353 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068506967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069123775 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086198176 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068390082 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086682174 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075395015 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068023569 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088508085 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071789948 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083250289 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071151673 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085556235 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06844129 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067787732 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088333818 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072374422 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086458137 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076894078 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067848211 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085971637 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068513895 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083297701 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06906995 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068059344 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085771149 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06810522 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087067667 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075721248 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083385835 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071827959 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069004809 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085473435 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075989443 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086464352 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071287809 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093136418 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068661759 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069703052 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09356079 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072781732 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088322954 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069762512 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069595657 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091421113 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067137428 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091938114 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069321383 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086162651 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069643232 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066609607 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084544457 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069008589 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067922043 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091086268 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069474913 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084215066 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068079639 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066520305 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086437431 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072455659 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092565594 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070890412 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088765488 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064540149 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066702325 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086563537 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066618542 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086803481 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070839617 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073652066 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087788766 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068804779 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085347509 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078062181 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090480415 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071943611 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066384269 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088848964 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0704946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087340033 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069300585 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068886646 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086941573 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072865759 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086643504 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067955131 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075407546 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088506454 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070474812 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087613187 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069538501 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067982189 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081177045 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069987402 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087091635 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073969627 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069920312 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085535955 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078844407 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083502903 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068694818 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088646801 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068457945 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072516484 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081033502 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070740728 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087093644 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070868617 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063079066 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084659207 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066683945 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087906243 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067795954 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064562197 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095120116 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076812717 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087975424 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068308574 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066530706 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081141209 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064087153 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084787325 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070453629 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069616679 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096400035 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067502087 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084728025 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064593956 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068289336 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088951782 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071835549 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083290367 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064552431 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067297537 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08863193 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074799894 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084183981 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069013891 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070816425 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087475357 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067000906 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089582647 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06600985 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071047467 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098254295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06920738 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086054248 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075246591 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092684169 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069169797 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081325035 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069267751 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07097137 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085710212 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069708281 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086609289 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084412482 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088637717 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067594694 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067889716 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088320664 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067582141 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092850139 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07041882 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069650304 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090734398 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070104647 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094046616 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071584721 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093459162 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072133029 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088284343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067599384 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069114357 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084074912 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068103238 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06944205 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087895129 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073327058 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094320949 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067372765 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095823005 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077800088 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087932833 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065873595 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067315477 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084743559 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065239485 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08659224 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066681885 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067082113 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084240007 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068358998 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068885313 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091291549 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06936503 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087532132 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068852538 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06314908 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08831953 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0706595 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086404654 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066321279 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06886627 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086918953 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073385766 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089215137 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066677572 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069498182 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088190095 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069513265 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081550528 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074938705 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066663499 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08790271 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067909242 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085808543 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069785209 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071514088 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092041324 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068950694 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088421128 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077108082 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087874686 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066561154 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065165593 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091254302 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066857006 seconds)
  done (took 46.973601114 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111175028 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084445449 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064539337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081859967 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077120889 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083805857 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063790003 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06499108 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082586483 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067624006 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081568799 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064546425 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091202755 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087968888 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094727845 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068150038 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081932425 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065899542 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081839521 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065830542 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089939169 seconds)
  done (took 2.502357811 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078598082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092049118 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07463782 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095879869 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070002352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091506799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075917386 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090047622 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096198014 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069835974 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096130609 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072894466 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08645811 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070362403 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08725761 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073999031 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095288282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071010503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090470177 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075787583 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09019921 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076625034 seconds)
  done (took 2.66319306 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070416404 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069377843 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087240409 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063776954 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06753329 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081444987 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072726589 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084109008 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072223877 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075018205 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085089333 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067130203 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087239714 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064108837 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068117294 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083634973 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130730888 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072712928 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067686771 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087825558 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064153083 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087741349 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06407513 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064586809 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084343347 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071750491 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087054028 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06696112 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067149312 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084717038 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068057983 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083326424 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069932672 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069232662 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084568333 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066784764 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067751628 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085567308 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064204339 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083664216 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067877746 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064100192 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085770625 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069398626 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065196547 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084042604 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069352973 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085711513 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063413605 seconds)
  done (took 4.547207982 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089480364 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131021223 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087995357 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092057769 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102508807 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094682915 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072474059 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11090051 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065654628 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086069427 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084209413 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105345958 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086676864 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073037717 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092548289 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067985787 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068951501 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085429802 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07285993 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085599948 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071752317 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091489793 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100188225 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082063366 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089848038 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068069028 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085501521 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073570487 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097991792 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073117027 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090269172 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07456658 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101143994 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073625304 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086260184 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070491989 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103749976 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085332456 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071605814 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065868644 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088403589 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073258609 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092648491 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085733407 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087223307 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072968517 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086820819 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065359382 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099561506 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070078169 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094400467 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102066042 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07288996 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086130187 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072462979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101910508 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068943008 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083621039 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071507644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100015212 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066977675 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089483695 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083268782 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087851156 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075914597 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101103404 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073371144 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090216448 seconds)
  done (took 6.72722197 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079856947 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092050101 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083248446 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101091646 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092833517 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074932827 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091766597 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075434766 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091784499 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079725212 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092498608 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113972999 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070231573 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094723071 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074504646 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09322519 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075311881 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093072041 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074859632 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094246222 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092950054 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082731016 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092564088 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10215456 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105575599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088246869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075151524 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0933582 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084095111 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093804452 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104322462 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075724554 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092636667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100790894 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085980643 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09272112 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067729774 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092115599 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074999737 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092618163 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07021331 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101523105 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074383175 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087747733 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073695646 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093065853 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099862997 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086819029 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096319896 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098202132 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075562753 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100315017 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073922237 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093473455 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100559034 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109235086 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102513691 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100473822 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075445369 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101628077 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100203179 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108023939 seconds)
  done (took 6.407048033 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091142857 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096486232 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.0982311 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064075872 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06663728 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090363178 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066777927 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084463383 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077340268 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096594921 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080778223 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09006991 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075220185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09809321 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090640087 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076406916 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090257233 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072757512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09449064 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073157207 seconds)
  done (took 2.529197108 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079449711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103536781 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069972088 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074196137 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090220898 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074073205 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088985141 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071458104 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087604547 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071239773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096781068 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078821753 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087862725 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075071352 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096343774 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07448787 seconds)
  done (took 2.180545124 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083524154 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096524701 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082652017 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087689466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06730186 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084048169 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068441581 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064238071 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084092879 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082590184 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087554657 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071073564 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086811035 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067003075 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06473024 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089621048 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065344047 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083872978 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068075259 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101223098 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080567275 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085046178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06973465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069309079 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087322066 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073297891 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087165705 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066842532 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085425418 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069203128 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088322929 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075782334 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083199229 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066949775 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066982224 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084207155 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069420758 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08628305 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070806643 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067262838 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084409323 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069247028 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086547917 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070104615 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082699933 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068497044 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065222973 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092991832 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06682539 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087705524 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068579302 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089110228 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069424753 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079189496 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091605332 seconds)
  done (took 5.153442491 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084329698 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07158779 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083089517 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066882545 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089221646 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070548199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070732557 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088604537 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069678352 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084589383 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070951336 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089615012 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070792384 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070972917 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088732139 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072443651 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082481928 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069794181 seconds)
  done (took 2.259270297 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075903732 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068553297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09332452 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069155512 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0865928 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071097545 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063900674 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085631186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0675344 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086136176 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068912616 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070152888 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085382978 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071202907 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086237291 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068978782 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071058018 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085441897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069143478 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082601882 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070218495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066294584 seconds)
  done (took 2.530153751 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076283104 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09618493 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163014311 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107661475 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084210448 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099335123 seconds)
  done (took 1.494479034 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094477663 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099553903 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069468484 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108117998 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076644257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089019381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070757901 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088438712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080018774 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102051394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071405123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09691765 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097194122 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079924488 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095068618 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077000833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089543977 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07032313 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087064185 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1078068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071190306 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097372485 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070956591 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08797832 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071391651 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09758295 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078712033 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103203652 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088604515 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079199403 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094882015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070423142 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097416655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102441026 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072277165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097964623 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071315922 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107413764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076880279 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096972326 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071287958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095844101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097472069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076774464 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097374563 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070905348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094111091 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070203673 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08984555 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113636785 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076833088 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097443404 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095064188 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080887541 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098500895 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113654123 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083961719 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097579647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095589696 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085176968 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097624611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076074184 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099113155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10287562 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07709356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097837281 seconds)
  done (took 6.708203004 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090092211 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106732628 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071082799 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103450228 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097564153 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070241391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08907047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0712199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089275356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070186262 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129578905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070583318 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098677377 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097840303 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071402966 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089006126 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070182538 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097300793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070949202 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113609707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089538174 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079481308 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09817839 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097441784 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084674204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095575761 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071980361 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089524009 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070682953 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089651424 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075759718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090273918 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098069702 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069728997 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097939199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070667964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089029014 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07657784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089614098 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075784999 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097902196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107055967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071077065 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089484424 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083680127 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09049896 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070098195 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089980254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06984357 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088663966 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085264512 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104394692 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10266705 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098079037 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071180076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089777948 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071621418 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08901474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07127742 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095238789 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079735379 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089044799 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113782216 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071357447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090100647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079117422 seconds)
  done (took 6.60199448 seconds)
done (took 130.211183369 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204767375 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185510545 seconds)
  done (took 1.261345938 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072188288 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097620347 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099204828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12960395 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087153901 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102985042 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119123137 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080619329 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06835958 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088094355 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068682811 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089306542 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133465713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068353744 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087608333 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070374904 seconds)
  done (took 2.336001459 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106906164 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197838704 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110791708 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067829829 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101776558 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081016483 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086448948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078559266 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094942693 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068128362 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079223222 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09709855 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067391423 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097217409 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076875395 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098019546 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067188012 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098406931 seconds)
  done (took 2.555164542 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108295928 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14201426 seconds)
  done (took 1.127998403 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204353893 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123585635 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202096775 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41598676 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208160498 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282409523 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174060692 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173295391 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157117827 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169327734 seconds)
  done (took 2.982560354 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101883921 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17212697 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310873046 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138338726 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088571196 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116947116 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139518028 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090963534 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102718951 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100360469 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082050986 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098502358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099281185 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097197296 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076504603 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098580125 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12206907 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076193737 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097740904 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077828727 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119338209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068622704 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076917549 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09560242 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079021421 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099626115 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067437989 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087221532 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078048071 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095916196 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080581044 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115772137 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098317818 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132155437 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083801382 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132092832 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099562146 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074652473 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096408071 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07468313 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098463423 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079493543 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105305975 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097471155 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068702462 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079172439 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086977116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069360735 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100040578 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079399587 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100371699 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081174433 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130884524 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098766008 seconds)
  done (took 6.298094223 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.747945996 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11150574 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095037988 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.803907808 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090398884 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106984125 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.708923209 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118285526 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209763329 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761844415 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090740252 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099440061 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18227301 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23435474 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878542145 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28258657 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630982079 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105470252 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109690007 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131762279 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141678996 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176211197 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151528249 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437189044 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075915964 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093952503 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136829228 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096856054 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141600645 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085958551 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093806899 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156276182 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225573054 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156343618 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097024244 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071029139 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091557013 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14953238 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242201557 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.172191468 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159368968 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06969734 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092484696 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141781265 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131746376 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06942746 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140574325 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175330761 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148823578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074793625 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096210501 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142614746 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139092039 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.144751557 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101688232 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.271577639 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283740271 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091589753 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100063859 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104791842 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238650891 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084809021 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200746559 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14052682 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170496491 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09191405 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733081038 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1493077 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092408583 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074777086 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119597688 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096203706 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138635563 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144410423 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370946925 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14349877 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075408762 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090974842 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208503676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104946142 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072126032 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141781753 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096055699 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101286076 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165123069 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144067881 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14761013 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207705348 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143405395 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160491082 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075972407 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124663086 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076142346 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212696008 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.172781496 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141477055 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210202255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141599385 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.143625434 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14742677 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097044414 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151799775 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120376552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082200582 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139208516 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192543624 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125523474 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083251404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095487169 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141382758 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126865724 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08569379 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160024977 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152366282 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460277014 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148051186 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089574851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087415438 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141865781 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162521801 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078034718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235752552 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103151214 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166967178 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121245697 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069839393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121150573 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143645999 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080101025 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123260522 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160131059 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079038038 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214905616 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.193482192 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079857436 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21850863 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165990538 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076680636 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150967331 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120672929 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145625855 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098404 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138597466 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076696379 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773856171 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144313599 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12172514 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07398652 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176241915 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091533743 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083677807 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104178105 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0694252 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772720827 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085617694 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102967677 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103927376 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076275276 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122276055 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137728916 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093788201 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139639034 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18398794 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09836488 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119203527 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083895901 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140723024 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097637529 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105423985 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085585121 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105330743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122655251 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075203632 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103605589 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149841753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145326925 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198006447 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.549029046 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072987148 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10666726 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202787198 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072806049 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264128429 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139182115 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201561387 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145047718 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083510683 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291407836 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.145593277 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176161048 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086430889 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172935142 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070942421 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138242591 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144313196 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091630849 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076816795 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140618184 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.16386036 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144405165 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931660765 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072464683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204923648 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068375606 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1734809 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078410482 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097346037 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241926786 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092887951 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148709428 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.144324575 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094729318 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084875844 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679756244 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10626844 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139896529 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09639561 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17667855 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144744414 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162566873 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141916124 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078828587 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.142563657 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212453887 seconds)
  done (took 40.655851459 seconds)
done (took 58.094015253 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259684057 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177596378 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242793744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144388078 seconds)
  done (took 1.804529267 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149847469 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105414607 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118590517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086998817 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104957936 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087509609 seconds)
  done (took 1.554731475 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408157556 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266145879 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230139472 seconds)
  done (took 1.805099914 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263846553 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215418512 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445565551 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297886713 seconds)
  done (took 2.256186074 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.178986608 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11352846 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069520795 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106917246 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160177187 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253152643 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128185014 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188984536 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080977664 seconds)
  done (took 2.232829696 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197494109 seconds)
done (took 10.753823649 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106928304 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.244035601 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076363627 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.196029432 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.241056834 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 0.174756478 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077531639 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.213853807 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.105381492 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130561909 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074219042 seconds)
    (12/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101947775 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.159820883 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.183967614 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080012263 seconds)
    (16/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071563071 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097155578 seconds)
    (18/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.196027839 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204199088 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074140643 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159363026 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.17438326 seconds)
    (23/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.18885394 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106586474 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.170067095 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.221337757 seconds)
    (27/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.132205192 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.179417804 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074619707 seconds)
    (30/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.183501732 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075022683 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100582596 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229246211 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069466372 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.097045018 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097144339 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073987799 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10289106 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116819909 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.107161269 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.14887 seconds)
    (42/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114022047 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221019699 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137587546 seconds)
    (45/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116484672 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.210776431 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07453083 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07568969 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096841748 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06428735 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162995132 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149630826 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101284633 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067733925 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109049665 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112361736 seconds)
    (57/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096885721 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067999512 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077462597 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09191891 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070347459 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.194024558 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.229446889 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172150102 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071967028 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162222014 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120409607 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069081486 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168787013 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136644657 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132447457 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081389989 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.084790814 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05338279 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054003145 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071341271 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188947455 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.089109373 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06245709 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067728357 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096305083 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075766037 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05356778 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.127069244 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067171462 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102749219 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075103227 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091994115 seconds)
    (89/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108279668 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073905196 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.12199353 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05480795 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118075021 seconds)
    (94/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109231474 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193448393 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200402928 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116843404 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120924626 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16019221 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079542862 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162341937 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075319892 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189841338 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.137415908 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096528328 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097689414 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091806904 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144492794 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094266556 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07763608 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096379127 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149373851 seconds)
    (113/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094026475 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053702894 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11142244 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081632231 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067823777 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07661985 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102670716 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123126385 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069240131 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076127803 seconds)
    (123/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143292877 seconds)
    (124/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.19250786 seconds)
    (125/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082983034 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078089283 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.159889413 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097731233 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096545333 seconds)
    (130/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.120213958 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075760483 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.201519565 seconds)
    (133/309) benchmarking ("sort", Float32, false)...
    done (took 0.152831649 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055022216 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073621822 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096352096 seconds)
    (137/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110501814 seconds)
    (138/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054523332 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.120937081 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067719606 seconds)
    (141/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168712314 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075410206 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090328434 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06829002 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115448114 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054826714 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053627995 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089358591 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054361689 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168640607 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067642395 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076387217 seconds)
    (153/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.083201853 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102310138 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160157892 seconds)
    (156/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078104642 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089726843 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053646757 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083771522 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120323182 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07727708 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097051698 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.146008274 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111423104 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074949894 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089324335 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070476756 seconds)
    (168/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063890009 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076227636 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054897984 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054240338 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138223422 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056011052 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210268092 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053008623 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093986851 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068015001 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090854126 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093571709 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054116551 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157658275 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074495244 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077204029 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07219908 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191411364 seconds)
    (186/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083196236 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159325054 seconds)
    (188/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077790271 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095440952 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118822771 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093107617 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055042971 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075277189 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100565917 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069459647 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089409464 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078213539 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093693423 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075726499 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173897749 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089434928 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083639169 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100839196 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105014944 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.084216319 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.289624965 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076706509 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114548057 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137488264 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173294374 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088056906 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106747263 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088868716 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.138800476 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136832185 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069542973 seconds)
    (217/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100565455 seconds)
    (218/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092491415 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053313645 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090095291 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.158338693 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077388884 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076051416 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089630099 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069338074 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054132232 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11226064 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068464987 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086552373 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091780385 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069477637 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075208024 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070268226 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192871155 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074026862 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110567065 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067405764 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114014047 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053641493 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184816172 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05539755 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164930477 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17873586 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104618038 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094411073 seconds)
    (246/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100018847 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054996454 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053937583 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089765857 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053139484 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069935396 seconds)
    (252/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.075595871 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053686058 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053307468 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088551353 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090182551 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066647623 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075269257 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075056736 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088752217 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.147074868 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118644579 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089354586 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096101655 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053023392 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073270159 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097664414 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084764494 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074305964 seconds)
    (270/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178528694 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08882126 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075931292 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069864043 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075952656 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090932448 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072443405 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09716732 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053747239 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128609611 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091542845 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095529904 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067645754 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076474008 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090199761 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067088014 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091622205 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13898659 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066718257 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074787191 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13778478 seconds)
    (291/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.085450781 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076466914 seconds)
    (293/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055357825 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074160866 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054018435 seconds)
    (296/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053673725 seconds)
    (297/309) benchmarking ("sort", Float64, false)...
    done (took 0.148140298 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07401585 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053034329 seconds)
    (300/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077576482 seconds)
    (301/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053265803 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068411002 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076435855 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07345608 seconds)
    (305/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054450582 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104375819 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054652155 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053271055 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090006988 seconds)
  done (took 33.500299751 seconds)
done (took 34.417434862 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084713598 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114870649 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077242751 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116904134 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083181992 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1010461 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075214744 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080878382 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10441066 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084079187 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10296997 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056159665 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097770834 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076983268 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098419756 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09403424 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102034008 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074694965 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.0752955 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088790567 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076006597 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088508885 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069847787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057729098 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100700281 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074900963 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074354888 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099840937 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067215464 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089526521 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07117795 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074183952 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088903331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082158947 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095967992 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076571825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076515953 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099929054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069856064 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088381828 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074967209 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067856864 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096164742 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075412113 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073130919 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093928549 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075693929 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103065418 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093102856 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091054071 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076111761 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100232971 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078053955 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074444059 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093716229 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075477594 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094272182 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093363777 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098360377 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069742911 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075479587 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098232968 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073688514 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097568686 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075888081 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078177769 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099219291 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074241017 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098837674 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073185728 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067233319 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097597929 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071439485 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067510721 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098843353 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078288844 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088554781 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073854526 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075036525 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094990591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067472709 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068963283 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091201404 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075044557 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090604448 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057213871 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071992829 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094588617 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068101929 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075553908 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09624723 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07435097 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068727105 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101253819 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068363614 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093962155 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068098627 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067797335 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090905345 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072585191 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067369631 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090812587 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076859268 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091490778 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.0748805 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082230342 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089475145 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073459375 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088985918 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067752485 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08463227 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099642673 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068362826 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091460666 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066944837 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075403317 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088897839 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068649272 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068065752 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089120021 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073661277 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067966508 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09144559 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074708137 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103584052 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067295425 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071701836 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091475664 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067381965 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073525115 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08918448 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067537307 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06989378 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087231016 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070633364 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089465474 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075289661 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069969116 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096858976 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069930093 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098031491 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072906696 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075255009 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095305953 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067254495 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06121943 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091460359 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070334876 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070621519 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089429538 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070498126 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066763912 seconds)
done (took 13.397822592 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070316699 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170209598 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127179506 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098074978 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111339462 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068491515 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100908514 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105826529 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092410675 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127811309 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089566931 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109384917 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115653697 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089490131 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068429994 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072259027 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091853879 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090992572 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125769328 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08813881 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142391037 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088794715 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122609381 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092113032 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112863377 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096598944 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089559851 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072804693 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071113455 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125667395 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108787327 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070717062 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068272403 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124280899 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118378237 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087298064 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089441117 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086791601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089525261 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068157724 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115982814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102380366 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104597366 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083589482 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0971374 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071573868 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090710771 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089126155 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11484159 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08324422 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111627722 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135235487 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070813929 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106857008 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067704225 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112011509 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106761831 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070189872 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068773108 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092223739 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068263058 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071281759 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113217004 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116956876 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072317777 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106964595 seconds)
  done (took 7.346861918 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088722677 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117923536 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086137199 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107666782 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067810074 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068260859 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090966989 seconds)
  done (took 1.597972712 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071455645 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093764024 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114009058 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091277895 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110250162 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088932034 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100715458 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068965118 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108947418 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07057583 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089854961 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129307187 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070133516 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098086712 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093836747 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091238978 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091955579 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090194937 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072572455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114865826 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072119664 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11077522 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070869784 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06958276 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105876515 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069622298 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139639557 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074023629 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091905344 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072531867 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068127575 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141060749 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106066092 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079637389 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069232368 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106287435 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084837932 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089568843 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086305122 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096747418 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083748824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069513234 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092938953 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067866161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073630359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101624893 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070395705 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091967599 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072659173 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088944235 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091260038 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083745311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091372483 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073743102 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070134106 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097680082 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079225209 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092554427 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08986861 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070522736 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108892109 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085562429 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10600622 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085125684 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093838104 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084215078 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105395193 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071971013 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070993501 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095579682 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086141188 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089210028 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070873262 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080350361 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093441826 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092625915 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114116832 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071152549 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.1014898 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070002314 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070277492 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090835569 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092575077 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095379624 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069772835 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073802669 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094384619 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067327048 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068945821 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094739014 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068149541 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07070014 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094934181 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070457582 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093768614 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087083013 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069512267 seconds)
  done (took 9.442121302 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071885862 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070167438 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093376045 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070569954 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069515449 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091647266 seconds)
  done (took 1.450072015 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102524614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093379378 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084225651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097449451 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108422801 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106170885 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084678898 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10666319 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08783811 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104240988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085164172 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10671927 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089960399 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097436528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084662964 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097172736 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084197526 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101840273 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081048978 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098455281 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089326634 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098021908 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076686195 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107658535 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073114655 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074609443 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100579587 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082275295 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102934098 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085088113 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09744996 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073957756 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096298893 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084305353 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107037609 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074841014 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097415376 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073947722 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101778677 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072381653 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107124823 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075575655 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080461724 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096309309 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107602495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074352165 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07373889 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100512739 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084131166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096241056 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07435661 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096413445 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072716398 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096416485 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074257758 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106259365 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074376116 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106427376 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075982333 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074074084 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095572153 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073883966 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10687076 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073120688 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106002886 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074483499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095883575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076687073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097716186 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07551238 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073587745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094273533 seconds)
  done (took 7.44807031 seconds)
done (took 28.25667229 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649976058 seconds)
  done (took 1.632070622 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.767551137 seconds)
  done (took 1.752512681 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.568311737 seconds)
  done (took 15.553724194 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.615543756 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.759198013 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808942488 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136254298 seconds)
  done (took 3.306661054 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.896022914 seconds)
  done (took 1.902928281 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238374926 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224653725 seconds)
  done (took 1.45492973 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731721323 seconds)
  done (took 1.726940659 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.293940533 seconds)
  done (took 2.283372627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323642639 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182788762 seconds)
  done (took 1.506010234 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523649427 seconds)
  done (took 1.520987107 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.910355324 seconds)
  done (took 7.913240752 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234281262 seconds)
  done (took 1.244834144 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271003788 seconds)
  done (took 1.270894682 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.114044217 seconds)
  done (took 4.114751366 seconds)
done (took 48.175250509 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082224112 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083663953 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106099303 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080864604 seconds)
  done (took 1.35145359 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08162618 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07650668 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102466004 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075309392 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102669797 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075676906 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100567268 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078939925 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075895598 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099572825 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07626743 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097079505 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077659239 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100733141 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072756502 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077716155 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100991984 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075351189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101140813 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075736164 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073817377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100134136 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078945953 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097150714 seconds)
  done (took 3.084762287 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08166035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075597881 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099119263 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073661695 seconds)
  done (took 1.333700463 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081258292 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117982348 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091657263 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079584498 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095332378 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112803447 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072024934 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072795169 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097161945 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079882608 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092878271 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101314041 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11306175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079639908 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104934138 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067914864 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071328751 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1120536 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079893246 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102364469 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073775142 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08160068 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092509891 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092675966 seconds)
  done (took 3.201666121 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08216187 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105697866 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10392029 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091813714 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117561535 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067925333 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101437433 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093544638 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150692173 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068223257 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095307443 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068684947 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098383579 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068087998 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079608452 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134029144 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114145427 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09404533 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099508073 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090942351 seconds)
  done (took 2.940951535 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0783745 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074213506 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090796947 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070756049 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079146855 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09758874 seconds)
  done (took 1.500402189 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072192363 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070462507 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092725166 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069077817 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074255399 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091943055 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067665801 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069535421 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091744029 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069274524 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068733387 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091222182 seconds)
  done (took 1.938024061 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.385860211 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093651108 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070660731 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088448173 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072660411 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091177755 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081927399 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069817339 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115151902 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069428646 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091639762 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069531945 seconds)
  done (took 2.316666085 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266644321 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079086985 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325258935 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168774298 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142614201 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157117006 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106617189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141754267 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201317135 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141650614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20326026 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226228635 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135897549 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171378254 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117079659 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.110160083 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212367165 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223002303 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108196622 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22579957 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207274336 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158365591 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181582752 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12946268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136771976 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152351758 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074384583 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107457628 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234056792 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162946441 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202835264 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139679485 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099873971 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232645561 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227498229 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197030181 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165056701 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087122625 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157998204 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166628793 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257354989 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116212981 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197434342 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135413944 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107593208 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175369349 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147384416 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14849051 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138528583 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116324085 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175306625 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24334804 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168451264 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113428047 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139332458 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143959266 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146125521 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105454707 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243012763 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219177612 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160699687 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097607998 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099593001 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214269455 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161268179 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143824055 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155994766 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121245851 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169793969 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212400026 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147011168 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176213656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182219278 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090643135 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147975625 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196916442 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158032594 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204670364 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180460767 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076631688 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155624371 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132842111 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084962069 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169997177 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103463909 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210706568 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126656023 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140342506 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141576269 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137946365 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11388005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222736409 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203256767 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107311753 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093182945 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132301794 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151577749 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179682822 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115502115 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137138765 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149386455 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082276523 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195113707 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077408682 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154022377 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105914656 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154387077 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165123485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07825496 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157155855 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130711953 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129697912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165194083 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220566792 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093420785 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109661979 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22765478 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155511709 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133643277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177756058 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189774862 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127709054 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130705809 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206491019 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244940839 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092327912 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224514458 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136603843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086664241 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115186209 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158098838 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141284009 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151260979 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086001949 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181409297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203209826 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102061028 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099530908 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191214724 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084898185 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108529632 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141847881 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129952512 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099313988 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129292486 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136582114 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172383304 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15522917 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13536619 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153350482 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126856277 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228951637 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116948123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133234015 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10751984 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097244094 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167384766 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21812012 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082532049 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229217035 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158233965 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133633049 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149078801 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087166132 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171048822 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106012105 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073160266 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199164204 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140628036 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139020386 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186354421 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131669537 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15682564 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153883223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166056674 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186887486 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163598629 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134074809 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09064507 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14177912 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154999655 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100697583 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098077953 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110726387 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132252071 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12508732 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086826096 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173571975 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180517949 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102029681 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142224509 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125892035 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17947386 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10440172 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161202421 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.150232921 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122748423 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186123309 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213675931 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167578157 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128598095 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176733187 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097505475 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076739842 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118056258 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158004217 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11319287 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086833933 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147322375 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207002609 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159935036 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168350724 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140799549 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151679468 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215185734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074319812 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145357964 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182029219 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154594326 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156938019 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092482959 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126023901 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177634596 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137411225 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247297408 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145275067 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180336387 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185103743 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132590059 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083123412 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134912238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169548671 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135750511 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208625762 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129059225 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092207636 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140478826 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109816222 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133967004 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160320344 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151612619 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165726723 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146077392 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188077697 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080331587 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146702985 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153253055 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152885259 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091551618 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150986223 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223612932 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098840521 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147791325 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213149749 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083119424 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152999818 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238822613 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201984633 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088027441 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139127129 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157926993 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160073753 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14819567 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196350113 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141042149 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167453632 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141032683 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088204646 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116331493 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101616158 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136232634 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124182736 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141586099 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14763574 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123152664 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16373822 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142024604 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140280188 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149226669 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10225227 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119289099 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126313325 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211534214 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175968428 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237139761 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10433712 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208951169 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229682092 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078371663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108197437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084141385 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172035307 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113081188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164122368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124711169 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108286301 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181721572 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176986932 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12448014 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071839309 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139912717 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167078751 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14097745 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127239966 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136558228 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198736236 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133101518 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082983417 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155587612 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133696491 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13185643 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237473993 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063651199 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125640476 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080037154 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108129271 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162386108 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216641499 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085288643 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154787841 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147992636 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15069975 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160809882 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130648353 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125332957 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116370007 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208765573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159733609 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118395797 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1427601 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161857388 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216693283 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110378091 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123673161 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235109743 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188317551 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223842148 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118927743 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145763486 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14571948 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138689264 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173062247 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111146399 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231083503 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085076899 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168123652 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134074037 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120964762 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159053304 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.141328487 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117207551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18330671 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150898735 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110585944 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08261151 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147512101 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178093754 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110829479 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103659017 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169960631 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101209331 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169759106 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230150843 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085042841 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135887081 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124627483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084709007 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137235124 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132053682 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115114324 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123908944 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230321338 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12005366 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183827687 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198924646 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144598508 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170242912 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129243824 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664605407 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107396788 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189197941 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151339546 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238218867 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126875224 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148448907 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141180529 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154984195 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175087092 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134779355 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204849836 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163568975 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152001842 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107982929 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13302926 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141295214 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118989098 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110705184 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145220696 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147745613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128998351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150904417 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181466103 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085047449 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124425722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194542934 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148667115 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201145874 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171834084 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08750706 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149004326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198335679 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108505225 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153466413 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189193674 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138814934 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127760946 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110223556 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136197762 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207459494 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101700641 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198220662 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181209721 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11413112 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144805337 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176559366 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165593659 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138800343 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157234224 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125053169 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141815806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146004636 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088071844 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106108822 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135617271 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143213058 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128143031 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106544471 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145237847 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185447276 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100063528 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125339533 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107840238 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203664716 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240601173 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092584644 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111490626 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149638228 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143447519 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146089339 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157166917 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110261371 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086126211 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111356125 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115895492 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136787512 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144347887 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13399959 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141571891 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202914375 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114140432 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252661094 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098753656 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135790907 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071674015 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108519709 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126449585 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127480648 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111879509 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126150579 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234247207 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12522971 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093001985 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122160805 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076106658 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112067736 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161426066 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141191649 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152329477 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126984807 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065621649 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139606458 seconds)
  done (took 72.219365387 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13438783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105076846 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117751888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173236449 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146865787 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23848013 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182410414 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224822024 seconds)
  done (took 2.416436208 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071811658 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117749173 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104222544 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117345526 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091115978 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070264047 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295091687 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111184378 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067982055 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115917145 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120307555 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092606884 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470718077 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067729026 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09529435 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08562875 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068714414 seconds)
  done (took 3.247745574 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428913466 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628868379 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451420651 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074934621 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.905661734 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090231276 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.37805547 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163202533 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072465475 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.433064612 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.750420251 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133287206 seconds)
  done (took 17.606562023 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078152469 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071166717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111247 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084477597 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099968258 seconds)
  done (took 1.546891655 seconds)
done (took 115.706029687 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084743515 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342710183 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054917842 seconds)
  done (took 1.528937626 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086607883 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086032081 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112122777 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085050877 seconds)
  done (took 1.472207573 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078277056 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078557345 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111554613 seconds)
  done (took 1.367728686 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278325153 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165937029 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090079374 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084579182 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079873863 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105928723 seconds)
  done (took 1.370786258 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07501313 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077738677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100409411 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07834675 seconds)
  done (took 1.426721691 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077358383 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054258737 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056418604 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082912308 seconds)
  done (took 1.371392199 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093604085 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10683365 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082699833 seconds)
  done (took 1.380352597 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111365016 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113522671 seconds)
  done (took 1.32963255 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084892762 seconds)
  done (took 1.180380735 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095540615 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14210474 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156596631 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136838732 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165561095 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138249539 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087819397 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116398456 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105684314 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090971056 seconds)
  done (took 2.336429967 seconds)
done (took 16.474958264 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082407893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391210477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362033015 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117536639 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670085579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357719034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006177066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120250627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121961688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095619812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085331472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67696567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97010475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348903876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958037986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317367816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67651417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070150721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094718867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069709333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966595324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095246266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069154495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070195839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677386603 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373320071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095682253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322634496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069847184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096913056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35672276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095642318 seconds)
  done (took 15.975355523 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073310177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145059132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075320875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085351998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098112345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071272211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099046685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070304964 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153507578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069522626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113123712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068943132 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099606473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070015892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088690994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096302924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070629891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06992694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096414853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07021603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113250865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069954955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070476819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095335259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070142981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107542928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07006126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069719301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095305369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072105788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098575613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070784606 seconds)
  done (took 3.892282076 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117150878 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154323727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075169557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129948681 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116444174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097868038 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173120363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094955763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156637338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070163038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112644626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070363971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12813504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071252782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115154481 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070379307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071176522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095827676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070397553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096132822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088606756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094738195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070945572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07013418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096621917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082741054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095132214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070291393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070409512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097676477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073015921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096126168 seconds)
  done (took 4.20572852 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074306979 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076194419 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109557247 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085854493 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097308461 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073983045 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074983663 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096914769 seconds)
  done (took 1.794742798 seconds)
done (took 26.971574656 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080799022 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072219506 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1014828 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083173325 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101234241 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080147926 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070137854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102540117 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078662038 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075410188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10441255 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070390363 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098937352 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069384567 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076992701 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095868119 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081762034 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099949238 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080433504 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080688705 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098497878 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079493961 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102985452 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08093415 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106927845 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080914445 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08467647 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101196651 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071236664 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098981946 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078510269 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085987638 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096937128 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081796015 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096826357 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070403086 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069231721 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095054449 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081622093 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102738973 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07291564 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101929528 seconds)
  done (took 4.747012246 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091712925 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093406833 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112950347 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067464467 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098536335 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066837404 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116797829 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064960988 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060971712 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116742363 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058065214 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061390711 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0913356 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055715026 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061149562 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058107045 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08990221 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058852857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06077858 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087711908 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059833503 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056529096 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088716635 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064809306 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05755657 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064284871 seconds)
  done (took 3.075553915 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078745084 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085289684 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116357793 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131925073 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134476818 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078957429 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106256216 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089047798 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113854827 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068746919 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072838732 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125699816 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088798093 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101565067 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069375236 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11495159 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084536068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071912715 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102290997 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091350542 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112462264 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080449478 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120639663 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082601681 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069040751 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098120136 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073026184 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109384949 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074001158 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078829638 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099911556 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072857708 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098392139 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081485669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0733323 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09839159 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092213269 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105729982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079260211 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07082531 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099579888 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07045154 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116047379 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113433535 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095368904 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076928798 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077505816 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105694899 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06933475 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114930409 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078956516 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068961605 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099107057 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069110656 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096372248 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083685429 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071061144 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098373749 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079652358 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098376282 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081949872 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072723538 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111636773 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068675298 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103560367 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069150694 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069638559 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095291624 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09276357 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070867626 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137597773 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07003125 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098159381 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078003232 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103895622 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075156018 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069679162 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111019814 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07915961 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099380803 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07834765 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072437015 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099215712 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089994462 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097752551 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071629988 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070900999 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102082993 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072197734 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097243542 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082688216 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069405733 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098687155 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085269889 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095419972 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070532496 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075775641 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101691596 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068997738 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108413725 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074907285 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07023288 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104632644 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069255789 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099944025 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079602646 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073978603 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095146542 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07458752 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1025345 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070803506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070437028 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098584957 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071167448 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105783654 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075237062 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074508246 seconds)
  done (took 11.482675996 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.195265975 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.188548474 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072199392 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181619938 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077309264 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108762203 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.183483435 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09800726 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097817969 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070614427 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069745556 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131565513 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126635917 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107852656 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107399777 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069479354 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114961611 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105732011 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183551822 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177563392 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116960737 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078410865 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071245523 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098669543 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071792899 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079051699 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113354896 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103463048 seconds)
  done (took 4.331559039 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08445462 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130220414 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075713654 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090417935 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120413174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070091275 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103162886 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072012583 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109013062 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08234158 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096758627 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075265603 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075879991 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107682226 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070557332 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107236262 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079831636 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071188849 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100367914 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074693116 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106282099 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082171988 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100341656 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069078355 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075913868 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096093375 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067044275 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115167828 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069142323 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119253008 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068026741 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075615342 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110592844 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070897685 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096948387 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073086271 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072514474 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101220094 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070324337 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068998851 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096173789 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059024014 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069297348 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109417141 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076501257 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089142093 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076618606 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075218416 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103482869 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068275304 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100280956 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072918035 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072487898 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106004265 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074032229 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075294998 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101505772 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067839056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105034964 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072980019 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066109336 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096568674 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074890762 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069517685 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105930621 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074631542 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095929613 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0725267 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074839777 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104516071 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073320631 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071977359 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095553954 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072268394 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102236312 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074458785 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074141984 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095966693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069176544 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069577085 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085161544 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069490693 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055373151 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10033356 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068576809 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068007869 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100122988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076558442 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110245177 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071513762 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103312816 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070693907 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069131779 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099858321 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065626844 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07179033 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113254622 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112919126 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069691053 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067624988 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112006612 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074338665 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068812841 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086095974 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076146212 seconds)
  done (took 10.010752036 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098334039 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093650834 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098614869 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084301925 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125090864 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094746 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104166182 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075479394 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071292893 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113828223 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06960217 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105603287 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070551456 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07874852 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125355217 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077143814 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099579913 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078990757 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073818725 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137220978 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084831309 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111986599 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082920875 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097476085 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074615403 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081843308 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12560175 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081701332 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108138011 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086308334 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082048401 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125309231 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087854984 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100557856 seconds)
  done (took 4.351903253 seconds)
done (took 39.10667006 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20257757 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.401018407 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.185350328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.069780508 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.194961833 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215042582 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203189644 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189008026 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.415392549 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192234095 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.454437872 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.810825796 seconds)
done (took 58.6677559 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.259503694 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.330307042 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46096383 seconds)
  done (took 3.930743245 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.608068198 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.073947141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.443911532 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190349548 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.187767242 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.493558556 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.771394363 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.015956146 seconds)
  done (took 27.3095876 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.193089018 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.53983742 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.478238369 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.471219467 seconds)
  done (took 17.817473158 seconds)
done (took 59.058277928 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.176621755 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.215658467 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.231083426 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.174255142 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294578396 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.219119079 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.490288932 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.432706646 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.191341766 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175803152 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211797507 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190346042 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.191891421 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.469946595 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188830582 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.193056922 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.268252264 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.67340199 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.574659859 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196788325 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.204819392 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.255567086 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.19342973 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201308658 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.199389763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.189987733 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191213306 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198416471 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.367969734 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194750722 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.278343403 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.715163419 seconds)
  done (took 191.083106508 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19202934 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.215526908 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.288651475 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.230764414 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.642715904 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.389377636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.329547398 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.707828205 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.207071372 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.22203496 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.413861342 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.192543979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.491187095 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155336178 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.200609331 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.297566962 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.471888129 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.501607704 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.205161467 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.463785017 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.212567638 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.410917073 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.31127134 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.426707974 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.222328571 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.208425677 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.197144626 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.207592725 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383348807 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.395379595 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.195483269 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.236351718 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.749151573 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052822679 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.194602069 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233243916 seconds)
  done (took 149.592572915 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.461509112 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194551496 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194599382 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194116367 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193780637 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193651869 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.223703626 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194387773 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.715067288 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.715189274 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.696605968 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.618249441 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253384655 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.430011315 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194686968 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286762198 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205214879 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195437288 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209582163 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220714532 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193285455 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195253124 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716536626 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206958585 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.188328694 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197946389 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.195276283 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224747811 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588923149 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.1931962 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224418448 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.511496621 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236647944 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192726497 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.480789424 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.423793894 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303311063 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195851666 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224510175 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194914239 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463745603 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19493608 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196827748 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199233987 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760687723 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196094782 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.719539295 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196005234 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.096924951 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197748961 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198013252 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.733153262 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.656239648 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.19608082 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195386868 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198164839 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195808586 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196142689 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226479405 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.743839903 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198839584 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.291920208 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198517811 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200646411 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225166499 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195715431 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.219494107 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197215797 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.368397129 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255803198 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.411671272 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718818161 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196088051 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289418661 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314012012 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19483509 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197145647 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197025051 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197271768 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.303240321 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195058617 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.587199195 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195135526 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203673444 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.198875764 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256485312 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290755726 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196598792 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.486709999 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198359806 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197811433 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933115085 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291053917 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196780187 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197630993 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197861224 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.583732062 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719551402 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.356128503 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198996532 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.695268872 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201663622 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.595822433 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.699115153 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.77623892 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19949587 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304201724 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201313501 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.200475166 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198334571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226554608 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199012551 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257536962 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19941713 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594539579 seconds)
  done (took 344.524360232 seconds)
done (took 687.794567319 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.867643413 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852710605 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.957228299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.853731108 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.834492702 seconds)
  done (took 10.505836871 seconds)
done (took 11.647113853 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378220007 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.378399079 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255539142 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377274955 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225781794 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394617926 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354258511 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220035695 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295006638 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.270294274 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294519623 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244512106 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225262192 seconds)
  done (took 18.054334184 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506198625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509103432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261961252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506776649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238055824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512031057 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393871827 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39960485 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403727603 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213792933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214450182 seconds)
  done (took 16.302529124 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524136787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.50020973 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266457085 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511343117 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241103816 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51351627 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393796509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.401623731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391784871 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214443264 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214909479 seconds)
  done (took 16.315103153 seconds)
done (took 51.814035807 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209799054 seconds)
  done (took 2.351609547 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240994092 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403017553 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.221575412 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214992687 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.210244605 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211270877 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212985887 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209805927 seconds)
  done (took 11.069425653 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207356329 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.210024261 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209587583 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210250912 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206933072 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208008188 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210271735 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207200157 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207451543 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207076897 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210451166 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207747403 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211516689 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20717716 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210112018 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210256538 seconds)
  done (took 20.485286364 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210198111 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208128144 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206952673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208533697 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208330592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208489008 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209067691 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.207672503 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208082542 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208786078 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209556669 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207981264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209287043 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20904205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208352368 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209937268 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208966496 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209087748 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214481909 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208549279 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20918746 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208410535 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209983533 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209057757 seconds)
  done (took 30.161767417 seconds)
done (took 65.210487671 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.251569466 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.794087159 seconds)
  done (took 9.190595781 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212304503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212030268 seconds)
  done (took 3.571563184 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213031612 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211632615 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212036785 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211620946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21212481 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212199033 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212529415 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212886336 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21310232 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21304529 seconds)
  done (took 13.269222919 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213905106 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212024609 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.2103781 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212122046 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.212517582 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210674225 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213997713 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213664645 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213693633 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209808795 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214893589 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210689227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213710578 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212012807 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213472896 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211945805 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211019503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210728698 seconds)
  done (took 22.967406771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214441625 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213924185 seconds)
  done (took 3.574856122 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.211145471 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211054169 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212236831 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212037191 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.21181923 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212163648 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.211942673 seconds)
  done (took 9.630322434 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.214521923 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384174748 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.463509299 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.796132843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215214321 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218457283 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.06233533 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217470963 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220526576 seconds)
  done (took 13.940695707 seconds)
done (took 77.289086544 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.207913684 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.203472891 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.056148305 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217088141 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220785397 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.549549304 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.258509241 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.34662485 seconds)
done (took 37.208060346 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.218099501 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.908617279 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.944892665 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.224892203 seconds)
  done (took 11.226460417 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203576202 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.122857461 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207918202 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199819986 seconds)
  done (took 17.884815502 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.810589184 seconds)
    (2/2) benchmarking "read"...
    done (took 1.539436145 seconds)
  done (took 4.497839014 seconds)
done (took 40.97565383 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216242266 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215920722 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.213234112 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215554723 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212990545 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.213326273 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213087289 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21584619 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216519248 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216490768 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.215862818 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.215992753 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215663613 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21421924 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213593005 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215406262 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213502234 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213014606 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217153685 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213840867 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213794012 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216774732 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213363898 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214655035 seconds)
  done (took 30.304479285 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216297743 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214786383 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217300574 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216710414 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21467745 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217305316 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217631541 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21452739 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216843198 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216040783 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214717631 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214659076 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216196452 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214796824 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217453937 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214113644 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216166691 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215824397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217128647 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214828263 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216911707 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215274988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215894001 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217386206 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214849322 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215143336 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218961528 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216169451 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21797834 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215378022 seconds)
  done (took 37.632523428 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.223248045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226740475 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218287602 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217214594 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218094985 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21772073 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.218783673 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.219012475 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.217822454 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218945302 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219403135 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.2178076 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.219795699 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218771675 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217489078 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218567984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219451825 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218695686 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218653492 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218947152 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218885606 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218360474 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218809722 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219388195 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218440449 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219324155 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.218879998 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219302359 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220015784 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219467903 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220144791 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.219648622 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220509657 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.220636999 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220550609 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.220661412 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223903266 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228168064 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21992416 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221341101 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.219725532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219521255 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21878992 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21983099 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220085565 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22041229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22080276 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219516836 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.219516592 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.219567949 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220908571 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220215287 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220503228 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.220671052 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.220518963 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.221302538 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22059872 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220597956 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220748127 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220664941 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221087573 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219641512 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220556963 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219956849 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221992213 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221590886 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.22224719 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.220856433 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.221568882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2215399 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220045781 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.221722807 seconds)
  done (took 89.00147837 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.221109109 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218612716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219721205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219002637 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219717549 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221572298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219274366 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221489007 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220248117 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.221447687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22207325 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221190546 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219916934 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223142 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221796127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220451486 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221365049 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221809246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222465527 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222159947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221781826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22015756 seconds)
  done (took 28.016153909 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223447249 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223986378 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221260999 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222943599 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221336166 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223760019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.222671034 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223241973 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223315772 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222033592 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221178013 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223435329 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221170469 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222189385 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220426895 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22067821 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223928103 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220418338 seconds)
  done (took 23.157623274 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.222545742 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221187527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224497005 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221313727 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222135046 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224520391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221383781 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223990161 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224738272 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221685741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.224895341 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224956983 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225238824 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222449504 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224088635 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222093537 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224748197 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221270228 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224082646 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221374204 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221222331 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224674152 seconds)
  done (took 28.066682113 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225463654 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224000259 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222069592 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221820216 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222348518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.224914586 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224319977 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.222209454 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225501782 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224284 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221504737 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224082796 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22209414 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224451155 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22255601 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222877512 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225123699 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22351172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225587312 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222842634 seconds)
  done (took 25.629737554 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225956029 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224424175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225297748 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225530918 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225800237 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226428618 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225654623 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225873747 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225724119 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226096297 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226260599 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226762663 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225879085 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225362249 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226824873 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226248524 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227174294 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226684865 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226282215 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227136719 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227465447 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227946045 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226219855 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22677441 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22634626 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225804509 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227560521 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226955584 seconds)
  done (took 35.496641518 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227081195 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228656464 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.224863439 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22510179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.225166181 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.225123843 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223959783 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.225509955 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227884708 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225901635 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.227241108 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.227218266 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228617343 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.226880355 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227027655 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.228410477 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227267788 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22574054 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225786421 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225510553 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.228038432 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227564276 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.227916227 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224858729 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22551505 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.227250641 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225899667 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226419545 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228766245 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225921823 seconds)
  done (took 37.95912034 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.246267613 seconds)
    (2/2) benchmarking "in"...
    done (took 1.247030773 seconds)
  done (took 3.654931005 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.227075827 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22840622 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.228363427 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22681935 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225266854 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228189132 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229774449 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22647068 seconds)
  done (took 10.982372264 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228771382 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.228794198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.228545469 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.228402329 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230364458 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.229087643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237866145 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244323402 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230552555 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.230251886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.236195411 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.236769994 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.233118937 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230042508 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228675382 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232166935 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229422689 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229101731 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.228508505 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230321873 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230820642 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232840407 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231826602 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.22696037 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230577163 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243230351 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.236833418 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22976373 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230346642 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.236550629 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229847527 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.229791536 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231475204 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230562696 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23130975 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.232121714 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241079958 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245629044 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239777423 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231394899 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231684728 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.227986452 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232673428 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23386569 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233221825 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232588217 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23158614 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229296102 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230372178 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233838095 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.237585221 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230662044 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229624226 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238698423 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.233678461 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24092163 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246845104 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.233100458 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24037142 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242896782 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.246170419 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.241100375 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233539294 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.2310738 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240802479 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256709441 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240729904 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.244670583 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230255663 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232502247 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242267444 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246697946 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.242955191 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231928243 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231337115 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232030209 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233163116 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231357964 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242248915 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250953239 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.231773775 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233253141 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242933862 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255689971 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231407927 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.232790554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.232850622 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233223957 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233575765 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245352232 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247671566 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.233299076 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233151419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.235685845 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.236841814 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234156738 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233733269 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235398595 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.232265092 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.236301377 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234052876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237761779 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.244532537 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235674228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234866363 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.244009815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.235399695 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234681327 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245137991 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236505709 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235551521 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.235612997 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243221908 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23270047 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238250469 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243601951 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.234574365 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236597536 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235933684 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236082839 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245848899 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265193236 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.236925044 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237780938 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24218283 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247607825 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237359187 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.240135849 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236934768 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.235291601 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.235335913 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.237715989 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.23735557 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237592965 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236215532 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238457686 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234280366 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.236817434 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235878306 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238127099 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240208744 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.236725174 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.239914758 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.241997047 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237574355 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.23903349 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246596922 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.237857877 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.238745786 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238190735 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236417799 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237645996 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241264706 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236460116 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238160529 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237594723 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.236259404 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.237024171 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23844594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238463549 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238601478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238305612 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241794992 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238816221 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.244905804 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238087294 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236527388 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237724327 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.240455029 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.238416938 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237990483 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.236333424 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24161155 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246603658 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238277667 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238112825 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.242464549 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237826904 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237360025 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238223576 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.241086446 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24729702 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238288226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248069742 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.239118958 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237696322 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239343384 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.239673001 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23822333 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238880339 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242196027 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247400767 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254001148 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249259967 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24049918 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.24514494 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240435961 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.244050762 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245423822 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238050101 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241762138 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240694551 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24009281 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240053394 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242208579 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.240284699 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240660678 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.240171634 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.24123936 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240119707 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240994109 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241640797 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24297553 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239227262 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241766644 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240911385 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.240173396 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238877525 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239878211 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240079955 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241403734 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241432015 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251649242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239200913 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243364005 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24363916 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.241766277 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239797083 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.242348401 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244044404 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241753257 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250355064 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257022178 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242213438 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249289087 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.25583314 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240293085 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244675735 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242416733 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240035846 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245143669 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.250552711 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240907911 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241742898 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241555878 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241972287 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241479486 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250154749 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.240292066 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240689996 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242558863 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245465671 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239300998 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243845298 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243363044 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242888104 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244285668 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24302732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242744955 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24386006 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.242137312 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.242193445 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243791798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244908178 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.25091655 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249994044 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243782257 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.245518913 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243993071 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.247817283 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244817646 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243767326 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.242931242 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258279802 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.253416462 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252971016 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.246942885 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244295337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251237523 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245560746 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248953504 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2437715 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245309058 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244474026 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243173156 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242331006 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246354901 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245042657 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246551477 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248407166 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24872222 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2473354 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245482139 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.245114796 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.244361453 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247215283 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246073976 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247539339 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250091049 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247834963 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245560481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.245851743 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255528991 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260699704 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249288567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.246298485 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.246472994 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245179392 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246373042 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.246224642 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248851593 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254278758 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.249288796 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258379272 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246634 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257419006 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.247756743 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.248209588 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254904973 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.245041518 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.246080402 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.246444228 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.245791648 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255959626 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261629919 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.24588775 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.2511613 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246624508 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246028468 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24708468 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247733037 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247644267 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.248098345 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256751022 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.2616131 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251949592 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250953655 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246669881 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247993506 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248035434 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246895056 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252909557 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247152005 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.248760079 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247104129 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248417682 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.248622116 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24750576 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250127839 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.246389535 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.248398421 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257904611 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263774511 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253151298 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.249521222 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.262253389 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249543695 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256982037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.264369856 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250023545 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.249510646 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.24962958 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253530111 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248790586 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250393517 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.248686226 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250702316 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25342116 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24893483 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251976789 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.251734369 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.250255573 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249460503 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259129036 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273762657 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250529765 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254755506 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246839941 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250713987 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254493673 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249317766 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248568829 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.25272374 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260205367 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258736267 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.25147439 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.249565079 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249912203 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24951009 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249359182 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250750653 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250463856 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250894838 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.253965764 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249344896 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255864552 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.251838091 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.251313222 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253136667 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252666016 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.263225505 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.251650399 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252926112 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251009891 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251704951 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252212107 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252647764 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.251441161 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253703053 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252952088 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.254188956 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258269259 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.258905414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.255107943 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.252141792 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253435789 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.253220619 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253724436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251824924 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252406136 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252077268 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254819117 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252540466 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256695204 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252200401 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254955701 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.253817137 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253615191 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255864645 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260067764 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252783157 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251798276 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252893087 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253755475 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252014488 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253542275 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264359868 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256528813 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264672781 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262764292 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256744091 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.252959268 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255877473 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262896407 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251499555 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254898451 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.252786515 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.256137399 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254946074 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25764929 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254805827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261514043 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.255281931 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253792753 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264362593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270249691 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253821746 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255262061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259150501 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25485602 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.251718705 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.255811537 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25359117 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262677435 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272618836 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253781513 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256514949 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252600405 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.255563243 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258826827 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254676202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25588317 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25336013 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25499857 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253681532 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254770127 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.253014337 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254522201 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255100137 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.257212553 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262916176 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.252240664 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258302281 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255332697 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255325937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25504033 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254546992 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.254619586 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254943548 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257070946 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256016845 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256229753 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261111899 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256281432 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257578649 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259215252 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25726579 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258785661 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26819912 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265018567 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.255435251 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255906293 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257712709 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259999031 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256536034 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.255597213 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256879986 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258973955 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.257062717 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257307459 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256319739 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259800486 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275874643 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272548254 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257815491 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258528434 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263421326 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.25795957 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255993069 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.258506583 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.260907726 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259552776 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265907286 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.257575654 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264844103 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272134307 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.259855075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263185868 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.261627357 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267991119 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261444666 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258426934 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257884059 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263090324 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279029684 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259813114 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268248231 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2909467 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.273719479 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260149959 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.259037149 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257427411 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258439508 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260846101 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.259107214 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.259009417 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26061614 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.259857916 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.260326383 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264742366 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.261431773 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.260995662 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.260878703 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261161912 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263141002 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.25785731 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.260519266 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.259142445 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.25974003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259654 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25933628 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.25976118 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27384476 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.27215018 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.259758939 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259669611 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.257394024 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265003468 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.26261058 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271476689 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269047057 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.25992996 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260233951 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.262923854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260515905 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.258181773 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.262375802 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.259948603 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259553228 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.258528896 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276454716 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270309996 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267206887 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262157215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260808337 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.261910116 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264980666 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26100662 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261855917 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.265506008 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262141661 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26585855 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.26154026 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.263178417 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.265477192 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270025938 seconds)
  done (took 745.015976247 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259919725 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258397725 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259584891 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259771717 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260927734 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260313498 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259982268 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259494726 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259782283 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259676408 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259196874 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259781862 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259240652 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260229442 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260409095 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261206097 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260736316 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262078091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261799308 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261644998 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261238928 seconds)
  done (took 27.659466825 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26372714 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262057833 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259680669 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262922079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260640016 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264044012 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261574611 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263579549 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264551337 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262054438 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264430116 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263790869 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.261137092 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.262168377 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261985723 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263531054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264088655 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261617251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.26303807 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26085044 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264746298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261264784 seconds)
  done (took 28.972250591 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.264954027 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.263747973 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262762962 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.262391028 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.264593767 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.262139504 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264310166 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263850936 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264441583 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266265552 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.264464399 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264955711 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271266693 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.27033725 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.267304625 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.265504665 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.409528733 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.264424913 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264201599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.263637824 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.260355896 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271653086 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.261466566 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262874763 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.264257182 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263631013 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265734052 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.266090872 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264239101 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265982553 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.269127683 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.265567097 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264570042 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269728242 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264793558 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.266843478 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.270490749 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.266862149 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.263374165 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.267623497 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.278347443 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.290106839 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266555291 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273735339 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.266003425 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.267148392 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.270746746 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.274696023 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.265261305 seconds)
  done (took 63.409833813 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.267991346 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26802986 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.265012165 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266817494 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.266477928 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.266534118 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.266972024 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267119715 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.264039149 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.264595219 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.26729527 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264335384 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265048269 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.267105277 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.267780909 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265773827 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.266005525 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265067316 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264620782 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265387413 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.265362671 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267802941 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.267930707 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.266108094 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266630608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265201129 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264615304 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267457536 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266277109 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.265314928 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268069188 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267904559 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269638541 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.267467203 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266176838 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268514503 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.268095789 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.265302836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26808819 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.266192561 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.268341356 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268874836 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269037304 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.268822514 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266025759 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.267208066 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26675199 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.265511563 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.26701976 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268647537 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27012222 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.266073933 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269796242 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266551585 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268905392 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.268799381 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.267715394 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.267254831 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.270017812 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267588694 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.267142651 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270091146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.268317022 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269979165 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.270155053 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.269020623 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.268513312 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269339788 seconds)
  done (took 87.372879916 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270571021 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.270127619 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269797101 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269664498 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269000459 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.269598005 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269560789 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268470505 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268162425 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269174442 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269986179 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270282737 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.270000302 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270339128 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270669794 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269668299 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270807857 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269637624 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269877617 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270254117 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.270387061 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269548569 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271079729 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26967262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27067683 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270752876 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270603622 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270822005 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27204019 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.271075823 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271430118 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.271361548 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270679871 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270322971 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.271953045 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27080791 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271311449 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271125578 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272229686 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271756788 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271728591 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271782223 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271400221 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270908801 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271835442 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271325833 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272126363 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.272428079 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272356666 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272064117 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.272192814 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272489035 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27231966 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271360435 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272678595 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27329188 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272877124 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272193288 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272235849 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271901415 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273006245 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.273958483 seconds)
  done (took 80.00695902 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274316539 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273300349 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.27125735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.271377391 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273719064 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271888521 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274656111 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.273210447 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.273583884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.274705913 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274255677 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272045966 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272848263 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273751362 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272263192 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273602419 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272579595 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271581426 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274390065 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271586973 seconds)
  done (took 26.666312372 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.272085752 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274510347 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272192356 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272837701 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27443142 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273171027 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.274768602 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274901558 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27159929 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274861978 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274764325 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275504113 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273213359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273798954 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27475893 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274244751 seconds)
  done (took 21.588417799 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273350174 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.274882888 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.27425775 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.274986715 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.272569962 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272261425 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.275647608 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274276535 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27354726 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.277367508 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276221183 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.27595682 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275959962 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.275515914 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.273527778 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27636313 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.273926211 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27332258 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.276511209 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277174891 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.274715756 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.273808279 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.277174582 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.276140428 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.274711928 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275106392 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.274413912 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.273757311 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.274115697 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.276899517 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.273893191 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.275791455 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274525639 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.275049212 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.276611948 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.273927031 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276259401 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.277590565 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.277112976 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.277857565 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277067994 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.275871585 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.277304912 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.278445176 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.275578203 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.277133109 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.274872259 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.276286294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.275162402 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.276225172 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.278522545 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.277062752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.277590251 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278716461 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.279114987 seconds)
  done (took 71.370173955 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278725973 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278988796 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276366704 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279416958 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278525602 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.276093694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278956844 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276847894 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275884376 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279410886 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277774461 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278949344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276559443 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278580178 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2774813 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278441573 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277059841 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277668636 seconds)
  done (took 24.210877831 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277991652 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278123112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.280014128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.277194824 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.276445143 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280213235 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277513035 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279068457 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281262728 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.278110196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277884279 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.280450663 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28066743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.280227513 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278441306 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278200024 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279902289 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280718569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277295805 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277929955 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280683145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280801703 seconds)
  done (took 29.348520245 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.279337823 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.278660034 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.296818081 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.324663874 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.310928297 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.278767683 seconds)
  done (took 8.980137454 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279507208 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282259553 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27976917 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282330711 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280360119 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278861142 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279050063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279737929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281311816 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280569807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279537773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282526314 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281298378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28006848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282700915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281450627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279463974 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278707967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279858009 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281891302 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278650565 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281713099 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27900051 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279450952 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280311788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280509188 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282586418 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28161494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281294351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282490144 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283299414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281590155 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283764819 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282227947 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284657702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283135081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279984772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282769818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283251419 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282536083 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284037242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284717943 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283106017 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281599567 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283839704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281568029 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282088873 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282981068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281550701 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285073612 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283768273 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280915502 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284101113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284872411 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284677929 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286623259 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284952267 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284366312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284017034 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282490432 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282572151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284145561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281804084 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283527744 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284675737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282072419 seconds)
  done (took 85.829887413 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28005211 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282056536 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282560285 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283414183 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283161298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283117319 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283061397 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282939983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282506854 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28259466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285625999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283172433 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282484313 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282879185 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282979321 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283673307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283402129 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282748635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282660047 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28684225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283827642 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282669511 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283565635 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283495162 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283641192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285735816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284649794 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283346928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284762126 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284775685 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283353349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283517636 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284551781 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285041102 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284650926 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284569679 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283374258 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285045386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284122303 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286370677 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284697085 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287488073 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284756976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286652871 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287161137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284805643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285101296 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284912033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284658426 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285111306 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286606307 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285586687 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286675825 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28620073 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285180527 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285818466 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286326712 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286506836 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284961281 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287545946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286331183 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286476197 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288104792 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286487852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285889925 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286544235 seconds)
  done (took 85.999722332 seconds)
done (took 1737.481848929 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.374654197 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.338234784 seconds)
  done (took 13.928807685 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45033181 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.400797886 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.286530225 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.316405651 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.283052056 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.292510989 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.288453465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.283361024 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.286472402 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28711634 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.286276121 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.494528395 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.282669479 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283668046 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.286002104 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.378745498 seconds)
  done (took 42.41277085 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.314889816 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.292749906 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.401855079 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.308315059 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.31490879 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.469432991 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.343769719 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.292470701 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.45794116 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326821024 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.814920316 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.311076612 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.291643898 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.379928615 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.305937385 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.467142546 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.533892027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.813374207 seconds)
  done (took 29.660697244 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.730139173 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.291048664 seconds)
  done (took 9.240767208 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.308495727 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.315117682 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.311818353 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.315319603 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.314802918 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.319798234 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.310027459 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.310010457 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.290965917 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.337117535 seconds)
  done (took 64.360607099 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.309234903 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292812898 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.292344845 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.290006768 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.282768572 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.281197717 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.289686472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.286898447 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.843412274 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415416527 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.30556069 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.297676679 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.292418815 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.291639923 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.290675641 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.326496944 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.417659364 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.289650209 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.288123185 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.298054078 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291540926 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.421354408 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.330364715 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291688027 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415345412 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.872228832 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295368459 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298156718 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411929046 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.29096085 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291755052 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293011744 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.294777824 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.8630231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.742555286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.297280342 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.313690707 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.300480468 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.291978379 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.476378378 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295019428 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.299315511 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.285571905 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.701531591 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.45179187 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.402504487 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.536236231 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290920014 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.295663605 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356907928 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.291485538 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294682476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.321675632 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.042492369 seconds)
  done (took 108.85532771 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338426538 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.775308813 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456802486 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307767273 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.077519268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.953745187 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.287936975 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.571316019 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.352322521 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286248852 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.623206832 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.788811275 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289626656 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.300901925 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.284992171 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37087995 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288383418 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.060563217 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.289448901 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.286775924 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702552195 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300519151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285387493 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.335841221 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.32443156 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760698961 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.7645855 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.731661262 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.290626754 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.283756159 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.752517681 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.296990111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.368891172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287559822 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.565407557 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.654650616 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634988852 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.29297865 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.292914817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287600473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.314400151 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759401912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644746785 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.289608284 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.288632071 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761214919 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.289190335 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299122192 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.292021705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488498446 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.286686553 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285649694 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.730181456 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.285874029 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.667070534 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.297575375 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.321253546 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79185935 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289889159 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.363235058 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337141472 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291810351 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288147427 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290792941 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.286018509 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.64374205 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.691024067 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.292207962 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.636112119 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.748354778 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.290667161 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.811265401 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.170690152 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.311077861 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.351664633 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290006212 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.85887157 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780507061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291804966 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287380871 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.628924536 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.291895997 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.608564872 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301531035 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299399479 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712926494 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.309463886 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.317833659 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.289281088 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.287877864 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.912983809 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293718968 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.572816166 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.351714833 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.287287935 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.290966244 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.312155282 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288665804 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.287357488 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.295656908 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.813907698 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.29709117 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.59691773 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311360742 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293578265 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.292576472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.292393581 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291326788 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506637309 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.753178255 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.293348012 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291166476 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.288256671 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.28982782 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.59639423 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.293963176 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.598918774 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.292099582 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291211045 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.29018865 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013272757 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30594555 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290765771 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.297329978 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.146710869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.500352181 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311046823 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.29048435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.294531948 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.306762572 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.646225575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289847916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.329834767 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291826615 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997035492 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.327828112 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.315146282 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.955344601 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297046281 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290661417 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.29889977 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292194202 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597428632 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.570181939 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.606949956 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293266716 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.289561353 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967089195 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320390987 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427884072 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311174185 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302471433 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491384409 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.504546355 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291860258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.88142312 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.292208782 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505461223 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.292474782 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607698374 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776510222 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.292566368 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303613995 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993980388 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.969141926 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.910643551 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.297478381 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.624562193 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.28473969 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.747908195 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.29437465 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.294332672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.719496659 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.297886338 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.297236219 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.296401408 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.295712566 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.354730523 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471009607 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.746247622 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296958205 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754124773 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311612928 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293537239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.296088126 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.293160434 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.648275304 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.35000617 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.298538112 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.307635574 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.296996882 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.30311152 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764286918 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.205822478 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.296671369 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450551943 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.925996591 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.293620275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.299877726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.941719857 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.564194104 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802788078 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.307659224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.604534227 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.294542372 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.336253062 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021826791 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.304883046 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764459647 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294000166 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.293756729 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888083417 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.294097497 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.364377923 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296813209 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.298347122 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819180442 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.294386308 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.296306316 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.722150537 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299788522 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543560189 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.298085986 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.310542855 seconds)
  done (took 1101.904048877 seconds)
done (took 1371.580712298 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.297119215 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299034206 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.287062126 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.298007468 seconds)
  done (took 26.415868642 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.30752678 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.304058955 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.305237122 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.303897744 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307848759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.304020362 seconds)
  done (took 9.068491711 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.402864979 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29897819 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299266498 seconds)
  done (took 19.237017655 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523045437 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.552412826 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.669561545 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.454191399 seconds)
  done (took 10.434995985 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.306326134 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.305958868 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30604702 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.30885805 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.307622694 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309129717 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.307968431 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.308902222 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.309521806 seconds)
  done (took 13.005299699 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.253807807 seconds)
done (took 84.650955058 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.071437941 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.701768644 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.383612033 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.976069853 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.899112813 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 4.384682574 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.327215592 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.20586098 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.307133105 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.709002639 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.562316773 seconds)
    (12/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.337571564 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.287669437 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.911657149 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.342519444 seconds)
    (16/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.427609547 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.327015722 seconds)
    (18/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.516302709 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.713139169 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.699216318 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.583511385 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.100397037 seconds)
    (23/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.644556691 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.17543464 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.531690088 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.098259594 seconds)
    (27/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.671528813 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.904421267 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362840072 seconds)
    (30/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.342032842 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428777981 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.326927739 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.286980255 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.300749993 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.66491938 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.232140374 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.889661491 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.609855765 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.691650752 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.29186289 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.309750687 seconds)
    (42/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.387443298 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.301050765 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.463684527 seconds)
    (45/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.328019564 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.287660661 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.447766055 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.599555347 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.559679626 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.915821048 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.302217708 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.301182541 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.406947651 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058299377 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.805444528 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.298953726 seconds)
    (57/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.301395099 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.976323129 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.299750564 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.358306597 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.389774123 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.059849169 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.733284651 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.303274542 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.365391277 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.328230337 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.481489166 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.303768688 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.630441083 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.30127337 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.830772246 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.452717166 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.642941438 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.112988721 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.690018882 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.927519547 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.302004383 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.501311506 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.697178923 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.663400613 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.343177264 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.315032287 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.295787705 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.823733273 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.305202862 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.578949649 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.304768702 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.449475499 seconds)
    (89/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.674366782 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.157551188 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.35115198 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.772410361 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.962992387 seconds)
    (94/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.788460785 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.325506177 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.923620406 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.312352679 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.325515993 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.642793136 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.41615029 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.328143997 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.590355654 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.173336974 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.102763223 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.522818425 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.175925226 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.36878936 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.401466137 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.768115801 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.430767635 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.333226517 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.306121718 seconds)
    (113/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.428116013 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.967182454 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.416472843 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.424318638 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.950192873 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.326431903 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.694687398 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.922699272 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.306843221 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.362029641 seconds)
    (123/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.307052647 seconds)
    (124/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.301867596 seconds)
    (125/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.37540229 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.392297706 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.821142128 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.329026265 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.720951673 seconds)
    (130/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.510761055 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.573738137 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.29285383 seconds)
    (133/309) benchmarking ("sort", Float32, false)...
    done (took 5.330730225 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.883309239 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.066217267 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.574333774 seconds)
    (137/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.621413775 seconds)
    (138/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.157231404 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.499226033 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.229713492 seconds)
    (141/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.627560199 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.411980448 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.412721366 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.908597277 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.815870282 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.318477564 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.186680055 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.234856043 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.134163389 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.422666945 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.081280053 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332393639 seconds)
    (153/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.675886263 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.308502524 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.095508475 seconds)
    (156/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.321920605 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.31210916 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.893977405 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.07627628 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.358795539 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.331227226 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414065473 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.404517624 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.729185199 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.353590449 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.22906392 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.389877181 seconds)
    (168/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.10071442 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.310580944 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.170094234 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.294882323 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.774151596 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314997089 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 6.310639692 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.802338797 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.330155602 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.39327752 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.358226198 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.32672327 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.923526348 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.226622514 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.33718096 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.294029949 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.915225366 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.295205296 seconds)
    (186/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.0587533 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.453976136 seconds)
    (188/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.338454281 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.335507664 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.32791199 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.375877389 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.48338049 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351034022 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320611591 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.336616362 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.080328595 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.353124666 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.714160105 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.232195458 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.312100258 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.396048271 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.465948677 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.310744103 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.554133749 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.677798719 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.338219419 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.336352518 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.143104609 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.302562237 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.310565005 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.372274986 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.384653568 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.223311009 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.467052878 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.402048107 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.326951042 seconds)
    (217/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321076441 seconds)
    (218/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.365273008 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.51146159 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.732672745 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607523427 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.850184247 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.523771396 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.727637738 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.373331307 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298965352 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.291966835 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.788422327 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.140626202 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.432917648 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.332520977 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.740674721 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.398401849 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.382323297 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347467648 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.712056148 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.373246029 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.325196581 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.696260409 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.732524878 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.940106876 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.314091462 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.338707408 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.70755925 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.170676944 seconds)
    (246/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389103801 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.389907707 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.321550506 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.115781663 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.610382445 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.440372738 seconds)
    (252/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.946985214 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.903245404 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.73764987 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.675511064 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.343239825 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.527204367 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.637420054 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.342940442 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.313967926 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.524186103 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.364432879 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.836287 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.341206787 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.90352998 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529140988 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71167777 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.732323293 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.400222089 seconds)
    (270/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39426629 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.72884294 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.33628002 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.449054748 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388375772 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.790875922 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329883915 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325638635 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.975105981 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.390683551 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.301652568 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.40270761 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.56893242 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.420347717 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.886508069 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.399350274 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.169777176 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.414053306 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.433099473 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.154421313 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.315515052 seconds)
    (291/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.664168748 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.489292974 seconds)
    (293/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.921769057 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.803446207 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.958028143 seconds)
    (296/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.631479895 seconds)
    (297/309) benchmarking ("sort", Float64, false)...
    done (took 5.632023982 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.35575465 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.653254878 seconds)
    (300/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.696202606 seconds)
    (301/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.562013617 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315522792 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.892221743 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350825072 seconds)
    (305/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.507353657 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.76346771 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.858143607 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.164625141 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.314652701 seconds)
  done (took 920.247718062 seconds)
done (took 921.48466782 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.349253343 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342283561 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.325560451 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347601764 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.438197962 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.360341807 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.336583832 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.329028675 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.37385281 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.375959937 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.325737838 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.360637947 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.33015411 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326897073 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326576217 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343881505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.334518087 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.32556898 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343698366 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.338918002 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.344834338 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325979315 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376842705 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.360479704 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331132982 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.331955161 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330908688 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.347137344 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439819233 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.329915911 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.331099206 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.339737695 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.337278505 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.325551656 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.323241287 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.347506963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.340064866 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.339178653 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.332574105 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.360362614 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.793722968 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328388869 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.330349955 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.330414311 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329892485 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333856262 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331363275 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.336808695 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343443561 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343554985 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.734693712 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.343024532 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.331915943 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.329285441 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340654605 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330820847 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333764489 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345659645 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.35023809 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347010487 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.329730494 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.3327669 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.333005607 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346773503 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.337341234 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.775758339 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.32533814 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335190297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.749120855 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.333158766 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.777776462 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.336357405 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332218086 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.345375708 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.363231637 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.346084154 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324051353 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.330766053 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.339558294 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.330585377 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.340860695 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345323585 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335838043 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.333005446 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345999624 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.365389859 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.34250077 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.333850542 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340988065 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.352925395 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.339934084 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.34353323 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.335957336 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327639506 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.3414161 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335465389 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334932298 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.335773712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.337803553 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342994606 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.754180347 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347409003 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328577522 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.330122746 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331350344 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.34566089 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.752379413 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.330648727 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.355012566 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380613028 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.335859716 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.378979397 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.337451497 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348956225 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.342825171 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.337083199 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.328604174 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.342179453 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.743179229 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.34480197 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.335752168 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.332667531 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349905985 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.335273769 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330758178 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.388226726 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.334687941 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348472765 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.453633136 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.343813577 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.365543643 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.332818231 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.338321148 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363148431 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350163048 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.367147509 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33670873 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349563059 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.350246725 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330343409 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.34684521 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.345146396 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336776631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.341348709 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.32952276 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.369053543 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348204763 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348145382 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.354483825 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456220814 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.332384648 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.382158979 seconds)
done (took 224.940375754 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.394818291 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.326449644 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.443478702 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.334110503 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432968093 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.429819431 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.33156215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.330804287 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330554949 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.712032026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331601842 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.330734515 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.329790644 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331976718 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.415177197 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.333988806 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.33147345 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.675426947 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.333829245 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.404938699 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.326737874 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331407071 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.334129523 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.717584296 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.333177884 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.331200286 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403852031 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334364669 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.681271345 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.333554219 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.327778708 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.682285692 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42455465 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351035466 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344067029 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.340864183 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433966401 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.351176046 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.417228454 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.41675702 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.444113304 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37183825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.325475028 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333860922 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335881194 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.335004286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.331882375 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.359882843 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.327955977 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.331956989 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.67460495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344960787 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333284066 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.332389837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.333469535 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.363543842 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.332929514 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.336270959 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.424816779 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.336619285 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39828581 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.718708214 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.71327178 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336551677 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.330843769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334355073 seconds)
  done (took 148.5074749 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.401998575 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.408919741 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.449738968 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.333405147 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.386779929 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.452065706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.333572993 seconds)
  done (took 11.030967253 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3417842 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336880293 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386305973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385088099 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.335180624 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.482847569 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336633497 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347857932 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333378675 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389703826 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.338862464 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337492744 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345734828 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.336998825 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385280573 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348616636 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451278232 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337930773 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336858669 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490412699 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335547667 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345394867 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.390691936 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.348375006 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.340088234 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.344203466 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902627679 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337483409 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336019645 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338998373 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336514672 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.374943594 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.337943905 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.339360398 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336560797 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453352336 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339120056 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335596338 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339620332 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.340240047 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.338783237 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.338198498 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.339574116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.336139362 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339727475 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362878918 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.338100247 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.338474608 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.338995117 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.340641787 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390118913 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.340555551 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337988864 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.336350496 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.396108661 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346860935 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.339957848 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.336421117 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34147661 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338039116 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.493541607 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388198417 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.339604073 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387745332 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339740398 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339122187 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340573608 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.340784934 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393747073 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.34071629 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388832542 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.337909928 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.494686407 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.36262045 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340943601 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.343719752 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.34232652 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339311716 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.340545804 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.347151194 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.338419774 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.341417342 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.346358364 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3387204 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34019408 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.443829209 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44960226 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.338843483 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.352891939 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.346643127 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.339119846 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.393449509 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.341025153 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.33893206 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392820782 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455945274 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.393249366 seconds)
  done (took 153.754899315 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346442311 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.348516275 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.34161548 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.35761123 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.341973535 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.340437701 seconds)
  done (took 9.346174135 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.343580213 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343177167 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34227182 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.342973169 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.341439965 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.342781589 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.342316903 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344070689 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.345679721 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343071608 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.344902176 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.343747508 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345948481 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.342736622 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.342403205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.342250787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.343190762 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340079805 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.343798882 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343446313 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.439144647 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.342411281 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343247285 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.344000913 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348516364 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.343286861 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.351898735 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.342559365 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.34411162 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.350722334 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.344985917 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.345340765 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.345346376 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.349853516 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.347841659 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.344463801 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34811966 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.346585049 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340996569 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.346194137 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.347256986 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342908388 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.344833904 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.346565246 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.345040079 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.348870849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.350061021 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35302251 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.343949057 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.346447408 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.346465145 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345498307 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.346675045 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.346388109 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.349804081 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347103066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.350171525 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.34383131 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34526889 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.346533291 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34729744 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.347477225 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345795946 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.349924059 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353397803 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.346841212 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.346497187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34903628 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344214384 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.345305794 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.348098354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.343794947 seconds)
  done (took 99.25095129 seconds)
done (took 423.151410478 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.729625929 seconds)
  done (took 8.003030514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.417626841 seconds)
  done (took 7.693020117 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.166262829 seconds)
  done (took 21.448150815 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.417337081 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.335717346 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.34034221 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.341127528 seconds)
  done (took 26.710078357 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.857456407 seconds)
  done (took 8.133968013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.340281369 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.346354966 seconds)
  done (took 13.962975306 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.382950044 seconds)
  done (took 7.658630759 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.837592745 seconds)
  done (took 8.119192221 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.358890104 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.351680134 seconds)
  done (took 14.257141288 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.324484153 seconds)
  done (took 7.601189723 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.781560986 seconds)
  done (took 9.059053608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.34654509 seconds)
  done (took 7.622922051 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.382750595 seconds)
  done (took 7.657641627 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.230275386 seconds)
  done (took 9.507136051 seconds)
done (took 158.709223742 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.338889784 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.337305264 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.336809287 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.336298517 seconds)
  done (took 26.624097591 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.379931511 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.380153267 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.382928979 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390538238 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.384614189 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.380117643 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.373796517 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.373525139 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.390579992 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.383624202 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.382920104 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38403237 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.382037799 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.373712366 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.384632207 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.383177296 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392611542 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385251389 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.372805321 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.38340451 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.34794728 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.392768544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.384068314 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.348627816 seconds)
  done (took 34.395202206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.547046699 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.418568276 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.500704755 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.399820301 seconds)
  done (took 7.142754521 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.399919471 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.402405422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.413012543 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.453440377 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.478695594 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.409734413 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.3730298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370351346 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.35620691 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.402188522 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.478241158 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420361986 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.487308044 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.350024265 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.535242931 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.349586881 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.34819378 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.401039775 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.454179676 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470466411 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.349378198 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.401505312 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.40390273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.418332085 seconds)
  done (took 35.204713318 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.349004633 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.358163644 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.354502667 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.348707766 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.348595875 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.34883864 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.353390634 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.349365249 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.370238429 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.34972722 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.347781201 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.348846063 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.348108645 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.350002424 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.347751119 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.362101672 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.363299665 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.349065135 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.352723495 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.356186752 seconds)
  done (took 28.335156981 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.342201471 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.195719508 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.69420879 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.597740322 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.343162852 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.341404254 seconds)
  done (took 27.792987516 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.418175252 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.555334648 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.350736575 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.724705573 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.805827148 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.351112904 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.351018557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.594696579 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.908587112 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.908419845 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.404097986 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419685436 seconds)
  done (took 20.072250171 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.359087849 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.345071398 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.349935019 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.360897688 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.40912877 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.355702227 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.358436016 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.343900123 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407978234 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.410938451 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.355025876 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.409457001 seconds)
  done (took 37.748675232 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435026083 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39903083 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.433279186 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177661226 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.730823328 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556088988 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.230080067 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.791645708 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.35192974 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620630035 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34834303 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437728611 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602651638 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344821731 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347133462 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.385034722 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573025303 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86307827 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347636388 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.384699277 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372623706 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356755577 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.480757631 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.37424156 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55965259 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.480745698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.607382717 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348473792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633627096 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360364929 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359080252 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347402471 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623176385 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055100241 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440501882 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357817805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.222606525 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.061396592 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.352163148 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.397006912 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357474341 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350249733 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358352201 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349621717 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.282239571 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348508635 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804709106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.355093905 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.05849579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348256183 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359674477 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443159217 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35157132 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.165516316 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405066006 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347204108 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.348487576 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354643092 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923639383 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.937201451 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350142575 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.284908306 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.823438435 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.394357771 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01716071 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.452588282 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.353821871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353205458 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28368335 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.394708104 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367632707 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487906738 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.367716557 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013029686 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112314689 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350447582 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280539179 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91809714 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358741812 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.284923625 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579555497 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351984477 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289908744 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.309335385 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284576707 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102809538 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359841079 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.807394575 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360073373 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800628807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.364092168 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36950318 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373925027 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576826137 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.234311773 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353137476 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.350936911 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487071584 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370766608 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.800880261 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287568361 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.35226654 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608183697 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.562765001 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366438683 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.384761632 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562824215 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360026377 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.367964917 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352130509 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.362699466 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.952886242 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364985009 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.938133381 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369513038 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352074779 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173253135 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357385425 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.453678908 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368214587 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610619717 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.176607277 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355761963 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436854052 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356349315 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354034161 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.506410101 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.872468446 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35285809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.353959616 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35541561 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.364505352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.352056698 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311747821 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.359285309 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368396768 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.355877414 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578350457 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352991002 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630083131 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286984832 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491891086 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454217286 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.576399217 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.566113418 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.352222393 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613695771 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360825403 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355262795 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366515567 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372595773 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452126643 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375821273 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.358432854 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610520684 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.819156235 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35927858 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.513938875 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357716421 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356363447 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.359711353 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238489269 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958156047 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325411404 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361869196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249454584 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.367653163 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418876711 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35972892 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.365644143 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.239390279 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319767923 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.360185245 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.35108518 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580061847 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365144091 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.417915342 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436716414 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.56223047 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954938038 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370679001 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.289507514 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.06555831 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.048737022 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356437941 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.291569017 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355057841 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365647171 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367258667 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.000972542 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958573801 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358605361 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.407688798 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.36081511 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366934091 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36152669 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356903445 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.223761666 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954439536 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371797806 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.368033729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499720189 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.369624122 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290938856 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.361877129 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361453801 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35814469 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35814979 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390069309 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.412585158 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855149885 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616245554 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.186860972 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370743092 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.520141387 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.387517454 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.357396535 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357622982 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368470518 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.360392688 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378228165 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.368099753 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.428035027 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.02789106 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927559591 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12960991 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901670361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365797159 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.36095713 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35933737 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811443597 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292295335 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918454643 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555099771 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.809407446 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31518927 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563441096 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.570380145 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148962252 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368769902 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588875925 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361788788 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.375595026 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369908246 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569979811 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394128911 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36523545 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289463541 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.641697149 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679135929 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356856041 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441294644 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816991669 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365953485 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361663863 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.356197286 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.79992347 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536735136 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.079807457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538809074 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358870655 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361631565 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881890613 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367958656 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.589797714 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012670649 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372700481 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.568975255 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301099974 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.372168468 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371620212 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.361148879 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.741560289 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.358987361 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.618080437 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371626775 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295400203 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361727351 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922226447 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.216853627 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.365849806 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361839997 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1541805 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372607306 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650550422 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.369324893 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.217623554 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368615687 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296713623 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295579202 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.054379569 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365127594 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329669646 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871015646 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.777323563 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.405067871 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394115973 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213990649 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618030411 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.376621168 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963314807 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59071113 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.298169602 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386567225 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.462616319 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361024774 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.34821015 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362493932 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599157882 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244208202 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587624107 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.459176717 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.275298686 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360775631 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575818725 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361280475 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373418826 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616846752 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.074129107 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.375460375 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130686388 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389492782 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375999547 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284581491 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.836873828 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370834282 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442553393 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375281954 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.37542799 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.374433307 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541965298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369518029 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365736866 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.3766444 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460595569 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.98185086 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.229016497 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.367907709 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982440037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152319208 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.972161332 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377734736 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363843616 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364791295 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297508895 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511727933 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.594807269 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639413671 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484398465 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.918193554 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386126575 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376279516 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366690624 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577547955 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639008673 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.264746916 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367537585 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380971251 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.365372538 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376592644 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.576466526 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889075614 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961259406 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489653893 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374063032 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819275484 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641071172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366419405 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364277762 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959827902 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.379803078 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.804892529 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.371652016 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364634231 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513217952 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376668462 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067009984 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.375064783 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.524505082 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.138631276 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.45463445 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624028509 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.896958023 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.378583655 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970993343 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095474034 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63183922 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432938284 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376662928 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490667394 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513701797 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.367158657 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36839098 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366624494 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216600825 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.077083242 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.377439397 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982184126 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634098023 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.363360559 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.365742459 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391059628 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.378201761 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592439743 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13063829 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594678643 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376914272 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372458782 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189195765 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980631033 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382166306 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303070095 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.369156993 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620150499 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607055126 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391934889 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.821131376 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.080181568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954158698 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.343152542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390903228 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375520726 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104736257 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980136145 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.240386601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887976866 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928479162 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369127341 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655899019 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.373632009 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377352157 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64444628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.371701725 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382575042 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380695878 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.975984195 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171299314 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.389627106 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.470477472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.306704929 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71570706 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062587142 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307364939 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372232369 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.561962758 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370169997 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4900052 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379604017 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.380406729 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369925552 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.104502549 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649605306 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.374451398 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.359827279 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.373045087 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377859174 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374797228 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61173675 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375814362 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.039757223 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.723272094 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627455243 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371030753 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.356497205 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.373796715 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372041359 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.368475017 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.578460199 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.020879045 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947107375 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.376764084 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.382035548 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374986787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.587016301 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583022015 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385921946 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385534853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378156813 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388690169 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.279001826 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.880786087 seconds)
  done (took 1612.792314973 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.378972505 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.406555913 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.382729531 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.377200215 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.403583842 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.398648336 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.427771236 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394540694 seconds)
  done (took 52.476797847 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.370519464 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.593809977 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.401708988 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.386736234 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.379819323 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.385916209 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.832385722 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.382540667 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.381498032 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.380765524 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.38470665 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.379632266 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.022207352 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.378719583 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.375739508 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.361726933 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.376920245 seconds)
  done (took 66.088895457 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.377218712 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.546126946 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.484022971 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.373424932 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.657090669 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.37685141 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.55950402 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.435461975 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.378037566 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.480223069 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.047644316 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.419573199 seconds)
  done (took 80.443451021 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.381262914 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.380479307 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.379390775 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.380252801 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.380400086 seconds)
  done (took 8.209406651 seconds)
done (took 2038.603591428 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.688379676 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.105799552 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121463702 seconds)
  done (took 5.535003499 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.521417565 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.568138942 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.701777173 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.727296425 seconds)
  done (took 7.827774061 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.650093685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.742347824 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.562229556 seconds)
  done (took 6.261908164 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.839677353 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.38775292 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.497905787 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.375225785 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.375658394 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.375404295 seconds)
  done (took 20.435966748 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.379359522 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.380670578 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.378179658 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.382025354 seconds)
  done (took 6.828899917 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.359524686 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.117824558 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.360429403 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.376600276 seconds)
  done (took 18.523020398 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.128196386 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.137948716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.123490107 seconds)
  done (took 7.698668345 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.389280998 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.219700539 seconds)
  done (took 9.917894171 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.677817915 seconds)
  done (took 2.986446995 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.511928319 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.647607208 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.450436752 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.374942779 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.471326971 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.409382958 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.08348048 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.638467936 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.358912319 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.668419199 seconds)
  done (took 28.925163711 seconds)
done (took 128.663211026 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.296586927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.38824095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.578411661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.266578189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.611825252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.577411019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.663067786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.237687007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.80440348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.770081525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.272934948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.607695587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.612282956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.39076529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.611605596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398521447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.609366666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.337116597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.953432015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.155703954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.662683819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.900963211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.100058164 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.101883104 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.61124154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.53126622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.497680088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.386589983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.12904851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.521664908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.528164065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.328097638 seconds)
  done (took 192.752275564 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377170842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.37580929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.375461333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.391015342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.376692421 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.376335071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.381264034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.375122328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374939549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.375070855 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.385275345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386569049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.377941322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.376613245 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.390639058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.375866347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.386415593 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.387677442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.375571188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389194352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.377277907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.387270175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.391843817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.389364504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390703004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.376142119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.376653371 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385226353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.377334529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.376531492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.378699474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.376475314 seconds)
  done (took 205.506381064 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.379794229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.37727282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.377439148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.377820853 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.395038946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.379835646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.377707941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.378472973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.377136462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390858684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.378896062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.378340723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394521624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.377469863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.37900496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.390742571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.394639158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.379405974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.386257005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389772107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.386612392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.386121861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.386762944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.382815651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.378503786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.396398381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.37838222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378186282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3781323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.389060543 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.378936577 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378314603 seconds)
  done (took 205.57299806 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.585384884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.387202077 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39068666 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.351391103 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.389019838 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.389861072 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.382953888 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.59147508 seconds)
  done (took 14.782336776 seconds)
done (took 619.924180946 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.768569019 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.517796798 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.593279178 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.411021094 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.2045117 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.408291567 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.41266296 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.589891991 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.321993925 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.590362729 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.675836116 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404163841 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.817808648 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.405184626 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.671568677 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.509077712 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.298624993 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.391689483 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.731520586 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.965180083 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.674161605 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.931520585 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.588228188 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.352500025 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.831090787 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.931120052 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.120679154 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.297669666 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.408829036 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.737815025 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.111365669 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.476016734 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.468151104 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.452029537 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.507926842 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.493353112 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.347446147 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.447441107 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.59951789 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.645919615 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.976086192 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.140615658 seconds)
  done (took 94.543550383 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.37906968 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.379032836 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.377786133 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.379543203 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.37917419 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.378727463 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.37720273 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.378226075 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.380310728 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.377499443 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.379105271 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.381098437 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.378967687 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.38121474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.379477071 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.379591863 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.380562187 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.381080703 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.379112475 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.379111117 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.379543301 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.378169886 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.379897055 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.378524479 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.379906245 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.380350433 seconds)
  done (took 37.181352945 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.392874474 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.635561133 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.822572596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.398310742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.391388256 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.395548139 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.473770103 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.394332249 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.396398807 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.394511221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.554614955 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.396166049 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430855083 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.821210797 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.39330853 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.393258699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.394808879 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.392997701 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.640490505 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402248567 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.475924799 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396015445 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.476597152 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.404407924 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.397054193 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.393579254 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.399061368 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.891314409 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.392925579 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.555258179 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.197974136 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.471706379 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.847722794 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.826468713 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.199835906 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.396157897 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.395963232 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.559357018 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.393905903 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.394451335 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.473322216 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.39552958 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.835734313 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.025764016 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.409116198 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.396237175 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.917497601 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.557628018 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.65198837 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.400985876 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.844614704 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.395565723 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.39740672 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.395366918 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.65259106 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.399154962 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.393987177 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.936572359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.39857623 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.475272338 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.395386789 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.396546732 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.648489166 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.395161225 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.637113561 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.395853611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.404719138 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.397620456 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.824691544 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.395572416 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.05018409 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.40991007 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.396557416 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.558297905 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.633707935 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944579241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.398424447 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.650561054 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857385198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.473438372 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.397615928 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.883325473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.476771508 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.397850554 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.398760412 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.398925412 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.397954968 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.44040845 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.474206935 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.9808874 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.043949804 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.952039113 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477238412 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.409560292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.397445625 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.941325441 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.411531474 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.397443713 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.829580596 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.049620218 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.410284694 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.405016964 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.03397862 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.411760637 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.478176415 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.399837359 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.838791802 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.396936325 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.448815027 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.398298923 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.406098118 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.401173357 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.478627941 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.401651862 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.398869972 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.029662421 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.579663244 seconds)
  done (took 182.996117591 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.391222195 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.389038095 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.391237158 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.404484045 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.391914059 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.398282677 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.390959033 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.393196012 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.398055965 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.391413562 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.39449159 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.392414843 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.393742838 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.391663895 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.401659658 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.39954875 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.001622145 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.393533588 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.392913375 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.390238505 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.192072179 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.395326591 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.392497394 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.391679655 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.395067341 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.394533495 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.401780897 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.393680915 seconds)
  done (took 153.775077349 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.401722864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.008378508 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.40184907 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.536933429 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.422526907 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.399526223 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.535442049 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.460857871 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.402457032 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.397117669 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.398855084 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.711658429 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.400189812 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.93579739 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.59275722 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.539214284 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.931137562 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400653227 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.400271823 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.398837883 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.538732907 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.408254654 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.724018452 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.001794717 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.400713943 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.010650631 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.391417055 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.401510525 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.400435295 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01081113 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.40065005 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.728760537 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.483652542 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.464465343 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.013750045 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.955827316 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.959890502 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.549956544 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.40139009 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.401479406 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.401608205 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.390040179 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.986200327 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.402448049 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.403716724 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.980018218 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.416252773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.405254367 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.41283395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.401794565 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.464897001 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.468494871 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.720356399 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.990189559 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.482578431 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.424764161 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.539196199 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.782307024 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.404259125 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.944808944 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.389512157 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.992596 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.405083802 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392466274 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.405629652 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.409796721 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.561751762 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.540558844 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.958736153 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.406125007 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.962671798 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.563922148 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.404816734 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.403558801 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.406600725 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.991402549 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.962244854 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.560577067 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.54362296 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.604126207 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.39473751 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.402076222 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.393056112 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.483065449 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.403237006 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.991092505 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.959595179 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404612531 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.406052444 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.407152246 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.406077635 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.587030748 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.992299606 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.484013062 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.953149736 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.730981868 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.716721516 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.40420267 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.466239429 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.406425691 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.721131448 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.405276196 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.465388018 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.849758369 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.721713918 seconds)
  done (took 167.500254311 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.656238017 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.649616884 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.499716029 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.522301512 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.948448413 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.984256257 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.662130772 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.528964328 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.514520298 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.663218481 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.638779602 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.497480308 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.597400319 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.499580621 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.140801473 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.477867915 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.499789877 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.534478096 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.519744718 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.464956626 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.043484103 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.697117096 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.585078949 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.607442591 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.503863637 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.221210139 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.972640306 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.913694422 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.57457793 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.736450935 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.92494965 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.575095236 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.356551901 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.080639571 seconds)
  done (took 67.627551626 seconds)
done (took 704.93908199 seconds)
SAVING RESULT...
DONE!
