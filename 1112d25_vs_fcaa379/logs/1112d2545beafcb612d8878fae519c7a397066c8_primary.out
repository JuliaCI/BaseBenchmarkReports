cset: moving following pidspec: 492
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.878455964 seconds)
loading group "string"... done (took 0.634781321 seconds)
loading group "linalg"... done (took 11.515540618 seconds)
loading group "parallel"... done (took 0.252661148 seconds)
loading group "find"... done (took 1.552459089 seconds)
loading group "tuple"... done (took 2.432713499 seconds)
loading group "dates"... done (took 1.619906019 seconds)
loading group "micro"... done (took 0.22753916 seconds)
loading group "io"... done (took 0.656979333 seconds)
loading group "scalar"... done (took 61.332287277 seconds)
loading group "sparse"... done (took 15.96972449 seconds)
loading group "broadcast"... done (took 1.474457281 seconds)
loading group "union"... done (took 12.227401822 seconds)
loading group "simd"... done (took 3.692070483 seconds)
loading group "random"... done (took 14.152271779 seconds)
loading group "problem"... done (took 2.508417545 seconds)
loading group "array"... done (took 27.56858875 seconds)
loading group "misc"... done (took 1.480769221 seconds)
loading group "sort"... done (took 4.242203186 seconds)
loading group "collection"... done (took 23.942032212 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.845890942 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.162829098 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.277177324 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.42544022 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.296692439 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167470134 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.171295264 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.391441605 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.292176412 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.270215046 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.162477818 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.634407747 seconds)
done (took 6.813915908 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.272175718 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.369137738 seconds)
    (2/2) benchmarking "String"...
    done (took 0.189737665 seconds)
  done (took 1.211160943 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075784547 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.194626907 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.117231009 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.117824315 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.117381386 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.116807066 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.116147976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.116758465 seconds)
  done (took 1.553011231 seconds)
done (took 3.776015126 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.610921122 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.916930002 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.597289786 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.197075309 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.354977091 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.46310254 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.403108098 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221085645 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.113046388 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112423453 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.206782244 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427648067 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.545089918 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.124342414 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.113364881 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112652245 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.145166161 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.821112815 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.094410047 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122267363 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.647807667 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.229170281 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113849159 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.118627746 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.201734033 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134584812 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.185203524 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.095276943 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681635702 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135286818 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213038122 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099636051 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182843375 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.266866472 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.262002805 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093984735 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690230372 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201888685 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121967555 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10314762 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677363281 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.221574816 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.183702149 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.11086567 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11138458 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194055044 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.12260732 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095802136 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.119333917 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103802241 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162868954 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.471056929 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.093628893 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.182791701 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092907269 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.715882712 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101190816 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.294082012 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129995173 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107168091 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09016616 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.092342056 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173406365 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112758472 seconds)
  done (took 21.946145079 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.184136051 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.201189567 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079466337 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160636921 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.152859399 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097032122 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084571616 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094269865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13331442 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.260098997 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.147780925 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.202008924 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074955224 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102185807 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.15160043 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.258165824 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126390948 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127130774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085654092 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110922095 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145255623 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.1166049 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112309445 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098911578 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.188545269 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204090461 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107715161 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121546842 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099536443 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12145441 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141727391 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.166939993 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075824229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.100344216 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.202390961 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119873173 seconds)
  done (took 5.638617775 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.259517981 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10871124 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.274133395 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180405937 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154133262 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.191158958 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155302164 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.336565752 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.313510542 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169044316 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128607517 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112939111 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094109022 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086600106 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096380238 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.875897336 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.194942815 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155215989 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179127105 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104753703 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087413924 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.388458068 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100414945 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100114233 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087333803 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094083284 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.241831514 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103001166 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.324909492 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104019506 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10946801 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131546676 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192153047 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.227582486 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137388367 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153085111 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102208896 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082150019 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.246701493 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117192535 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077149256 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13425583 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13404857 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13753552 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101386128 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111648161 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.252702713 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082992133 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13247995 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.251174012 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201077131 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145833278 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10171298 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.350465657 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116982598 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09112793 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10066107 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.352948435 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141003859 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080269131 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098353403 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101338493 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078997642 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.462347658 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112508844 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.861188286 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084201093 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.193813887 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10418873 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090887936 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103602848 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102976814 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102893059 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097422106 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078717319 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097016707 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09608048 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086174015 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122831923 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102636749 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081332345 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163165093 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097894755 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09865736 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118266375 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126721909 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104464884 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081059285 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129332994 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097836044 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101542392 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.189700628 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109541056 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08324893 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123025965 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106069498 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141377436 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096986817 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.23436242 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096712285 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08318596 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126171848 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101254448 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127230253 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118110037 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097355289 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101800734 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078562861 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097550511 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148661154 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093980973 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082122559 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104202933 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114146017 seconds)
  done (took 25.27246532 seconds)
done (took 53.511199582 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.620330315 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.146204637 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129259339 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.126789186 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12725807 seconds)
  done (took 1.89611469 seconds)
done (took 2.612014293 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.418266823 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.218133166 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.129740566 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195351843 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108648626 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.204624379 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.203235074 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120648599 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220994357 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10184674 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.213926645 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086735673 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108979633 seconds)
  done (took 3.076071819 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099248108 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.133059762 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118730727 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098717745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095953104 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098457146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11324657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131669962 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097404887 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10726699 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096034446 seconds)
  done (took 1.899469709 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095566295 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125338273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086614651 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11197918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096820702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095584865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112680948 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.128156424 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094977615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11004025 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0793394 seconds)
  done (took 1.847961889 seconds)
done (took 7.529896505 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.527100523 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 14.024344429 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.15953973 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.233222556 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.424115994 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296121384 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.831541987 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.178247828 seconds)
  done (took 18.58385665 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.191247395 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103424026 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086363419 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102605782 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103385093 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086035652 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099875955 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08728864 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100707981 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100021226 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086429656 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100937291 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08655021 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100362832 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101177469 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085975497 seconds)
  done (took 2.411353777 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142623368 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142349746 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094134905 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112164352 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106902149 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092294108 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111197667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.108572468 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105540709 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092151019 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111788762 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110740351 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095461354 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.104857952 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10893378 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112582333 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091963103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108728038 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109432735 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09536966 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110754989 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.107815091 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109218228 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096422391 seconds)
  done (took 3.397224325 seconds)
done (took 25.106312455 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.193074993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099834528 seconds)
  done (took 1.017036488 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.16205516 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163204839 seconds)
  done (took 1.053593053 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.133271202 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083258484 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164891159 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108196936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098547234 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097746304 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.144068264 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100100342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084778099 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098778741 seconds)
  done (took 1.843877044 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089487841 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103883202 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.114253489 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160259744 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114549838 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090813965 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103633593 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102818294 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.090843733 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099751882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.110507066 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126965643 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107918064 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130235665 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090041018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111513558 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116459773 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108172006 seconds)
  done (took 2.700130498 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083441394 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100458175 seconds)
  done (took 0.917066215 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092197441 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100125547 seconds)
    (3/7) benchmarking "month"...
    done (took 0.105504222 seconds)
    (4/7) benchmarking "year"...
    done (took 0.091343896 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100190689 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09953114 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.086745454 seconds)
  done (took 1.408907718 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.767673362 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.351340527 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.603147626 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.126900681 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.195195289 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.581196137 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.199932848 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.121591741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120076585 seconds)
  done (took 3.846610171 seconds)
done (took 13.516969759 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09132136 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.242605825 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.765305146 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122973546 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083637192 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156838363 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.369546439 seconds)
done (took 2.572652577 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.375117629 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.169277463 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076049676 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096094612 seconds)
  done (took 1.449427911 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078730457 seconds)
    (2/2) benchmarking "read"...
    done (took 0.108016916 seconds)
  done (took 0.924523683 seconds)
done (took 3.119738202 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081655128 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.135282728 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097224429 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080513246 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.097225021 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081580096 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.097343412 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081081884 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095870014 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081188788 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094379981 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.095614314 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081419682 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095530957 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081126774 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095133553 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081158688 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0967071 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081211829 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095384579 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08108071 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096272662 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096129034 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081271057 seconds)
  done (took 2.959083963 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110799729 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101249973 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106000473 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.105880733 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092168816 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104572256 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106195669 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086552555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10533107 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100169 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091635494 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105793976 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100135091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.106256699 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085774683 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106787688 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105622412 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087092148 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100410102 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106577147 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09085627 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101165003 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106401948 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090697723 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107116095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106003176 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08641749 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101155214 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105724042 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10662511 seconds)
  done (took 3.7621915 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092462453 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094376299 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083111791 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105998409 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080090786 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098139048 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094108682 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080722594 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099682342 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081663844 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099993743 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083160564 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094912408 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098916344 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.085205766 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101674658 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094174002 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094513255 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080781229 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100508792 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100442031 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080160212 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097787425 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082747679 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097005891 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079618143 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098207317 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082846079 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098240979 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096391674 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085362697 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100318524 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084808419 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108191572 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101321308 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082902671 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104214017 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080036552 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100881233 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079511706 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094276608 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096568951 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079948373 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106932153 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083314288 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099059988 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08106031 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100384305 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099169464 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.087749684 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094032823 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079611603 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100973586 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085577814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100856446 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094593709 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083948071 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094422788 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084525379 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097742671 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079384205 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094471223 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101385245 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084838851 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117389781 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105965814 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080348384 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100901572 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084803238 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.103148529 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.087020712 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111307277 seconds)
  done (took 7.428332612 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098895811 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111730727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08680694 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100839925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099173499 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087331178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10881305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098313993 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086246022 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110816331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099145471 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085656547 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101002958 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086024671 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099693708 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100724242 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094997495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10012069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085297589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100690899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100020933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093910276 seconds)
  done (took 2.887643853 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279983072 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108481696 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.157580398 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122868053 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.127184304 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120715988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.209813585 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106151442 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104606872 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112110533 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09741652 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104629578 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126557056 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112739336 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112599222 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098910819 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104806696 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113509985 seconds)
  done (took 3.073080715 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105247541 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102984786 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127851055 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087380811 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102962391 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103366508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097616212 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119198548 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102891562 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10349355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098807736 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102731365 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101824443 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086796975 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10210038 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08814772 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101908864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102695551 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114797431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097248092 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114840655 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115141379 seconds)
  done (took 3.032199886 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105508452 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102486107 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.141402156 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107813125 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085699779 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100155263 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094263452 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102099366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110858898 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086233843 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102069919 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100710515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.098227495 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102129294 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.112356385 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088371084 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102245239 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102777558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08694037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101208874 seconds)
  done (took 2.787469898 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195496709 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118517945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102487516 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132697414 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117905576 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117435232 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133374734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103118369 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117158099 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136758186 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117371297 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102818229 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132883981 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127697099 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117898817 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133289431 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132881743 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133742752 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102127822 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118293224 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137440729 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117368534 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132978042 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102860388 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118370793 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1173009 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102744539 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126816403 seconds)
  done (took 4.206628487 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083494848 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098572381 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083546094 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098551757 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083357103 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099358166 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08333854 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098587024 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083952112 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097468855 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.098905537 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083052324 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098713592 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083269552 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100214496 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.083258217 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098610974 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083502054 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098637045 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083948913 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098254257 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099506556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083494035 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099708665 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083844324 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098802166 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08334261 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099071035 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083420371 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09823401 seconds)
  done (took 3.508911615 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097840138 seconds)
    (2/2) benchmarking "in"...
    done (took 0.113931304 seconds)
  done (took 0.972899086 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093242075 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123160496 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.099587478 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085279017 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113509837 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086045799 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113640541 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112653778 seconds)
  done (took 1.58686612 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.195250929 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166015478 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.108391883 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099189155 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.18013205 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.17526149 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159068646 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091467136 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103552594 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0946232 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157958287 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080104023 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105153878 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102191105 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10695402 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112028704 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101936046 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095463396 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.110522729 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087326775 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106190414 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114973187 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109032479 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09577938 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098230814 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09366181 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110984622 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.115281296 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087335936 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108366793 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.121368386 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085896418 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105522852 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107686811 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085685098 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162398023 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116193522 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121478324 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090294683 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107617224 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111891259 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085813089 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109385916 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10324614 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093831409 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106560845 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107625939 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086019239 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098295177 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082290489 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101932196 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100892335 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084866612 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108206381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107444839 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100052129 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103605964 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083010227 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.100643896 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101162222 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089227873 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102545709 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109667137 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088810267 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10382764 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106531429 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090488645 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10204418 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087130569 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101983155 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10687295 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118430417 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109168051 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.1085139 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092314973 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102477691 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104025619 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094052188 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106415609 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108424585 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091634183 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110885109 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088415377 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101243537 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102329132 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093222176 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10398667 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10459701 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07949841 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118892256 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089040167 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101756222 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099720442 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089309354 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.119754437 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09030569 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098532992 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108130389 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.084314602 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109514928 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108923976 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08271239 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11098151 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092529828 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108418083 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10718493 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15645393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104062398 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085429963 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104806579 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092651996 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099533492 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.117135106 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083796579 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100482363 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085800811 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109259371 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108509903 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087715706 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108044034 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088446569 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109667325 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10529478 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084045246 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102183563 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091114627 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114066191 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110548497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088248773 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102669304 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.103552855 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090997334 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10731622 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108322284 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091757562 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105528908 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.084862152 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10384279 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108773592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091881407 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103539496 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10691984 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092051574 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107157635 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105760027 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092562414 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10208627 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081999428 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108480255 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10386375 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087027691 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114593311 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103152022 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087867797 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102412996 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115031842 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087066019 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.109450864 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087881273 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108215716 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109889623 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07980336 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104719376 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08888948 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110455196 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104204245 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086631046 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102366165 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109569263 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082753081 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.1076005 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081799166 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101042321 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093319861 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102977686 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.1065976 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086214558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121653008 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119007016 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093200803 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108781988 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107147122 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090635226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107656484 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107957967 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093090135 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.110065666 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089251669 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104761111 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109863797 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083373842 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.105527478 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092884819 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108563102 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097916719 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087791695 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097713416 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091532086 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11192144 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108379335 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.092783403 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105305259 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107326189 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097824436 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.122303907 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.108065514 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08337699 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108284282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097018443 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11075454 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111177096 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09295098 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106309038 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.105180294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098635639 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105550721 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091539097 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113461042 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.1007575 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083279082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.1111075 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089655087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103428779 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.103690016 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093589338 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11295715 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106143302 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083528042 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.11027588 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097244323 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102335881 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109713019 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086752664 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107283681 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12039467 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083659676 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103327201 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112573775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091834722 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.103074957 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088895941 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105786197 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119370035 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089837001 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.105886108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089371523 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111711801 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106838993 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.085082728 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104765019 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089194076 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099953735 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.106139857 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093177288 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105427458 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104672662 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097351451 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112424753 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111251538 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090301016 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.109066001 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09455971 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.111066555 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102360161 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.094839072 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103718625 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084279387 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104649975 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098527669 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089044275 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104377429 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.093455256 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106428877 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108684261 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091097616 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111359086 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106620724 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095178466 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124017298 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101268059 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084221935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106571263 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109518108 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087686613 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105673156 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.105844557 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093005044 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.110272773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112900599 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084356087 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103879602 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09228523 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105400834 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09413942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.110693245 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111968873 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086691222 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.109170999 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105950103 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097449299 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102159052 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109005404 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090992051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109243876 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106824656 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089086669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104471186 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083438452 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105113838 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111770145 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084063099 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109118823 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089611656 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106112004 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101830279 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086240168 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112067952 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084638768 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.113373692 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103578688 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084111492 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10148314 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.093499885 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109170838 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.111091224 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08680635 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107790427 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112701197 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089616297 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.104360241 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09721645 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11365888 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112412506 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099215742 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100426781 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106629278 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098222089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103908352 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08965995 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105924554 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10245523 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09498849 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111676948 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110224403 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089202648 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102439802 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088091167 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.112042815 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.108751946 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090140678 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105596368 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09272692 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104898155 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108431589 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092998285 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109197572 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095796925 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109273242 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108380047 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088744873 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110720584 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.106643576 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084731214 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101393183 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088762021 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.113344962 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082017751 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.108301344 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110225619 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088204806 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106754272 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.109896494 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086803183 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108027437 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091970701 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105081551 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11791468 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086967945 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105067525 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09240567 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109920162 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102484419 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088149981 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10424915 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095993532 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107523265 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110243218 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091634088 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109797186 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.106719493 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.091391571 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.110427485 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094375421 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10192604 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113217542 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096564932 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10655017 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089095218 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106647687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101885192 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090313522 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112339094 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107549141 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097672923 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111858017 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090251779 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106446968 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.111291424 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09115192 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113980724 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103941541 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091910568 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10297895 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096379388 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107945499 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.112386476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087924402 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103014767 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110376553 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091620196 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108731552 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096728382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.112197605 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102051044 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084539734 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106743785 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089655282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117140433 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106346221 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089887964 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108721589 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.107775213 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087330024 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112976539 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085895341 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104748786 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110943171 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092309081 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103753969 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085034991 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108601521 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108706729 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092110275 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109221907 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103649802 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091359993 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113442866 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090031746 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10023228 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106820014 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095215863 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108153121 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106030854 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084511391 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118686462 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113120864 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095723306 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103454256 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092754838 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106167366 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106868502 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095666208 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106565531 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11069376 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089592918 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111666777 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117491104 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083264309 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103353817 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100878455 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10941059 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112936361 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.089887179 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108936255 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113470239 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095617623 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.110817639 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085007416 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103148998 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104521284 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084646192 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.107474645 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099407537 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108624609 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107561053 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091391559 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109821815 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090340188 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.107152678 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103110429 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096351594 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106373634 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115268865 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084636821 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101302788 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.090161046 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110870203 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087581548 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104700055 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106672651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089867708 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104112385 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09069477 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114628803 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109473179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.093679973 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109446618 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108057152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089125018 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119369746 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08770789 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106844465 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121193875 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.095906134 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110700698 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110403684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097329224 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113328036 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.108062525 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.095389612 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10784596 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086787842 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11418602 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.114455341 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122572389 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091288027 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101297406 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.092055718 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104905336 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085679443 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115041962 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114388585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09632686 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110298189 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106792818 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096891725 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10914381 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11101823 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090180806 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107834845 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.092909417 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107188042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.109782634 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088182466 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114392078 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.096127314 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110326518 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115284241 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083528511 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117994885 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114250126 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.096585574 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105936043 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08589842 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103188286 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.109375841 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095791743 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.112999626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091208113 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109347844 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091890435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.112096655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11075319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089854488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.114310096 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.111629267 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088455013 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112603088 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087812823 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104452708 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106038648 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.094244516 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114065521 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112180217 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101895747 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112782667 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090833286 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106760311 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112011055 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.090410917 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111608276 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110259513 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088909513 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103864827 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094369294 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114423106 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110224893 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096560486 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117384852 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10907348 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094918229 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11717847 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.093110838 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.108314701 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111509422 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.089893696 seconds)
  done (took 61.8059875 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.171484794 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098223892 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108555817 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10886117 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142691153 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092496155 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107996396 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10966481 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092451937 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123996514 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107835207 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089594365 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.136153618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146679013 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.158650833 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10738257 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108113411 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110475992 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09078308 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111831666 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135947029 seconds)
  done (took 3.271891029 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117374843 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129999133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129496073 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.134025632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12012902 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128116146 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.129295258 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12868391 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.135724159 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105005226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133152946 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12813155 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12308135 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122700708 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123611642 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123167204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133944046 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102442643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129852921 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1296982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122325193 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129684369 seconds)
  done (took 3.5671414 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098058867 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110875189 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09497369 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.107102954 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093330464 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.107578773 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119224441 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089078221 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.118575622 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.108623442 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.086570827 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.106647183 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.090846243 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.108499398 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.087709726 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.107589709 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.118829093 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.093156628 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.113629682 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089787545 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127389043 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.108357766 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.090556394 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105058141 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12382062 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096299662 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108086554 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093709417 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103531202 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.112860265 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.089474453 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.111107298 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11293953 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087945894 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103850826 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.093926843 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.111773879 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.090159178 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.108010751 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106477541 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.091722554 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113289893 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097661524 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.108895893 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108421046 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088020401 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112346525 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089526229 seconds)
  done (took 5.757112532 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153803326 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.175588436 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.117094522 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159475998 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136317267 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.127775983 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09482793 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157904074 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093982108 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.115117497 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.13968929 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.138303598 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117366847 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102742859 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113210109 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118757307 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100605175 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11463216 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124298682 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116092791 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10672158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119444352 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134159895 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135972706 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119662961 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1152929 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097046128 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.121401116 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.134810315 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127270131 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.12205569 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105138381 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135787883 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.121219286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115522221 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.117712977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.138930509 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.099342677 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116960581 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113180577 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09937648 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121567682 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119773808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.140301665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118665401 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102254464 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117711496 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.11316034 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.135252891 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.099065761 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128598477 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138995333 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12010214 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118901516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103191179 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135357486 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.117203666 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.114780304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.100116294 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.134617601 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.112526856 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120054522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138584604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.117533304 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107990124 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.138246198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120717047 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120228268 seconds)
  done (took 9.24036205 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127941255 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121867131 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139375121 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139024914 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124650049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122208899 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102700372 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121722499 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122387147 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132754676 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102683995 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.245045933 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117081991 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130887491 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102507058 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122218189 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12172008 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122207317 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102483889 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121865503 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122045371 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.138547866 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122455386 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13830875 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142370795 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098416647 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12100115 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122412825 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137890276 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122535695 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142885293 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122276056 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102588951 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13919564 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.14123416 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121968601 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111405529 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102648907 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122214292 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122207151 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116771665 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138082167 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10309095 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.117646591 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121797883 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102716622 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.138934252 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.15993254 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112285276 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133244547 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.122137895 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139274423 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122153254 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122797267 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.138282808 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151515672 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139214621 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138295226 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122623861 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.138610021 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13844721 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.152236568 seconds)
  done (took 8.73123743 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08954284 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10867423 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089947037 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109676563 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090367914 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109168227 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089493562 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108674712 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090392981 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108748853 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108858771 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089792473 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10921628 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090128548 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109012836 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090604884 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109763228 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090219025 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109315815 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09064827 seconds)
  done (took 2.815245742 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104204936 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.138711296 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11604459 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.126421327 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095236106 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126713026 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113815423 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095388269 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114889291 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095614273 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12928348 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130029025 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11597686 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.12592264 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129714947 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105084177 seconds)
  done (took 2.693187928 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122341036 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.139949796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.209465188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.097370296 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.116138432 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.124935045 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.094388543 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.115705376 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.092934159 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120949705 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.118381732 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.119094277 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.095151019 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.1138658 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.095037853 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.120307801 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.112475354 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099527651 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114128233 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186514829 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.1229053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11793755 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09621594 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118794855 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.120027002 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.102652949 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.122902473 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.11548363 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097638652 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114726105 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.118737466 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104962602 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113690259 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.119983384 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.094365791 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.116127165 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.113733745 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.096298348 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.120829617 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114664522 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.095969243 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.118554514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.095264787 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.117351848 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.113201371 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.096593254 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.112771924 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122049132 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097207744 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.120272188 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.114615453 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.102602939 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.120015515 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126789552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104872227 seconds)
  done (took 7.143324502 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109295485 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117960523 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.1319592 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091730437 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116217787 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.118048118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096715478 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117703143 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098177507 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111767144 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118815339 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097022986 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117619624 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116635073 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098624941 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116869122 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.111236917 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.096997769 seconds)
  done (took 2.819327505 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100456625 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101164913 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.116385077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.113862999 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09462642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11256234 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.092825677 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112421847 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.114629745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09435254 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.113818454 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092869495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113819324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114430044 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094614976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113958783 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092625307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114432976 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112520084 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094388548 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111926269 seconds)
  done (took 3.173951248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10876606 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.206193325 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105056432 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.219230701 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.092556379 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.113014237 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.124347917 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092111622 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.136429208 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.111883597 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.093104924 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.112126229 seconds)
  done (took 2.349674666 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123712998 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158666891 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116857954 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095747733 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134004638 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122551297 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122785873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123875041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117972781 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162518573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102480621 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137669853 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13695323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139721083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130856674 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1315803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122544898 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102440013 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116917408 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152134138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123780124 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13766448 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123746301 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103237027 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123394022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141407229 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139202349 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143448655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122986822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137839179 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130698414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102707617 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137228201 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144381569 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11567223 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138394056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122983113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151728464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132051146 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139275075 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095127553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130817928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137388221 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133965537 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13896148 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123597048 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132939251 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102988494 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123028126 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16140463 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132175255 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139932 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132195487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139041604 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138106068 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161663059 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143324851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13875658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130755661 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142998305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13978612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131880979 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139761693 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143702049 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131245039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140081756 seconds)
  done (took 9.510494242 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166352152 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097167636 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123878727 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144664075 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140293918 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123441798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123274745 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103129971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123460781 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117469803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180030313 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124117338 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140724696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140010879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103210692 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123104302 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123658733 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143003216 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118378715 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162511207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123330987 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139202582 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140107044 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139375003 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143267457 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131279744 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103847987 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123261105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123564481 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124416185 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113187331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12311262 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140469597 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118051524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140104216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123611988 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104069056 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13419599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12398346 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131669908 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140537286 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152709374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123685668 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103936027 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143902701 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12282897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123203721 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118581154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103418635 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118408876 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144003082 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14349849 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144180666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140428769 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124212867 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123425499 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102908116 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123820767 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124346738 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13162049 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139222341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103248179 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.182375483 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124345946 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10316242 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140010085 seconds)
  done (took 9.355961494 seconds)
done (took 169.178940468 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.169879141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191689617 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.166296337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175889763 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088954456 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146992291 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14516436 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.168179738 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087998506 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109095558 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108818874 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093413107 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.177773122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088489219 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.1088567 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114136279 seconds)
  done (took 2.979878316 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.224258651 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.366372833 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13387339 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.099321048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120978949 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113041543 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099020113 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.12169768 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.113946628 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106398675 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.113091583 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112515607 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125794124 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092936207 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.114687138 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092005734 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125664712 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.112539853 seconds)
  done (took 3.236671137 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118321385 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15529576 seconds)
  done (took 1.122535929 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130729613 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.221601323 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.341957456 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166688972 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117771541 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140530247 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16911885 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13036201 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.208747291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13883426 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.138345023 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114621474 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146198104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.125592336 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.108856038 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114765351 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1489867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.127104467 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.105738177 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.12039858 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145795199 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118399842 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105688764 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.127770226 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.200305448 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137942541 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.119272979 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117911053 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.100049949 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.126120193 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120513574 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13892577 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.137880763 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.195646984 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123630866 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.211930137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.125072053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097378353 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.126798985 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117875227 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124064748 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103398417 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13472921 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115122624 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.098323221 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125743297 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.119011514 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118864871 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10307474 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127883053 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123281979 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1200608 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189116424 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128678303 seconds)
  done (took 8.2910745 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.937562399 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161670146 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116698309 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.084896544 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145689642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133735358 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.915819556 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144159356 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.292121016 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.923584276 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136690206 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129623803 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.287251824 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.35978047 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.706470637 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.453931315 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.79379896 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133559123 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148355496 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.172909303 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129658142 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145671151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141785117 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453095054 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119031423 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115697364 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107172225 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129691948 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.213883919 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095065942 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122502122 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.244674336 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.365352245 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.252745691 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118239372 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093929275 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114728992 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.203517714 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.349493989 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.293597602 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.199797111 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090298323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115080799 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125218424 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140244368 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091056168 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.218832347 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.232056259 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.214648508 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123107852 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128415759 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129673871 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103912241 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.215549329 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112927461 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.448692594 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.47546591 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115901233 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107944551 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133510759 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.339702498 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094177362 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305512326 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149816758 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.264717857 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115649183 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873711628 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.227054084 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114578382 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102469705 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127073793 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125258671 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10382483 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.210740319 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.426109247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129228825 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101603021 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115516345 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.271889855 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.115396348 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093670834 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.220662251 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12020509 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127769012 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109947579 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128592951 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.231718158 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.353249179 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108315742 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129417981 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123865864 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132437415 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097584233 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.267554114 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.291853779 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.191135465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.270475449 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125598388 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.217585091 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.203432105 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124116746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.230037106 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105809827 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132697988 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125093498 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.267585117 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.183916937 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.095155457 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123285039 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129191015 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.165854175 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119651893 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107427134 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.227638564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.520626356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.22402184 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090721616 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.121042461 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128967072 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192648705 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127036327 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.33014584 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10899603 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.227064893 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127958588 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091148819 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129322631 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.217065405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127362105 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12858868 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105046644 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129206178 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.352842929 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.272211139 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129548794 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.28510412 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.207527841 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124590165 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.232554613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128285956 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200923547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130231728 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125138453 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119949053 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859572228 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134844997 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127719268 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102360727 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.232281929 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094035685 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116915932 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093691968 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112399025 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852782263 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11954935 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091497123 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.116790224 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124030277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127706835 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106947833 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124014174 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.21818118 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.290260532 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129317583 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126060968 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115698045 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.192209313 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120499665 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094388099 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115278854 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115601469 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10832918 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123684876 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116634319 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204959123 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.214360934 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.294063544 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.664038901 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116303185 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095052446 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307430531 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094072764 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.434076838 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130530027 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.281881586 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.223982097 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11388695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.447515402 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.222748707 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.21164024 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.120238814 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.229279807 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092307718 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129944159 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.214781571 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094304825 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127199107 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.211713825 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111627752 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130043433 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.705993218 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095018568 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.282752756 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.114774839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.207454599 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120792282 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124753229 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.404895149 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116420616 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136202813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.194493528 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124557986 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116485977 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.879360331 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.095991921 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131686349 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124600869 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.294940023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.19868966 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129700071 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130465459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129953201 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.195321636 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.264935001 seconds)
  done (took 52.057203088 seconds)
done (took 68.531666249 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.340140671 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.294178974 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.356698672 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243442067 seconds)
  done (took 2.220498255 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258077073 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.190836045 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.210153032 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114080721 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.22064556 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.113856735 seconds)
  done (took 1.981740244 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.585966383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.458016345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.394868772 seconds)
  done (took 2.314982588 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320659667 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.317957236 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358896003 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.566514109 seconds)
  done (took 2.555651618 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.307565668 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.146231982 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110156563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.20248909 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.268633263 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.229504589 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160202796 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175301948 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.140420742 seconds)
  done (took 2.66945779 seconds)
done (took 12.627394842 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.333486556 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.253096771 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.416773328 seconds)
    (4/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.409372434 seconds)
    (5/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.417641351 seconds)
    (6/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.17171937 seconds)
    (7/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.287263035 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.341706351 seconds)
    (9/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.192180952 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.189184688 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122806007 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.127706823 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.159202476 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.333620662 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216967845 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.426978797 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.21460219 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.209250462 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.122052019 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.342772338 seconds)
    (21/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.286728815 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.112919713 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134605912 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.252803022 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.259618452 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.160347227 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.119718327 seconds)
    (28/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.280640514 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.161364774 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.306770179 seconds)
    (31/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.211442022 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101429034 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.167143943 seconds)
    (34/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.256955099 seconds)
    (35/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.225918817 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.262572745 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.126740659 seconds)
    (38/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.206569165 seconds)
    (39/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.199967156 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.272856221 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.167840729 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.128577594 seconds)
    (43/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.105788878 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.178103232 seconds)
    (45/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.127047476 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.248388113 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.204350786 seconds)
    (48/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086826338 seconds)
    (49/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.108683822 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083995438 seconds)
    (51/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.210448107 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.191797189 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101261818 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11607087 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12420972 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112097673 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.326768581 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138608332 seconds)
    (59/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.126181607 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.211922307 seconds)
    (61/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.086200057 seconds)
    (62/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.192009115 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.141668089 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.233795934 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085240422 seconds)
    (66/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10659634 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101952332 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.213850504 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108974683 seconds)
    (70/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.104789722 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.1072231 seconds)
    (72/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.192649112 seconds)
    (73/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.227261614 seconds)
    (74/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.262039935 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093707392 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.11862447 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085346404 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.141682511 seconds)
    (79/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.213257739 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100841001 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.123808122 seconds)
    (82/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126051436 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088761343 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.142709042 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.232713265 seconds)
    (86/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094420872 seconds)
    (87/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.210730767 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.107338815 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.105015469 seconds)
    (90/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217916028 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124448941 seconds)
    (92/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086461333 seconds)
    (93/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.122252244 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093568888 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.127707809 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.107473326 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085904791 seconds)
    (98/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08458787 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124870142 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115668087 seconds)
    (101/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216813126 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.111146667 seconds)
    (103/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.212879664 seconds)
    (104/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106994323 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08589548 seconds)
    (106/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.183644494 seconds)
    (107/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086911949 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.202536984 seconds)
    (109/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.10807338 seconds)
    (110/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.313515786 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.12468276 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124880787 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.084453434 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086251441 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.126527425 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.158929445 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.126433026 seconds)
    (118/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.103818429 seconds)
    (119/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.106784743 seconds)
    (120/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084612707 seconds)
    (121/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125158754 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101594423 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.143731422 seconds)
    (124/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.14316022 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093756547 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.214385741 seconds)
    (127/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.212710731 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.127429683 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.085040366 seconds)
    (130/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.108344754 seconds)
    (131/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.085842938 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109330029 seconds)
    (133/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.09296293 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.125314449 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086469176 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.107972344 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102708361 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.108017012 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.085316214 seconds)
    (140/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137309976 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.125925645 seconds)
    (142/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.167949298 seconds)
    (143/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.118528207 seconds)
    (144/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.103676076 seconds)
    (145/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107781618 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.088362652 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125132297 seconds)
    (148/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.095233442 seconds)
    (149/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.125374422 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085994854 seconds)
    (151/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106724781 seconds)
    (152/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.103124626 seconds)
    (153/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.107060382 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107466143 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125103775 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.366495259 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093998374 seconds)
    (158/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112224848 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093651442 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.107876918 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.104283621 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.143891807 seconds)
    (163/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.107924454 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087946809 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086484602 seconds)
    (166/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.108668093 seconds)
    (167/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.087084532 seconds)
    (168/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.203945938 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.125437625 seconds)
    (170/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.107573339 seconds)
    (171/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.121226134 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124420191 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101790023 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121397492 seconds)
    (175/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.142672896 seconds)
    (176/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.084929751 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.109289269 seconds)
    (178/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.084048458 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124729516 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102242005 seconds)
    (181/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.13559609 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120720016 seconds)
    (183/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08625025 seconds)
    (184/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.1260833 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125306238 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102102127 seconds)
    (187/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.107598713 seconds)
    (188/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.084483504 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.108291772 seconds)
    (190/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103881551 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.117084424 seconds)
    (192/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.084952949 seconds)
  done (took 30.289546183 seconds)
done (took 31.173342932 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.253254757 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134496662 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129588529 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106234583 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.201217034 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132055507 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.138604104 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132875528 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.1116191 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.125388118 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118332963 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.111563256 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129554876 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200095988 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.133753926 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121179874 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096800576 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134666176 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.13751409 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.116788318 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.223383537 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096166824 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.135444026 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097734544 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225556736 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096907781 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.129661254 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129819826 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.113087436 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.126514527 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.12873333 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097487116 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138136146 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.137458957 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094898604 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125040148 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095646494 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116988263 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.12558375 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.103017005 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135997528 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.127405421 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.107856403 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121152966 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.12634774 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.102435443 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11818856 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112254824 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117869769 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.129373688 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097599211 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.139601627 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.12531396 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095504174 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118068679 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120858733 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.111248744 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117828676 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.113147321 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117850054 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120764928 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095963684 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128026592 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095330249 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.12454217 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120895047 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.103644273 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.12906759 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123769671 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097842468 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117799195 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.101505286 seconds)
done (took 9.947600428 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101821917 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18685647 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.230317971 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.208879835 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.157306933 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14109027 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.14190554 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150470211 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114690655 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14668837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159970339 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.152139891 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.216040059 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.134578812 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.141273231 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.10506547 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134699771 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129734341 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.210354636 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148555226 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160373538 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.135517517 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160083663 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118645112 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127339468 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15375837 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129982006 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.105327196 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128270109 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145749078 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.148281495 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105242569 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129802316 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1427566 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115684262 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.133583221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142063548 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128372825 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.103874537 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125996868 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144173952 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115324631 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125887232 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140890688 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127618646 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113267894 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136489694 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.13323809 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106685923 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129807586 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13007385 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159671505 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11236512 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138723174 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.135735893 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110072158 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.134326896 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132883134 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129509172 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.110107092 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126602412 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128473035 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107460838 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.157692489 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.130326526 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.135815665 seconds)
  done (took 10.029512493 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127776345 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.167286701 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139853269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.139710748 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.136811393 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093598368 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116946883 seconds)
  done (took 1.853559461 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095689118 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.206396314 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.229463228 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206593415 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.225484837 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215816592 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143334878 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095371144 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.155701208 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.131928865 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205236039 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263377154 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.126338463 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.113774175 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.233431792 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094038584 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.235052641 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094906952 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132438292 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207316814 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135035858 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.150640653 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.136456647 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095908699 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.221506453 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097633094 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.289628607 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137272188 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101320933 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.13095165 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133145485 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212692634 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.199035638 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13548423 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123396292 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.204631212 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.198082002 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132256174 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.21520128 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123311832 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.198792047 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130803014 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.133448042 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11026124 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.13086647 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.186581726 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.138142 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133344116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.106079296 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.231450821 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110054714 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.225076253 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.104141799 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.130733791 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.133315409 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110523853 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140153038 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.131971455 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209043074 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134593297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205052872 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.227350402 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.198923122 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.205930248 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143862991 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.203249865 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.197199152 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.128368607 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130279206 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.10924902 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.228365586 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132446453 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.110435805 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.189885885 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134998775 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.204486167 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.227741185 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104489059 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.135257452 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124847348 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.105180029 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119595532 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.198811677 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13101395 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105091348 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142689307 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135659272 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.132439805 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.102188806 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148355383 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.13126456 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.134255012 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114002865 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.13176254 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140030335 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.20834882 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.134133752 seconds)
  done (took 16.111409404 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098934655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.121521545 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.104865839 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122571087 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.122361895 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101900827 seconds)
  done (took 1.624701712 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130924012 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.134908381 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144606119 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.135540894 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194857378 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.212012609 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.236435783 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107324907 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.152634393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145361722 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.212196488 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.240995833 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.211460909 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.138756964 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.215771403 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137806014 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.214255681 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132128675 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144117846 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106770005 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142642327 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.137649832 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107570034 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.224862034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137479513 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.112509013 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134631076 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.144264366 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.142640311 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.108656504 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.137711081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135564813 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.104342146 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132006851 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.238205364 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103580703 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13082986 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141189676 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113481138 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.13627609 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.239673594 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106066646 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.144347446 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.141013732 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132958785 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.103619248 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.140701095 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133834431 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.215612028 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.140820858 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141399329 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.111641178 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.137042654 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.158790632 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129658875 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108472061 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.141353892 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.213783409 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.137129412 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.128726401 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135046182 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.112889166 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132358521 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.140702891 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.136817737 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.116278116 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127899966 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135660074 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107129748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136571698 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.142290303 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.135516497 seconds)
  done (took 11.538597 seconds)
done (took 42.088215642 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.703332219 seconds)
  done (took 10.653853349 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.992290942 seconds)
  done (took 1.943419128 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.177786 seconds)
  done (took 18.172102867 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.619988817 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.682626998 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.325666116 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.19542665 seconds)
  done (took 3.77845746 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.495665939 seconds)
  done (took 2.46739348 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.395517477 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269046599 seconds)
  done (took 1.624771396 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732273686 seconds)
  done (took 1.702374508 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.694654723 seconds)
  done (took 3.654997703 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.426294402 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.206229764 seconds)
  done (took 1.603279085 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.738880357 seconds)
  done (took 1.707523913 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 42.282138423 seconds)
  done (took 43.256333348 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261550093 seconds)
  done (took 1.24741814 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.324019548 seconds)
  done (took 1.297197303 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.59674132 seconds)
  done (took 4.571673757 seconds)
done (took 98.637822779 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108210621 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135992222 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11244328 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133322202 seconds)
  done (took 1.458381135 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119468823 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.13534292 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.139229694 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.110139961 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.145380809 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.134664944 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.108592896 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.14733212 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.133626486 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.112705912 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.134756432 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.134201142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.11244041 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.132789814 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.131300813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.112282512 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.137746527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.13446697 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.111778295 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.134752985 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.134070478 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.11167312 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.137950528 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.135932745 seconds)
  done (took 4.064230861 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108168196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125904759 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10446168 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.125681476 seconds)
  done (took 1.444228707 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12038563 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.152951743 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151484712 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.11777893 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.151465381 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150811244 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.130388417 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.103514468 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.131481288 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.143295408 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137267593 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15675565 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.151118551 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.136330036 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.121339089 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.125387671 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.136762515 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.128665971 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.143594624 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.144533092 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10834151 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.143610632 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.131362099 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125305615 seconds)
  done (took 4.223687099 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.234174535 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.149128057 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.136367103 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.194682814 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167139424 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.131568781 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.161960084 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.139470086 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.115059415 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.14558341 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.134972083 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.206510565 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.137392646 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109202693 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.136302927 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.141410566 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.147267154 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.115182882 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.184216715 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.139439683 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13884138 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.146967698 seconds)
  done (took 4.29786387 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109527535 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126410813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097031712 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125520102 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.133618675 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.104400461 seconds)
  done (took 1.677192505 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108190355 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119613911 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09996958 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.121825085 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099634745 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117884133 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119735208 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095437644 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118987018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094586337 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12186859 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093548224 seconds)
  done (took 2.298538444 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.335730707 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10132134 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129070905 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.1231283 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.134867114 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099466233 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147339661 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.125048774 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.281468004 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096250301 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.149920627 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.213034596 seconds)
  done (took 2.925089688 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235978689 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13724182 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.340360921 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.418098446 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176866629 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18899874 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.30189101 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212153142 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.215207202 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16179366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222341555 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174578673 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173038566 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230070408 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130186143 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.212753239 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225281479 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22992535 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167882889 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259245021 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186330129 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191883643 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204627744 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171964761 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153432204 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179196877 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.13721845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116557573 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222351276 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193663832 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202759996 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168491655 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159947908 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259394879 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257908112 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20711405 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.344819658 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146875426 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.216897941 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.227260936 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301979685 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156707317 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226913937 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176275584 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147505449 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208117347 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179355484 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.238138981 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.122727125 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158451369 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241200966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200923519 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.211988041 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153808379 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350515109 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164746529 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169568483 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204583128 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212465883 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2417975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189848328 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.110552683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238599615 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203801093 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200830128 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168611927 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.2203948 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117019867 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223637039 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221965225 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205710149 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214366244 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222148096 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15021383 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18696956 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19091337 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175798742 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192803486 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182878921 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.133665989 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170796917 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153084924 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141409123 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217295625 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111122124 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257579791 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121338048 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.437565935 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235384755 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179824865 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209691943 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187087928 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18827133 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165940161 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112370628 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163299175 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.181329773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204296165 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119694227 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179007749 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160646319 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.147183613 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173826551 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.134864861 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181922179 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.144039323 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218718651 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187723975 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.147496965 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18832997 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169604379 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.181336724 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196402771 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211017741 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148312445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146825669 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214568078 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179864798 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153042342 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200189899 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218656512 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.19114541 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153698567 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185329537 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243699755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158473469 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213870652 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158935166 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147651307 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.178398222 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18037835 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179167719 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.172203405 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117317554 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178880648 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247822717 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140499334 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126661352 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224091332 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117285971 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143218112 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158539277 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152538729 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.158634156 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.140457695 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15557611 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176874508 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182071523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175148922 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206843102 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132382019 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240606697 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147641877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182429338 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166419278 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.108145751 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.236412932 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210693187 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142331519 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228282572 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.196399678 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250991393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185107997 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142569461 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201157553 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144601032 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.109552862 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209731504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186418034 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186293393 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211404361 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246381838 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195733662 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.177583868 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168624019 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192943613 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.196992498 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202403273 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136496957 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184988323 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219459111 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.109071995 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141265491 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.14437458 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159104485 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119345928 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148795667 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236450437 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188615077 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215322423 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182633853 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158028422 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206682465 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.143045863 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186691791 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.227089442 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129824181 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.239124804 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204929602 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190598466 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158924339 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185823264 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.135905622 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112335533 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.151983033 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21789391 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12094151 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148994698 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160288773 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207107765 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201169972 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167575615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258621853 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21919793 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219578607 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.11011899 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185382045 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218263241 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179244652 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179557029 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142180916 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182249627 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200664164 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160587492 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241780243 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185372187 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193475654 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25769005 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.177718426 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117934703 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168917206 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188057039 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156873948 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184233809 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164716465 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151945128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175190138 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.155037959 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14384907 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210452855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161649725 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233654856 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174873927 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201591079 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138588448 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159947844 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183693618 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162942605 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108496231 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195594209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241024507 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162810337 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180914168 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197320579 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144636465 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.358940454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241077187 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211259167 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153483482 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160298809 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184496196 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178440584 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187619645 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201870545 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159867642 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226068069 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183295732 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134101196 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15081271 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167504489 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171380339 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.175894225 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154948726 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180438571 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.159737788 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214100214 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159029979 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181908998 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187478481 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.166978651 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175913404 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160816517 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223548083 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180015207 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20264387 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.177795771 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216652198 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230265142 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139257648 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142021037 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.117253792 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202082371 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146130845 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181392327 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.233522633 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226387608 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183925159 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189814242 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154641032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.140277804 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183215607 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167891996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227639354 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157591506 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157314744 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245796337 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143641111 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144783955 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185593672 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331352215 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136733098 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223614564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109897307 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.324328312 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113957575 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148631917 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179147545 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194756839 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.153311998 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.20252738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188725739 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164015483 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180357048 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15378155 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217730893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263675766 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189034054 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202844718 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.162552659 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180163451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186389324 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22801287 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160281336 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138436486 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180227857 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232678557 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210217639 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.151851557 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187197627 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187221435 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182822444 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201727336 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149521598 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261562974 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11855072 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213554516 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157391621 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113847186 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180309158 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.234490472 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121684021 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226453233 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180449793 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117088487 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144998857 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17086184 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181689602 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162527442 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.144344429 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20740706 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.140189462 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186164385 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195562371 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145364314 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177194281 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137636778 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150419811 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160004565 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163078314 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152035879 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161638203 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231841942 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.149695602 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200293692 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1862292 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189387747 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209669743 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134205061 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.684746709 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.146252776 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206215652 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167219892 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212892429 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168439565 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192894563 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184930959 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169780998 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185221983 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198358526 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.256250433 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182408107 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185885272 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11802616 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161866546 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160140875 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.15093259 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171859312 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185991433 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157894009 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15844951 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184510334 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162851374 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.164271125 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127745327 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234477232 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13872838 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239017164 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204662055 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158012911 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191965471 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201422698 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143949202 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186416126 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196685809 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157140202 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172342673 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.151889514 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156295623 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193060377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.110632557 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211300976 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182026094 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184091562 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186315428 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.154249358 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182448105 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13211514 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209233752 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116502306 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178428883 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180366106 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149837587 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.146354785 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178098444 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184285203 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.180521269 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142968388 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16056602 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203654723 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.138684756 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149699894 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30632099 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182192423 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243288366 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.177116787 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122529191 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161899551 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177363123 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17981883 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183031084 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.147979876 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147239604 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12281424 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.20343019 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173423209 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179507833 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209070747 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212233327 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231829159 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164266769 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.303109081 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155934386 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178458226 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12134379 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.149174978 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16078267 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150819528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163751749 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218559943 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191467421 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.17610737 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.164096829 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146210824 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.111593992 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144664623 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181041009 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176728686 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180828997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163682438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.136025105 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161705054 seconds)
  done (took 89.253482926 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154603937 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148045222 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161018625 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.212146326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179092211 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271962526 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217932975 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240100343 seconds)
  done (took 2.653701438 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.213840542 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.122485879 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.231879745 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135405492 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.139160559 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.509691189 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.228869864 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.13640185 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.208780768 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.256104686 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.185344569 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.695911631 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.134979491 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.213424826 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.207124171 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134694339 seconds)
  done (took 4.819799602 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.18226925 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.682818813 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.713964205 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295614881 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.294269849 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.178102148 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.90096503 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.210246016 seconds)
  done (took 14.534500186 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.140751995 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.156560486 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.420034823 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.251233019 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.176549111 seconds)
  done (took 2.224931221 seconds)
done (took 136.851000548 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113385915 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.141394405 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.114607574 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146222163 seconds)
  done (took 1.582894224 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.204603996 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096141097 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.126165751 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.095021249 seconds)
  done (took 1.601410526 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.584355468 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.123544938 seconds)
  done (took 1.825308682 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137976484 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160642557 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.15976513 seconds)
  done (took 1.540553175 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.124677788 seconds)
  done (took 1.208852574 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127088658 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.136135878 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.226657576 seconds)
  done (took 1.575950545 seconds)
done (took 10.416063418 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112804125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.456168084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428727034 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151164272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713790217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.417379298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.091175765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173898444 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.229723048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127737008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12070431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.709601598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042911831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.35034556 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021548869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.472350736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681804343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128498244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.109496714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129938799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.063211948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099000249 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131207135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127367811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680366648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.456619484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100534989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.48423521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12858299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.108424429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.4140603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127971786 seconds)
  done (took 17.66562907 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109361922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204742266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141325664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102907624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.138186848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12942495 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11285685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145005447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219680031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129135369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1507009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099501303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135835428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102325024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152427591 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127583672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101623837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128470789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137237463 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103454943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15014545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1011113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13069933 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128961915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10057658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.166006484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128548551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116569476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128685364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13735324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103514047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129909406 seconds)
  done (took 5.280655396 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15388789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.244085957 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.113682979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163507169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194766268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12917179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227479474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175185292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219606865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128445564 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12258848 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12865612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.176168623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101395586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1535611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128351563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102476026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128894242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.111410485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130460157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149607042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100061138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131178363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128638709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101090719 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.165815276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128642322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116441417 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128690709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137121565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10365118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128614712 seconds)
  done (took 5.642906215 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.114460906 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.144479099 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.157020594 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.12893372 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.135517638 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.114287888 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.142567265 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.135620768 seconds)
  done (took 2.164187344 seconds)
done (took 31.841225429 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127032721 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.149360799 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12306588 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14211876 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.227006494 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.133198839 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.117046068 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.132947027 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.114657496 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.153239131 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128719953 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.10710597 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.149551724 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.112041759 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.236662425 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.114116947 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.242300234 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.208182317 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.105574292 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.144320457 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.134778568 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.215668792 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140263935 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.105504466 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.219338181 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131976749 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.203023611 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.138762094 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108896269 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.136302732 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.209017975 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.140850932 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105452177 seconds)
  done (took 6.041225981 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.228609428 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.235777254 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.133542325 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.105589588 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.227119149 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.133957619 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.227912438 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.13352276 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.104913099 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.135338713 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.132568024 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229483535 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.24123213 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.246036553 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.294784088 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.237989103 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.22708201 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.264642978 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.224468767 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.241877762 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225475453 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.133279156 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.240705834 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.242175628 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.135051768 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133651086 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.264891247 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.237995129 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.293078752 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.22361605 seconds)
  done (took 7.236807906 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113934812 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.152651323 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.157832834 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.174826475 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166389455 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144038006 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.147282109 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.126074149 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157194067 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100480091 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.146375144 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.168880741 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149318703 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.11408357 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.134930409 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.120641612 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157293459 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.130233803 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.110841964 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151845513 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.152176821 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.121123906 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145191058 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140504794 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100293817 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139443904 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108179628 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145350731 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.141711522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123815547 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141154836 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.134766302 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10547229 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.168514193 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.13741696 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.114531891 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.159419545 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.143231204 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.11299585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.157356152 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140238985 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116464843 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.157858114 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.190627593 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103573287 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.14201384 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.142354845 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.116122285 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.130684041 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152110501 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1544268 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130096635 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.153067154 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101940855 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.131437554 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142211112 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103117765 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.134579174 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.117887561 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.13424245 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.158608546 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109694339 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140637469 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.132214046 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.110634781 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.129436359 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.101203804 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.134989609 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.159458279 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110772343 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16757745 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102720558 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.141270175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.142096203 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.110188554 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141628046 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.130362673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111613033 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140929118 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10917699 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.144121336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.133801591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.107259421 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.153577996 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151424645 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.113361121 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.170752827 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.142167565 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106734706 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131844259 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148380571 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.1047354 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.135507889 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.117159292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131046426 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.134059349 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.114147961 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.142067504 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101499033 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15202299 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.139514343 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.10216771 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.153444454 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132345369 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107312936 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142643428 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.179730569 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.101924531 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.140854726 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.115355769 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.1305272 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137422704 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.107094669 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130066997 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.121175689 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.143887261 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.137609721 seconds)
  done (took 16.769052589 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.369100501 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.34358325 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21875849 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.439000045 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.160796869 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.23143986 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.338991254 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.357022601 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.139136469 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181879047 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.228882459 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280353678 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.132730952 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.169063944 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.342936081 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.446252883 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.139103186 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.213630784 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181828945 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.160660214 seconds)
  done (took 6.191037245 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130242188 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.184210874 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170195046 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.168916304 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.139149058 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116890921 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.131511157 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.162135273 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.139802055 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.115797385 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.135274666 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159343689 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109564141 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.142486809 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.152060125 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.155255123 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.14143961 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139367818 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.158288245 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.110434301 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.146748841 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.169101929 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.143469907 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168191739 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.119037742 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147364749 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102107828 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139159434 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.134423901 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.108528503 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.139700924 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.158829343 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.110425737 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13871899 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.141976084 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.115808242 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.134279527 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106270354 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.138490982 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.108168279 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.149199039 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.141217806 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.107246142 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129423846 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.116503367 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134543324 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.144138002 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.114666997 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.149405971 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.147239448 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.115862783 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.144863612 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109930713 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.152132563 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.13494075 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12158534 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.147054478 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.146276079 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.111863647 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129599885 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.129852192 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107782565 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.137423312 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.116793676 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140945706 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.160307206 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149304191 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.1025725 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.14064148 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.1362215 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107606885 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151535956 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162535595 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10807559 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.135760931 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150011055 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.106822496 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125379695 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.114438296 seconds)
  done (took 11.788293261 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135098606 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137724041 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.154289658 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.144383996 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.148107788 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.139679542 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.108803928 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.154967583 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.11829789 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.145734137 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.145935461 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.120385591 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161551648 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143932471 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.108425051 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.151038626 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.14378237 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151360546 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15466918 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.169323002 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.146861737 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.109758199 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.148336484 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.117307426 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16945387 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.145779174 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169155876 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.114393231 seconds)
  done (took 5.091363233 seconds)
done (took 54.207336266 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.27311959 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.411953653 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.192493994 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.190933001 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.189547004 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.222202287 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206540053 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.196051463 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.121466858 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.187999651 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.192510023 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.190692738 seconds)
done (took 27.693956413 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.50818932 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.695539445 seconds)
    (2/2) benchmarking "String"...
    done (took 1.487947711 seconds)
  done (took 4.300931126 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.188008007 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.187016842 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433829406 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.188002376 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.203245218 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.204577554 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.185582871 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.190365309 seconds)
  done (took 15.707095233 seconds)
done (took 25.820673702 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.251679755 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.374531988 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.452520614 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.2027882 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.201092368 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.192111982 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191518405 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.21345979 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.195561746 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.19279214 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.59816886 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.449534189 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.209517215 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.570852455 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.190737052 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.219031614 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.188112094 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.423237933 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.194136421 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.253696239 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.18068844 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.183591899 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.218868377 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.20143994 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.195517628 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.202693056 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.215930244 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.195148384 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.389266846 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.233656986 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.241153147 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.192615876 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.206146193 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.193905616 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.191870485 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.207492017 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.37780806 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.199933833 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.184703302 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.215151672 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.383836777 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.277107492 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.197820727 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.195337217 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.194756925 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.248506319 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.187211522 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.318371415 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.213243346 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.199088037 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.19976651 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.575012089 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.193844119 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.204936179 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.218395407 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.410601086 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.207027434 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.252143672 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.216742584 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.204357905 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.211086423 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.192180309 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.2122298 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.197558546 seconds)
  done (took 143.223023247 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.191192355 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.198039567 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.197737737 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.215534346 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.195901472 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.196974371 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.190975857 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191350039 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.197636306 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.199268927 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.196912306 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.19629912 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.197899598 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.157040016 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197216907 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.213761807 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.196016625 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.214440986 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.218708411 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.193842187 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.196438495 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.198569672 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.210327526 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.194339968 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.229093166 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.283973079 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.23578296 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.217080775 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.199883227 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.195631082 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.239356415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.218702715 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.794986002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063220813 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.207628401 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.210976362 seconds)
  done (took 79.973289081 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194074584 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193733047 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193233704 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228004136 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192855007 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.758683833 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.754679077 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.914177224 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.671739056 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.519404988 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.451159749 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194954734 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289700909 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205764923 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196972578 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209743272 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.234659973 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199907434 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195904621 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.751540926 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209010976 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.282707201 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373697418 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209842492 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228063194 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597509632 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196141483 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228345213 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527956729 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244062456 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19735219 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568113755 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.363310763 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195369937 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306685088 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199358937 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22833827 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197828314 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.475478097 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197664725 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197146314 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199479639 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.862847545 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197044013 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761360724 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202821798 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.131294529 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197346431 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195410775 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.193280643 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.824897386 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21249169 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196744398 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199483868 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196735943 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19842432 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230139633 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.266028268 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.310168534 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.21360025 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201180072 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230457153 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197856594 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.220797633 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198813746 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.774713318 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.261690505 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312843179 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.754493154 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198442158 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294820741 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318969632 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198501986 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198452535 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198492834 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198947598 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308353159 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.19901117 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.616077003 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373973293 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213909647 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.531874018 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20380966 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293146542 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200522286 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562661498 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204012055 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198351525 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933085881 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296695386 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201020623 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199680102 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198972473 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198330208 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617498561 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759846954 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.436188181 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205234326 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.474539433 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205438659 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19971524 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.622054875 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7474089 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.858947711 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20121203 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313713991 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.375357409 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.216776659 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199786046 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.533890184 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206087096 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254496928 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201245417 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.599213877 seconds)
  done (took 365.615831525 seconds)
done (took 589.92808542 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.124437299 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.080782164 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.194512605 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.102281411 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.085905725 seconds)
  done (took 11.715662649 seconds)
done (took 12.842734695 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386044246 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384657769 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258942637 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390369243 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234862247 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.401625357 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369946772 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226849962 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303568141 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289220229 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30230241 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261851609 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233145422 seconds)
  done (took 18.171615971 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.470137568 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.211588227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286240693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.464981318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250018628 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467076109 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.515054423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.213840567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.357170445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247505737 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218568657 seconds)
  done (took 17.831233622 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486168186 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.213524494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295188582 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.45813629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253421165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.46931432 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518093975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.214525329 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.370971448 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220030496 seconds)
  done (took 17.8491955 seconds)
done (took 54.981133467 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24363669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.370100781 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235236512 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220729467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216424776 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217544525 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221667179 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216640762 seconds)
  done (took 11.070907316 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.214234317 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214948559 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215842696 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.215472641 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215782105 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216463539 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216090925 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215867233 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217799808 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.215730039 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216740279 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.217669782 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21687734 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.214655299 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214762087 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217313256 seconds)
  done (took 20.587101988 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218985536 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215781464 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21625746 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217581189 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214372364 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217468653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216025002 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216374579 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217199936 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216616545 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.217479966 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218296573 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212928748 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217728039 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216000683 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218510389 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.216952486 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216962312 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.2207147 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215828336 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219331671 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217276126 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216162853 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216855058 seconds)
  done (took 30.340842618 seconds)
done (took 63.128252503 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.2070434 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.211581795 seconds)
  done (took 5.549993496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277582654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.276794035 seconds)
  done (took 3.687738233 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217498166 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218360358 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218880409 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217597239 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217869268 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217176578 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21886853 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216432287 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21788164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216943054 seconds)
  done (took 13.310249239 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21893697 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218778669 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218663113 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220130253 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216569807 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.218066444 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.217456086 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217854818 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217840669 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218126182 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218476474 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219855215 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218717683 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21789528 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218980911 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217937421 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219044239 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217989354 seconds)
  done (took 23.065039091 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232934247 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239751383 seconds)
  done (took 3.606313319 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.3604162 seconds)
    (2/7) benchmarking "second"...
    done (took 1.260934009 seconds)
    (3/7) benchmarking "month"...
    done (took 1.335588958 seconds)
    (4/7) benchmarking "year"...
    done (took 1.328456297 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.261160515 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.239567365 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.260313354 seconds)
  done (took 10.181704248 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.272137653 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.518620338 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.696062624 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.218558523 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.332382435 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.40451049 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.218866637 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.390658155 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.382442561 seconds)
  done (took 15.568153829 seconds)
done (took 76.103011669 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.211343697 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.26739686 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.252412315 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.233708415 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.528164931 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.223300623 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.21674204 seconds)
done (took 16.070126044 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.207747548 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.206489664 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.214785643 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.220037823 seconds)
  done (took 9.983230338 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182431664 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549104771 seconds)
  done (took 4.867726207 seconds)
done (took 15.98709981 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222155848 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.220468565 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221471143 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.221502971 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.221111833 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221140282 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.220051547 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220843161 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222868416 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223816863 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.222219448 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.222855766 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222273002 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221435621 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222450324 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223283677 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221691268 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221542747 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223769527 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221842541 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221026056 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223973513 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.222089253 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223878955 seconds)
  done (took 30.46589287 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224100739 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223219757 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224155654 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222433147 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221766991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223969117 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222705415 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224542015 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223767323 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223794198 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224003918 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.222938404 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.225284436 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22550544 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224435067 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224470158 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223621377 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223739397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223755735 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224393184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225091476 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224684725 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221993322 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225107256 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224470785 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224037363 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225399516 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223254176 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224625747 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223967536 seconds)
  done (took 37.858929527 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226920226 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226088344 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.225245583 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226704626 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225024425 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226183265 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223535208 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224979113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223327407 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226874227 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226880922 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225653436 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225708812 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225787796 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225691795 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224735577 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226303886 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225512656 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225083351 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225771071 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.22520983 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226481456 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226002008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.226098851 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226323364 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.225817199 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224924604 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227132479 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226257664 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225788435 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.22574924 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225415376 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22653197 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224951853 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225818804 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224771059 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229164187 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229294614 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226572293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22803971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227374297 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226363966 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225455853 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225465973 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.228280001 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22811452 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226006534 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227146999 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226412747 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226443497 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225524017 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22730256 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226751832 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228081546 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226810314 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229079554 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227330489 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228633654 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228017728 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.226630909 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228334831 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.2280758 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227716922 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228128176 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228687406 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229776732 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227950901 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22762156 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228723928 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228718792 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227695819 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228890381 seconds)
  done (took 89.462327539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228527623 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23094521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226848953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229647123 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228821144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230608913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22781749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229824559 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229301359 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228517778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230397555 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230235838 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230623143 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230402263 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230892629 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230488979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229055896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230928582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.2311885 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230058897 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230467454 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231129557 seconds)
  done (took 28.200301687 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232448915 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229402267 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231426548 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231636609 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232475453 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232348982 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230462316 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232236773 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237699686 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22971625 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230451882 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230583662 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233942062 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231734681 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231592 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234035686 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230832143 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235190321 seconds)
  done (took 23.321540058 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232046367 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.231324278 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230837501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23110348 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230211031 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23324399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232312272 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23346454 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231560053 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231004991 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231048005 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232148009 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232302798 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232689659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231531311 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233156563 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233042292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232887482 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232088984 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23155072 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232178878 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233036007 seconds)
  done (took 28.250347834 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233255964 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23292646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234138866 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232383223 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.232510576 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231994799 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231811114 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.23353717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232210622 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232203153 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232762812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233133277 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234004353 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233620167 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.233685165 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23188781 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233465834 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232808138 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232977199 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233920389 seconds)
  done (took 25.806472976 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233708342 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235499734 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234822952 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234032375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233459564 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233328079 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234405456 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236821628 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235182937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235453627 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235008195 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234796402 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234733636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234944353 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234726721 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236278662 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235561582 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234682869 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236623025 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235367624 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23487819 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23752194 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236967493 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237251276 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235422551 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235976284 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233702028 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234498691 seconds)
  done (took 35.734435619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236565915 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23680116 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237304248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.236775367 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.236049905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236831815 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236916585 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236380045 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233555688 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236209872 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234730193 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236754096 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23678051 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.238792124 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238238637 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235662684 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236231903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238032868 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238169575 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236166138 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.238068575 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236364132 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237549472 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237566128 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236868749 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236471191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235772214 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237110459 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237004893 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237375143 seconds)
  done (took 38.253940317 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.234539841 seconds)
    (2/2) benchmarking "in"...
    done (took 2.232966199 seconds)
  done (took 5.61664313 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238347055 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238598082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237433795 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238258799 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23775571 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238292606 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237651576 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239282433 seconds)
  done (took 11.056162521 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235496059 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240493615 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.241472144 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241358767 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237706388 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23434498 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244553927 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263098888 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235600299 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237786649 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238400916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23737031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238602746 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236986176 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235126056 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238980225 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242423947 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239271877 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239706679 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241367752 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238763799 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238722948 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240889861 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.24289315 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236195908 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244581772 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246302395 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245077993 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23767618 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243474885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240593036 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242884503 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.242768419 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.241373922 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.242143961 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241700182 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247250929 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260790762 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.24446234 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245330114 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242217514 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242206356 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239609734 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241312019 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23946997 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.243159715 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242402456 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242482868 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237038539 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239228429 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245420019 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237825927 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241921952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242102912 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24156215 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2484389 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.267664794 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239699211 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.240635984 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.24918664 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252850205 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247739646 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243113035 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.244485672 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24257782 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242739963 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249298407 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.269612536 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243858778 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242733282 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246812969 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255025782 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248962831 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243251512 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243409834 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243089512 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238973159 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245793744 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247799445 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.268033827 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24437749 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244205307 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242119433 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243409634 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239617242 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245027594 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243805328 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245323916 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241246542 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251607074 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270432496 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245823452 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23900353 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24104692 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242654613 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.245898903 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239555525 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242775683 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246553683 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245024838 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242812462 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242573119 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.246262124 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24721469 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245304549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248375401 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.250657554 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241799623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24991734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250342981 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245998376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244011719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24531065 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247111205 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242082912 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.244523014 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249598058 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243928926 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248876971 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247420746 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245325106 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.249282645 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.249997604 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247152994 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244000689 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247478104 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247720596 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246043848 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250552443 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246203527 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.247737506 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244612825 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.249937554 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244384022 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249141188 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244124911 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246760624 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248248446 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247338048 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244613616 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246394205 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.246076629 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.247355156 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248645186 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25098301 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246701575 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252504031 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.24850618 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245237831 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247681513 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248540337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248910728 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245199188 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248840502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246799768 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250045844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.245360915 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247660701 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248060595 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249081949 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249307214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24462334 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247839118 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249544263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249329565 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247073046 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24925223 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248871163 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248383798 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246080876 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251205079 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242179466 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248010762 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250553262 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250926515 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249188083 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249298667 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253174019 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248798751 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247926912 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247173887 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248864606 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250552322 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253352933 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.255961111 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251083107 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25136411 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.2482272 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.247108659 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252809206 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247080939 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255384672 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255907909 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25698971 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248974316 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.253133402 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247345603 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254270249 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253509077 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253032697 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252275554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253200081 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247616948 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251098703 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248482475 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251314538 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247429013 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252699167 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251836305 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250855903 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251175883 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24868835 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250078836 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252620856 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251363779 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251554057 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.248136239 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253038109 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247426933 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.249227366 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254091034 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25070857 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.255088361 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256756403 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249902996 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253324053 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25299593 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248996081 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25358541 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250195943 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250495102 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257915846 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273768841 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.249898131 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258295502 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273794922 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249785151 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253449965 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25577606 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253775853 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24967761 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257959638 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254216159 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253871364 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252538761 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249601309 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255137055 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257173808 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259253874 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250442512 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257318431 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251258869 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255497676 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252443061 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254713759 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253421987 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255792899 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258509855 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256572756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25260388 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256497884 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254555652 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254398532 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250582582 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257452201 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257505682 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256145601 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255217721 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253284927 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258288006 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253495596 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.256304462 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252296424 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263917216 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265505422 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259745256 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257369631 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259372923 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258840437 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257680397 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254592441 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253135354 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255133555 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251403042 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251989256 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257256454 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25199647 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258707235 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255927262 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.255657326 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.258066207 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258372201 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252800884 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258056608 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257158792 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257120817 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252998999 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257677677 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.255189105 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256321701 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254546509 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254178719 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262066255 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278182187 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254427589 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255555744 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.254130206 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.253279067 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.2551941 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260799264 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.254755872 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262271992 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.253391361 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255803453 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257443281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262577473 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260484915 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.25582961 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260446869 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25776851 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.253322753 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.254395916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258534923 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262699475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283026044 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254997 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262059239 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25985192 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259792499 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259742424 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257283272 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261317264 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.257491791 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265165997 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281204911 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257961956 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259762943 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263982989 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25994986 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.26091992 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25364161 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261179864 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261873783 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256832193 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.258062992 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258165797 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26198281 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261080643 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262357884 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.261338562 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261802007 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265367339 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281447905 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262177039 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261104282 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264492453 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264136152 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265268099 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.284882861 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258735514 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.263169249 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262744923 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258876713 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.25759188 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258468916 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262147568 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.257688079 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264035756 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260978635 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259140906 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261059848 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.262933275 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258078009 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260183723 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265322965 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.260710173 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264379267 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261782986 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.256880144 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262514634 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262267952 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257216252 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.260611551 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260419385 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265582618 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258944953 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264266213 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259737329 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263857854 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263023127 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263724764 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261838291 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263061727 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261034295 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263722212 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261909072 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266056669 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258721793 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261728096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259141059 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267767744 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.267524641 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259917663 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264548806 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265095403 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25938769 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.260291719 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.264091559 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2596274 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266050839 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259757079 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261442713 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261308653 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.264734323 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262084579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265566163 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260282438 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262946018 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266766376 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265667753 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264963256 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262108381 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267064154 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260368993 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259267106 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264272982 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.262185149 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268593446 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263777871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262972806 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262853343 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266298396 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266212263 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265249698 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261044474 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26139327 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.270196789 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267449152 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264519618 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264352903 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267557889 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263082984 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263427651 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.266116009 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.263132754 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262700101 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265427191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.263254099 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.263819528 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.26428727 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266876691 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270076212 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26794803 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264013112 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274283993 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288843042 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268287736 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.262505539 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.265257085 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.263548188 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26739548 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267725718 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.264440033 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273753476 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290447099 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269195025 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266262658 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.265875412 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264931695 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270012116 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269070483 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.265588047 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.268848686 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264972157 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270311661 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265927154 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267330986 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.264171554 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26408704 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.264679994 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266846692 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269768499 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267963163 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.267267861 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.265942018 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269146665 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269872787 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267357159 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.271107532 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264656946 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268623304 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.263925934 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.269221394 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267145064 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266848732 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.2709892 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270627435 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267407274 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269528411 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271592372 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269753693 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265725913 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269808445 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.269832933 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272786232 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270502437 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264736476 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267604805 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271353468 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269402887 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27029248 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.267111356 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279725685 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293972213 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266954273 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268343318 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272974953 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27417254 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270744933 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.27145679 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.269086976 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269530175 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.272966572 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272036806 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275487669 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291529012 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.268805418 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276479828 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26811399 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.271187746 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272796353 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273007535 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271930189 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269490123 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276837587 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275377333 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269948053 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279634163 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293127198 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270343598 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272661165 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265384967 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271065752 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269318591 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272182473 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.269992072 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271988161 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270815384 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267132228 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272765317 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271083237 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277065826 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271098944 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.265952837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268825936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272885311 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.271405297 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273735424 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.272466973 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.270498669 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.269758975 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.267276361 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279109553 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.279895513 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274020735 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.272449947 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271479016 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.2723264 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272727735 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271915462 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.275229082 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.272451385 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274179268 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270130769 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275377488 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274184592 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268650411 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.268799115 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271735376 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274549849 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280735896 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28206248 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274847971 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271118021 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271509618 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273293419 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268789177 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273369875 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27251771 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267631111 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269170284 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274955027 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273485027 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.274249443 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268483794 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274702425 seconds)
  done (took 750.749791771 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272385775 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273554458 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271870375 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273555138 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273108433 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272172654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273650677 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271142067 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273191698 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272404072 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272017111 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272015788 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272734448 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271874963 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272963182 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273241382 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272420446 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27116636 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273420188 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273054071 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274162532 seconds)
  done (took 27.906283087 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.272665445 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274136356 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273633554 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27351337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273442519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273068322 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274127217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273190139 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272500028 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273349411 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274797323 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27235819 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272872679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273623731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272665004 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273546589 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272177286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272665794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274612251 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273480635 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272094439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27335936 seconds)
  done (took 29.192124198 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271784743 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272356509 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269149295 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.275277153 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272016202 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.272152174 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.272581397 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.274339359 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274276726 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.26935123 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.267946607 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.270976352 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271213028 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.275040568 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.272113352 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.27405884 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272182209 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.27404615 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272618272 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.271628349 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.275341503 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.276229553 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.272526572 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.268012283 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.273015045 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273314008 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.272977982 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273482645 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.267772577 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274224562 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.273769297 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26772193 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.272347836 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.272346235 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.269945373 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277204477 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272791418 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.272279516 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.274836719 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273008099 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.276357397 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.274115255 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278226758 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.278089337 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.27554947 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271646805 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.276946281 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.276170839 seconds)
  done (took 62.289077781 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275149834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274012339 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.275173558 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275076701 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.27339834 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275230157 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27357309 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274472527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.27443391 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275402756 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276211615 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274197457 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275932245 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.274112021 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.275957431 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276138559 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273427547 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275800447 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.273515837 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275199612 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276262924 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.276166975 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.276554059 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.276050436 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.275718293 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275787483 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275524722 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.274502946 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274091514 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275811584 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.277510004 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276314623 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.276266932 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.277050215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276192545 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.276642015 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.275988686 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.274624921 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277672959 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.276948711 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279092727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277254038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.275630963 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.278935046 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.278071421 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.277602829 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279346416 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.278016551 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277793166 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.277242808 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.277548296 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.27841477 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278691849 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277114874 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278819205 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276850579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.278262695 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.278375457 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278154433 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.278861831 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.277369138 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278318337 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.277713672 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277754625 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.279368189 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.278354969 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278050636 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278618163 seconds)
  done (took 87.990278591 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277575604 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277450403 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27685984 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279090673 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278365939 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278868237 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27806616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.277915934 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278684889 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276673141 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278541385 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279007497 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278580553 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277983301 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27926461 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279852713 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277295112 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27861485 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278671876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278731565 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.27809459 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280056145 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27933189 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277712615 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279514914 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277905124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279614987 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279225524 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28042138 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279879163 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280341761 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280893045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27921817 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279911932 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281511427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278614944 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279243944 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280139737 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279904112 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279701136 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28026564 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280346309 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281402176 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281640703 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280424776 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279793036 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280779781 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280928207 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282495914 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282227087 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283215009 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280630269 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281404852 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280937318 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279746175 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281856092 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282220879 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283353347 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283335285 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282641012 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281614549 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281761527 seconds)
  done (took 80.538986077 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2824087 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281895986 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28373715 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28173289 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279946722 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281491284 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283107622 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282739258 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281756996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282610647 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283493045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282914028 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283221963 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284536691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282881224 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285889008 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281446785 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283936752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285321927 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281560215 seconds)
  done (took 26.844594895 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282335113 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283227214 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282625019 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284228849 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283583255 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284145766 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282005772 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282307482 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283729109 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284413018 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281769254 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282246524 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281863005 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282735097 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28594776 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281439914 seconds)
  done (took 21.717792492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282382163 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284247319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285111625 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282832212 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285362897 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.281262951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284742516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283927193 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283883121 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283992094 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283834089 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286940584 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284200486 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282943416 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283699064 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.28430933 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282312356 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.283242233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284961455 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284623953 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283503228 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28228906 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282467175 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.283619138 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283400515 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283726917 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283847142 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283455397 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284600101 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283843381 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284194373 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282762156 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284710081 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282884449 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282780107 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.285533617 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285866651 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.285630751 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283852566 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283695347 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28370167 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284556608 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283075146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284931097 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284017037 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283735031 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.28451136 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285110187 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284569685 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284480249 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284764034 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285462115 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285264109 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.284597084 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283335011 seconds)
  done (took 71.814499765 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283603574 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283237305 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28501013 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282525063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283482864 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.284512305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284234863 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28850796 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283903249 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283765151 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283901936 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285095735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283690306 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286299466 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285458216 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284757683 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286222222 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284488751 seconds)
  done (took 24.312994793 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285182598 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286171968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285706153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284995232 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284578505 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284213201 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286507656 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285000249 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285436837 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284497498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285585685 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286513132 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284585001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2854715 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286696584 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285427549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285803696 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286124658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286631149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284655416 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285207274 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285569537 seconds)
  done (took 29.473751872 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.279435804 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.278756545 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.279489531 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.288298014 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.28373981 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.279200417 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.27976682 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.280995789 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.291012827 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.317175277 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.315173625 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.282922579 seconds)
  done (took 16.646633895 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285299934 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283408409 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28568927 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285178378 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2852377 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285692428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284518361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283301221 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285647214 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284259841 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287604895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284789997 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286136204 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286805288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286116186 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28712877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285205476 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286682653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284491601 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28567667 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286111502 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284420127 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284675905 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285983843 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287106078 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285578061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287698113 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288323048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286745905 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286824484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285630859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285518246 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286685239 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288444966 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285114104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286618715 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286013454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286382354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285809732 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285489337 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285380008 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287370429 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28583276 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285362077 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285939519 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286891334 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288123054 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286399777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288052037 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286017637 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286808377 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286812311 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287062342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287469326 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288382847 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288677962 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287549623 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288479425 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287396565 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28791719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288180594 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287385129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28709527 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287861139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288119117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286551288 seconds)
  done (took 86.095764341 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287904296 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286478678 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28760085 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288300994 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288539831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288639283 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289123826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288952007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287722589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2890511 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287243348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291124669 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289251939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290099401 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288524902 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288485098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29001565 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288442028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286303659 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289442222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289018615 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288956517 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29003949 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288529445 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290676061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288542806 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287666898 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28947053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287763039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288711735 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290402542 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289108456 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28992379 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290486285 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288597973 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288723072 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291221035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289458228 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290700335 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290259954 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289045702 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290334019 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291206884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289514278 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289902959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290925612 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289484939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291144709 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289937781 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290297963 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29058518 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290813248 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289561912 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290100634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29144186 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290448727 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290060216 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29117589 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290316907 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291176586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29099263 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290874824 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290962805 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291422828 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290243109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291368013 seconds)
  done (took 86.308258708 seconds)
done (took 1757.044812287 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45532786 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.408260236 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.283611628 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.298068353 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.287228778 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.281311116 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.297158911 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284970383 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.286140562 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.285186693 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.2852951 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.478471904 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.342906655 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285394789 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.285261806 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.384574045 seconds)
  done (took 26.425351847 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.313623703 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.295805874 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.401839447 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.308002306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.313229916 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.469522774 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.3480208 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.290192917 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.451610578 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.309533194 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.281659124 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.311142137 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288572851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.282589448 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.305001121 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46983783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.532315113 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.284208907 seconds)
  done (took 28.45282195 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.712771245 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.311468914 seconds)
  done (took 5.21813265 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.307287472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.289777391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.29134862 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289208413 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.291975156 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.279612157 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.288575172 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.284642861 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.294173026 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.404649174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.29424168 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.303611543 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.304618255 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.289780357 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292280422 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.333048937 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.433377184 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.29611965 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292950252 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.294139185 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289250635 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.378140744 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327838981 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.295248739 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.401781955 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.293170471 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.290480057 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.296254982 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.408530508 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294364841 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290054171 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.29053514 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29112046 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.291588106 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.800401144 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298427649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.298631132 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313576285 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.294323737 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.441422241 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.291449452 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.297164297 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.292444206 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.785811049 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.421095459 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405906398 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.310239599 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290372825 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.294380331 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.355139672 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.290661269 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292086918 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.348018382 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.144549896 seconds)
  done (took 83.060176525 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.338881724 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.282285612 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511917272 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3063621 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296084177 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281089571 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.299722611 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545427495 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.302775866 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295486217 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.559638076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909884924 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.311119508 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.28894441 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.727459772 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.356994408 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282959243 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.281406134 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.281231676 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.282780814 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909035003 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283116109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.282959009 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.445043949 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.318539513 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825335109 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.282678077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287410739 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282263374 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.283548411 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.861175778 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.309759192 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.364928577 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.28228163 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.5469162 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.646946493 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609376119 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.293641885 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.331002336 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.284363177 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.293635502 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.756711528 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62419 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.283362335 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.296645905 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766604281 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.283963831 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.291238169 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.294949805 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.621329098 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.284079349 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283986212 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282952188 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.282319561 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.282816805 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36391044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360299175 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825666333 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283137924 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.289592497 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.308390324 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.28300857 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.295371413 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289533416 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.284325049 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632008094 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.500494741 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.290024183 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623631926 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855944159 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.297333269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927774054 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.297695467 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.285100163 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.341423542 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283489256 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.296551607 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816878407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303130436 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28466021 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609315968 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.28428528 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.563571318 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299548395 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301687918 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.934145281 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.293067408 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.405232001 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.283930458 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.28918593 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.285709212 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288573154 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.565347547 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.311028446 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.285899821 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.286141937 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.29257559 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29215211 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.288456541 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.284881569 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.931788694 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.313037029 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285010575 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285517321 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285766947 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286967424 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.284606229 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.286777061 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.645386353 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287060202 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.306105756 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.287888088 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.287922402 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.286609622 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.449852969 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.300691135 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.567198231 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.289824023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286974183 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.290519834 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286937582 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342258754 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292266853 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.298137551 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.216549937 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.548463332 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.300550683 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.289954902 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288145133 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293944766 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28736559 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287674792 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.425013608 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.292921173 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13625338 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31008814 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.299112344 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.287274056 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.293793119 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28851224 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.287279382 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289896178 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.577979283 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.551217828 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.500525861 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.292539814 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.30221559 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.1076312 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.334264502 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51813982 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306390155 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28858862 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543287738 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488358512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.29019401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.287220314 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.289943696 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636665495 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.289203584 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608418596 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890950153 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303819617 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297219544 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.139778563 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050892348 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.292730702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.293231733 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.563852394 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.303661177 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.289546208 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.288971937 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.291055558 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.289458756 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290983769 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.295269354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.288987573 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.29070679 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.560659021 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.525019085 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305048971 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300216946 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820689428 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291261402 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290225111 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.298002625 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.291983719 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.289975961 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358776902 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.292801089 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.318190989 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.293085436 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.299646484 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792920427 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295046216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.295692837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.523688499 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046728396 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.308136432 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290349415 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.28964384 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.72722288 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84998423 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.32554001 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.572663164 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.312425689 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.327995554 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291467582 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.411411171 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851529074 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296082708 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307244532 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006182718 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.30998628 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.936991287 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.290423717 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.292339815 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940226478 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.309966367 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.291476237 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288704439 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.294405882 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.678472635 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.290314685 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.316430993 seconds)
  done (took 489.140140646 seconds)
done (took 633.49092924 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.282882549 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.28374267 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.281224617 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.281412733 seconds)
  done (took 10.324630711 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.288769042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.283619448 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.288179269 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.282936528 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.289933672 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.276453171 seconds)
  done (took 8.899611997 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271433073 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.271711917 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276169956 seconds)
  done (took 8.004991055 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.473662701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.297942555 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.60267523 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.289720545 seconds)
  done (took 8.848853612 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.281409454 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.281800639 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.282471301 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.282865608 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.284830243 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.284334013 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.284700006 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.284824192 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.285306725 seconds)
  done (took 12.737967619 seconds)
done (took 50.012393768 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.272126567 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.442412519 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.966490475 seconds)
    (4/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.26847824 seconds)
    (5/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.289077005 seconds)
    (6/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.293167802 seconds)
    (7/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.269095792 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.052739862 seconds)
    (9/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.281835745 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.357021404 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.342735854 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.282228572 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.411749874 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.406722762 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.086923027 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.270938829 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.270442378 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.273090234 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.937354418 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.265895284 seconds)
    (21/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.281542239 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.319217605 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.312766599 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.171742957 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.035878296 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.29484712 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.402804294 seconds)
    (28/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.265140979 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.38481025 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.26697642 seconds)
    (31/192) benchmarking ("map", abs, Float64, false)...
    done (took 2.273110236 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.425898134 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.348565678 seconds)
    (34/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.266615147 seconds)
    (35/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.418200431 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.28160124 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.315677477 seconds)
    (38/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.266434636 seconds)
    (39/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.317586067 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.445648577 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.473603817 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.293756678 seconds)
    (43/192) benchmarking ("map", abs, Float32, false)...
    done (took 2.269197856 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.289763348 seconds)
    (45/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.300417054 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.960137823 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.266695341 seconds)
    (48/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.287514681 seconds)
    (49/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.279498483 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.019351751 seconds)
    (51/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.28423974 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.270137862 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.34417015 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.337483194 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.3666582 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.366375062 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.268508617 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.388337897 seconds)
    (59/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.282686362 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.438882172 seconds)
    (61/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.281769882 seconds)
    (62/192) benchmarking ("map", identity, Float64, false)...
    done (took 2.273751134 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.352718048 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.448457868 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.422035627 seconds)
    (66/192) benchmarking ("map", identity, BigInt, false)...
    done (took 2.268357738 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.412800812 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.480628975 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.273288724 seconds)
    (70/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.285993909 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.198124031 seconds)
    (72/192) benchmarking ("map", abs, Int64, false)...
    done (took 2.293981308 seconds)
    (73/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.412009566 seconds)
    (74/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.267206283 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.335749186 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.26735494 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.055480761 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.373945291 seconds)
    (79/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.923615207 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.386675421 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.374323359 seconds)
    (82/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.31438752 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.267558196 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.354226416 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.004253784 seconds)
    (86/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.438131541 seconds)
    (87/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.982691233 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.061044074 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.302020011 seconds)
    (90/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.273697584 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.39499401 seconds)
    (92/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.269880765 seconds)
    (93/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.273587511 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.401063852 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.285483186 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.051538931 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.289139075 seconds)
    (98/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.37654477 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.295619744 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.365128713 seconds)
    (101/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.294268031 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.324345991 seconds)
    (103/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.927379059 seconds)
    (104/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.270502967 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.525515003 seconds)
    (106/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.275469083 seconds)
    (107/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.281690778 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.274943731 seconds)
    (109/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.923025842 seconds)
    (110/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.277085497 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.360069192 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.419709322 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.406663218 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.270822154 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.286146189 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.498663832 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.286757255 seconds)
    (118/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.286263001 seconds)
    (119/192) benchmarking ("map", abs, Int8, false)...
    done (took 2.286105721 seconds)
    (120/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.274248224 seconds)
    (121/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.318544683 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.362058299 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.424376836 seconds)
    (124/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.355361446 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.367294942 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.02685527 seconds)
    (127/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.10084839 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.287212788 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.38458564 seconds)
    (130/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.436254168 seconds)
    (131/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.435428835 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.275095708 seconds)
    (133/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.275639407 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.321133414 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.960742811 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.963965773 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.290687305 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.440228447 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.264077974 seconds)
    (140/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.327937921 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.465807287 seconds)
    (142/192) benchmarking ("map", identity, Int64, false)...
    done (took 2.280049424 seconds)
    (143/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.265068488 seconds)
    (144/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.277912024 seconds)
    (145/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.263397597 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.959212283 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.403240955 seconds)
    (148/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.255625787 seconds)
    (149/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.268235548 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.99144566 seconds)
    (151/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.11802849 seconds)
    (152/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.279239683 seconds)
    (153/192) benchmarking ("map", identity, Bool, false)...
    done (took 2.247864158 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.245274468 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.254282478 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.264685438 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.307904518 seconds)
    (158/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.245409497 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.379373194 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.256737125 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.259970204 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.373795872 seconds)
    (163/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.246677736 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.255668856 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.246226644 seconds)
    (166/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.249205881 seconds)
    (167/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.254718953 seconds)
    (168/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.275705304 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.405100791 seconds)
    (170/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.26188395 seconds)
    (171/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.156184371 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.378900524 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.338829589 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.263542221 seconds)
    (175/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.48628948 seconds)
    (176/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.396501176 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.263823667 seconds)
    (178/192) benchmarking ("map", identity, Int8, false)...
    done (took 2.248534539 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.366585318 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.457237395 seconds)
    (181/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.299842867 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.293705416 seconds)
    (183/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.42933316 seconds)
    (184/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.309912384 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.256965996 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.357010958 seconds)
    (187/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.399843399 seconds)
    (188/192) benchmarking ("map", abs, Bool, false)...
    done (took 2.265036899 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.026245989 seconds)
    (190/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.322100014 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.24832474 seconds)
    (192/192) benchmarking ("map", identity, Float32, false)...
    done (took 2.251436781 seconds)
  done (took 365.558722827 seconds)
done (took 366.74648591 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280354875 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.449254501 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.262622558 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.264433147 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26499477 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.256468251 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.296444167 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.26565411 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.285320263 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.286315807 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.258637761 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.285210952 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.279239911 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.282691425 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.299146509 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.265862788 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.263741897 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.283078822 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.286910698 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.289721473 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266342215 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267529179 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.295818472 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.266144374 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.272674462 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.273069192 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.270206509 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.267086045 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.283790815 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.286999133 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.259707133 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.277564021 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.288155889 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.283641274 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266706875 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.283637131 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267813529 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.450337547 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.294696074 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.284105432 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.282105573 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.290429236 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.272347188 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.271976125 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.2851121 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.297066879 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27492291 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.281706821 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.259094077 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.252673176 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288844287 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.286202283 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.284064472 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.246559174 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.26840425 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.289376453 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.284609047 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283429016 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.282456094 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.2707406 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.301454003 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284251037 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.286097334 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277760444 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.282039538 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.282461877 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.284034014 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.290858056 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.283952533 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270142296 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268633221 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.28442352 seconds)
done (took 101.537578773 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.38702648 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.266026051 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.404594483 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.269365585 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432386196 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.400225117 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.262936948 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263287546 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.261811465 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.074033301 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.262103496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.26343085 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.260145441 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.25724016 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.380451543 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.258408807 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.257125329 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.967347152 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.259987238 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.389852901 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.247273644 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.254281388 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.253282156 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.083324193 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.252116747 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.244677659 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.38887937 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.254633994 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.983521216 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.246130604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.247245505 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.980703242 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.391506426 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.273937661 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.26313145 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.262782799 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.416687103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.270025916 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.369582838 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.370786077 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.391074004 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.29376537 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.246660561 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.250597429 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.257211757 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.255406818 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.254198579 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.28414506 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.252090145 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.254592483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.964357874 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.264578379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.265332911 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.255580611 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.256372557 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.27521825 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.258601473 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.257693353 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.392881794 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.257145673 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.376299309 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.083731184 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.067115146 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.254978888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.248922256 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.257312712 seconds)
  done (took 103.286082861 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.320018876 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.326810693 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.358152675 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.268600402 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.30067045 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.362532375 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.266761885 seconds)
  done (took 10.365192871 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.258857245 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.256251383 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.30195064 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.301799683 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.256338404 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.411384533 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.256740858 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.265134375 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.257221877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.303256002 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.257371864 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.259028516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.267410422 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.252659788 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.300346657 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.265456211 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367521264 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.254552405 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.256825075 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404725651 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.25904412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.267103535 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.30499958 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.264646717 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.258446924 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.261288472 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.025865807 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.257498261 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.258617438 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.258933231 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.25921007 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.311869837 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.257985712 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.253264306 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.259023461 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372228133 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.258589303 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.258914625 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.25982558 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.25708414 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.258467274 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.259388206 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.259752176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.259768317 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.259970231 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.278654943 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.259091945 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.260647142 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.260717913 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.260591106 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.305592407 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.261384711 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.259985761 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.259486124 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.310536177 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270224681 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.260505649 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.260001876 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.260008846 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.260382981 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.406503372 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.303766912 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.261374265 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.30375493 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.259956764 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.26225602 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.261311675 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.260700022 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348754537 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.262122899 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.305329522 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.261217027 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.437465902 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.280639165 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.261983646 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.258831236 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.259519545 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.260061687 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.254243282 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.261987985 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.261131418 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.258732277 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.262998289 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.261822669 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.262306669 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415601898 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367281308 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.26236993 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.27040586 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.265464056 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.262523328 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.311265828 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.261004153 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.261968616 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308012891 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372009362 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.311334238 seconds)
  done (took 130.161435307 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.270373921 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.270007231 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.260861432 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.28531007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.276142557 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.259373879 seconds)
  done (took 8.790348806 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.261082337 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.263527256 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.264561623 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.263820252 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.264036879 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.265522322 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.263448859 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.260481873 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.265213763 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.265018188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.264622239 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.265429239 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.267258815 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.264868039 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.264604021 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.262149347 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.264529961 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.264340113 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.262936415 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.264913554 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.260821489 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.265372413 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.264783409 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.262149958 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.266767951 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.265248469 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.280464514 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.265432751 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.264721142 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.268241712 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.282229136 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.26701605 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.262253901 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.266926192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.267598477 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.26100602 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.26782048 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.267434882 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.265739244 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.26636885 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.26806984 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.267327616 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.263936609 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.268902741 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.264528573 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.265643892 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.27055986 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.282069496 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.267988123 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.268637013 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.26968529 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.26716277 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.267323028 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.269170176 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.264263453 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281092683 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.270303287 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.267671585 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.267428562 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.263626572 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.269374038 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.267664055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.265876557 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.269349316 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.267703341 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.269062799 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.264004318 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.269651804 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265973612 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.266563605 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.269374029 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.268069732 seconds)
  done (took 93.381841025 seconds)
done (took 347.158440716 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.429881013 seconds)
  done (took 11.602760255 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.259252979 seconds)
  done (took 3.432446838 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.248389653 seconds)
  done (took 21.425209286 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.281258264 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.356177861 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.276087935 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.258964968 seconds)
  done (took 10.345646549 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.366107826 seconds)
  done (took 3.539780584 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.262835444 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.277977675 seconds)
  done (took 5.714844071 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.421643261 seconds)
  done (took 3.594810392 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.687889006 seconds)
  done (took 3.860932437 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.287343276 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.275467946 seconds)
  done (took 5.741153468 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.262431162 seconds)
  done (took 3.435960078 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 41.465362578 seconds)
  done (took 42.639664913 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.280449765 seconds)
  done (took 3.458225088 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.328844502 seconds)
  done (took 3.502187262 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.601208113 seconds)
  done (took 5.775767505 seconds)
done (took 129.241835201 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.259885499 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.262546303 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.258692298 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.260794138 seconds)
  done (took 10.21557993 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.339382477 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.338371092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.344738216 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.33480173 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.331696506 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.339102487 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.2965979 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.295436111 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.334073069 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.329240996 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.34417203 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.327675819 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.339800884 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.296027997 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.329926548 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.34454628 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.336144976 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.345530712 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.3108609 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.330148736 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.270800271 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.335399401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.331040305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.272414713 seconds)
  done (took 32.974111228 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.782464263 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.336710169 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.420430369 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.318135148 seconds)
  done (took 7.033178511 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.426812047 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.387837562 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.400490031 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42887727 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.478373994 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.425250674 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.296583247 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.294474168 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.2795549 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.387505811 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.451720108 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.336736686 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.480627686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.272468919 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.509833376 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.271770974 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.272273102 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.412349392 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.430616076 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.456051813 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.271957433 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428563561 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.376613134 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.340097618 seconds)
  done (took 34.294949327 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.281544667 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.293596649 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.272943017 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.290415275 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.27359655 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.273566264 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.275387474 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.279869812 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.273794997 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.273424887 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.274653687 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.287482417 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.277472296 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.273961186 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.283044411 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.276153863 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.278079192 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.280956407 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.284224065 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.275990986 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.277999269 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.282525129 seconds)
  done (took 29.318596524 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.263219736 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.26237969 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.613152114 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.66001931 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.265597976 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.26534591 seconds)
  done (took 13.50830708 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.334298487 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.480052247 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.27005354 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.600151495 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.705444518 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.28643079 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.2694592 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.497368672 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.794602195 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.781412703 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.322413733 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.335085996 seconds)
  done (took 18.855692242 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.277457858 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.268462102 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.277758954 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.287211434 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.32245753 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.291077097 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.279473473 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.265555293 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.325724907 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.340937389 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.292035779 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.321264406 seconds)
  done (took 20.729655898 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357622892 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269443059 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271796526 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271195652 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274888016 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114281112 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277409474 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98134811 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.298415615 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546569674 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272022774 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36709702 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.524611617 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274338447 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27574915 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.172124876 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520097284 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773079546 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274135563 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283604359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304545745 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.272507396 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276783756 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.472370438 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143890522 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273003781 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.667360441 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271409508 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53619622 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288600661 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2834146 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273950664 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562903875 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90701399 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402072341 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470191471 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289776233 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273607581 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.270548449 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.305147554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287842967 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275096013 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283705516 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273456741 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272818883 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271526773 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987146354 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.303346437 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.273958501 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27440925 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51145186 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376662379 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.280096942 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274366514 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298391272 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27498404 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.27880002 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401961731 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857664592 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274603248 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276980156 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.293774294 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280183825 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275816395 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954246328 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.298374494 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.280356815 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.280819405 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275065463 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27447649 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294801211 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275341542 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.327824403 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276193698 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002266655 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29587415 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282460354 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835349057 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280720379 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.279418706 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.504228534 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276500375 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276529721 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.275200835 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278016085 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910009226 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294862512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.264624802 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319980913 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000685641 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.498504063 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315540243 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305772137 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.497966872 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.262921131 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276133197 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.281641936 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282880153 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299010016 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.986503465 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299439514 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.680782334 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532613777 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.239011252 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276924315 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.203332181 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749076784 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299045662 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.299863979 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278697898 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.480348396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.906668604 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306940597 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277762295 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313182068 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278542148 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945798259 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279026189 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.287963757 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278165726 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588312271 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.987969656 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281325201 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344747698 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289600923 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279384329 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278655855 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298558963 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278776833 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.469137152 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300311318 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.288581315 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.280262724 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278671444 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.289022565 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28529317 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.282098682 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.500634504 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284756218 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572476614 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281087391 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279532814 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281037617 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.50055188 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.285428173 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.291592885 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542309341 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288695463 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282694674 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291797918 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314137813 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391017877 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310527958 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.286494531 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.533952846 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.776582477 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.285614817 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280438352 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297065207 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290393522 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.288586374 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275788534 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865192005 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299140903 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282604973 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28158797 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.297033419 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349797255 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289434896 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481694576 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.30356113 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28112111 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.288040128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.293813303 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510315732 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293054968 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.282119785 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374936416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.737876937 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895415592 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312444911 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.284279719 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.285382798 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.282077624 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283269424 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282103948 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282694951 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482951421 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315349802 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.277394068 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8792005 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301684167 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282067132 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.561832927 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295085407 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.291516168 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284779546 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.282509827 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289650685 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295097528 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.297314748 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420095301 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.299132882 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284846454 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.802388945 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.290868447 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283784974 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284199526 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317772951 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282799906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122121386 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566353035 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295574101 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525223983 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290518406 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.302017041 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.282661784 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292193671 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296008319 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.301901783 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319336853 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.294904245 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284868888 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286014007 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842250547 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047750509 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825648181 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302283433 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.300755773 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.291782944 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99665034 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309458062 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285960496 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512551518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010497469 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30894612 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.742189481 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.320810605 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023499954 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531452823 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524228065 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288576983 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.299453701 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531725223 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251317032 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32006334 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295560366 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291775477 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.274300216 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828611699 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308891952 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385518873 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000298974 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318370681 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288601219 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.360397801 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291720272 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689939233 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311341581 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287564723 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296149816 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293058553 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09956903 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310183535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287632785 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954940772 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314458309 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.753033237 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311450984 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.489066278 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.31902418 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.290832673 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.292537208 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.292177906 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.560770822 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529848078 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295294538 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295563031 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856997301 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.175186311 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.294970914 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289373763 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963691494 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304575324 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559264384 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.302912029 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.294923712 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302255421 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.289937935 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290447425 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.291408471 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296306644 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289717384 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783707755 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.291910221 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310698563 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302480281 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295022491 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.543858429 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.305945497 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.871883451 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539685611 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289376672 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323552114 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.294663293 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290701516 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.298464119 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289560298 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290518677 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321051121 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.512248423 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292276938 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.28282602 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319733406 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249380708 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291609876 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290067273 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531124778 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.314341756 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.293749261 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040198292 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342687338 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29185775 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297063306 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307066123 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336848023 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378393745 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494596512 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.326363514 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3029339 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671314415 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316952381 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300012124 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.309598218 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386236193 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299283222 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.303068592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.816209104 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87825453 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059996805 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914080986 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556588808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.300563926 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292951993 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431109979 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294191572 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569059823 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294388552 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.303486878 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321251202 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293996205 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31606526 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254667998 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580192741 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293991598 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295093393 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313735521 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.294919236 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304624244 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.252678988 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789386448 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866723418 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2944678 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30692241 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021255014 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592743879 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295119503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295117537 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294801581 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.298780103 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.326884101 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.306833266 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303739742 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433530809 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534907204 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949132249 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.329874595 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.331658216 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.89962943 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296938813 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.553423422 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307130574 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.505204467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911312148 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025088695 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567010006 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364768704 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499141848 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.31884654 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432192659 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.30291692 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301486924 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296258616 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297426798 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.296812162 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.305912808 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899752583 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577558979 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.302909593 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.301902649 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330931557 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.30488832 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.517996452 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943452329 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523319895 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306489699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302593512 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297425662 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906322303 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558468739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304817642 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.304357337 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527074919 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321352877 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328823594 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.874012754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.298576612 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85637997 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.239055844 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31778746 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302724333 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005512958 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905797569 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.324122827 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789469214 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30177889 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310888956 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57912283 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.307226738 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314863335 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592907844 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.574709966 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304109993 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507334479 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.914218073 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05774733 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.308838955 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322522187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.306720206 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299963643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316220046 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303407279 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309628797 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.69047903 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323891273 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302189337 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31472094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.299856787 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306134609 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.31847814 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302385118 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.310664095 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.313058791 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.292802164 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303738506 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447599146 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833797782 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319440506 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.97137162 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.62410303 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.555499619 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307066387 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.294123923 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.703131548 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302504318 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30058953 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302553774 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301138944 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860501179 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.318748489 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.317348066 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.308211295 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.30128557 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260371317 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30876355 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508474094 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323295439 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335566608 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.288718862 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301968027 seconds)
  done (took 940.540197329 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.300823621 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.310427939 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.316661767 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.346309222 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.310143361 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407584216 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.376525954 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.310291826 seconds)
  done (took 19.886892551 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.36559948 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.385887853 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.365055253 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.383857975 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.309772825 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.821811888 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.377293153 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.386540315 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.401444231 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.362137157 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.364970654 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.007635704 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.40255227 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.365580309 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.371068232 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.308189535 seconds)
  done (took 32.190779699 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.750584994 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.775525798 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.711027754 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.373632209 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.360284219 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.303935946 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.761278856 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.318347314 seconds)
  done (took 27.566890025 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.311860305 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.313096536 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.313445464 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.313055134 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.316078704 seconds)
  done (took 7.778174322 seconds)
done (took 1196.067533716 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.312642063 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.313746168 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.314406216 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.315592027 seconds)
  done (took 6.467638169 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.29251177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.293307174 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.294418029 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.307986251 seconds)
  done (took 9.399016664 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.974972099 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.859646689 seconds)
  done (took 5.046115073 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.793482431 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.784866781 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.784063352 seconds)
  done (took 6.575618629 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.598102952 seconds)
  done (took 2.809939446 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.300907783 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.301980028 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.305943921 seconds)
  done (took 8.121270778 seconds)
done (took 39.629455023 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.30056969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.56481156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.518373406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.309547106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.463115449 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.458730192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.108581941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.309246766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.313466705 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.311940728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.301847531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.46400479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.020041556 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.550484733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.02206815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.64540567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.462630409 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.307713637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.315008464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.309368615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.109659587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.309435599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.307645661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.312085248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.464879931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.44902026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.309597248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.646559629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.309803772 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.313243079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.448822306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.304028731 seconds)
  done (took 80.556903587 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.303226616 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.303226298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.308513718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.303626307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.303850053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.305084713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.306263938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.302662791 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.318105206 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.303022062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.309372656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.306292235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.306137739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.311418737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.303527092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.318224348 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.303975447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.30373003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.305314847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320038663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.304862046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.316764477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.305759287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.320354554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.319523447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.305979406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.321938139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.304885967 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.304569841 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.305314941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.31117744 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.326106641 seconds)
  done (took 75.108289959 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.305488631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.306328151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.305538671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.320111876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.319153724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.312605284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.305745585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.304994885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.311153472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.310396444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.307808407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.315497263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.309752564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.306336528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.324902534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.307551441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.327999256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.324869128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.312558162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.314552361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.30786252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.306659993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.323400065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.323416068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.311009041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.310083128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.306959558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.321470746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.319900089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.306057903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.311540415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.3123757 seconds)
  done (took 75.231852282 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.594709668 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.318258281 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.321404482 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.313337962 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.322803923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.317227815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.308178118 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612995063 seconds)
  done (took 14.327260697 seconds)
done (took 246.436679938 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.312044448 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.817659299 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.359154291 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.311696124 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.355823555 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.339551145 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.869824631 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.360391492 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.532619144 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.338381176 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.335722269 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.325674112 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.10051282 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.778978674 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.342747202 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.313516831 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.169442895 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.312266242 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.87681084 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.313472191 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.343409202 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.318687597 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.313382335 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.197883561 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.301221689 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.391242811 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.407745416 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.335319153 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.472396764 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.390964535 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.815835121 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.33459397 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.330949455 seconds)
  done (took 64.640737917 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.316155848 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.423574906 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.320136381 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.32165332 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.427509095 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.338198254 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.314802956 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.319987701 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.319998407 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.322007566 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.322289907 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.320648711 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.322244855 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.351371548 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.430327343 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.322994052 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.317553058 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.422856114 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.317372438 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.316185695 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.350244404 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.322987584 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.324977706 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.354597719 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.321542394 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.321865132 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.423168223 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.324997859 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.326498286 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.425682047 seconds)
  done (took 41.586484479 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.322891958 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.916906694 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.02924767 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.333884505 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.319652123 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.3227463 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.589324671 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.330317282 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.322553472 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.322762888 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.806417984 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.346525962 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.352761884 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.042405887 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.326863669 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.324653013 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.324960227 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.320344227 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.911285465 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.332938076 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.608620027 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.329998358 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.589551315 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.333059158 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.341192771 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.322029295 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.326317691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.110861092 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.3401896 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.799818599 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.055692197 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.588987282 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.055176315 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.066190003 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.052587659 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.332025383 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.324677146 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811904799 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.342995722 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.322226142 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.591302503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.329460823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.032124591 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.027856116 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.34415519 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.326239782 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.123033513 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.828508547 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.576463587 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.333565341 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077329053 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.343367371 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.328324606 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.322390972 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.559191171 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.32942175 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.323393437 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.124796277 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.347323656 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.590748392 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.331796733 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.323081513 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.930253253 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.329427796 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.936915423 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.330097804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.331390999 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.342406058 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.046442645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.345801208 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.029034346 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.343944939 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.327940232 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.825790884 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.946850857 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.205275468 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.331200868 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.925001209 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.082371018 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.612217582 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.333624542 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.11964764 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.614662654 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.333248308 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.331604183 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.331742668 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.329763879 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.394954545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.590961007 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.966865756 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.009492986 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.15264145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.619802408 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.342032691 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.326324145 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.134829622 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.347366718 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.330504604 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.038798301 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.035172336 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.347166217 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.333567324 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.029368809 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.348076365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.599299281 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.335911752 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.076811657 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.347709289 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44025814 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.330598183 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.33332359 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.346965875 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.596408873 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.335190246 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.330744224 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.999151757 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.842324252 seconds)
  done (took 186.577528948 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.323496975 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.319974593 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.322512082 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.335967666 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.321339435 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.329740198 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.321915315 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.323567477 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.3264871 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.322179796 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.320627314 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.330429546 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.329197905 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.322379617 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.321424829 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.322871001 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.321097191 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.329677815 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.322762997 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.322116114 seconds)
  done (took 43.71924748 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.333002325 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.862184697 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.844710307 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.337233749 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.333008447 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.328693797 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.380909133 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.349208461 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.333310906 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.611057073 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.493766456 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.35349312 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.332713924 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.33332675 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.825241682 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.329125791 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.612908137 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.866969251 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.338273747 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.861028843 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.328543997 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.334219162 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.326394422 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.861618656 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.639736443 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.601884652 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.387544033 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.878066104 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.353826532 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.333928554 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.861697448 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.340846986 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.330526229 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.862830817 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.353677098 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.610877197 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.35780554 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.385245445 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.401751629 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.630545525 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.874184446 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.624627773 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.662600319 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.320692399 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.337717117 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.324070649 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.873235912 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.354571214 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.324979265 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.335269936 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.340672384 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.835976905 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.349282644 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.837563349 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.355253263 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.336278776 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.866906368 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.842692232 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.850012193 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.496130079 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.351801472 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.599907265 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.340921491 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.872950736 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.35631587 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.33715846 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.336746082 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.495651922 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.88721555 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.605439207 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.623137804 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.622755048 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.342940007 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.391957293 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.356385124 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.62122886 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.396491624 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.320838406 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.623769052 seconds)
  done (took 123.103614526 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.579222514 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.443286807 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.721745047 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.323643029 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.335814241 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.328284925 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.426861865 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.95650232 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.331796746 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.421454871 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.34362782 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.328274288 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.328720015 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.399068529 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.455971245 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.832059323 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.350869253 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.32974138 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.32871179 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.931150497 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.333470304 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.438119564 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.238347884 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.547630718 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.332161829 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.350218068 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.34562191 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.354864287 seconds)
  done (took 57.672426862 seconds)
done (took 518.517271396 seconds)
SAVING RESULT...
DONE!
