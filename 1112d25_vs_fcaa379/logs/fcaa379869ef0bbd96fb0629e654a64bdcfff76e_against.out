cset: moving following pidspec: 7247
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.814044071 seconds)
loading group "string"... done (took 0.561874412 seconds)
loading group "linalg"... done (took 11.567988647 seconds)
loading group "parallel"... done (took 0.186301044 seconds)
loading group "find"... done (took 1.454085193 seconds)
loading group "tuple"... done (took 2.450722453 seconds)
loading group "dates"... done (took 1.554466066 seconds)
loading group "micro"... done (took 0.215314825 seconds)
loading group "io"... done (took 0.597009633 seconds)
loading group "scalar"... done (took 69.285411147 seconds)
loading group "sparse"... done (took 15.818384636 seconds)
loading group "broadcast"... done (took 1.390445466 seconds)
loading group "union"... done (took 13.290424963 seconds)
loading group "simd"... done (took 4.443094079 seconds)
loading group "random"... done (took 15.948068033 seconds)
loading group "problem"... done (took 2.362233934 seconds)
loading group "array"... done (took 26.504241967 seconds)
loading group "misc"... done (took 1.287542798 seconds)
loading group "sort"... done (took 4.086844728 seconds)
loading group "collection"... done (took 26.095632614 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.697581305 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147691234 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.234323629 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.369508044 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236563379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146562538 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153149569 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.276568672 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.239073899 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.22197673 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148453304 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.539868391 seconds)
done (took 6.175620545 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25362475 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.254048961 seconds)
    (2/2) benchmarking "String"...
    done (took 0.175247688 seconds)
  done (took 1.132925499 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.069754071 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170781811 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090576744 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106532268 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10774498 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090295542 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10652041 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106377325 seconds)
  done (took 1.482613082 seconds)
done (took 3.650304646 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.561382114 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868970376 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.568542173 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.166724726 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.318161828 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.348862216 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.354440803 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203850792 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.101817369 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088567593 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.194539498 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.40114181 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.468020281 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.991951756 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105450756 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093871843 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131178802 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.774141904 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07322683 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129518971 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.575214239 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.197679606 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109296895 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127919012 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.179951097 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12705116 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17336136 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099665155 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662196424 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12427226 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.20367794 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.076945223 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175052822 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.240284537 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215221817 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.087319326 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675952796 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.195799722 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097056231 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095585315 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676016504 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125174502 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.170003869 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100357438 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088191321 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185362385 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112022612 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.087969935 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095826727 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.096878126 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159730266 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.47829447 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.087990613 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.158150176 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.101452737 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696981489 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094523952 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276775232 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131813507 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10060184 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.071308704 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.100157566 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153575232 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.090122534 seconds)
  done (took 20.564880844 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.166954703 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170466502 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071867574 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153943808 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141747669 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074181204 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096203435 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08834856 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106509125 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239211328 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136377239 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.170378538 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086363909 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080038043 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.142663183 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247808949 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120765067 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099275585 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097191166 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086146063 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14032767 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107605723 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089979671 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108339469 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16549028 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198836809 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114299568 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117510964 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09474476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097053359 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137971168 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159113699 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06894848 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096018192 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189953111 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.115820735 seconds)
  done (took 5.306310898 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.227157288 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119672279 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24090492 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170539238 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143716867 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167635312 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146226825 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.31353348 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.227300418 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.113175479 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177072471 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123665305 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.090760865 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089928019 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080474483 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091486126 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.575470446 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182377626 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146493988 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152580169 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101495443 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098398829 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38184198 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078688179 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09503312 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081031542 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090238059 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.207575809 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099026714 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.158744206 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098891492 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08354158 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131395612 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205632656 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12488974 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120144403 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095544544 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07500262 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.234483388 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091398067 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.090403329 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125112673 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126835838 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111839679 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096135698 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104414222 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22352727 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094423963 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121809387 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.088018395 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.204667521 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118803933 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096063454 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.313581869 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09254538 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101716352 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076559778 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.305324694 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12299555 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091440594 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075012219 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095385028 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072006031 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448344694 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087442856 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.157081454 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093555978 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159715866 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.970708949 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084621111 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097613747 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096297682 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079456573 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112404474 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074149982 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093624863 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.072730376 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090598515 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072184706 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09627917 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114544648 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.078285793 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091836741 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075591834 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154973506 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.090238182 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11014261 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119379903 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081624378 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091196676 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106433108 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090652812 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.077314681 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188125024 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084925676 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117181442 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101539445 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135586856 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075011007 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.216433137 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075716722 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119664292 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.093522424 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10681147 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10875223 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091824359 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077235183 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089473061 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074473714 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156510411 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074080289 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095388434 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080510785 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107627177 seconds)
  done (took 23.498888058 seconds)
done (took 50.072768504 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.535453827 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.119910003 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.099199822 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.118855255 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11931033 seconds)
  done (took 1.780611731 seconds)
done (took 2.540542606 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.402705224 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203797118 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116300983 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196962805 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.101272966 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.206815862 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19363383 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.108188341 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.221827837 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099892698 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.198961256 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098837944 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102025376 seconds)
  done (took 3.037622404 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091793034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.123221654 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093659249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109973019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073350373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10968334 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090530038 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123867479 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091020979 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101799023 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073638533 seconds)
  done (took 1.840565846 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088936167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118367573 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081175619 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1062246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072478852 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107086179 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088354713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121370644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08816657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10409741 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073641335 seconds)
  done (took 1.812069708 seconds)
done (took 7.443415497 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238818296 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.112969385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.150808722 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202070413 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.385532695 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260879346 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.640343315 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169940889 seconds)
  done (took 13.10707931 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.180794025 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079638418 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097307948 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080511008 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098942595 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080581223 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097219752 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080687918 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094471152 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07881497 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096527819 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080611154 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095878878 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079059266 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094745643 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081567719 seconds)
  done (took 2.330037133 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119410077 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118597778 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103923708 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107023972 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084407371 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101291258 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087282324 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102161395 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083906743 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100078467 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089637334 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105595462 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102957364 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083533215 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102787416 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091435619 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099407412 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.086925655 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103502315 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104328847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090008392 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102282527 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087250499 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105369147 seconds)
  done (took 3.243158735 seconds)
done (took 19.442236928 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.174842265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078608278 seconds)
  done (took 1.025023158 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.151636189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153852651 seconds)
  done (took 1.084221474 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109135573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094480108 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139109194 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114352254 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079241365 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093781109 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116517886 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096710789 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07842525 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096439431 seconds)
  done (took 1.798002666 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083553169 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09995788 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091362995 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.148621256 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10846182 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100672895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083922674 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099868805 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085627003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095982615 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087334126 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118287165 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102356207 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105737751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100310698 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104176701 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.093127965 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103485729 seconds)
  done (took 2.594710416 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077407227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079723631 seconds)
  done (took 0.938302389 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086305454 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095667539 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084923239 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099851688 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07989845 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096416959 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079941762 seconds)
  done (took 1.406262316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.573710082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26573393 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.406749505 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116773309 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138277305 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.365335059 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.140487241 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112736039 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114579909 seconds)
  done (took 3.057661192 seconds)
done (took 12.681038547 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086873832 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.232189595 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.651703928 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118094499 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078358319 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152368298 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.314005599 seconds)
done (took 2.417503239 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34248075 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.162810278 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088012918 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077250252 seconds)
  done (took 1.450477779 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073780465 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102562852 seconds)
  done (took 0.965021606 seconds)
done (took 3.208612649 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075748008 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074652737 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.113055562 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094878196 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07638556 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094966831 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076180652 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094518288 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076315526 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07543801 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093431529 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.075779802 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092953838 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.075810193 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092428489 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075668549 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091899022 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076232572 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092000315 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076265085 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07515016 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09314567 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075322204 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09200488 seconds)
  done (took 2.869745709 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101177468 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09696049 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084329895 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10084636 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101676569 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084066792 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101449112 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080911772 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100444378 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080099318 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10051729 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086087755 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096684714 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.101782198 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081032686 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101492995 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083871821 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096402861 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080152285 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10213982 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100164458 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081630334 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101458314 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084477562 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102176796 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084643374 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096115116 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080593272 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100579411 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101922085 seconds)
  done (took 3.585779195 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087171267 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073483604 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093814327 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084434345 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091643621 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078296852 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091706113 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074525741 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096240874 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077135494 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096413801 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077356463 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090540427 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079054446 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095972404 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.080704273 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105461522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074537038 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091251322 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078965504 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095710379 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.074414967 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076430249 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094825042 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076810462 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090544202 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077911198 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094024554 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080252698 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.094414024 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0799233 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098247258 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077584535 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10241129 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080971626 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094531546 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083208492 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090956673 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080502699 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090539081 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074238125 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076885958 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09321321 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08524438 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094492045 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078895395 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091531539 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08103663 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095046331 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082631811 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09260339 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.074781807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098011702 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080073579 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096735466 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074232987 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095041061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074152888 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096205538 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07645226 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073573262 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090796146 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081144417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094561276 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111466296 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085101048 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090194353 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081250658 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079045966 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099908034 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096553374 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090640283 seconds)
  done (took 7.031266976 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092579127 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106696329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080203362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096718958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078660919 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09476094 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085732799 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093766197 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079490442 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104076442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078299091 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097480492 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079366876 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096097196 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078577809 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097638261 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088041842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095330934 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078151543 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096507173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078394158 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104036056 seconds)
  done (took 2.776932857 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236051502 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103284504 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148609075 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096273466 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119064166 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112838093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099652078 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085356849 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10074744 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090004144 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106587639 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086462365 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119639964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106171102 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090633267 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107843342 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099974529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091697941 seconds)
  done (took 2.79595824 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098177665 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098259072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104665646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098483825 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081250096 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098962293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105597102 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.098129211 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097619242 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080304629 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10899195 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081281306 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099316979 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082131082 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097739637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083384406 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098564767 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097467067 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092500041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106796003 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089388594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109047796 seconds)
  done (took 2.907305921 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097750547 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098110846 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114007429 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103709369 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079783998 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098765717 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104906727 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081745277 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10564208 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.080419644 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097461873 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079172952 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107655716 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081690336 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105654145 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08096746 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09796514 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081154812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097425184 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079631047 seconds)
  done (took 2.672750815 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182381835 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096079992 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112757821 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126923245 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096169488 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112526109 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108185298 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113200681 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113042839 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112683241 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112800104 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112039027 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110284718 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121912256 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113010655 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110362402 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126518325 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126672352 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096508182 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112475502 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130181254 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096264246 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126185593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11171778 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097479329 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112541272 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.215503118 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121133043 seconds)
  done (took 4.129633886 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077445803 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077572358 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095095581 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078663144 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095583765 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077878323 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095190725 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078342393 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095494854 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078699623 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093988023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078708846 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077356251 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094498199 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077969766 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094693713 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0790076 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095249328 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07857018 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094890724 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079038023 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094381569 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078444491 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077487135 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095935481 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.077495881 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095747078 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078649313 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096377369 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077839797 seconds)
  done (took 3.369504268 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09023005 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105009699 seconds)
  done (took 1.001585239 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087281757 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115745079 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078646884 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09631726 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089432473 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096909781 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091133491 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105614229 seconds)
  done (took 1.56526175 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.183447694 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.154363626 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085227942 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110172241 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.154573718 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.16654592 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131745492 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102567177 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080027046 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090319283 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147576423 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075226593 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.101060372 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080434642 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.118282643 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107544987 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079980292 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105642379 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087720564 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09838817 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084535152 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108769063 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086861248 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107375352 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075812735 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103963783 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106001831 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.092064272 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098558004 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087133689 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.117197588 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081271533 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101225024 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084976968 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098030233 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153875364 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092584317 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115198216 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083557139 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103232054 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088749104 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097818785 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085843426 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.098673712 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104337454 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084663894 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103551881 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07981285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094040106 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076423922 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097246002 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078969679 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095894373 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085509222 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102303137 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092686102 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098896143 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076900575 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095581369 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079537197 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101078552 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.079652358 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104090296 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082643239 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098161382 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084540329 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100614499 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079282195 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.099697061 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080607921 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.101788129 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127068646 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.08573834 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103120353 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08457176 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098456346 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081086559 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1040184 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083531591 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10299023 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085307401 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10526541 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080994315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097594817 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.079789728 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104916667 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080533791 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100315926 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07299797 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112569501 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099345003 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081744295 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093619902 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083415552 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.115691584 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083399151 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09444275 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084980822 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095637895 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085220443 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103335919 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077493997 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10489338 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086393279 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104308901 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083721339 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.145589948 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099161221 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078839046 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100111165 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086430077 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096029421 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094949242 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095850959 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076775703 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097737652 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086462805 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103233769 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081610033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102482752 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08287612 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104844617 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081297684 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095996666 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.078586205 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102004098 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091031717 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104282255 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082098711 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097835752 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079988809 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102279141 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084004926 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.100034447 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103184683 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082957649 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096395316 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081190794 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10213845 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.085212896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097392578 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083280204 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104077587 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083391063 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101850902 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085766552 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096503775 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07634598 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10376935 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080241953 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099052492 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089781316 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097660312 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080845469 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098178054 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107945664 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081830251 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103848474 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083136639 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103166338 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086227074 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092182153 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083708392 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100481992 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.086859074 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098419383 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082439311 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09709987 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087855804 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095599531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085180006 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094211918 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078242231 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103592003 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082946353 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100956379 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08185876 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115187674 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093016407 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10484109 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084325119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.101505352 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084155214 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101392827 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083698834 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104919401 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085940327 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103126354 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.099991994 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087325372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095114266 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083277006 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100685256 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087070603 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.092050649 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081389446 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.074972893 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103234086 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104911702 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085882593 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103977281 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082503433 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102428322 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091199932 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.117155756 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084586867 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094798017 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084883854 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108964005 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086281586 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104791166 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.086567092 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100739567 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081912991 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107725586 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081842358 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10230101 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082393775 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095666817 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078178913 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105536094 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083972607 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098188997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080078339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104905188 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087788141 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100787637 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076174193 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104065115 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107280899 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081143934 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103299803 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08098712 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102140568 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094095296 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096480506 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080199558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106260393 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085375114 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097877892 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.081428986 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101381372 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095565139 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100305697 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082601498 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101218674 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087972024 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100703166 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079494903 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099907462 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083505344 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0953461 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082224089 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104175853 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08159199 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09929977 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089814717 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106217021 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103417991 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084064982 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102297342 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087999718 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10456855 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07942808 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104989293 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080278089 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095395934 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082309416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.093996239 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082259009 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107223515 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086547181 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100514164 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08420681 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10246969 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087246754 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.100499836 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086972046 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115664073 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09379314 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.077669393 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100438666 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085763229 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099526669 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082243505 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100114414 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086879286 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103174769 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088458033 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096254267 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080561577 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104160938 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081642383 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105024082 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087938137 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105131968 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080315144 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10365115 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081761452 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109406944 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078122122 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.102293044 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083722222 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104363339 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.081421389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101624739 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098224302 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077858224 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098603344 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08654412 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09628333 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085511978 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100446976 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082871625 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.096471435 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080768151 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105574778 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07874437 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105838294 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081019281 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095467834 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078503409 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102745402 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086394242 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104778499 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080842745 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101554486 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088424528 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101530345 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080241962 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109062419 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088638444 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105198016 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09145235 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.094303696 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082893895 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108563285 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079936477 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101138431 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082547729 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09652183 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087968025 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105803081 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08627733 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101392192 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076983864 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09914813 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088106668 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102016208 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.084987152 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101072817 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086534226 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.097524164 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084398366 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105346124 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086366144 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10643863 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085183117 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104239045 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.080723295 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105551538 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08114365 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096195938 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078269666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.100691343 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088415111 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093588 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084926498 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103560335 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.080904528 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101996103 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085268215 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099397046 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08359232 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104504251 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081367821 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111247028 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081412769 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100010028 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084216546 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104273773 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076792347 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099979278 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079939098 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108683105 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.101317533 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085831434 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103109539 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085781864 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101239052 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085754628 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104499008 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087315481 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096815735 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087602399 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107606846 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082494573 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099530189 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084279697 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.096548161 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083394451 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106799777 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08166076 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108333391 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086904457 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102595981 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082745829 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104513997 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084022337 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106598656 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078815044 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103282693 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.077729823 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.1072651 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083557299 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106388522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081164279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09715986 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084880439 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105005228 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084422299 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106454594 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106091131 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079227421 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09643437 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083040225 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09946842 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092712767 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099978422 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084242523 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102066736 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083591113 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100155764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088423943 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097724685 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08270323 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104149334 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085466527 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09711088 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077981599 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101800438 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08481581 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103334458 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084294622 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097489086 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084627297 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107451361 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083024833 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095804716 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082031337 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107058862 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08508216 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10032804 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078267047 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110390088 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105459991 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089684288 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.097585292 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086303806 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100822955 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084337522 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106070634 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083501309 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103480513 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083523096 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105077721 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091499393 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097026543 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078667859 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111801622 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086006954 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108684941 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083285758 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101722406 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087592982 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107889055 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082240804 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097863496 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07913078 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097597789 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077988163 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101478426 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092216579 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.103465677 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.100595173 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086297565 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083960243 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102172304 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082978316 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097051048 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088567342 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101198106 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108416517 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079127085 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.0757171 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101493625 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086477825 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098962962 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080125434 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102025994 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083222244 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09764646 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082317591 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108634605 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084342992 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10560795 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083901423 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102901485 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082393139 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113416896 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099094141 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.082937369 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111579639 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089621315 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105381718 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084238597 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109463487 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087526425 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102752151 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088826119 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102787573 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.079930332 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107999532 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089239541 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115441339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102958458 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.077072803 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084439002 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099354463 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078914478 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110093756 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107557577 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08977393 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104584706 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082465209 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10826781 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084474212 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103729856 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082981539 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102222877 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085731662 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102875692 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086333844 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100217387 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089213239 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107240345 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087286003 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109368312 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078453608 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112084668 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.088897061 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108837761 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081679682 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.098784379 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08042396 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103817992 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089764971 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107838737 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08412752 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103509297 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085942724 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105411417 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085578124 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102309163 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089317339 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10609969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082618601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106764609 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081032809 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099729934 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08175231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106752701 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089134689 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10708384 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094168586 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107425246 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084298602 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102579916 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104762126 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08483705 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104607934 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086552626 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081957649 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09884318 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08799466 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108726562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103510148 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090333229 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110149983 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084268339 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10684383 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091350113 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104907409 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082420515 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.105569991 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083990968 seconds)
  done (took 57.049826198 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157794731 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091047574 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101675326 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083922213 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131957003 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085475267 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101803344 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.085845067 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104790186 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115248855 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084602404 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082809751 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12533655 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134004354 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130869411 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117671277 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084088349 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104668158 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083781752 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10532151 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124314715 seconds)
  done (took 3.092954578 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107342307 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121902303 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120810154 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104186927 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113663525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118423078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100559042 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119241182 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124047523 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114746909 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104483752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120071884 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115686782 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095439242 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114446321 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115223028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104033065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112905258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12142324 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120813687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096647758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122365013 seconds)
  done (took 3.3410933 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092502217 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085339312 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107404911 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082335742 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105753827 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082181585 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110979868 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.081870769 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111077177 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.102387154 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080838436 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.080935643 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103007725 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081940768 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09988913 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082360854 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112046011 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085711001 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107734585 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082547459 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.118173753 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101945947 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.084223664 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.099023748 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.097585806 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107042199 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082879275 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104598456 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.07955146 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105204538 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.083638937 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103876778 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087196724 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099225327 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079516338 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105645991 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087312628 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082244299 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102732098 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08050043 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102950997 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087496009 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109693286 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.083042087 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10205498 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081455898 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106382983 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082146778 seconds)
  done (took 5.382183094 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123420279 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161407321 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088861313 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151312354 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12674972 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097798753 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.108699556 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150293914 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086534039 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.11019049 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129603574 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.129054396 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091422395 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114296584 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093026133 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110231828 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111663199 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089101708 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117676634 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089029224 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117411628 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111165262 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104401564 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126184189 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113163098 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0895918 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110181766 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092824321 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12379327 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.119265353 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094805709 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116780775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127027393 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094098662 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110203933 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110206549 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10839134 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112247898 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110016576 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089352528 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110161286 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094763692 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114138427 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128623748 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092618158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113746819 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091075973 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105945778 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125564728 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092342627 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.12030054 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128655038 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093889971 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112300063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094616583 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12553673 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112585341 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088581162 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111684533 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123965277 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087386534 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112631326 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127086836 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090809488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118343135 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127222641 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094310419 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113183955 seconds)
  done (took 8.514466962 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12246987 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114362745 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128099663 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108614192 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115355648 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113185736 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094828623 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113854072 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093828157 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122705065 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114299125 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.208810473 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11007478 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.101554177 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116325869 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093934086 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115377181 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114500992 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094104335 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114567454 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094283399 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128257788 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114722839 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128431387 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109731444 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109937547 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114543452 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094263771 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128034203 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11444507 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110148505 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117084628 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114796907 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108726711 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130848671 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.114712899 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086728995 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114865197 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094588894 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114488455 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10994533 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108577699 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115412889 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110336182 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095473625 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115020025 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107921063 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130916906 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121754734 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124632566 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.094884932 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128070018 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115332783 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09486536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127969737 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138716235 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12901466 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107950891 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115547822 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129813996 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127644634 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137531193 seconds)
  done (took 8.008654122 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085197032 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082964423 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105538472 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084183122 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104406431 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083995917 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103648076 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08423709 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102866026 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084413596 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10387952 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084283684 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083877104 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104527065 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084203387 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105556606 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084817727 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104532005 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083806293 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104213428 seconds)
  done (took 2.731842267 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096148985 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129225778 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087068298 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117031363 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087179298 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.118512779 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107860334 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088723939 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108512942 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088327589 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119990626 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120910607 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088430184 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116918744 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099810471 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117642428 seconds)
  done (took 2.561125554 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111970373 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.131127694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174539235 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.11057142 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.089303264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118234991 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087922725 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.109734411 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08674869 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115044562 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091805501 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113501103 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087895006 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.108370994 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.087842369 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11255122 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08625268 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112601714 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087351587 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.172863874 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116217088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.112799267 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090396152 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114032005 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09102532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116447441 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094820777 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110340107 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090814861 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109922008 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.11196119 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097522984 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108473279 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.094432033 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108633501 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089204605 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108318263 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088910334 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113888017 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087809148 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110154734 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.09100711 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108356226 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090763168 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107276479 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088319926 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10785393 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095164087 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.111496366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111864853 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088769557 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113938828 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.093759677 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119641538 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09732414 seconds)
  done (took 6.661222821 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101760656 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110499505 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102915716 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105848153 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088921219 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112369764 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089967558 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112594121 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091122255 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106677326 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090781351 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110822131 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091649871 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10999498 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110711994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091551627 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.105516375 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090765952 seconds)
  done (took 2.70223627 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094690794 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108793299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094791337 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109347313 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087530124 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108408455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086627897 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10627889 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086584243 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108516809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089580453 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108013173 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087219324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.108218519 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088696847 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107920006 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088255282 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105747718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088582551 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105331013 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088388364 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106376758 seconds)
  done (took 3.043029402 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106008682 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.175359826 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121283949 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.190082013 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108465693 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088279582 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121132994 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088813072 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.130607913 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108782536 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.088272528 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109005193 seconds)
  done (took 2.31084248 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115048544 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148334202 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08802502 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109334102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121739437 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094728363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11521074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094219785 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127349558 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131836793 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115915106 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106659124 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127784813 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130161217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100871327 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12297047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115962144 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094407847 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111961215 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140647966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094350065 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127878378 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115533206 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095134879 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116063413 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129900495 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105878385 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13297506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116204594 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105621671 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122379098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114735388 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105793841 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132021584 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109442594 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127634294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095836145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14010364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122565622 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108572744 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109605533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121172989 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106053697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124747399 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127762099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095057286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124093435 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11653331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095138841 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146206102 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122301751 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128630746 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101231431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12797992 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127474304 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147506095 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133626834 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108041335 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122913305 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13366474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130356269 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101940464 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130302895 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13200773 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123304612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107816438 seconds)
  done (took 8.659144749 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13424937 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11189282 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115933815 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111531426 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129934305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116419674 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094743401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117091008 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094946806 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111896414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166373757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115847115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1114768 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130507711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116840506 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095119534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116695731 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130427795 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090356592 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147953635 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116103771 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130151066 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108751684 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130621734 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1344852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121933123 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095697814 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115927684 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095729691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116352886 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125747749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096062792 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128843446 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111322616 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107601806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117045418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117032972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105189807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116450144 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122101852 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10832871 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138793006 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116477573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095589148 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132813445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117541586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095413096 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11201795 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116544217 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09182383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134214043 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133679546 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133183253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109005551 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116902074 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116755169 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096107089 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116281146 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09428073 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122862897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13048185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095348236 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148809163 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117351941 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116987744 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109624043 seconds)
  done (took 8.580845188 seconds)
done (took 158.132088034 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.135759945 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.200238287 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156128447 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.146479181 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103383032 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118534072 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138154496 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.156518627 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082424368 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082398598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104346241 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086522077 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171990344 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081208773 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103534607 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.087070155 seconds)
  done (took 2.838517127 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183976476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.344665145 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124011492 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.092055351 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114942105 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107423162 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092784742 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116343512 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086899595 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119392572 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085620277 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108101811 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118716365 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086473106 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108985188 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08560219 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11856692 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085474235 seconds)
  done (took 3.073242663 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111789321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150661831 seconds)
  done (took 1.159693279 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121749809 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189562624 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320040934 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156230562 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11386896 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132882572 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159316061 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123753512 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19710082 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107342489 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128796851 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110679237 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115813226 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118775035 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123160946 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.0893597 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140409103 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.100076344 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120885414 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.1142349 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.111006364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115536148 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097932827 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120673003 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188300822 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128791972 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094019746 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117038683 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113727724 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09893223 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112917663 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.109334265 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128787965 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.200962107 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094622674 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.19521163 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100647302 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112355727 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.099436795 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111865516 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116237098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096334545 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130197394 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088890755 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.117220935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122052865 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093746527 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115425357 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093002862 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123992761 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116532983 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091735048 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1944055 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10257626 seconds)
  done (took 7.731006243 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.815017776 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154542203 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08846426 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.969037121 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140332051 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127788489 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.81395872 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112577102 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276456928 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.822279939 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128756339 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125262203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255820025 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269603141 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.177437701 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364745497 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694531633 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127617185 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11790642 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161706728 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123638939 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140381295 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135961717 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431375109 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090860325 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111056639 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120878449 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103450852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174712326 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.111288048 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116273083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198407363 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.279485152 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232301341 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112641274 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088019411 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110214236 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183701983 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299607164 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.243920106 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180517312 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084571744 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109798402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09762152 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134685422 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106837755 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178989146 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187952477 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210189233 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093635495 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125726988 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124347293 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098051295 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176366736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107659268 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365263021 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369418412 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087351377 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122004121 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127500853 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292772667 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088888034 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252114694 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142272791 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.239473299 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087310943 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847313843 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181035369 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110301513 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118203306 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099234102 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12043061 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096973215 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178536105 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386726121 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124161668 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11699737 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088669369 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248974164 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088394604 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110227874 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180887718 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113698079 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099521561 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127087136 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12423104 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186842839 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.263897195 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125090644 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122459358 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096083946 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126206709 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112170069 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.227675638 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.244572575 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173049266 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230139947 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122522781 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17904616 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.205247793 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097171414 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.206516428 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098735586 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128311925 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120241389 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.240610348 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150324281 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089061192 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117555114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100357417 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159279538 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114758035 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100875778 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.207630161 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466492572 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.204054074 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085754106 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115101218 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101134303 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177133417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12148707 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.289086678 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12451651 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184575983 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121069254 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087191988 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12204299 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180400162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122155751 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101191444 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122353711 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124788491 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.267107186 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247500396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102492926 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257086501 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18482428 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120461864 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190202971 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122870578 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185430058 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124173205 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097412134 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113049098 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824545469 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127458709 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099849577 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118522496 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201647941 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088603044 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112276738 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089477675 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10781803 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823007595 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092234466 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085495152 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.113925911 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118688415 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099759954 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12253809 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096243214 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19889702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259761594 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124872197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099201913 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110786592 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176235087 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.091836392 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112026388 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.089441619 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112095422 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12337617 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096041506 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11284704 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192014563 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173029569 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.247106187 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.546500553 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1109955 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089688143 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257486416 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087835772 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333436774 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123326513 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.252280016 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182912587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.109342105 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364573034 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185599968 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203250985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.114632404 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189434863 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10809327 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100118933 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.199472509 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089255211 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121092936 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175266003 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127705543 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103600271 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.187721757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111449007 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244994902 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108441476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186526964 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090534869 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120777135 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33565128 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111250245 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10800218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.199433778 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096147671 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111987655 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.63861018 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.112835525 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103547015 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119833134 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.251716483 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183488075 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12314218 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123572404 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102771135 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.198903547 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230427789 seconds)
  done (took 46.04733463 seconds)
done (took 61.743134553 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312130469 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281923163 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.341464625 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.20758941 seconds)
  done (took 2.144346509 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241148994 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158854063 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.197538227 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109618383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.206220626 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109578187 seconds)
  done (took 1.944223264 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.525338503 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.405157117 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.370221909 seconds)
  done (took 2.221970731 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273530818 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.295617196 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.337005958 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.49418472 seconds)
  done (took 2.430375866 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.267694502 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140249992 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128805992 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.190934051 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.227702275 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.189817705 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153454238 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.162215685 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134494158 seconds)
  done (took 2.564527123 seconds)
done (took 12.230500907 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.432231053 seconds)
    (2/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.300071822 seconds)
    (3/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.373605342 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.329058383 seconds)
    (5/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.209963673 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.216009153 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095002687 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.105135026 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.255613033 seconds)
    (10/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.30517352 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.312651475 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.251691714 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.329448376 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.258440105 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.226080853 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079357869 seconds)
    (17/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127182238 seconds)
    (18/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.358671362 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.094167395 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119002957 seconds)
    (21/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.203944582 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.151704141 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119604758 seconds)
    (24/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093964789 seconds)
    (25/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.232748231 seconds)
    (26/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.377308303 seconds)
    (27/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.224595245 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104032243 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093540806 seconds)
    (30/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.175181633 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158614012 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118745197 seconds)
    (33/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.153953624 seconds)
    (34/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.177163932 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132702394 seconds)
    (36/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.178606074 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1499779 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.154920091 seconds)
    (39/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077592948 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119936928 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.175838377 seconds)
    (42/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.182468383 seconds)
    (43/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183329057 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.181648411 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.154385883 seconds)
    (46/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226715589 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094912421 seconds)
    (48/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118680957 seconds)
    (49/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.149254598 seconds)
    (50/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.185915765 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.187985262 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.153902041 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095284569 seconds)
    (54/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.185494901 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094064148 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117398954 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095618822 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121243886 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.155838206 seconds)
    (60/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098410732 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120562234 seconds)
    (62/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127972602 seconds)
    (63/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.291006996 seconds)
    (64/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104026087 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184397481 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.205567682 seconds)
    (67/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07915166 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.119941284 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112708623 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.104087019 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081614297 seconds)
    (72/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.225829786 seconds)
    (73/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.208894567 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096565049 seconds)
    (75/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.204461564 seconds)
    (76/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.222028092 seconds)
    (77/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.096775399 seconds)
    (78/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.208336491 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120207525 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096299894 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112572498 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.230398314 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11249857 seconds)
    (84/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.197479379 seconds)
    (85/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104564576 seconds)
    (86/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.185604629 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094679495 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.139404693 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094287765 seconds)
    (90/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123468829 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096748931 seconds)
    (92/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104586201 seconds)
    (93/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.087397928 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10980003 seconds)
    (95/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.201801179 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112706325 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0945963 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.103282436 seconds)
    (99/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.196252632 seconds)
    (100/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079093876 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126348582 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.158033794 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104310052 seconds)
    (104/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093107982 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079431915 seconds)
    (106/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.103399043 seconds)
    (107/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.15847861 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204633537 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078251117 seconds)
    (110/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.10279485 seconds)
    (111/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079291832 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103055422 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096141487 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119280597 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093381104 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.108775191 seconds)
    (117/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.204154102 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117770874 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121127988 seconds)
    (120/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079427079 seconds)
    (121/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079135325 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.103620091 seconds)
    (123/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094925486 seconds)
    (124/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.103544919 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095776595 seconds)
    (126/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.224964349 seconds)
    (127/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090253838 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.104938252 seconds)
    (129/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.104248378 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206861455 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120497655 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114662864 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.137591853 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089062693 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.104390199 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080455556 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080247004 seconds)
    (138/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.207264419 seconds)
    (139/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1049238 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085116493 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117424337 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.157225854 seconds)
    (143/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.208031668 seconds)
    (144/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.0861398 seconds)
    (145/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122110645 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0947057 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122596009 seconds)
    (148/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080451504 seconds)
    (149/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.105047302 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159287226 seconds)
    (151/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120940989 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097102853 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.107200508 seconds)
    (154/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080942723 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103746148 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096471069 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11255184 seconds)
    (158/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080873126 seconds)
    (159/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079289697 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112472938 seconds)
    (161/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091168047 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.109915764 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088847202 seconds)
    (164/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.103677777 seconds)
    (165/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080569933 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.089549094 seconds)
    (167/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11991112 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094184962 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12163881 seconds)
    (170/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.07986129 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.139732925 seconds)
    (172/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085987464 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11309312 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080095427 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113641355 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07975039 seconds)
    (177/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079105722 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105908026 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080587645 seconds)
    (180/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118093195 seconds)
    (181/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079945377 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091015089 seconds)
    (183/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.105820721 seconds)
    (184/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081019441 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137335445 seconds)
    (186/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.079474864 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.115905067 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094470457 seconds)
    (189/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080827001 seconds)
    (190/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.103309036 seconds)
    (191/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080013629 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.104678455 seconds)
  done (took 27.741835219 seconds)
done (took 28.674586023 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233848016 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103955957 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123643588 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097621567 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.213697217 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100166637 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.134020872 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.099874674 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.128451292 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095196294 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.112960662 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.10504872 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123261535 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.189983347 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.125439985 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090950267 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.115562054 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.103669406 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131657628 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108413183 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.188850253 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11707289 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.103006959 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116331665 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189858839 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09025878 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123077456 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123769078 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.103946369 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.121232982 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09877821 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115477462 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106515281 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130709782 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088985746 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120564023 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088683727 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.113172284 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096207857 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120565796 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105133506 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120611307 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.12378973 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.091745075 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120776219 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09526957 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114142059 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101470238 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.114352352 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098253227 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116001799 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108274975 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120172769 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089108498 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11358043 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091771279 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127984347 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08903057 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130182325 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089809376 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116046737 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089007417 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.124447995 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08905142 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119940923 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091362631 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121022908 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123930064 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.095766629 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115116737 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08973268 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118139177 seconds)
done (took 9.315886169 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096443306 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177785392 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.191612562 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.195459245 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.14651596 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134550686 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.110604657 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144616157 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.132117766 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.116152423 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.150711228 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143686511 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.202394284 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.102459231 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133744778 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.122399116 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.103295355 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125176359 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.198571132 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140737843 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125895128 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.13027691 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150387602 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.110815694 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121856859 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14601555 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.099398777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121839936 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09866846 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138602165 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141036479 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.098450885 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.122286054 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111714916 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131865111 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127541804 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.109527178 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122446868 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.096395627 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.120912995 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135011617 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106777555 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121141405 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.134376358 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098838346 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.130057955 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.104787306 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128303715 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1003621 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123175524 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100121953 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15001537 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128568834 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108214683 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129003034 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126756906 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104646735 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128459327 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.098756525 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128450583 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.096664588 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122947597 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100587242 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146732268 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.123384048 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103714603 seconds)
  done (took 9.340685064 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117847229 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158217668 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131566253 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107223813 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128678766 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087324945 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112079541 seconds)
  done (took 1.824030192 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089400252 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.194769655 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.192096165 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.192786527 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.188310865 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.227918149 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110116195 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114121042 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.123927894 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126018831 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.192154687 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.223490932 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120364767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132437313 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.197561645 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088079756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.19687165 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.113959737 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100197705 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.220135989 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104297129 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144334977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104815061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116620118 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.190050448 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09056276 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.27442034 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130951904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096483741 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098864217 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127416225 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.200529267 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18900164 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130259035 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093422793 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218973376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.187262038 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102475735 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.202193318 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.118508834 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.188543065 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.10011858 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.127512282 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.127613211 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100455928 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.176011445 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.131464927 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.103486227 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124599669 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.196853791 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127670804 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.19010661 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.097532786 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.124923963 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.101597745 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128453304 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10751662 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.125040404 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.196661503 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12918678 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191330913 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192232271 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.188877929 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.193821584 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136960464 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.192042588 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.187016904 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.099036443 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.365051563 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.101667959 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.192392815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125193034 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128535487 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.179271144 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103991202 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1917504 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.192362151 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124437227 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10363116 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118558031 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.098892852 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114939503 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.179322674 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098908098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124414547 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136666653 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103456219 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.126303156 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094917463 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140924803 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.126178104 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.103421249 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.131386293 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.124339829 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107939793 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.195025689 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.127495754 seconds)
  done (took 15.195656331 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094549585 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114719065 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096933884 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116615081 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091455655 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116512811 seconds)
  done (took 1.628350876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.121156342 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127966839 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112761265 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127357331 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185221479 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.199175117 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.199176122 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124935493 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.119761353 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137978377 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.197945215 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200735144 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.196817384 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.131813332 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.201586625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.130395284 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.201179593 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099910327 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13767852 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124596536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10979374 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.131250516 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099024935 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.18665615 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130415829 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130929485 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10232061 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13880194 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.110219734 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124408248 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130172131 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103631905 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121482245 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099446994 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.225428789 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096688592 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124747196 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108151625 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132503565 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.10597125 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.227733182 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099153033 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136709188 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.107597994 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125284265 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121293088 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.109963657 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12732597 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.203096088 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.13267919 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.108886254 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129058715 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105378714 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133664843 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121260657 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09944983 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133443955 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.202849014 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.105527968 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123001217 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.130185191 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104493059 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125641088 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.108037469 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130944678 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.133099456 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096985368 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129683474 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099228828 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128861992 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13487834 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.103877641 seconds)
  done (took 10.664968529 seconds)
done (took 39.6238556 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.167729336 seconds)
  done (took 2.163902464 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.928698236 seconds)
  done (took 1.927803372 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.791263196 seconds)
  done (took 18.823853556 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.552807375 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.633713284 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.127148255 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.165376538 seconds)
  done (took 3.477080788 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.981802865 seconds)
  done (took 2.003616565 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.342230056 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.252278911 seconds)
  done (took 1.598194965 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723960477 seconds)
  done (took 1.739823548 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.589931025 seconds)
  done (took 2.594620071 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.377360053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.193142894 seconds)
  done (took 1.592335093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.699989341 seconds)
  done (took 1.715703919 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.256801955 seconds)
  done (took 18.274092783 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215918048 seconds)
  done (took 1.244396345 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312835696 seconds)
  done (took 1.337226487 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.600487906 seconds)
  done (took 4.619222889 seconds)
done (took 64.123130674 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101711148 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130799333 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106021385 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128661778 seconds)
  done (took 1.481573665 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106528293 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12697445 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106659959 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12695314 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107691544 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128257748 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101555294 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130434871 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126588773 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104577072 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127764943 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10116819 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130441643 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101755699 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124623413 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104695352 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130955316 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102550842 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129419665 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128373943 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.102676056 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130176803 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105109549 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129628886 seconds)
  done (took 3.838454226 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100873018 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119428415 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096537951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118555305 seconds)
  done (took 1.461436414 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111492947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142393565 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113388825 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135314033 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141202992 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113820158 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127043148 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097966881 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127306128 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112022194 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.14544642 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.141939997 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115096214 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.130610076 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113527614 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122541961 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.10353735 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143032633 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.137846907 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.111890333 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12915688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109702408 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.134389948 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.111934062 seconds)
  done (took 3.996848243 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179828871 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.142016652 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.15228077 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.176006735 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.132768425 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.126413129 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.155191748 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.107997333 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.136157397 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.104395482 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.131338075 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.178167794 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.109871106 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12747216 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.128454972 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106876217 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.141955542 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133960421 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.147531662 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.133517512 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135628814 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.115984086 seconds)
  done (took 4.035050691 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108790716 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121733587 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091363217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120973674 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108658341 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125185763 seconds)
  done (took 1.709992103 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101177313 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11482126 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094282254 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.090768415 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.120179824 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.088329232 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.113246993 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.089391403 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.116269248 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.08766092 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.116538373 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087756494 seconds)
  done (took 2.248985006 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.29173635 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119394258 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121976355 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094901075 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128127881 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09382049 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.138522436 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093326412 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264525141 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090106686 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.138614783 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.20002302 seconds)
  done (took 2.809516621 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223543715 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103066688 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325284573 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.406366697 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167877689 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177621538 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293253773 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177527184 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203759397 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151148052 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210066313 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167143145 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13881967 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193354345 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149060889 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.19337006 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188455753 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216175283 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161902311 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220724396 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175353554 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182011576 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193959271 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161673806 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14627006 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162138848 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.103689987 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136406403 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185242095 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183809467 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187583293 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157981919 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125133673 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244931592 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202431784 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192082963 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.327677597 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138911772 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20872408 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.198098803 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289904647 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123744915 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235155944 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139993418 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137134409 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196416128 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166526914 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.195213285 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141469824 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124486064 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196783063 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18828729 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22284442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117636562 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340778913 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130759083 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159256459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193810526 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20046749 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230190214 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155848274 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.131704627 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202705359 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194228086 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191562033 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155864382 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182104658 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135642833 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18664337 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209904616 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197073037 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176282656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223585069 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111428105 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173043809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181497559 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165460694 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191191576 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173947514 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101258741 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162628984 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144258781 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107691194 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203045115 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102921277 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246305879 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116846204 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.387381021 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250117215 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142361884 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173568345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175628381 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177120895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158571789 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129755758 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130366487 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.172806359 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168607777 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146707698 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16926344 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125466186 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.143781239 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163808619 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102864774 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175401744 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161476722 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179429534 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174960056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.112690641 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179528792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159972641 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166651886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184278367 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199274408 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140471437 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114037455 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201633087 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170215496 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145410576 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189207711 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203703968 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176582613 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119276165 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176454405 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233492082 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125155255 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202343612 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144447315 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142929787 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13941164 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17431632 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168827137 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165450092 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135871217 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.13739275 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237094462 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107212249 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146041046 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186706874 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117456518 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137539057 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149873849 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116628494 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.152553911 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.158608983 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146535269 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141038765 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174805417 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167607382 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170394079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145164087 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185297706 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111966148 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.173496821 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158824874 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.127612702 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197182671 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198521082 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10961198 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240429005 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.183119475 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216399834 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173304145 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142075225 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190294704 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108923753 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.129788311 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173209537 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145069852 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176162255 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199422711 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23746126 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185022492 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167255133 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132044785 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20786702 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186379706 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140573281 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155717092 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172938036 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182403007 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129515827 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.108738799 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138965676 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123607476 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139522509 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14134364 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19579424 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177491457 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205693041 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171419564 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150196492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195975484 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.112897206 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176702862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.187607718 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148077254 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202311143 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193884722 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182698753 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153017791 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174310337 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.101340117 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135168906 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145706793 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178980037 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113759176 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143710513 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124899574 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225410639 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187077741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131725886 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249508632 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182568208 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207717509 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130016179 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147389306 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183005271 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17016847 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.196377107 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148535872 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.14539882 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19191411 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147274219 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205545465 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173035802 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17847172 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213398619 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.169682954 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139297428 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159652313 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14969192 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151365667 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176323368 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157028277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111632163 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164091806 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147616799 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136725239 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196438492 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126069139 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22027291 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.139749663 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214447482 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107583367 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152647822 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174541092 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127442152 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.129109407 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184238986 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2024799 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155637618 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169799158 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188078227 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109973493 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.374290459 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204038297 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200830147 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142608105 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126211236 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176644682 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170474956 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176455132 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193136616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15403683 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193337175 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145685848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153779134 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139778268 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129831135 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161850959 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166801001 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144611465 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172677886 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124151278 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226049944 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123068189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174680741 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174247947 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159603483 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14047092 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153270338 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210845739 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171804123 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191351263 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170455263 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181245156 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215935692 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131971811 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112300923 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.144805496 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194062343 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112228197 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175934796 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.226242134 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218191826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17776206 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17974951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118600028 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.136539714 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171444492 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160202767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217116824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144750085 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120375227 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232827023 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13540201 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140113474 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176617173 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304697413 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154807876 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187324338 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112335332 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29407797 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135166306 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111766678 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170477682 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183182052 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.145263701 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194231806 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175032164 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127533186 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172143222 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147352276 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207719951 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226558009 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17785356 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189809057 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153250218 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170259568 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175504186 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18975435 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153121519 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.129710564 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172547465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196072682 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195679931 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144831815 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173803458 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172948838 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169279376 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187616339 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113985523 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243887298 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111528796 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17420483 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149522589 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106279397 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169331811 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.225013678 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114402772 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188037449 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172784241 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143334599 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109462789 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156507389 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170855317 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145984226 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.110281305 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191319684 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138160104 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176548304 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195097846 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10931345 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169286736 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155762583 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112424162 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152395608 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154898972 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111711654 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180755954 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196574785 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143078605 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19006673 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17556116 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178795141 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171252718 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126103082 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.676027841 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109387468 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225549325 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130659823 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201194035 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160021997 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177336446 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171928337 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161261402 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175865677 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132225503 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240511633 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173479013 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17486455 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138657767 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126027521 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15366154 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14350777 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133655475 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173194906 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151468417 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149228559 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145657522 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154297795 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156635884 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147948252 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198692867 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13024326 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196934125 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195116378 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146265732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178454427 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189559852 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142947793 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177212358 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187085391 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1217797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158356793 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.143759987 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.119360072 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193642237 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132612661 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175152612 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174598464 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144742467 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174512865 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147859244 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177946999 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153361481 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145441377 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139860859 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168035341 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169560651 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113925798 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13915813 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170919818 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170793852 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1397036 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139375981 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.155061204 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192846295 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133321884 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142006399 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296892233 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172383562 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207364425 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137397407 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14375922 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155777611 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168669224 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142937367 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173786816 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140921571 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110966442 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14357749 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195612378 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169395768 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169973973 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198270815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145288769 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246885165 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.126606095 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284873685 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149269147 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16945285 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115543231 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.142046626 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123889032 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143926025 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148225064 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208782518 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192748797 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167130012 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125823722 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139831019 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134729285 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114485662 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174058066 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167798364 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172485988 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127496435 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130550087 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154329823 seconds)
  done (took 82.314362991 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153573777 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144203504 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156508857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207040657 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17596128 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269578604 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214657225 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237704494 seconds)
  done (took 2.674667745 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105576435 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142694115 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146927248 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129922385 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129746271 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.427811626 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.1425548 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.102923981 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.188983012 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142599082 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.127020215 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.620924283 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128305734 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129065754 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122759312 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.104269185 seconds)
  done (took 4.003162662 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.516525136 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.569614503 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.093017713 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.260910957 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.242633684 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.164903453 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.768838862 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.171877962 seconds)
  done (took 12.908158032 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134014193 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150560344 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.336329771 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.239644541 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168486073 seconds)
  done (took 2.154735739 seconds)
done (took 126.652496253 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106099388 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133484006 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10766962 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13767621 seconds)
  done (took 1.596031859 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.165264785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.120037812 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093214154 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116733485 seconds)
  done (took 1.615127544 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.515716551 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.120292159 seconds)
  done (took 1.785323462 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130832653 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15703276 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.121695635 seconds)
  done (took 1.540211383 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118350338 seconds)
  done (took 1.247122656 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113799011 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128440225 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.210892348 seconds)
  done (took 1.581509553 seconds)
done (took 10.485862658 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107466569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438303038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.392225092 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148106554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732979367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382709504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048477149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166200885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.217723291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093925764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146542005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673300323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.074471109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372051673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024587384 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370063034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675271015 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122349136 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104864016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125304272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995056925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121615355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097024962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122848172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674923685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.44991548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094664585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.386806952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122333867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102816187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410992459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095643009 seconds)
  done (took 17.208713843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103612033 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195993947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10701673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125777589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102294756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125518241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135052934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112817202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206541739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123876924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118615098 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123414147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100332843 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124799835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120537761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122749786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095935692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123587015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104947662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126249427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146490122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094688657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12490473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095513407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121774395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128793449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123987611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.111530164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123637991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102518529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126709661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095704419 seconds)
  done (took 5.02867152 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145204627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.206738317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136596989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130818896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183790408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126265433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217927834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168055644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206255414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095572045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149072757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094621874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.173130316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095784021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150629904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122837913 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096538858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122379518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106632849 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124778671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118486688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122974349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09732408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123710752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094813925 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158316656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094763208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139976959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122759114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102947941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126550591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096259894 seconds)
  done (took 5.389188738 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106424216 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135667181 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.12108751 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148498595 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101860667 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135538716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106895067 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130133935 seconds)
  done (took 2.125524701 seconds)
done (took 30.879159501 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121072307 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142524891 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114951519 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136116063 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.195658141 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098257074 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.139930379 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098429914 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136385122 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118019022 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123065566 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101280072 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143711316 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105258524 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.198062614 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.136259406 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.202631944 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197449807 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.099851476 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13640269 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10096181 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.203823718 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.133524834 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100109229 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.205895873 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126836356 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.191872662 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103756943 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10334838 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.13135704 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.197272122 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134041501 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100607386 seconds)
  done (took 5.706657159 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206367251 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.103321888 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.128228046 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.100696417 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.101580307 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.129739685 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.210008217 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098661186 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128665666 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098627599 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.127881171 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.204194387 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.107230491 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.12592611 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.102801467 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.130490626 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.208832516 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.102124566 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.124527795 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.091109089 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.0944573 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129549103 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.217893818 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.095135451 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.129197025 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.098873333 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.133492731 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.105251756 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.131257599 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.102521974 seconds)
  done (took 5.016552058 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108632417 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147148474 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124361105 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202112491 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160934159 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.111596833 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.158300027 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115789636 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156981087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.096936725 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143778646 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159485427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116417088 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138171113 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.101500276 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143778699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11826769 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125810509 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105457243 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144110152 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146783858 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11316378 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.155469824 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.105269953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.123654241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104366302 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.135450442 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112536033 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136973818 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12031297 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131596802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100635482 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129158108 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.16677043 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102647347 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135088371 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.119521888 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138360608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.110894541 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.154186269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130536015 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.107232771 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.154254646 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15809178 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128276876 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.107794039 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.138568358 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.112630503 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.127154136 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115870523 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181333705 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.125113638 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.114457336 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.128212983 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097206199 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137700652 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097529597 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.129938654 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.117094676 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12990711 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.119632623 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132624803 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109197183 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128723545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107332953 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126525945 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095622588 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.130516194 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125731991 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136155126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165081802 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097406929 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135424201 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110989066 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.137339262 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108946004 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125846155 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108844301 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136313467 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103691745 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141772398 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100538502 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130675734 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114064764 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.145486577 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.107346221 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.178850856 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137549664 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100732395 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128498257 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114248181 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128717429 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102990122 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.145997466 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097598632 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129732834 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107423104 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13603216 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095540863 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151631059 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103539692 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126049148 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.122078139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.138691717 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131951382 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107257773 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.178810543 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096119052 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.136193201 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109475335 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127265756 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.104703378 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130171706 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095720357 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.142096894 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.112713344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133412073 seconds)
  done (took 15.948914225 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.301545892 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.321982667 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21241387 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.324203058 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.113962119 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.217265009 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.319224676 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.290499802 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133755337 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172139736 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.194716935 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.288992639 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098068496 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.156828379 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.29179372 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.390223237 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.160546157 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176238664 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174398952 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.143518722 seconds)
  done (took 5.636921721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120741309 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.167280109 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.153169182 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.129766723 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135253123 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109531194 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.127921937 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.153982813 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.1054666 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138272785 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101075006 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.14001949 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106076464 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.140767816 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.116361763 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174925808 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135887085 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.105001428 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.152402375 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104312755 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138206346 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.158818694 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.108964383 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.152422052 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112751649 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138228056 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095901467 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134468646 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099688871 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131887116 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103098833 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149312699 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.132154054 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104287458 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.1363442 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.110621851 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12933185 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.1006735 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132593253 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102490826 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143676802 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.107439703 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130892821 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096114304 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142733937 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102165688 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.109636072 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137366389 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139285887 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111904209 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.135119902 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11128249 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133393587 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.117899989 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130176871 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.114206264 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.140124395 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.109810159 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134394928 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096295252 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126038808 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102270306 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.133660011 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.110558178 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138462106 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151205825 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.113354202 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127085828 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.103814736 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131843143 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102977154 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143347803 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152900026 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.103784583 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100306068 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140584565 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101441833 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121926873 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108415616 seconds)
  done (took 11.011599732 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126682824 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131782288 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117987427 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164985026 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107855379 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.134525553 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103524866 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.149146842 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109988836 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.140021035 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109228679 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144207325 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.151802355 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107868655 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131613398 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11595416 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13738087 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.139411628 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148376773 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160204055 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1113389 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134139603 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.110534072 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.140664569 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.161503191 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.110372979 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16045723 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.107879223 seconds)
  done (took 4.844627302 seconds)
done (took 49.302418629 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.293059829 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.450144365 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.234228319 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.2333592 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.26505136 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.256060186 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.234516762 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.235071026 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.189525672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.223643068 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.234468435 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.233650807 seconds)
done (took 28.247002556 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.322413864 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.788830049 seconds)
    (2/2) benchmarking "String"...
    done (took 1.486195847 seconds)
  done (took 4.434458597 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.238042555 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.227956599 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457211015 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.229295561 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.245639507 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.24854957 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.241005531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.231595124 seconds)
  done (took 16.038191603 seconds)
done (took 26.194627156 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.275849207 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.41411994 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.490128659 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.259119941 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.24030457 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.242997508 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.232181344 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.247463299 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.231158013 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.244160516 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.631514171 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.504896568 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.249394721 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.631160118 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.245264882 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.231500609 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.249258715 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.462269218 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.232363341 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.290519645 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.222111237 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.238281565 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.236962491 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.245119183 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.236158941 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.246892909 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.271426644 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.239580099 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.41583814 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.256528984 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.274987259 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.236256543 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.274564957 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.237282833 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.232533663 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.238653709 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.412452622 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.237821165 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.229887066 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.23647219 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.418297221 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.250379373 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.239107882 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.242385098 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.250872844 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.286048148 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.230398398 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.343063591 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.255928083 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.237797652 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.311299823 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.621431212 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.238239113 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.244358609 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.265360764 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.448601287 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.246488451 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.283859692 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.257122225 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.244993425 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.257963962 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.234524971 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.233532707 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.234791254 seconds)
  done (took 145.862911503 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.233736375 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.237047382 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.238512855 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.261586776 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.233718622 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.238647594 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.234810231 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.234451705 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.238226377 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.263808631 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.235328063 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.237636592 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.250715939 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.182080654 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.24213592 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.250243035 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.235269792 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.2644176 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242441028 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.235260512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.255596097 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.235365118 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.252809226 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.23536782 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.271907029 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.323620704 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.273964388 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.253650155 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.240043985 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.234441194 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.280835564 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.255339008 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.843419693 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.105382193 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.244365536 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.254588888 seconds)
  done (took 81.514167462 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.235837875 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.234446587 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236639106 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.269237574 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.23722073 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798315541 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802574783 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.955417161 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.564305789 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.239919259 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.5633358 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481575096 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.23639025 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328472029 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.250626731 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.2371578 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.252586602 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.267244352 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.239330473 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.238067895 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80265318 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.250670551 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.479368607 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.415492252 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.256086204 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269961214 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.644403756 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238438409 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269628376 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.56927772 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.288591916 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.237090762 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.592604604 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.272944893 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351245506 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239705216 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271361089 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.239335309 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.517597336 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240676555 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.239388755 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.242759299 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898004077 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.239468215 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801419304 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239863788 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.183552624 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.238573166 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238851983 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.466344409 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.904322061 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.255622634 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.239270799 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.241079767 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.239819827 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239677575 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.271262481 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.464039869 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.353022681 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.241159654 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.241754436 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272105389 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.240499226 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.411751079 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240174435 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.239082923 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296521662 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357550261 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.893592901 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810450563 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.242533387 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336342753 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360156369 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.239533859 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.239705245 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.241482137 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.240964917 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.240297508 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.352396266 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.240945218 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.660253249 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.4149863 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.25881639 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.240353609 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.575063657 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.336112157 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.241613123 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61370474 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.241427341 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.240924739 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971753204 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339067771 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.241512367 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.240575032 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.242296506 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.662525571 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814752701 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487327937 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.244857391 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.856782346 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.243393159 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666132316 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.796643302 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.888472575 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.24236316 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354611895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.417841644 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.261100153 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.240412317 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.575279928 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.241159339 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.302574912 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.242681173 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.643731109 seconds)
  done (took 370.301612358 seconds)
done (took 598.841335173 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.133908814 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.087089533 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.220530933 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.116290383 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.079209351 seconds)
  done (took 11.807417057 seconds)
done (took 12.980043331 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433943634 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.436794746 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301587342 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435768122 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276886584 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453453573 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419388795 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.264567546 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.355850777 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.323724694 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.35528264 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296345266 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278161984 seconds)
  done (took 18.80256489 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511396941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.249173731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311811827 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499754336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286553817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516013568 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.546410652 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.250599995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.399370997 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262965488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261486038 seconds)
  done (took 18.267260056 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512188793 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.249790109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.319162198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493285203 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.291875419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506707647 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.541444231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251614076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390688666 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265890549 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.262450004 seconds)
  done (took 18.255894343 seconds)
done (took 56.499589458 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.287556631 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416090646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.277056523 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.262896467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.257631461 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.259669532 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.261910333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.258837069 seconds)
  done (took 11.45221592 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.255567154 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.256249747 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.256760049 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.256372843 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.256313773 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.256261359 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.256948571 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.256474229 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.257432313 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.25594719 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.256298712 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.255146069 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.255372204 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.255398746 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.255316491 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.257192898 seconds)
  done (took 21.271121633 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.259264013 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.256596272 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.257243082 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.256783231 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.256588321 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.257649473 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.258373476 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.257383736 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.255935767 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.256786179 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.25830256 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.256991437 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.256403843 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.257629329 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.25603851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.257432965 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.256235641 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.257156349 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.261572557 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.257892647 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.257712606 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.25809081 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.257959743 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.259340657 seconds)
  done (took 31.353938404 seconds)
done (took 65.250129052 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.249396534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.248582921 seconds)
  done (took 5.670315788 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.318293832 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.318797623 seconds)
  done (took 3.812439329 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.260007356 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.258306301 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.259711598 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.258252266 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.258699356 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.258278351 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.258750329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.2585422 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.258709738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.258811236 seconds)
  done (took 13.76360635 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.259727636 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.259388761 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.259040426 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.257768368 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.259129941 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.259249412 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.257177708 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.258859565 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.259802818 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.258159928 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.260223942 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.260220395 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.258207463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.258092399 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.25866029 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.259110597 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.259047768 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.25948765 seconds)
  done (took 23.836949558 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.272089517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.280955157 seconds)
  done (took 3.729131606 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.399976518 seconds)
    (2/7) benchmarking "second"...
    done (took 1.300496315 seconds)
    (3/7) benchmarking "month"...
    done (took 1.377169229 seconds)
    (4/7) benchmarking "year"...
    done (took 1.366447032 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.301287772 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.280441371 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.301611103 seconds)
  done (took 10.502335078 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.261072543 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.464103156 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.576628933 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.837113484 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.261120827 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.264259673 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.067082353 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.262851947 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.265910148 seconds)
  done (took 14.435652153 seconds)
done (took 76.926787655 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.260151 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.305992477 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.292889736 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.271075784 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.604007427 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.273701888 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.263183904 seconds)
done (took 16.448692368 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.249974735 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.257668267 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.26022635 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.268851746 seconds)
  done (took 10.213256275 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.252808047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.538733449 seconds)
  done (took 4.968519274 seconds)
done (took 16.361402024 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262339374 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.261764437 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.260518879 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.261375387 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.262641142 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.263243687 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.263487864 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.261979742 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.262170407 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.262386018 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.260464475 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.263849504 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.262417926 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.26363706 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262420404 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263581279 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264005097 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263733371 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.263741287 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262337526 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262837674 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262198023 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.26346774 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.264774339 seconds)
  done (took 31.482726905 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.263745955 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.262322956 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.262231199 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.264307804 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.262874656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.263627233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.260933759 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.260589974 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.263054568 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.264420592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263241315 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.262478515 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.262728943 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.26252282 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264322087 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.263678979 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.263318402 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263377111 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263600448 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.265021245 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.262607666 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265099965 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263339539 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264310489 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.264964765 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264444607 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.265193481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.265175937 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264769383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.263623497 seconds)
  done (took 39.086206804 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.26707583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.267768758 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.264388176 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263079192 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.264463999 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.264739567 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.264871156 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.264475205 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.263856798 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.263960563 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.266144789 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263226476 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264381073 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.265256074 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.265990222 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.263621474 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.265387212 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.266072284 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.265601073 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.266134015 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.264833985 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.264860798 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.266106008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.265470995 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.266799674 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.266572521 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.264035764 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.267189459 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.265779734 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.266049802 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.265513593 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.266940525 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.267303944 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.264663948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.265949319 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.26664814 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.269440592 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.267287718 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.267890672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.266793035 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.267566777 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.266225984 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.266974571 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.266749897 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.266713948 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.2664436 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.265944724 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.267846675 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.267601506 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.267198301 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.269364908 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.268139314 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.266890151 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.266025398 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.267706469 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.266702451 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.269071569 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.267848699 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.268506815 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.267494007 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.266374109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.268921012 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.268376223 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.267067105 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.267553647 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.267909297 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.267993237 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.268130669 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.269489474 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.267983846 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.268591903 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.269300391 seconds)
  done (took 92.3732514 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.266909041 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268599019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267910131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.267907192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268460711 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268512506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.269475525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267407763 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268057584 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269495962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268964677 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267647305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269251003 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268544011 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268386185 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268096399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270453305 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268862697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.269803056 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268696785 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268671039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269389475 seconds)
  done (took 29.092481498 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270510892 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27135559 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.268806293 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270651204 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273301332 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270350507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.27162772 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270182181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271780761 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271479483 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270242546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270230654 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271778838 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270767272 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269947484 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271642611 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269380638 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272656129 seconds)
  done (took 24.060312472 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.270357242 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.271080532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.270224721 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268933219 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.26955035 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.270324243 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270215458 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.269756996 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.271332195 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.27087316 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.27178724 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274350713 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.271549581 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272451562 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272296837 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.272880594 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.271751499 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271497609 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270918942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27261709 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.271434564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277097746 seconds)
  done (took 29.159178149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271898564 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272026033 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271867826 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271454545 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270513092 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272065622 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.27170708 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.271251309 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27406005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.271105363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272409895 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.271885891 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.276179675 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271986589 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.271681605 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271322026 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270863283 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272036162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271211038 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273224866 seconds)
  done (took 26.628300016 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27441304 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275240092 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274901911 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274540018 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27481318 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275017778 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275505349 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273496178 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274676634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275534555 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275223353 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27683796 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275494293 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275030513 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276839839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27581302 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276940166 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27656163 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275946891 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274937247 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276917735 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275369925 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276204419 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275048472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277085055 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275358805 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277013722 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275994566 seconds)
  done (took 36.903979219 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274306179 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277041878 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.274686866 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.273815057 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.275695947 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.276614063 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.276082304 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.276729781 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276738971 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.275086794 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.276791752 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.274124685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276359809 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.275293803 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.275964916 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.276325514 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276421601 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.276573151 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276213514 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275589673 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.276207396 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276585094 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.274670809 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277669267 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277304932 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.27814706 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276350783 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276540404 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277119254 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27679816 seconds)
  done (took 39.47372412 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.327125554 seconds)
    (2/2) benchmarking "in"...
    done (took 1.324160527 seconds)
  done (took 3.841840474 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.277096069 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276323747 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.275827135 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.278318542 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276758222 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276666201 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.27640271 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277451475 seconds)
  done (took 11.404215121 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.272232178 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.277723745 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.276584655 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.278268408 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.277070346 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.274046645 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284370479 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.283600761 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.273617197 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.277242931 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.27456738 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276983792 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.27766529 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276362585 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.27680407 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277761659 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.280900141 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.278893269 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.278439666 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.2780045 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279002614 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277657636 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280304415 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.28100081 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.275120758 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.284876933 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.282861679 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.284166066 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275487016 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.280984292 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.278359868 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.281379844 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.280917905 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.281545794 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.280793232 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.279860044 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286473543 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301549081 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.284425941 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284778392 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280287257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.279897513 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.277885833 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.278909472 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280452144 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.284226046 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.280038563 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.28076692 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.276411974 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.28016071 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.283369492 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275335495 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.281927667 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280557438 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.281295218 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28761073 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288526577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.277146479 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.277721655 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.285664823 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292933575 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.286793927 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281088717 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.284444128 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280456669 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.281348996 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288498991 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.286463685 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.282102006 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.280590752 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.285845172 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293099336 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.28989728 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.285672321 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283866231 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.281939296 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278573711 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284586692 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28798718 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.287140744 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.286006207 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282771614 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280612885 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281548346 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.278001695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.284697158 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.283394275 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.283470173 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.278725248 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290359383 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.288422918 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.284268143 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.277941192 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.279593904 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.280435535 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.284716727 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.279142964 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280395767 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.285709116 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.283565607 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285399496 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281460167 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.282863179 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285785761 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284487319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.286029083 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.288159677 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279844494 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.287273769 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.289080068 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2845035 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.282227295 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.28467487 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.284575446 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283078358 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.284115759 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.286206943 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.282859829 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.287252766 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.284827463 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28318972 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288166068 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.288528439 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.285615086 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.281474108 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.289738972 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285621907 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.284404835 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.288838365 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.285817523 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.286302938 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.283569832 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.288675645 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.282003182 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287729571 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282285397 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.286475283 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.285368002 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.285893946 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.283365582 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.284454792 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.285124412 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.28439538 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.286943925 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.28810485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.285652043 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.29147508 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.286425177 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.285008162 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.284890552 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.288432922 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286704105 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.28297168 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.289345905 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.282728326 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289381059 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.282399536 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.288760028 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288338865 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.286591953 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287080098 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.282522332 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283991014 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.288412096 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.287764067 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.284116115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.28858468 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.287794344 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.288830875 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.284378211 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.288891169 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.281697753 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.284554685 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.291928297 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.288187982 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.289053843 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.287948456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290592328 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289279318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.288983506 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.285200765 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.28761731 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.290328619 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.291332153 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.292834004 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289712989 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.287767541 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.284163113 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.285319832 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291222984 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.286381062 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.292059509 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295043777 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294419649 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.286716546 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.29233233 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.286355971 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.29297988 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.29020344 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.292115177 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.288861461 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289625632 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286223677 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292696286 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.287739301 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.291546348 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.28607944 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.290664113 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.290789782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.289648096 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29079248 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.287237313 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288864666 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.291429366 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290146607 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290919779 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.28655207 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.291881462 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.285379192 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.287798368 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.291467786 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.292525442 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.293350587 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.29369326 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288585334 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292461396 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.289472372 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.286942892 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.291851659 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291331924 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.290744414 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296076718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291681484 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.288773695 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298079506 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.292307947 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.288918038 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.292943048 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.294158515 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.292688856 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.289246894 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.293785536 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.292143542 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.294165299 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.293709505 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289381489 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29360526 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.295878092 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.294129498 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.287435733 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.293298492 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.289299961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.29348327 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.289841864 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.29183525 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.291258545 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294131127 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.295760623 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.293050372 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290829589 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.294963512 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.293931574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.294019821 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290523944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.2961058 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.295431631 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.291925973 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.29347908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.292847012 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.295771296 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.287744815 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.296261411 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.288658436 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.30290826 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.304179404 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29854837 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294840229 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.295919012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29753245 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294889498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.2923378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29141282 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292565704 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.292214401 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.290314199 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.29685285 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292614932 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.297240186 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291979399 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.293012447 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.29722804 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.294673619 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.291664979 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.296281208 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.296870522 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.296096295 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.290343412 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.29615539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.293866363 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293189096 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.293801844 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.291734019 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302122818 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296907745 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.294251672 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.292415291 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.292816348 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.291990277 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.294005037 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.298219732 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.293268915 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.301243293 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.292912978 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.296133886 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.295448696 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300666248 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.30068168 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.293619329 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.300254644 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.296107618 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.292118551 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.29443227 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.29714522 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300900246 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.303189662 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.293218776 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.299150422 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297986294 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.297638566 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.296452701 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.298062403 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298693395 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.298250867 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303622939 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.319738907 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.29514435 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297212199 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.299981156 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.298678867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.297565928 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.293875735 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.297574778 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.301306091 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.294983009 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.295708883 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.293647483 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.29870077 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.299591411 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.297609287 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.29844441 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.29918264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30230019 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.300817851 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300666772 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.298534586 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.302594851 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.302892124 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304118695 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.303769062 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.296310027 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.301105132 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.298857801 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.295845344 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.296461124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.297231695 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.301412338 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.295329144 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.30350295 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.301766277 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.296899731 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.299336521 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.302389893 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.294210895 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297745725 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306010188 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.294923186 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302244786 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.299287882 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.296403868 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.302813961 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.30001832 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.295073073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.296501459 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29936735 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303501462 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.297438524 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.301491028 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297205246 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302693435 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.300248496 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.302102081 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.30132327 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.301756303 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.297577451 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.302172881 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30047443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.304091225 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.298540895 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299061625 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.298376878 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.306943608 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.306434406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.29781395 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304556096 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.303011124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.296770877 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.300526355 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.304112588 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299331057 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303939896 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.298458375 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302756122 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.298698688 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.302385474 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.301130825 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.303888614 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.298192631 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.299026977 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304046537 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.302770512 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302674677 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.301171604 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.305480139 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.299479339 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.298081396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.304819372 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.299980398 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304588644 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300438023 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302063986 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302365199 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.30529854 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.304204541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304011956 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.300660003 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.300347502 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.30837231 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305014699 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.303869347 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.303070491 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.306732632 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.299534167 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302044743 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.304309074 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.301329016 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.302890688 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.307862615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.301970096 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.301409814 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.304245015 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305995061 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.308550932 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.30493085 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.300429177 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311782307 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.328459532 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307549535 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.302367698 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.303155825 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.301625672 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.305075606 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.306072659 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.301143731 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309542894 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306549063 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308600895 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304685041 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.302759711 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.30208905 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308486624 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307300305 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.303092 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.307966447 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.303537599 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307936276 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.306422011 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.305794709 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.30163755 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.302886974 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.304155017 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.304461214 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.305805447 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30538385 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.305747567 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.304320494 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309460788 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307427984 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.306388105 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.30775716 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.301968357 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307086225 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.303249784 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.306001819 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.305914975 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.304478244 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.309126017 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309400627 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305777871 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.307420254 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.309526204 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.309290478 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.304420723 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.305095246 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.30951073 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311744966 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.308035146 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303632244 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.306932308 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.30897766 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310074508 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.307918203 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.304856173 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316057872 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.332526374 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304249241 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305684492 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308160987 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.311588772 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.309527863 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.308799658 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.307031206 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.308996386 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.311279712 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.310634398 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.31428883 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311698003 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.307173959 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.312323679 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.307295911 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.307931191 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.309362478 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.313405983 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.310269626 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.306582607 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.314850373 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313204021 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310304005 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319516626 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310782225 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.30870362 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.313682918 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306682463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.312020307 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.308976953 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.312763476 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.310336809 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309839052 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.311207989 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.306607861 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311499207 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.311701302 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.315040262 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.311120309 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.306775117 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.30920067 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.311009812 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.311813082 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.311636551 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.311716202 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.311665639 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.311689656 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.308236585 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320435759 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319015706 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.312712466 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.312597525 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.311787479 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.30964867 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.31082218 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311872357 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.313473494 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.312569584 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.312418026 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.310580055 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313300265 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.313669596 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.307649539 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.30721269 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308091347 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.312175256 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.317616848 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32298166 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.31280581 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.310510292 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31293235 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.311143005 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.307391469 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314209745 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31339437 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.306641239 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.308957601 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315247074 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.312727184 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.31095003 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.309116462 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.31267296 seconds)
  done (took 773.456837648 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310068565 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311494676 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311216942 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.311178406 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309511044 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309973284 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309785792 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309758011 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.309897644 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.310687352 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.311695713 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311165127 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31062621 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312855112 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311141233 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310438492 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310846495 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.311273542 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311588535 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312485861 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31121012 seconds)
  done (took 28.749392576 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.311178765 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.312867276 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313173806 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.311902501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311707189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311084763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.313376415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310945762 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313085347 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312743475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313009857 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31277887 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.312373253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.311763687 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313240013 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313032713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.309523251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312800094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.312286589 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313888642 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313796408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.311660291 seconds)
  done (took 30.093457454 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.314454772 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.311889262 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.308621204 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.312535998 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.312220905 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.311616902 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.313606617 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.312756052 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.31403143 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.308356585 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.307084404 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.310557269 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.311917343 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.315779014 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.313044428 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.315743616 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.313369501 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.312307264 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.31285063 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.312812672 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.316521292 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.314902131 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.312552964 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.309255782 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.312913141 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.313952182 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.311559847 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.312892942 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.308809934 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.313547923 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.312094765 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.310640076 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.314741664 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.310588464 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.308816102 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.315540688 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.313168584 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.310633366 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.312984148 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311857867 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.316369653 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.314071536 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.315465097 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.315753021 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.312400334 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.309384828 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.317001477 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.311861131 seconds)
  done (took 64.229032313 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.310940648 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.312867421 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.312020564 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312531992 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.312348659 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.311842867 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.311850767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.312143512 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.311541499 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.313405781 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.311009549 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.313873878 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.31424145 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.313128774 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.31403421 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.313207431 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313453797 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.313400726 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.312251899 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313566601 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.313408599 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.312090442 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.312616159 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.313042491 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.314219284 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.313548182 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314843228 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.313526792 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.31258959 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.313507672 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.315188739 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.31367518 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.314658918 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.312594949 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.313691129 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.313928888 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.313882948 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.313576115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.314763279 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.314193417 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.315242442 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315581219 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.313861538 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.315794859 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315046246 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.312995975 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.315136817 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.315096246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.314156582 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.315291141 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.315975909 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.314856997 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.314694051 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.314316726 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.316287078 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.316083255 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.314215415 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.314282047 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.316655022 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.316000159 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.316182117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.316263038 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.317150555 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.314814708 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.315808684 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.315098391 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.316444772 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.315611208 seconds)
  done (took 90.578075501 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317860256 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.3164607 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316554419 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318111237 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318335563 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.316631153 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.318079387 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.316439951 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318455784 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317769299 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316935384 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.316997625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.317208074 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.316329684 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.317935163 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.317554151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320229071 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316691723 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317926235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318843787 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.319938907 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.318467205 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.318901108 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317463571 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.318954987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.319900814 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319120641 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.318802278 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319226526 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.318001099 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318262161 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.318348425 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319657826 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.319450167 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.319288708 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.319658763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319945468 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319543444 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.319126278 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.319299035 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.319419896 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321179476 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320049164 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.320447229 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.319976082 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.319470649 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.319726451 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.320523292 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.319482139 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.319995825 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.320058467 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.319057496 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321268326 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.321495517 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.321016834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.32148976 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320543981 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.322479608 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320367155 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.322085205 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.321886751 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.32065075 seconds)
  done (took 83.01160453 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320573887 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.321139137 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.321504664 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.320174017 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319625576 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321775728 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319233711 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.320221864 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320741141 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.321032301 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320094046 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320991476 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321494364 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321081129 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.320673649 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323100741 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321445144 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.322520246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320281785 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.320157303 seconds)
  done (took 27.645940924 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.319637283 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.321125451 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.321715101 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322541185 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.32155068 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.320990467 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.321347228 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321704653 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321178715 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320332292 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320604753 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.321934036 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321966853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321366273 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.322210628 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.322941115 seconds)
  done (took 22.37104494 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.321119427 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.322538048 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.324851733 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.324168702 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.321366639 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.321192576 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.320358041 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.32238241 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.322540062 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.324203941 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.32263109 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.321558883 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.322098341 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.322984069 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.321836621 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.32139234 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.322167787 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.322767601 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.32127587 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.322125992 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.322449906 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.322763126 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.323296486 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.322660162 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.32257415 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.322296501 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.323893701 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.321048204 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.3221225 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.32229814 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.322075538 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.322941435 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.323951347 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.323167493 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.323521074 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.323030419 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.322395258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.322370569 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.32213245 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.322343821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.32182821 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.322265442 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.323081272 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.323278161 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.32338287 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.321738181 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.323600683 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.32511283 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.323349352 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.322083929 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.321737253 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.324042113 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.321543363 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.322980309 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.322509969 seconds)
  done (took 73.971594657 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32215143 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323382925 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.323087842 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.321903008 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322808163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.323055908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.323416448 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.326786828 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325506082 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.323033862 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322149289 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324543377 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322731872 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.323694127 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.325510664 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.324055062 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323729151 seconds)
  done (took 25.055253378 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322958756 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323725405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.323930753 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324073216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.322628635 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.324249817 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323021399 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.324316 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324334841 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325968184 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325823671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.324987977 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324162992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.32432948 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324533237 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324056682 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.324275268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323725855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.32613689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324396788 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325204127 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323557531 seconds)
  done (took 30.365216112 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.318737895 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.319156797 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.320489258 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.329270948 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.323976945 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.317969015 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.318832722 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.319256918 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.331243642 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.338758209 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.337217729 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.324072219 seconds)
  done (took 17.129310634 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323417344 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323578279 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324181733 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322985362 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326154628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325810547 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32330247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323801305 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323877317 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325601932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323407222 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324243235 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324945087 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322324143 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323395594 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324322465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324708069 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32425111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323655109 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324625566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323011688 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323230905 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32344784 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324303183 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324052905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324771572 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324503464 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324855129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323273673 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323895709 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323710161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323500512 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32363333 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323577587 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324233722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325228208 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324513159 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326266129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323989045 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325590297 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326036207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326537855 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325317845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324363079 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325035312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324738784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324429201 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325590283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325353002 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326530192 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325627366 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326122747 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325344397 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326087103 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325656532 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325975557 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325780971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326072356 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325973716 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326496873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326061593 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326714127 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325966433 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326481873 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325233703 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326758897 seconds)
  done (took 88.667937606 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324910726 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326399645 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326386006 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327340616 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32719469 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326038778 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326942376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325386112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327050172 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327490221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32757632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326457991 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327097805 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328130405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328281582 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326905505 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326435879 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327727945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326777879 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328415596 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328593398 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326085105 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326969563 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326978497 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327408627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328832184 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328729745 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326612752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327635351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327250972 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328204748 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328322019 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328046708 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326760205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327941696 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328144601 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328430016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328989048 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328758226 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328943336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327402284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328614509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327094456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327627846 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327860275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328363467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328061587 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328987248 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328954252 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328329018 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329806847 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328512357 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32851712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329443521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330019342 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328968407 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329895401 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329237679 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330174215 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328400048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327265047 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329384574 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330229174 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329395901 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329113527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329812578 seconds)
  done (took 88.879553617 seconds)
done (took 1808.890735943 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.491442675 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442303319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325959724 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.337744655 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.324812944 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.318994456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.338011093 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.325888593 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.325437861 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.325418789 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324627374 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.51458555 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.321848577 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.326333833 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.324781577 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.422011666 seconds)
  done (took 27.02378625 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.354163064 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.3333158 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441018449 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.349553936 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.353505028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.512791374 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.387021052 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.333052543 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494176746 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.34765193 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.320660232 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.351177791 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.329912242 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.321020207 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346306962 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514612375 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.573578416 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.320972557 seconds)
  done (took 29.221164727 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.764668898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.329650274 seconds)
  done (took 5.33008382 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346224327 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328209059 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328692795 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.3264394 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.320994131 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.320512133 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328261991 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.323995931 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.328213044 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.451010803 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329204568 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.340927923 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.346912885 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.329370632 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331569185 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.372959829 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.493582484 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.331000136 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.330950115 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.333851972 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.327039374 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431066315 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.368801263 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.334231811 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.446934546 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.324320082 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335018151 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335995673 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.480405366 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333445235 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.328605141 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.327638609 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.33001232 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.326148095 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.767302218 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.350903694 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33653731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.35403088 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.330999026 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.490503515 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.329231193 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335784183 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.332316279 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.760513883 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469333133 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.446326536 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.338428056 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329705705 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332681604 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392306751 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329030559 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.330809658 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.385607029 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.145287311 seconds)
  done (took 85.099842279 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.328950829 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.32075715 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500033143 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.345561799 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321069447 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322760222 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.336357458 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.589584514 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.340131935 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329412588 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.600508561 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877087137 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.346762774 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.378403896 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.324444672 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395714233 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320320221 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.320223425 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.322698828 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.328120595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858501324 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324140885 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.321539271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.429466863 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358091738 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819344571 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.321846068 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.325966486 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321562544 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.322008357 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.830135542 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.345619038 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.385975563 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321193532 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586247999 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.681607167 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643609185 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.326209197 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372827161 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325883629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.326116567 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80146681 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661512751 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.321668082 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.335929551 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806475325 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.321565938 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.327340121 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.325715412 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569283805 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.320188031 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.321804471 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321255578 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32133549 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.321268561 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.338251456 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406637727 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818624696 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321790111 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321589638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.363281011 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.322483036 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327734927 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325760935 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.337902835 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663659575 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.511961427 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.322179 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660584389 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.820734906 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337342313 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886266753 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.337541624 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.334606677 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.50963655 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328748886 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.322864267 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823984249 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.35567589 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.322443014 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645968801 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.325256177 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.602133582 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.338224657 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352219208 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868886178 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.337473986 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.327087819 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32371496 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.323266299 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.322943672 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324984102 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589532538 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.369342797 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324945817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.322876016 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.367165653 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332735427 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.323130338 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326379497 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890812705 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.346398347 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.323905524 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324605164 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324099278 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.323442928 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.327535383 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.323865806 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589165657 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.324462211 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.334888464 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324166543 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324735698 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.330481054 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.414909218 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328553186 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.610711736 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327860453 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324388564 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.330992877 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325544163 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324708836 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325677976 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.327441661 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.195674123 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.591242198 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.341603108 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.325990845 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325310882 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326078029 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324392123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326390097 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.370938019 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328887323 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093883432 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354069461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.32572982 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324189893 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.333505725 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325497682 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333278143 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326398493 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615463809 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.589001932 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535113035 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326792539 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.325927488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.078640845 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.353774435 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503507017 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34051739 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.326485822 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573677241 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53899832 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.326588185 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.327714314 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.330526941 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582035657 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326836321 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630416185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851402597 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.341744514 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.326669792 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.098480297 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.046615473 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.330827584 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.328095868 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602435309 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.343321741 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32655089 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.327366983 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.327512777 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.327475417 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.346107045 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.335904872 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.325679396 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.327279013 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.624118847 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.51741878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.341394819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.33540626 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810443916 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349080358 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326491566 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332395826 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.327308324 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326533711 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.396566783 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.333037999 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.371642465 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.326705416 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330749792 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82627211 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.327543462 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.327932565 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516518404 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000708012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.346245942 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.326835398 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329330635 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.245265051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83695371 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.365976406 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.611047127 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.333779735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36409036 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.328586248 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421991842 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835828861 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328612236 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.329132802 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.962775216 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.344318945 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.765562835 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.329780524 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.331579685 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897968556 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.349706149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.334044575 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32961107 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338305978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626217575 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.329801703 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.342293974 seconds)
  done (took 495.098431881 seconds)
done (took 643.010104823 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329804442 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.333906973 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.325785315 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.329638347 seconds)
  done (took 10.562261462 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.343525208 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332987731 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.340418757 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.333943202 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341365702 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333487649 seconds)
  done (took 9.265758034 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.327745034 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.332050077 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330421775 seconds)
  done (took 8.231606738 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.529240855 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346188602 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674604556 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.359026988 seconds)
  done (took 9.150599246 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.339946885 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.340355504 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339321282 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341553416 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.345607609 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.346424927 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342879111 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342051998 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.347875648 seconds)
  done (took 13.325136624 seconds)
done (took 51.780528465 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.225466849 seconds)
    (2/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.354324694 seconds)
    (3/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.079256854 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.103000054 seconds)
    (5/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.203645979 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.406364622 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.359893164 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.106649427 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.483185181 seconds)
    (10/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.36777849 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.331087511 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.346064437 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.345594849 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.462074917 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.13219386 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.321990759 seconds)
    (17/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.374683499 seconds)
    (18/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.501285488 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.012481244 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.487202683 seconds)
    (21/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.429592481 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.547884035 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.367545263 seconds)
    (24/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.356539507 seconds)
    (25/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.422863167 seconds)
    (26/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.323392022 seconds)
    (27/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.324316996 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.503078333 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.381060901 seconds)
    (30/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.576353909 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.414015816 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.361816881 seconds)
    (33/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.323181062 seconds)
    (34/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.416984005 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.43579287 seconds)
    (36/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.341143994 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.458241472 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.331439796 seconds)
    (39/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.489669612 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.381848177 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.405469478 seconds)
    (42/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.474345589 seconds)
    (43/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.089578345 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.475096432 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.459697699 seconds)
    (46/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.323941646 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.422105844 seconds)
    (48/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.361193052 seconds)
    (49/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.413036048 seconds)
    (50/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.264353174 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.328991459 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.422725935 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.433455679 seconds)
    (54/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.395242513 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.389820827 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369391044 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.33267124 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.361145738 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.48033425 seconds)
    (60/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.339215981 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.47131555 seconds)
    (62/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.370413526 seconds)
    (63/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.430379727 seconds)
    (64/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.400620795 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.586185329 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.156265686 seconds)
    (67/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.327283411 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.425734625 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.413468253 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.233986147 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.999676825 seconds)
    (72/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.472908623 seconds)
    (73/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.324681422 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.464506145 seconds)
    (75/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.477299915 seconds)
    (76/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.386366651 seconds)
    (77/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.057752623 seconds)
    (78/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.479860264 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.433276144 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.333954724 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.389589037 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.073201152 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.409682844 seconds)
    (84/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.231033207 seconds)
    (85/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.341498797 seconds)
    (86/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.374409925 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.429806935 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.408714535 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.471066247 seconds)
    (90/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.343010095 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.53902149 seconds)
    (92/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.338229181 seconds)
    (93/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.394600733 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.501146617 seconds)
    (95/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.466460681 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.456208316 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.363611356 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.494538673 seconds)
    (99/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.327329518 seconds)
    (100/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.499659963 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.394427738 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.392470523 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.018103894 seconds)
    (104/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.36167701 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.329913694 seconds)
    (106/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.371107492 seconds)
    (107/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.429282682 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.331253933 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.408272118 seconds)
    (110/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.069490163 seconds)
    (111/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.405601086 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.460006042 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.42428885 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.406781187 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.354010341 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.426520576 seconds)
    (117/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.099531827 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.36767473 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.445316713 seconds)
    (120/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.347396204 seconds)
    (121/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.51301041 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.453495905 seconds)
    (123/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.360921487 seconds)
    (124/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.305553959 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.389824144 seconds)
    (126/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.949707621 seconds)
    (127/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.297101556 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.99019289 seconds)
    (129/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.342999881 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.308204587 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.406643176 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.430882567 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.38076219 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.397175004 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.30285216 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.989294154 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.299956082 seconds)
    (138/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.996283504 seconds)
    (139/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.944392324 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.485915272 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.341025912 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.354111277 seconds)
    (143/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.944630726 seconds)
    (144/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.458675889 seconds)
    (145/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.337601277 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.326780069 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.380380218 seconds)
    (148/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.469650782 seconds)
    (149/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.279394144 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.300956601 seconds)
    (151/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.330851395 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.311277339 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.449578286 seconds)
    (154/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.279584546 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.424200016 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.331592243 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.382017554 seconds)
    (158/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.277651287 seconds)
    (159/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.251249377 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.342564529 seconds)
    (161/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.289740686 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.456320419 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.37118821 seconds)
    (164/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.324933647 seconds)
    (165/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.280531441 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.28360753 seconds)
    (167/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.334841926 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.323424261 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.485249479 seconds)
    (170/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.342930793 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.409143429 seconds)
    (172/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.43536629 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.403401888 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.07111279 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.46219198 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.282852262 seconds)
    (177/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.311352173 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.281664586 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.284334756 seconds)
    (180/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.339560682 seconds)
    (181/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.492874798 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.308396816 seconds)
    (183/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.291780128 seconds)
    (184/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.292056625 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.516348329 seconds)
    (186/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.417538044 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.283166384 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.329693609 seconds)
    (189/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.277530308 seconds)
    (190/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.385402777 seconds)
    (191/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.032949695 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.026485871 seconds)
  done (took 333.479058297 seconds)
done (took 334.724987573 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318043226 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.347440981 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.301386837 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.302059467 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303244502 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.277937311 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.309007158 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.30223033 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.301253268 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.302043728 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.277322114 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.295954123 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.315116338 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.297331224 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.335080729 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.302234224 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302163804 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.29723449 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.302621628 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.303981065 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303897553 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303296993 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.309688346 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.302809262 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309620237 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310992753 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.307889448 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.293941087 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.310598406 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.302299169 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.295367083 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.325310527 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.304520423 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.300018416 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304734294 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.298611971 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304623471 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.348100027 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308786932 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.298626684 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.297779304 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.305142418 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.309104227 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308440312 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.299926927 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.312526383 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312475241 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.318393325 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.305972471 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.268047694 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320322481 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.302497167 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.298669343 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.273677538 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.306335813 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.319734046 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.299926795 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321458096 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.297670365 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305831526 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.337672576 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320297455 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.302665277 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313469354 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.297811486 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.318125633 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.300137112 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.305207882 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.299838204 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306044491 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306793333 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.299183447 seconds)
done (took 103.237326285 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.420337716 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.294772525 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435870045 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.297632671 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.456252223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.443908667 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.296439377 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.298580728 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.298608826 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.146442441 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.29884074 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.299044764 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.286538967 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.299427988 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428989994 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.299558655 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.297926148 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.035573074 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.299636954 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438210258 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.293182642 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.297669586 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.299476607 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.193022651 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.294670013 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.29187366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440155436 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.300163423 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.051232395 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.290744284 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.294097123 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.089600857 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442545622 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.318614067 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.310542058 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.308510433 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.459838483 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.316686564 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.424598724 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419237563 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438620672 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.339183914 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.291469102 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.293929527 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.301367409 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.301835392 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.299897431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.328446378 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.297197428 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.301130033 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.038694258 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.309869952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.302593626 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.300042273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.298049426 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.327544989 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.298392006 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.301495976 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44143596 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.301392357 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.420317536 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.154730783 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.143349442 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.293440354 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.285656053 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.295742354 seconds)
  done (took 106.423301132 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.354101688 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.364717611 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.392190581 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.286504109 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.337224539 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.392156766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.286094964 seconds)
  done (took 10.611042402 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.290063766 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.288279889 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.333693964 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.333606673 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.287124253 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.457713232 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287763447 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.296293205 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.286853069 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.336371575 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.288253213 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288134687 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.297172968 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.283317128 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330940248 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.294026358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.398138442 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.285506041 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.288220196 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43578889 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289221159 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.296703343 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.336263134 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.295373631 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.289865738 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.29169401 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.050818644 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289672503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287408139 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.288926673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289397285 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.338817033 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.28953304 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.285208885 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290500806 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401352596 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.289557034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288900582 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.290200488 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.287766623 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.2901546 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.291113437 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.289535832 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.289405477 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.289092253 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.309657914 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.289901824 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.291317612 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.290346017 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.291367561 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.335958055 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289919947 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.290770024 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.290791636 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.34144144 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29891125 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.291342686 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.290335765 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290251017 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.290412741 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438282251 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333427142 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.290956337 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.334883939 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.291692883 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291452473 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.291520952 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.291835912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378138872 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.291864578 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.334998715 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.291194673 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.465659289 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.310597026 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.292861514 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.291278039 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.290501775 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291472484 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.285548773 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.29364498 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.291774731 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.288700289 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.293695839 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291503443 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291933113 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44596095 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396486981 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.290722808 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.30224218 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.294876902 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.292302139 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.341664673 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.292344648 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.292276192 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343409788 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.402005225 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.342104292 seconds)
  done (took 133.162252344 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.301590358 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.301030028 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.292001724 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.317457373 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.290911025 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.289155604 seconds)
  done (took 8.993395633 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.292128854 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.29542785 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.293930726 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.293974751 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.294307081 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.294868327 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.295360976 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290688212 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.297605431 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.293996383 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.296243539 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.296473173 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.297232819 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.294861908 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.295250209 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.295093761 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.297414143 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.294271154 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.295992103 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296270768 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.290115936 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.295911422 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.295852386 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.292860165 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.298138568 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.295515376 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312123728 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.296445947 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.295737499 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.299546366 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.314321352 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.297402035 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.292343167 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.294592366 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.299280779 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.292650916 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297884137 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.298668412 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.297256247 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.297714876 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.30044733 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297036041 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.296099093 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.299571448 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.294509131 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.295966421 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.302342128 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3142374 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.29726499 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.298107754 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.299305438 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.29535099 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.297851992 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.299736958 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.295560052 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311516515 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.300424048 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.298666911 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.297239819 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.294252029 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.299950348 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.299021579 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.294991765 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.300653255 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.297011647 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.300167192 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.294775701 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.299946214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298550869 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.297909755 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.30080375 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.298863755 seconds)
  done (took 95.62789002 seconds)
done (took 356.024315611 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.138624058 seconds)
  done (took 4.344699832 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.291126056 seconds)
  done (took 3.499802165 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.422838766 seconds)
  done (took 21.632862744 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.38512881 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.338578943 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.300940703 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.298094229 seconds)
  done (took 10.531258593 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.547086771 seconds)
  done (took 3.754390396 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.295731592 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.294956376 seconds)
  done (took 5.80081688 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.470597624 seconds)
  done (took 3.678672946 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.461739689 seconds)
  done (took 3.670988891 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.317215114 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.303134427 seconds)
  done (took 5.837622777 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.281775172 seconds)
  done (took 3.490760366 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.673085679 seconds)
  done (took 17.881446841 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.301893074 seconds)
  done (took 3.513498743 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.340593262 seconds)
  done (took 3.549041462 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.674228545 seconds)
  done (took 5.882329814 seconds)
done (took 98.275437611 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.290952759 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.292112533 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.293728057 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.290815671 seconds)
  done (took 10.376500296 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.352527131 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.353805739 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.359229623 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.353692629 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.353137049 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.353060401 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.326239861 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.326580232 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.35466467 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.352991864 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.359336845 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.353361719 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.353903001 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.327398346 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.352741247 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.359908531 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.35390637 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.360122971 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.328818288 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.355266896 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.301955388 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.355382077 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.355528032 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.30272395 seconds)
  done (took 33.515334559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.816220312 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.370000357 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.451622693 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.351308454 seconds)
  done (took 7.200132599 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419384799 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432780638 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.43209093 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.478577996 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.51493212 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.434900459 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.33131249 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.323888512 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.311896155 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.433221525 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.435036724 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.372143256 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.521476018 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.304712458 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582153548 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.303783221 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.303938631 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.433849655 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480765505 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503638957 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.305030246 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.421361199 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433103941 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.372570856 seconds)
  done (took 35.098955261 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.312764968 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.325052179 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.307081111 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.320659692 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.306818759 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.306459958 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.307113312 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.311363418 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.306451456 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.306348711 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.307810482 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.319736004 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.306394291 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.306746279 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.313976289 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.308321641 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.308081553 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.313430693 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.315641086 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.306665282 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.308885803 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.313431674 seconds)
  done (took 30.051404913 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.294906487 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.296084391 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.646552331 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.551117809 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.295259746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.301492649 seconds)
  done (took 13.598399146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.368535735 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.496813453 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.302330124 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.634386241 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.723098266 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.308890351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.303480536 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.534075347 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.831893502 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.816045016 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.361276431 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370624403 seconds)
  done (took 19.264148497 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.297946981 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.297567582 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.314131884 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.321288522 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.357194164 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.309063033 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.313396415 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.29886891 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.360031069 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.36218959 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.309930424 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.355161532 seconds)
  done (took 21.112333775 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389454302 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30370987 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302578527 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311355101 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302124538 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146896411 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379015017 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00522118 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.32585905 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57739355 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309397372 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395973953 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556011304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30946428 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307213972 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277392201 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536054879 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77408324 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309093274 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306157576 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339937907 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309842306 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303420684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.507025064 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163073428 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303946959 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.566532848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30476122 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569287238 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321064072 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315059009 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30497144 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578620541 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943268723 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418993526 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502353846 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310877018 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327587583 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.318158526 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.326467289 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315001131 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311438371 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315378573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305802119 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303904259 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309600701 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000323387 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330147885 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.306177596 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305127949 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545510679 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408574868 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.310968643 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306093823 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341044298 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306487801 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.311419271 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430610378 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887344742 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30725086 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333138505 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.306858441 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309588729 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322712094 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892678921 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.320359687 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.311774164 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311727001 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306760495 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317528359 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335395837 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306555342 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.330558368 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307813966 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980568388 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322503288 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314144882 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845221198 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318511533 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.308162678 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538055178 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306963835 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30701849 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.307507121 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307102111 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995829529 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316970808 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.307007298 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352614704 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013180268 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523451665 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333288542 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339584233 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52878721 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.295887167 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307540493 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.309503202 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315500244 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330261055 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.995605017 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327110069 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.314286734 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565112429 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.518334134 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314211925 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290268901 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769366054 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330491329 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.336727844 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315413489 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.506622767 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.866306421 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329235346 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309715947 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347475635 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310372043 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0282843 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318288504 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.31939369 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319445632 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582190658 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.080392151 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312733455 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378316957 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317606254 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309981628 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322836084 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317215897 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310456946 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.50074188 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341547441 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.319000966 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.312533215 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311515124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.312344346 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315920014 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.333613798 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532105353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315128836 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591666454 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310968991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312094985 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31244874 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.532786333 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.312529029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.318527134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571374721 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322021392 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324456226 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327137404 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341486563 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420904512 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341914563 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.320270583 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570937395 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.319436117 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.319664232 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312642308 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333103584 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311361931 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.320905488 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313735577 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871391274 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320422364 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320505976 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313492341 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.328192942 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380942312 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319681592 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513073027 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.317582688 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322776401 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.324362167 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.324055275 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535884421 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32148421 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.326480796 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394618799 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.765279163 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885399455 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332674321 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.313271374 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.314545517 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.313107975 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314855676 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313933045 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314585766 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512477737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332558174 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318382758 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871110496 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323189082 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315078752 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.343135576 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326515836 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.322872254 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315724241 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.315713276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333748807 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322190382 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.347234435 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451750074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.331846429 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316212786 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834096322 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323000741 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316245731 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314969346 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345860582 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325421897 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107592903 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577562888 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320888985 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557930627 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331232028 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.339260839 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.316227023 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320040193 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334806724 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.327737616 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340820284 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.326680984 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316386122 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324283653 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874656557 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011321161 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84015825 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326395306 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.329662287 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323127916 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010872781 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336481881 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318119229 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548403031 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01239821 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336122761 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775163931 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.341269727 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052448154 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563443368 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555309818 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321824136 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.328509457 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567912554 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533489021 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351470697 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330854116 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324294491 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.306332263 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853882342 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340381146 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402815354 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012454374 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343630219 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325501461 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.364678157 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320930578 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706000371 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336396744 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319364781 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325915299 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323884665 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134439383 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326185431 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318340323 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905204583 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341390307 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.780323829 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338166484 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.519715789 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.335922517 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.322492135 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.329380923 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.327426953 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.573953601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564320689 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327038506 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325377317 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832446363 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.193300966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.327455152 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321660291 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047863789 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323408582 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612748985 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.326934952 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.322557457 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329514797 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322596034 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321153895 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.322304541 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326711588 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29488502 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802880208 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.32890707 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328006817 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338436638 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327730134 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575792977 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.338227628 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879470573 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555948091 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322380276 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356317277 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.327817303 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336419689 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.316913086 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322288522 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321920224 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387060088 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544306826 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334632209 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.312862146 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34596295 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531409982 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322829495 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323318273 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573308926 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.329045661 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.338110116 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03435551 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360727029 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32383315 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329474871 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319007564 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363081396 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391596429 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523972305 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.339278777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.333114511 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712019736 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341388683 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330425244 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.340381226 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421153469 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32365009 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.33216718 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.09845191 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886511617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023890922 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.893831855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579121388 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331816351 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334125866 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326090105 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461657379 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325739608 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601446318 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326051711 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.325719905 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348846994 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340150243 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332636609 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555087636 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603696342 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325969925 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32600175 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330395472 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.326651383 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334811279 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.535000324 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813192443 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875174746 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332820751 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329469699 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030324379 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62050151 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326996355 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326971306 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327634586 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.344349368 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35802896 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.340240972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327852592 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467185198 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571106906 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977890842 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.35383536 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.366179522 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.845967385 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327407913 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58515265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326995547 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.535066623 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896050558 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002604844 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597820106 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39727339 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529594254 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.334314187 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465935997 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.32852639 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3445938 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329119429 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330637732 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.330158651 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.33749849 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895716766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598321714 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.334391039 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.330057985 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360301322 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.337548684 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.550577151 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017595392 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552800429 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337959119 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3360731 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32942488 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902576828 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581286636 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331377927 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336396199 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558217209 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336157724 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356710986 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849298133 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.33021417 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862033514 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.219260635 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35049978 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338800938 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.006470587 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899931894 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.33863948 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804396745 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332139396 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336932518 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610177031 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.338237272 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340948117 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613873427 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.336408437 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341895544 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534221773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.900489654 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073483157 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.34830885 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349410661 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.348985338 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331580349 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343704068 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332194911 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340703291 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.735672257 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351917775 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334012056 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345873372 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.33395263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343511029 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.332834197 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332519723 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.340614941 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.331073478 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.333284074 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341329596 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461428635 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873798062 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350108735 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011896267 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.657227322 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586698857 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333326526 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.326659431 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.338898133 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332806815 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33384864 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334079168 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342994659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868819929 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.339996458 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.346864233 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339901692 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.544059813 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544767452 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33410183 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541466872 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345730755 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361618664 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.322774133 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335459405 seconds)
  done (took 947.163643566 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.334993553 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.337924627 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.345488507 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.384739895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.351918686 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.333201518 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.335244172 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.350541933 seconds)
  done (took 20.018747024 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.336225631 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.34404644 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.336758061 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.343906734 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.331498827 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.797223213 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.352644556 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.340529844 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.352556384 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.33215262 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.333481191 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.999269695 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.360428093 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.334163232 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.329543815 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.340832094 seconds)
  done (took 31.81051377 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.391185571 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.499207967 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.153550972 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.355856895 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.349125127 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.333828961 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.539709412 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.356338295 seconds)
  done (took 26.225144215 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.346121412 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.345636844 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.346207495 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345249535 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.345595395 seconds)
  done (took 7.974833753 seconds)
done (took 1204.621608478 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.342411186 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.342006137 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.34350124 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.34289369 seconds)
  done (took 6.61679462 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.324255554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.324762335 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.325474029 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.341121004 seconds)
  done (took 9.561986455 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.015046933 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.927703939 seconds)
  done (took 5.188437775 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.833597316 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.838374992 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.83351689 seconds)
  done (took 6.752747272 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.622300232 seconds)
  done (took 2.870136376 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.256788345 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.341025509 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.017713485 seconds)
  done (took 7.862973039 seconds)
done (took 40.098810128 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.333930905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.579734979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.490034764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.334701335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.494774402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.490471943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.075446286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.342293202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.345126908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.341516694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.335087682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.496016657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.124062948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.579570996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.123198481 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.585119727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.495738132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.339917812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.334717361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.353594454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.076325083 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.340451796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.335540357 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.359159682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.496201485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.480834989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.341890561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.584838733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.335934955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.344931245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.482014344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.338148782 seconds)
  done (took 81.360046157 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.343026462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.335926635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.344706529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336157984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.335367431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.344052318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.33559935 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.336288684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.3395197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.3358252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.337903132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.337788361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.33756215 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.350970869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.336460241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.345196228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.336720969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.349090798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.337453896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352313227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.338365286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345548477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.337422851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.3441711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.337253291 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364220084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.351113782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.337287554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338219917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.337440302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.364393389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.338916214 seconds)
  done (took 76.192878759 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.342126164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.341425546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.339080548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.340220726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.339865236 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.339904547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.337829358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.337600657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.341814533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.339521362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341921481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.342135128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.339232997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.338178641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.356201338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.33941281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.354240802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.347797624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.338336529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.339164691 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.359433055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339874106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.355251147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337625228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.338917145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.341774497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.34348016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.339274752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.340172663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.347039235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.341591464 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.339973642 seconds)
  done (took 76.212633871 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.574173775 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.350134218 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.35236223 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.344829569 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.353203383 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.350355949 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.345388182 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.578326873 seconds)
  done (took 14.501350573 seconds)
done (took 249.5153439 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.344192717 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.848466096 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.386505396 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.344958569 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.365899676 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.370860834 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.559603726 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.385781841 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.561651631 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.362500879 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.362589273 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.344961598 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.122511102 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.49824985 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.184742893 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.292650972 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.199364809 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.341191086 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.905382795 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.622562096 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.374223813 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.354710559 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.1767894 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.219085995 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.334021779 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.425591449 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.443053659 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.568023476 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.500776113 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424289091 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.849178551 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.349942144 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.34628791 seconds)
  done (took 63.024812983 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.347563481 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.351561022 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.352479731 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.352852918 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.354149484 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.353201806 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.348142129 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.353389719 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.352948127 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.353973668 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.353910349 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.353990749 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.354953083 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.352865545 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.353880906 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.345071035 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.347980303 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.352777245 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.348339094 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.343382698 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.352933775 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.353380337 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.354247257 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.353704633 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.354390414 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.353557866 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.354687782 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.355075763 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.355882261 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.353346471 seconds)
  done (took 41.825490299 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.354829905 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.928266735 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.059947069 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.362843412 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.351941178 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.355687581 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.625686656 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.357089849 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.353864254 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.354920693 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.817536795 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.358251532 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.385712459 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.07895635 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.359727029 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.357532411 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.355818892 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.352226181 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.95110742 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366580491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.643189909 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.362688323 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.627224628 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.366311614 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.374305147 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353929536 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.358758771 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.142522211 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.378338183 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.819299432 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.099221461 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.625603086 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.081599117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.097044695 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.104615646 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.362185739 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.358220577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.824648922 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.355309206 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.354629037 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.625697348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.356819542 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.062429023 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.02256915 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.371905091 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.356757644 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.162607214 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.840444291 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.587182489 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.358896159 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.091611483 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.360805988 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.359951027 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.356570819 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.58630313 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.356212368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.355149321 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.185115679 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.378218136 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.627560595 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.358689799 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.354873212 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.937682774 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.356528029 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.9253622 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.356826751 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.362731118 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.373878215 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.070752316 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.361694841 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.03493879 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.373199491 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.359486813 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.822150504 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.927380061 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.217935829 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.357322786 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935162771 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.105633753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.645059567 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.359951535 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.124086017 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.645216189 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.360452927 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.36200311 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.360541453 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.360600418 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.422967911 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.62700237 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.979012265 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.030246635 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.194134807 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.652244818 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.364415367 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.357818442 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.188650887 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.381143053 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.361850788 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.066259939 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.041078663 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.376099841 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.365696707 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.042408425 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.379156592 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.632529041 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.362548348 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.101000347 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.363177706 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425664716 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.361750812 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.36479271 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.379317065 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.632971146 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.361739374 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.363075325 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.021869105 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.855095131 seconds)
  done (took 189.706829053 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.354280767 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.369504379 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.35336539 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.369852258 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.353404039 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.361484089 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.352011761 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.353544966 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.357367179 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.352374732 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.35295541 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.360582656 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.35930477 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.35356136 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.352878439 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.353335573 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.353891278 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.376114704 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.354237495 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.354260954 seconds)
  done (took 44.412339922 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.363224343 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.890696787 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.865411288 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.364202807 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.363820224 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.360309308 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.413020807 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.365761281 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.364776101 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.643714215 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.524432145 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.370639783 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.365338041 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.364776114 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.867274398 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.356293938 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.644942014 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.893531051 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.367068075 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.893684168 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357039396 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.365528947 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.359623767 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.892345688 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.654173113 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.633907161 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.416286701 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.894905324 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.364990799 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.365520723 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.892261306 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.365857093 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361424773 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.896958459 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.381953573 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379047362 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.364849345 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.41621401 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.418187211 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.648398967 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.90015132 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.641014882 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.376487869 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.540930443 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.369182908 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.356536463 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.902986297 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.384511158 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.357250487 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.368101519 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.371734549 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.879507324 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.379425081 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.880729424 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.383690053 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.367945752 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.897652589 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.881090383 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.889495598 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.527105577 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.361608913 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.636669176 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.367482598 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.906350629 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.384525193 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.367953144 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.369064627 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.529647764 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.898620716 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.637973534 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.65134768 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.651396828 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.368163341 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.423538982 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.384492198 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.650452456 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.423741934 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.773591913 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.652055507 seconds)
  done (took 123.434437549 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.614657478 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.472094766 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.74013078 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.943285925 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.847662278 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.499726332 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.472085854 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.616651865 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.366642071 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.451144405 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98335961 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.475800995 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.061188881 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450503993 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.467179188 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.504134537 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.745632398 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.359634855 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.044076204 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.952038675 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.363841896 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.476149661 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.880628217 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.546842779 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.371784741 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.93866726 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.295214872 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.866190719 seconds)
  done (took 52.077159162 seconds)
done (took 515.734079632 seconds)
SAVING RESULT...
DONE!
