cset: moving following pidspec: 32658
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396784452 seconds)
loading group "string"... done (took 0.578585945 seconds)
loading group "linalg"... done (took 7.315397963 seconds)
loading group "parallel"... done (took 0.158212353 seconds)
loading group "find"... done (took 1.164507758 seconds)
loading group "tuple"... done (took 1.80190549 seconds)
loading group "dates"... done (took 1.268275849 seconds)
loading group "micro"... done (took 0.223546297 seconds)
loading group "io"... done (took 0.94851576 seconds)
loading group "scalar"... done (took 38.428088465 seconds)
loading group "sparse"... done (took 11.970120516 seconds)
loading group "broadcast"... done (took 0.927128122 seconds)
loading group "union"... done (took 12.455380117 seconds)
loading group "simd"... done (took 4.407834096 seconds)
loading group "random"... done (took 8.788163407 seconds)
loading group "problem"... done (took 1.876506474 seconds)
loading group "array"... done (took 20.992218648 seconds)
loading group "misc"... done (took 1.683383908 seconds)
loading group "sort"... done (took 3.469289328 seconds)
loading group "collection"... done (took 17.246889738 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511524428 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123654403 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117187972 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118493781 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146106458 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112539035 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126442897 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084046176 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.838698468 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14883509 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11771578 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42457507 seconds)
done (took 5.184186957 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174318163 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081848922 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081564574 seconds)
  done (took 1.304060697 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064632748 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121445196 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066448167 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066193266 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066101135 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064906962 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06518459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06501468 seconds)
  done (took 1.654888398 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072480144 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068784318 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065042606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066848154 seconds)
  done (took 1.41448766 seconds)
done (took 5.762869662 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.782271692 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200987383 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185495065 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410102665 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129044587 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157845458 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639496104 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306202978 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187164997 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078996197 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107356592 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.325529048 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107440046 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637177991 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076741339 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089207275 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13873392 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.41237885 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066054807 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081230257 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087663126 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126844232 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083475161 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07309065 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142336462 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066491786 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134511212 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078867778 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065280904 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210080956 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17154591 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660527019 seconds)
  done (took 10.201890979 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09516703 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096214946 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067681105 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124474373 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094885607 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068698544 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069272049 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06598241 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085598105 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126218467 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0866508 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099929513 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064421129 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067858801 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083881322 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201834297 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080357342 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080185155 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069566845 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074200171 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103871345 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077256714 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075675704 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075768056 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128128997 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178631123 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094642116 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096687496 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065472635 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077953155 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114001885 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123892189 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064384496 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064781767 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12252704 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093469079 seconds)
  done (took 4.534235033 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.995915791 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142441691 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088837857 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132762801 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063604334 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108528176 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064314083 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079903902 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.206988417 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.378913264 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590074157 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109865859 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102166462 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06630206 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067050943 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065891804 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.474413364 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094837936 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106705981 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080535372 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069426973 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068133701 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.352988079 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066945551 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063126725 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067596164 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056474261 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12435979 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067148509 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939446703 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125210332 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065174478 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099291955 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167224963 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086083195 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138625384 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065963061 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062182313 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148585818 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.067510988 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064113601 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080755982 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100956057 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109168846 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063085434 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064595679 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158483678 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065526686 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077002506 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.619242353 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106567384 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147480203 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.072300586 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060507863 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242255424 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086017227 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065493498 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061192451 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174489575 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124120229 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06392666 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06289924 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064735665 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.065750232 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.355852012 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062707516 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.890224077 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067798495 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073209675 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06644484 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066500974 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070268719 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069422941 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084094574 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061349737 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062954018 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07137246 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062838446 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063031656 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063568983 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.080479063 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362036782 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063770788 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064926416 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062019781 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086064222 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0941301 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063547876 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062545704 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097138725 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.061553396 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064755364 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063282393 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102600236 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063512036 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.081052408 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.066387725 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110715722 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.063791055 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.303355592 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068476804 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097588767 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070193838 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06492234 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098890592 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080647903 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068235226 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419928097 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065005679 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065088341 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.0682162 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065009136 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067716357 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066698918 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078805854 seconds)
  done (took 20.697902127 seconds)
done (took 37.569325809 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237441248 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076463049 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075844722 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077673346 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073681815 seconds)
  done (took 1.801947651 seconds)
done (took 3.055612408 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123115526 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100439236 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064532238 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097498912 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064002837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101892911 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101207135 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081237665 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100298711 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06388988 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09939585 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064015643 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063783294 seconds)
  done (took 2.385682171 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084015877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083916912 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07083568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083978667 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065002014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083831543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084382457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092938959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084224348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075116787 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065475805 seconds)
  done (took 2.107232571 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082730977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084651955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069777233 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082310353 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06269546 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082222955 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082306692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088672385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085153423 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076671077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065688864 seconds)
  done (took 2.093829925 seconds)
done (took 7.813874471 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076740972 seconds)
  done (took 1.299873415 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587624172 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.120506818 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081014842 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110747999 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189693356 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117510794 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270010733 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086198298 seconds)
  done (took 8.971275536 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104057983 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06926964 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068531376 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068873266 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070218517 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071534594 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067706694 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070460655 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071571378 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068223826 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071737002 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069331414 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067672492 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071256024 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069038415 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070709526 seconds)
  done (took 2.443894231 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09183375 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091316356 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075066423 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073854876 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07212042 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071211673 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07333458 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072947032 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070325131 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071373166 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073742864 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073145674 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071146487 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064214124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073273389 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07518162 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070320327 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073384769 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074287577 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074445051 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074877848 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063534541 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071325161 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073439849 seconds)
  done (took 3.100869519 seconds)
done (took 17.047260596 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113923021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070935391 seconds)
  done (took 1.414392678 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081756282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081709786 seconds)
  done (took 1.399988183 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082642912 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065482152 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09021582 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077793457 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065878787 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065597745 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08757761 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065485259 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064891524 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065489699 seconds)
  done (took 1.968872809 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068357268 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076497443 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070194212 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080868998 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073074511 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063629368 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071571772 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067381167 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076923381 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062391875 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070824696 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082515233 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070700774 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08396936 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071942822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068236016 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070270433 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067365491 seconds)
  done (took 2.536108968 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064877882 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066281442 seconds)
  done (took 1.374187287 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0663982 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063490344 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066192595 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066371157 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063240344 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062057882 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062766634 seconds)
  done (took 1.689300013 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385003725 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114336636 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313606329 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070802125 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081547482 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260537439 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065638692 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070761911 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070451921 seconds)
  done (took 2.715821978 seconds)
done (took 14.341244666 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079752665 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086486831 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096528947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376458257 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091037074 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065751246 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115154996 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187587528 seconds)
done (took 2.348855062 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213144488 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.634609239 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404188846 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207771115 seconds)
  done (took 2.492342878 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344697675 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08838828 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058834056 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067334468 seconds)
  done (took 1.810755305 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06617745 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06842275 seconds)
  done (took 1.384356268 seconds)
done (took 7.151448751 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06653802 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066190748 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063898998 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066889785 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064101023 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063032883 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083830931 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0654394 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063586847 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065899486 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068479889 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06589501 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065383098 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0656328 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06317682 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063274996 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065826497 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06623596 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063244275 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063160761 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063389695 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065873105 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063432635 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063394325 seconds)
  done (took 2.863281444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084466762 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065994054 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071097603 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070936406 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069169121 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071641472 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070454515 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065372923 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070751861 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068266665 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068599548 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069205549 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068316279 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069655478 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068385809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06896096 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071222148 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065329184 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068036304 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069256624 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070476629 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065916856 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068827109 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071116748 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068828957 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070570653 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068554221 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065567335 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071427521 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068769999 seconds)
  done (took 3.342640526 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070003969 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062831818 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064168714 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070791412 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062907689 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064412426 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062834335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06370436 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063577275 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062770535 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06417958 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063054949 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063612578 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063994723 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063720413 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066651502 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078671277 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06309388 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063139889 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063656381 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066638486 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063286587 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063079818 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063214321 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063440518 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062895534 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063851565 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062486329 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063848777 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062271633 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067020001 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066536619 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062327979 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070105637 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066651279 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062745266 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067154058 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062578935 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063550419 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062524484 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06270948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062608562 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063425993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070415049 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063284187 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064556764 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063056341 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064022109 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063245439 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065459903 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062271005 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062945819 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.176895085 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063854934 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067855543 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062316997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063640531 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062573475 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063077098 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062363277 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062539701 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062254875 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065434017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063522944 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077692533 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070095074 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062526582 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064584631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063629596 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065481779 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064162094 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07675491 seconds)
  done (took 6.036921142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088834013 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087063894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0653931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064743025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061366491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063882081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069537669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063364373 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064845677 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081286164 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063353662 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064645575 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064902029 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067222218 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063731564 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064772802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071450441 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060798322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06338899 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066876834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063727979 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068847018 seconds)
  done (took 2.764786636 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155737831 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070364775 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105064428 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07472687 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069552362 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074308752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069053792 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069623343 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068945163 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066727174 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06678926 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069521295 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068883887 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066849555 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066589685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066972969 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069018879 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066531178 seconds)
  done (took 2.631333455 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076260871 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066278276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086531448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065663088 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065634875 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068168698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069760075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073508961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067482032 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065489108 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07325667 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067317773 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067615681 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064973394 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06770511 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065536612 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067907985 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065186578 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072896247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069162309 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069100262 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072771786 seconds)
  done (took 2.795767439 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079280572 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067646658 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081302321 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068067272 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061697979 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063904353 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06966123 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06527895 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068838266 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067182807 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064851947 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063181147 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067576508 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064860957 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068068104 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065474495 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067262694 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064828651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06685219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060762627 seconds)
  done (took 2.616218424 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085743412 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067317291 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067027252 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0751995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066762493 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067427962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07409144 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0664311 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066451217 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087279102 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066999122 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06681741 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073932839 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071425327 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066586773 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073684572 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074266145 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0735807 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066544331 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066886078 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087964741 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066670516 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074072475 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066745559 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066797058 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066537258 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066518707 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071050791 seconds)
  done (took 3.260927965 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066683688 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066084954 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063392544 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062967994 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063614311 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063323453 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062950981 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063582728 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065602799 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063570955 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065540461 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065497753 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065273666 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065716924 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066271476 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065682747 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065506498 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062925263 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062866089 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063228739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065352739 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066319761 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065692053 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063351887 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063098484 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065228609 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063281388 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063168788 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0656878 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063058584 seconds)
  done (took 3.208550186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075246681 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072614307 seconds)
  done (took 1.42286419 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06265627 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079487993 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063412047 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069845654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069094038 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066557381 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072801318 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069289973 seconds)
  done (took 1.825103452 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08171181 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076817645 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067889873 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079157579 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075885904 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083043706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133644314 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066586968 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072279153 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064016593 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079841435 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064667909 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072154326 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066155158 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071274758 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072483998 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063602526 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071343091 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067743498 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063885523 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06656886 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074200777 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068060946 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060434528 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066295712 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087453341 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076003295 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064988082 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068535992 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073122418 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070725406 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059520544 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064985948 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065281026 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06364487 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076183447 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081510617 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068218699 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074096225 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065731734 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074779762 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06011411 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070181887 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072090917 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075251906 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06529798 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065531173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059984984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063121406 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06770415 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060236502 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067679718 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059657042 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072521102 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069588537 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075881537 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064250914 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067431005 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068282582 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068635542 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072377109 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067385679 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068935123 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065142657 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07498202 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069910731 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073607449 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060325625 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05939039 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063116918 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074733997 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087897863 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071309328 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065881418 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066016867 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062975383 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068090228 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065848339 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070353737 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071229696 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064989241 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070290219 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072872505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065848466 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068272313 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072657041 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063476 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067873619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063149764 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08163988 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063941109 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063222891 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063026806 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075660228 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068447037 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065149619 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06387308 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07257222 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059565021 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066883501 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066014662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066228046 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076015345 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070404244 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070249838 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074361831 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073733405 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066149745 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068441799 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061971298 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06606347 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064881535 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07218096 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059477306 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068343593 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066231791 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065062007 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073421003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062654323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063944652 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071338925 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070004388 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062476029 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061652967 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06706186 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063749526 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067348302 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071839344 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062813652 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059231922 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059136727 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067543465 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063762183 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067433983 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067653169 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067248637 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059101105 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061665244 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068402527 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072060518 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064070404 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064746256 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069452668 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064779594 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062921796 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070507463 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066452967 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063313395 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070126323 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065452922 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059276545 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066783064 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.066703896 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063132228 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06782304 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067169198 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066748031 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064814724 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062838596 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070303134 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064524952 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063284906 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064181366 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063077246 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074403269 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066036581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059420594 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061384097 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071548481 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062792277 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063852809 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063967777 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066358583 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064452323 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062403853 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063800532 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066316853 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073320457 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068230402 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065062435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069557226 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075340516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063586767 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067048873 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063643521 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065296519 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064668085 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07314888 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069787486 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068677363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066425288 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061280916 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069723239 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072108382 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063921285 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061637559 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063592716 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067309285 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069628398 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067214851 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065100956 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062419049 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06515061 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066717323 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066283986 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062799512 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062147177 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068287695 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061692149 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06774885 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063789151 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.073178431 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066698685 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058400088 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064928275 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061511605 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069366283 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058566601 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062484983 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062612461 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064576256 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062302719 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065514239 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057824394 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070895197 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070722123 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064763518 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063051277 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063005096 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070424684 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06520718 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067305887 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066874315 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.068325954 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073237643 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06279394 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066657704 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.072609041 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063425893 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057051382 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.06814612 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.061645276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062077986 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062077068 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061988979 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065606034 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070903261 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.313550063 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061621345 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070650234 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066203296 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067323976 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063932455 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072718787 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071225751 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069651574 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074858685 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069101485 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068201361 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071197833 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066851566 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068333926 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068644998 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071028654 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068242466 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069482979 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066359524 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070783331 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066180757 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064426223 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069175697 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067214605 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067723492 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073195668 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066572305 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067114836 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06961886 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067900947 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067787476 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067691363 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066818997 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069903409 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067483095 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067314433 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069018412 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062290169 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074637983 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066667538 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074571603 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067242071 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063530033 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072703887 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069683794 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071882303 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067580123 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066891038 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067889312 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066086027 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0691907 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072962621 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064285005 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077075111 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073492118 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067163302 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068928846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066455878 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068121988 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065673327 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067767966 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066672527 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066484029 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065268162 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071330612 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068846884 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065980657 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067395771 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066534324 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066043472 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066729898 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060370425 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064925246 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065346344 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065731951 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075641303 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066449918 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066126573 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064992008 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066666932 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064900711 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06281966 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073249827 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073997031 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066410334 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072788122 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065226266 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068102488 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076436743 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060137031 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064119271 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063930325 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064042647 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073168446 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066430944 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075086727 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066136598 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065371749 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063764144 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066273956 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065046825 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060192522 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063967562 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069731655 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065275798 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065298218 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066337437 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068565661 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066366797 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075367847 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064742399 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067025681 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065620917 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062878186 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065585854 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065128247 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068730728 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066255486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064041069 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063453382 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065358755 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066561187 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066633004 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067170959 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066827583 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071911375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065298547 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06810343 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.203260274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060763181 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069312148 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066815224 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065522407 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06547115 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070602971 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070107157 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067007423 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075269604 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066672636 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067545407 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066059593 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063606262 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065204726 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065993036 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066149597 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065040507 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067054705 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073567394 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063718828 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069089625 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065979927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067009599 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072171992 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066737022 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068793626 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071760134 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066913337 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067497604 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074329405 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070027278 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069252424 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066296641 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067635236 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071264062 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065001242 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072509733 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066271537 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066059712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067294036 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064042567 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065659371 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065910452 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064742648 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071376169 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066204719 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064565854 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064830895 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063444286 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06658887 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068559592 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073457717 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068170546 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068451063 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060480579 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06267076 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066270231 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06351403 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067250821 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068067382 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070960645 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067732064 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065695594 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064109467 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074642055 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071097062 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069263521 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063473726 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069056441 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065876841 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067699539 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066565438 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065806155 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066765795 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069404019 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067411198 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064959012 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07260347 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069354714 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066451335 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067474409 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066614933 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065846558 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060700115 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066248204 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06772323 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069975875 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067584112 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06547735 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075492362 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063215417 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065603179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068188756 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064597745 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069605329 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060389727 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067265561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066220208 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066105245 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060573665 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064666767 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063478133 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067434026 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064560296 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060478029 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075434414 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074077144 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06852163 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064334244 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063668782 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060157016 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06013627 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064525117 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066252467 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067446093 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07523294 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064459955 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064819315 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060925881 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065710353 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068313311 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068623398 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062609128 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060288739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064386047 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068120197 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071034569 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063778578 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064974279 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.205725733 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068812091 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064155549 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068962106 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062606798 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069125105 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078218452 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06565548 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066997353 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072046857 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074067333 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06646804 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061393234 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066077614 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06919952 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066381043 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066746972 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066775917 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080588487 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068849917 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06489675 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064690466 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068181384 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065073843 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074157921 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066880504 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065821828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070599097 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067508832 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073849511 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068488052 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073470847 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068841898 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06948534 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065425067 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066441863 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064011411 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064724351 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066519542 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06673726 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070192697 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073095359 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064861914 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076354034 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075016975 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067913613 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062682699 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065630701 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065370812 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060960837 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066490769 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063502729 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063980232 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063467709 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064329281 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066952334 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070677002 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06718607 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066214377 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065110756 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05972908 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067579212 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067654724 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066267624 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062077725 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065130717 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065741575 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069477237 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068448496 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06336587 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06677687 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067323483 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066030613 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060608077 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071843833 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064105281 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067226945 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064643582 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065492314 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066031897 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068646299 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06963703 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066250685 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067379389 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069334308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067385113 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062909793 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062644413 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070883073 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063763385 seconds)
  done (took 41.959875955 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099532437 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062560363 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060694078 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06134332 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071798294 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061880641 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06122321 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06225457 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061995971 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064431561 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060924554 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060783263 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069632363 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076643998 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072052474 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065493479 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061008284 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061835167 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0608332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061735503 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068898686 seconds)
  done (took 2.7791763 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071996669 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076790082 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073798797 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080495049 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06963098 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06995137 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0740349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069346956 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07709668 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071463307 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076952878 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069926005 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071100682 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071432049 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07125618 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069589004 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077227053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069602225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068846893 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074214498 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069282407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073862301 seconds)
  done (took 2.968462043 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065468423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065007176 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066956156 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060675605 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065391571 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060410618 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068610897 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062990717 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068697597 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063858601 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063795202 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064860129 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066667801 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060272761 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065472193 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06227833 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105949318 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067755853 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064712817 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065531936 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060021477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066175927 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060606215 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060670563 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063680949 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067640653 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06521381 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062726421 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064279461 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063781475 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064485689 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06238434 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066173703 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065289437 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06375773 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064074713 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064240348 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064846949 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060092099 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062669844 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064958747 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060495352 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064853901 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065914793 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06270049 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062790575 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066328792 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064341063 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059819064 seconds)
  done (took 4.554035155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077314434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108375814 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068542702 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093021663 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080856304 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073374787 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07054805 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088726316 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062144938 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06289178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080835533 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077075481 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064092995 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068466048 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071959716 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064393798 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065361442 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064425115 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06772859 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06385335 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067806661 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071121707 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078460865 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076797076 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068316273 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063247017 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063573993 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068235566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076178023 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068725593 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068467708 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069860335 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078584825 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066017672 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063607352 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066525916 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079140654 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06408359 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066269135 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061883214 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066109727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068284172 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07100016 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07977808 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06423577 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068740992 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06466147 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061583024 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07580412 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06615701 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071235919 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077339731 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068223017 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064720695 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068469375 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078597232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064079898 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062776317 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066925968 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07555358 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062450379 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067822921 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080615418 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066623278 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072908341 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07993695 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071787312 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069884067 seconds)
  done (took 6.33240112 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074971788 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09394122 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082212567 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082189923 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074035448 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074138721 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074501916 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074870842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074300759 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078901758 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074270297 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113545782 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069725914 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076492947 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073660954 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074442077 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073768278 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074157641 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074468273 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073999997 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073893017 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081134684 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073828397 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081600633 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078421463 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069336126 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073919389 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073935602 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081452163 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073862949 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07832712 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073482619 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082373539 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08155973 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078463638 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073760927 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063988448 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074191095 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073619583 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073960735 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069375935 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080915831 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07363688 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069452994 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073825375 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073389503 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08154603 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077743738 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076185688 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07877491 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074291824 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081275488 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074094161 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074349603 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081429401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083884451 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080959802 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080836008 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07387509 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080616287 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081359237 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084119015 seconds)
  done (took 6.176003796 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081304725 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073055994 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079788044 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06105327 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063377268 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071123205 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062990656 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064103662 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075293721 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07458137 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075549005 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072556733 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074927562 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075215717 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070324853 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073601462 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070512398 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071055722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07268362 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070972472 seconds)
  done (took 2.825211878 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.0729596 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082161926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065973088 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070442785 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067389916 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070721539 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067506859 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068024902 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065862184 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068014371 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074605287 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074460695 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065482517 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070181837 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07421496 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070243166 seconds)
  done (took 2.513275644 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082673903 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071971998 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078404675 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065478974 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066321123 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061613742 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064900686 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060377349 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061036579 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076656726 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064452722 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074914775 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064567996 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06328337 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06123522 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069556409 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060574942 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06195437 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064217961 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076343191 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067808707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.0627805 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067875775 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064445601 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067068919 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068877728 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064334306 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064868828 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06163811 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06486003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067309177 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068020804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061808762 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062426509 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06356886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062327444 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064322308 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065436342 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070115034 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064604942 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063011526 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066465928 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064640062 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065979474 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061158493 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064946177 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060991183 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066626756 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062263672 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067377441 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064652655 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066851755 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065031978 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071232561 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067210661 seconds)
  done (took 5.017954253 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077822416 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068988195 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060713148 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063638148 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068176562 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06574782 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067982007 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066072218 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066230198 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063109577 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066500711 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068253226 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065945394 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068199414 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066105849 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068583186 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06047541 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066287128 seconds)
  done (took 2.593875164 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070489632 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064643005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073121507 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064530878 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065764753 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067613238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060524402 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06312787 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063461149 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065020502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06481756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0672737 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063390325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067674605 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065332868 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065602379 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069105646 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065614869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066973263 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061657774 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067470162 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063665167 seconds)
  done (took 2.836504153 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094232318 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081902452 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139148928 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077757687 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082955351 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070549671 seconds)
  done (took 1.93576482 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089273219 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099439345 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065886384 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068361063 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074488268 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069006553 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068477042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068785782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076902267 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074641927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069022051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077441938 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077072332 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07619836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074594408 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074427462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068764232 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068648703 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065042754 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081917716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069151895 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077111928 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069114757 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068587009 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06861335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075732679 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076588223 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074731458 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068880503 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07665396 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074484923 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068541622 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077021695 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074746244 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06877744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076672039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068588263 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08199751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073918071 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076266719 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067394449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074659788 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076571682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073031291 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076468183 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068883956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073584431 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068862512 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068692127 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084039384 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074187918 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076086058 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07676229 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076825579 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076808779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084441771 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074940631 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07630843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077866276 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074546522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076252283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074767047 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076483155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074693695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075467543 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07665879 seconds)
  done (took 6.303257365 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102307085 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066619402 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069108923 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075202734 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075913759 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069059152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0694193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068921934 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068931821 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066043953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106658561 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068995839 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076034553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076829052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069372716 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068892601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069084625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076098906 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065990013 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084134912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068648873 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076033567 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076911733 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076068851 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074766039 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074259066 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068810989 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068657737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069483807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068961688 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073363378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068912761 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076269811 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065810089 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075721775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068866271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068475637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072922949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069095682 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074346035 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076056694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081945455 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068684708 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068835156 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074468292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068866557 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068451266 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06544722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06861394 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065556075 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074723273 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074510823 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074773221 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076342382 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068501689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068858908 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068827204 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068395855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069239755 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074621203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076255767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068454244 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084392176 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068928685 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06879685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076713701 seconds)
  done (took 6.204907701 seconds)
done (took 129.016630712 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183668472 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164172367 seconds)
  done (took 1.73271277 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067810242 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097353957 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076421209 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126966692 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065984665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099361499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097811803 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076713765 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064818899 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065269992 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065075443 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067668441 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130303259 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065610396 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064960027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067519346 seconds)
  done (took 2.697387409 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097499651 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16140947 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100670479 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063389728 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09828012 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072124255 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064047868 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074590888 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.0703326 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064228128 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072050337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069327375 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063754543 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069103853 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069530253 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071641077 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064103842 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071461694 seconds)
  done (took 2.821181494 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097629417 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09080646 seconds)
  done (took 1.589935377 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16023446 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.111008837 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144801689 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34834612 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162638993 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14760266 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145468827 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143548472 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117431688 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139212987 seconds)
  done (took 3.018071206 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097504164 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152474584 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263956825 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116149254 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071507257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09268032 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116772916 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076874603 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079138308 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07887821 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078984426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074747301 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098287481 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072147597 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072506068 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07450921 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101915706 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071583796 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074202902 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075399516 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099622321 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064440342 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072587421 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071794594 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075643555 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076334461 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064771025 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064728059 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075128716 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073699586 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075476576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091314287 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075829157 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104157908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069466015 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105323108 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075083053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072466052 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073563994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072457777 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076921561 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076833596 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071349727 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074549996 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064644343 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075103299 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064625298 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064977145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076272325 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065577454 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076346777 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075738056 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104230518 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06696527 seconds)
  done (took 5.949443466 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101307197 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105159249 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071091095 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111861939 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10195676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071176745 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101202626 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09431287 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102107151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069027335 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067522136 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069587472 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080641976 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081107745 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113617978 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105422009 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072698103 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070213425 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10512238 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103996434 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068052749 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095538882 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090418278 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102731584 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066500025 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069468867 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067283361 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069257205 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075562552 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077685848 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068699121 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078478041 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083104816 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076659327 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065631272 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066786325 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067431603 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077746487 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077760164 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077999485 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076143026 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067224132 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066784705 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068951456 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069318901 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067216922 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077588766 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078971523 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077659415 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06904568 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06938337 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067502093 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068419469 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07859755 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076311633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079743826 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079126281 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067371268 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067494168 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071232997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079524143 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078064043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078054867 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068160438 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077702397 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06757474 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078361041 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081832076 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067394888 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069130638 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067425542 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068564047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068700892 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076520001 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076411226 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068526585 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068924558 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067426758 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078719416 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076907026 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067450024 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075705274 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066774935 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067687374 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068513954 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068718806 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076134833 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078538008 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068561096 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067722369 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069075205 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067503965 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066308258 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075977415 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078698551 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078061179 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077214569 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069386871 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077767917 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077248228 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069064314 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078188547 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067164399 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068766652 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067932654 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076605778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07592544 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.205036936 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069247603 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068125198 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076672864 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079087567 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067549797 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077990803 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080203672 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07908559 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0676786 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081048263 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067984374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078262584 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069515518 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07996768 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068572509 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078912222 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068438026 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068029977 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067284264 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079909953 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07223687 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067689055 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069080413 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069821519 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07808276 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080963478 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070129455 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077547574 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078027036 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070128872 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078107471 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068327187 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078406031 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068982034 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069426587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067472037 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080461021 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068117095 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068284599 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0687581 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079434117 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068760771 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078915593 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076437068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066793672 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08056701 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079400728 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076089368 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078790847 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069506598 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06781055 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068254315 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06887874 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077130818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078309901 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070213442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067997192 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076999389 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078930509 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066635204 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077510731 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077084688 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077500228 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068087614 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069515672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079214322 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079356015 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077303131 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076770685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077108733 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067946104 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076018255 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076676117 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067507197 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081848043 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067199397 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.0814458 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077741692 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075344306 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077030998 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078693914 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078470693 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078383324 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081371302 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067334193 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067098358 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077793382 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066891181 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068263724 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076612583 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06798675 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068327207 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081306699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068147395 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078268908 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06703746 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077741523 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066261752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069044565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081809356 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067535869 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069140177 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078366626 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069476686 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076623271 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078905197 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076193936 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067069337 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069180894 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208666048 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07732369 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067916877 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067672104 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070641557 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078563866 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077289409 seconds)
  done (took 18.480043083 seconds)
done (took 37.69570015 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206641102 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151072791 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183715964 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117026089 seconds)
  done (took 2.158425255 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11568169 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100674568 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091163185 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063930955 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.0979254 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06538719 seconds)
  done (took 1.968126985 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306461463 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208199135 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186104109 seconds)
  done (took 2.127181837 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19980696 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18727473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41749047 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.259787435 seconds)
  done (took 2.603119543 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142426361 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087793719 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066091721 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083299307 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132098257 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157626927 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098274264 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123603778 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07768873 seconds)
  done (took 2.452362221 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14669182 seconds)
done (took 12.887514067 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10051336 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127957769 seconds)
    (3/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090626273 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072984027 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.163651879 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.222177689 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.19677088 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09989326 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081039994 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0713556 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068836394 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078841831 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.174694092 seconds)
    (14/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079901886 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077017637 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082166675 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068191686 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.163688971 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073025495 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.23665246 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.192634846 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202683837 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109007056 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090675837 seconds)
    (25/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07219943 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200935158 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07149977 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110099981 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090689187 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.160840683 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070673702 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198092667 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091203824 seconds)
    (34/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.185353169 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.15397354 seconds)
    (36/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.12608441 seconds)
    (37/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.157694763 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073377309 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.171590463 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102868159 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088280422 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206413454 seconds)
    (43/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074610344 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070888496 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11620792 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072463869 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051101996 seconds)
    (48/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07514164 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084289079 seconds)
    (50/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.168498336 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068370787 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159644265 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182687904 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066221263 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063860598 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068674483 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064251559 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086685636 seconds)
    (59/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.160058245 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064132432 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063802541 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071419836 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140641269 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073506483 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.225805176 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193465923 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064424043 seconds)
    (68/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078669172 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0938115 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075998456 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10830657 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072300378 seconds)
    (73/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111247594 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136932568 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 0.142086583 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064480739 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06434737 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078901283 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099002576 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.064859998 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090826297 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074885782 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15342431 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066260482 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074243033 seconds)
    (86/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.049897972 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064589876 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088585095 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.239560752 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090920349 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051478193 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089691755 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091345854 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068038322 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09268369 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141707763 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063312942 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109033369 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051472407 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073522965 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089433913 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214273165 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050847555 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061173374 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052162705 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181544083 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075344939 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110332302 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193209354 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161067401 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0719082 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.195129329 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158262531 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050692668 seconds)
    (115/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161423352 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050516862 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13983479 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071934862 seconds)
    (119/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110540984 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.050821635 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076577003 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.0894363 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06559773 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105738199 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086906311 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0645674 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.049884791 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.136474835 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072768962 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077154685 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181583423 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064603987 seconds)
    (133/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.174392557 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084780037 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086343013 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154359923 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134917166 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076085574 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090053075 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064153287 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088670557 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070611094 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070766635 seconds)
    (144/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079670565 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070891155 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162248372 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06432794 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080782462 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071700363 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070668774 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071098589 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090076649 seconds)
    (153/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099219809 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065147855 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049548465 seconds)
    (156/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062410518 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064164725 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071507667 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075058191 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085942826 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152834099 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072629011 seconds)
    (163/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089428342 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154626953 seconds)
    (165/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050628824 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07146237 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072904358 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.381402476 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100766858 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068429054 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.179179447 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076183304 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088783796 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049780132 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074053292 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113436653 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051021786 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075531969 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066820131 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073042801 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063263043 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170091121 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065353083 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050012428 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18145653 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050371305 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141553477 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.0921386 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051147348 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071972268 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06423818 seconds)
    (192/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068636898 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050420928 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066119975 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051074542 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.050874334 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05117693 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071453339 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140707343 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073396289 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051184947 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.200898926 seconds)
    (203/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189721366 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051533159 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068084316 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053192258 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08132699 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068253681 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.076932395 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052861334 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10744828 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066169858 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063517428 seconds)
    (214/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076398525 seconds)
    (215/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072934032 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092429889 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066497414 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123579064 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051182061 seconds)
    (220/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050748701 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072325117 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.049751863 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099534186 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074439793 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072921507 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050573587 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073813903 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062260307 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156278235 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070986839 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06415275 seconds)
    (232/309) benchmarking ("sort", Float32, false)...
    done (took 0.132841279 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065919545 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064943808 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181205875 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088930076 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108256968 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050332196 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135436322 seconds)
    (240/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119705632 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065024042 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05071907 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093440497 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051167254 seconds)
    (245/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052700671 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138544596 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049944901 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171739442 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063755607 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050417439 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071407193 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17747493 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065044032 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066013565 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070653391 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063701607 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050719263 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075443873 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05121438 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174003304 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086321252 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134195627 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071882442 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065248039 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050390991 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073418122 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064421462 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050021723 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051692063 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152523972 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049835267 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062497324 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.04978208 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050362686 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050182758 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106806007 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069369591 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072187006 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072338633 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089306531 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062927129 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.049903816 seconds)
    (283/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050435694 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07731622 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062794097 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072267666 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070188168 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050828845 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067456979 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050967163 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050464224 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070480781 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072762893 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05113642 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067038916 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070623942 seconds)
    (297/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065277809 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05129233 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065568788 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092912546 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050097801 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064066521 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070033566 seconds)
    (304/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064683781 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052368825 seconds)
    (306/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049790403 seconds)
    (307/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060820502 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050491754 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 0.128938098 seconds)
  done (took 30.617598499 seconds)
done (took 32.059926166 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08440212 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09117024 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074807387 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092635648 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080210607 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075746004 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071898381 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078136128 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078977125 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080721734 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077114908 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053457135 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07298874 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073398567 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074439501 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089895323 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077072593 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071729896 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071745899 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064191411 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071963142 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064533118 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066253763 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.052945237 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077102938 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070689244 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071140257 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073156113 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064563431 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064680854 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068373589 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072514685 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0644099 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077188166 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071376719 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072128842 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073714885 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076039206 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066288529 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064381061 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073404964 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064813055 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072078416 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073120203 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071232142 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070672899 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072406499 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077236771 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090366426 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066726733 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073630692 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075011966 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075148092 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071976205 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068898104 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072209426 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069846907 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089900181 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072609443 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066144717 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073394105 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073584952 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070899129 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071606964 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07199007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074902037 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074746747 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070664612 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074158298 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070774539 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063904892 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071629894 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068045074 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063920222 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074654483 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076145211 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063049833 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070162184 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071506586 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069705099 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06346588 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065596204 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065931817 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070785305 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066126219 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.052811553 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06823634 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070630453 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063132865 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071767814 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070770915 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071706735 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065624835 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074973452 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063699252 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069844187 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064395682 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064238159 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065862356 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068104569 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063724105 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065602438 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073340242 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065370531 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071004432 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077769032 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063751686 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070610666 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062837675 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063475432 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07807977 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07360478 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06413547 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066716984 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063344623 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071899918 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063630858 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063941072 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064405236 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064858581 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070825102 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064515344 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066584233 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071653987 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077149508 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063898958 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068237961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066164041 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063643933 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070087111 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064070721 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06366215 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066159213 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060278371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065689256 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06387245 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071618975 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065672081 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.203838328 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06688956 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073288884 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07034338 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071082449 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06985046 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063960036 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058270134 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067522792 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066793815 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066524308 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064573714 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066452645 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064945567 seconds)
done (took 12.327355087 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065371288 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138930648 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095615091 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094885013 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085062012 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065494676 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075207651 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10000977 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066644278 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100040468 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086271608 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084816919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112707298 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063734483 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064566934 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068571274 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066049055 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080577817 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099324096 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085868371 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.113619812 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064120842 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09130217 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088160001 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0870461 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101996729 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067365533 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068975021 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06830872 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091341529 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087069347 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069148478 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065258303 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097481835 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092461073 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082710641 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065306648 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081624845 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065454347 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064904511 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065956173 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097645832 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079356109 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079582027 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069283845 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068226257 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066046167 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082505034 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08837826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077722794 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084671386 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099897982 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067695195 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06437475 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06291201 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08430945 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064165765 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067815469 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065135508 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067384339 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064585045 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0679602 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079530023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079246097 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069063934 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079955282 seconds)
  done (took 6.752771011 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082726318 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090994143 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082172042 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08350593 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064335807 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065086938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065425198 seconds)
  done (took 2.06101225 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066460226 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087413289 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088265225 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088139643 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082796394 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08654917 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075218733 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065135599 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08743362 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066139872 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086538283 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100155591 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068703007 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073097377 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089552663 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065578774 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08967734 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065423268 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068336407 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089379649 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067696008 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093845844 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068585787 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065492202 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079226219 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06527697 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111876881 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069966002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066897474 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068079718 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063144581 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104915543 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079070396 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073009829 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065233039 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080043685 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079881407 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063749774 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081743565 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073778002 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079351453 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065681236 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066452367 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063421098 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06999114 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075401502 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066374599 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065948067 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068043711 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084654122 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065936397 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078931036 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068160025 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071031945 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066950688 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072190283 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075436713 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066361537 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085544962 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067099006 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082343787 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081996502 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079269316 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081697036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067939913 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079178496 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079189222 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067773447 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067135385 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068754609 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08197754 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06360998 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066752432 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076004696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067221288 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08830396 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087811423 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066722117 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078756415 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065646236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065744696 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065301272 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088441507 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070564228 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065566779 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069127621 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068537279 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063439206 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06432659 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069060086 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063426652 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067147566 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068345593 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068386813 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068585725 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08187039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067596382 seconds)
  done (took 8.725559601 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06811548 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066770174 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068629694 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067112796 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066987875 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067511298 seconds)
  done (took 1.952166535 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091806093 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06826044 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078627478 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071172488 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103532568 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085276768 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085662702 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077014766 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082605099 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077532683 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085799324 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086674437 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09046549 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070954767 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084938104 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069884132 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085953483 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073943876 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077152638 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071375692 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085555889 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070962091 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07132038 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080596363 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074464753 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070309881 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06659266 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077360319 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076918109 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076898336 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07143784 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074094795 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06965494 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076758539 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08526172 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069213156 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070238161 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076126382 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071131611 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074128806 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08681287 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070937158 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072490327 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075665488 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076552665 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069614307 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075487463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073841551 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084546218 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075987713 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075498416 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069527462 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073894921 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07533637 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069749039 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076106454 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075643696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085525759 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071054482 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069372544 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067239799 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074402115 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077027736 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074119218 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077775451 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076159246 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069343196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071878208 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071688784 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070429992 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075650537 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067583557 seconds)
  done (took 7.011166866 seconds)
done (took 28.016724509 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537597075 seconds)
  done (took 2.05126399 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607101825 seconds)
  done (took 2.143472205 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.660218536 seconds)
  done (took 8.1989061 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395256271 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.49272907 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.723050047 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130254514 seconds)
  done (took 3.326128002 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.6945987 seconds)
  done (took 2.239089826 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21217177 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199751849 seconds)
  done (took 1.968562824 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373248148 seconds)
  done (took 1.910419978 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132382541 seconds)
  done (took 2.670815982 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.254748587 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17377775 seconds)
  done (took 1.974106471 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477913057 seconds)
  done (took 2.019913977 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.807515993 seconds)
  done (took 6.352540284 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210247103 seconds)
  done (took 1.795849591 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238393746 seconds)
  done (took 1.780393248 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.708149585 seconds)
  done (took 3.252551075 seconds)
done (took 43.226100488 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078219471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079668254 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079772353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077194242 seconds)
  done (took 1.847950555 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076167653 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072429355 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075397183 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071650226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075625916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072259237 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073047434 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075424483 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071175161 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071820458 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071608186 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071331197 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074033349 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073394223 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069822845 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073938111 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074729224 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071674524 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07416427 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071391789 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069521241 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07337581 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073887474 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070658985 seconds)
  done (took 3.295551209 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075684417 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072153743 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073893163 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071022153 seconds)
  done (took 1.845182396 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076503505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093491329 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08840855 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077120367 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091070182 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085787665 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06780941 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067982342 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069445062 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076296183 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066433073 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095120654 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087417064 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076161064 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077977086 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064484058 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066845598 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085598682 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076316387 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076666148 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068749605 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076618742 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066741791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087126597 seconds)
  done (took 3.414629081 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085180315 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104217493 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08113935 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087959199 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089340751 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063789616 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086490306 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089668439 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125195037 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064278361 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068937951 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064199725 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071250706 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064022527 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079663863 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105681718 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109458966 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067488228 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094929879 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06420061 seconds)
  done (took 3.224681932 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071380083 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068375451 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064966086 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068679659 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076361941 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072104082 seconds)
  done (took 1.98146733 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067023029 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066666146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066018455 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066043765 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071403054 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066706379 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064526041 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065802327 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066159242 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065354263 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065097056 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064494627 seconds)
  done (took 2.350470947 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198321884 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066978995 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066952284 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064700814 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068890894 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064967684 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07919996 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066441474 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089288776 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065113869 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064954175 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066649288 seconds)
  done (took 2.519815218 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204388701 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074510873 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235052072 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147709612 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108408729 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113884095 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109508023 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112031205 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139077914 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098630994 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165105863 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164238271 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105858301 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134675787 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087697099 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09915863 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151356964 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159937048 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103287765 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163719534 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142686942 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124256293 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14793573 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099725897 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104072754 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121590705 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069726294 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078155155 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166729686 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130503867 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141938525 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108836349 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090808069 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173905892 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169190469 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138738386 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145505712 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083667 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103759273 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132497874 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197812147 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087101899 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160121556 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108053888 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215081994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133250613 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119198765 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11780713 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103807294 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088742903 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14403798 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182204638 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135127335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087030928 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12323124 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113028889 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112719526 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112068893 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178498456 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158871286 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126669152 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070334755 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106964627 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151306526 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132574946 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106642136 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122965544 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090659406 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132680792 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15293126 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118543532 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143241932 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114758995 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087805651 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117371354 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137591349 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125072599 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158307558 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122540308 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071509999 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121572049 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099798525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078961605 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144126188 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074004143 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173079524 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097271324 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107747595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122561126 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107396678 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107157386 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156338442 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14210161 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101260094 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063914116 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242030878 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119597 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144500572 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085595521 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10699221 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11618764 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076197926 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133996539 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074554948 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122027651 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077327327 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125910716 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129317278 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076363624 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121701961 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102774839 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099527776 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131029061 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158032022 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086501913 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080802135 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168123615 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120070333 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101825968 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142355531 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153911694 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100484963 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099709288 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147163933 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1765588 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088333491 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161624004 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104841601 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082073762 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086031163 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121874935 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110215396 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12107141 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079931234 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115983162 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16624683 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073673136 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094149493 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13169361 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07767241 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079376762 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103767709 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103133651 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094156047 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098802022 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101475242 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133656954 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121504659 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103480102 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121227626 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096965186 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309810814 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086840398 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101211508 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102873857 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068924099 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133841645 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155592074 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078129646 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16387058 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122445671 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113879955 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117790585 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082203874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138558069 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078536683 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069478903 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142999392 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10959636 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108655652 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149480282 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114084533 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124433589 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117460397 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132058162 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130344868 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129754482 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10334714 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08756979 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109729804 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124974252 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071846772 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089294704 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078767857 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103138208 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094718207 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081302497 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138674056 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12188179 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107400185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110227798 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094659472 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145608791 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074704384 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126347326 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118224908 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094579136 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150750628 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151483386 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12970745 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097463829 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13436076 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06895129 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07210297 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086251345 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120783791 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080700156 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081222098 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254125955 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146272296 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129458723 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134837221 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121360673 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119547487 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153803181 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068640237 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116384662 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1457907 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119589917 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103155393 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089107617 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097660325 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140366591 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105765199 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179356875 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115642526 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121704302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151638225 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099732406 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078196802 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101416992 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1338099 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102685565 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14157089 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097744361 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086839913 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107992874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073594316 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09682021 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124329684 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116322758 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13220918 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113666971 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12983098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076545816 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113421287 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119131315 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12029324 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062801701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11902062 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159599171 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093486614 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117135987 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151032343 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077379882 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131845888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17236472 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142648121 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083837251 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248914603 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117504384 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128350243 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119090857 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1398041 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106477873 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136306364 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109357883 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.0852048 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086685648 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096131925 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103414772 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093479448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105009316 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11207641 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094604946 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130562278 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102651154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108442134 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115364489 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097395315 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089741815 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095676194 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174798515 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118338614 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168740978 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098921362 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142286613 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161599112 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073414398 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078101384 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076425089 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138283655 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082723509 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12763561 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105238477 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115171358 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121954574 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139857665 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093967686 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067060494 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107084218 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130281481 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121598161 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096507219 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101793358 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161235505 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09984869 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078248131 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112380735 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114419582 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10163551 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169615002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06003624 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10425456 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074831454 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078742769 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125601659 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290102957 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078807604 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101618318 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119577639 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11295025 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127021819 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099159428 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107659653 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125128214 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14738299 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126636341 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088197428 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11052953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127869205 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154341271 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102890845 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095038966 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170730372 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150339349 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158244717 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085994028 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11261055 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113443522 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107306757 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135789376 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081606461 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161420495 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08069053 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133995661 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101427026 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087450826 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127012092 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106364534 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086068659 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145699821 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115659269 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081323083 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076002975 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115920922 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117653924 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104460776 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07409785 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136446788 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072127241 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130288869 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157969995 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07937141 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105544932 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094497856 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077656666 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10400135 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101081991 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08527695 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.235491396 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171528318 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086293917 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148476219 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131616237 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110465135 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134170783 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099625734 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637935484 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076746603 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150833751 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115266128 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172962034 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098374854 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116450185 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108728508 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121866598 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142330064 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102847798 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178746889 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130637256 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11450353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078684204 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100786614 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101789907 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086488737 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10580868 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11249032 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112952151 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090679953 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11363735 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122842012 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080495017 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094306165 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153938362 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114563513 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140560267 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138228391 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083882143 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115987175 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1357549 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078979682 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118717148 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14988298 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104996819 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09765224 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07940411 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098131897 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156515646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07189926 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156146515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259958622 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109472439 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111512942 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11158479 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129725524 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105040008 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120312188 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090957742 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109189603 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112255132 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079944316 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075296522 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10379544 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109943857 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097088151 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09478717 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097744269 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150242825 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070522727 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097123835 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113049121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141433884 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172862208 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08822535 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081963934 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116565207 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112377803 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111255372 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119743811 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077966931 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080508795 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079288429 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076773679 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107431104 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112070425 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112939499 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10917341 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160135049 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081545999 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229724111 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093767492 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103116365 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068302882 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07698374 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094625068 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09606995 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105318924 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107760969 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1562758 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093740476 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088393792 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08981615 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072888482 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08158241 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126666322 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108244448 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116964765 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097675394 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.060808976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105727518 seconds)
  done (took 58.10285577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107685004 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081060379 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095079062 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.142670568 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120991093 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200220281 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152915321 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186398392 seconds)
  done (took 2.756707521 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066920827 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094554015 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10142313 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08190991 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065203157 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066700119 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228351556 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079063677 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065428522 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09648107 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076470438 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066867431 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421324105 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064993606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065549717 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060272945 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066129566 seconds)
  done (took 3.413280555 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.380422376 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609724961 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.378115866 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071361351 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.411191908 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091103853 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.113058502 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129412942 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071574532 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533912309 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703787062 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122771895 seconds)
  done (took 18.274134931 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074448822 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068845377 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082589918 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082922866 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071398681 seconds)
  done (took 2.103655202 seconds)
done (took 106.708127692 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080581731 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.603766739 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052552997 seconds)
  done (took 2.33995274 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082547034 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084865471 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084144356 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082267084 seconds)
  done (took 1.99366137 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073566883 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074876253 seconds)
  done (took 1.802391003 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231497628 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167138404 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095202926 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082947718 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079129976 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079378299 seconds)
  done (took 1.899798959 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072020003 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074555405 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07225717 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075766755 seconds)
  done (took 1.949415218 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076393987 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05163254 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054482641 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057186952 seconds)
  done (took 1.894100092 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086306925 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079152283 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078932895 seconds)
  done (took 1.900251614 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101070293 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085551585 seconds)
  done (took 1.84179812 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081499837 seconds)
  done (took 1.737869012 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099487499 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101061578 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131325529 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109661903 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138475318 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108584398 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083734276 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084667469 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075435115 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085587222 seconds)
  done (took 2.674614843 seconds)
done (took 22.261022434 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078098499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362628804 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360038997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089367418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668880166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355999251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999647977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092464578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113926542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06701141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083912945 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648350046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.956370613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318136992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942104468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318724566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649089263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067368749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066815392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066533164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983876799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066335292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066537358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067517173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647145058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370851668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067190162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319019631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066852227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068372294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354729423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066948005 seconds)
  done (took 16.095201653 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069591507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119894126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072080095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083845136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069256892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06856943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070679063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067760378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120888467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06661319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083958413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066597814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070923303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067497198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086612045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.083244891 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06750739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06757202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067309385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067416964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086118884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066514515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067442951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067742233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066816362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079337021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067373407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067717452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067201644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069124399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069912044 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067702978 seconds)
  done (took 4.050623394 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117735294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126407908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073585693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105211756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11307028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069650452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146356519 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092624529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128460554 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066961819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084098918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067477176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101637906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067869845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086951238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067271035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068170196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067917645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067411396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06786066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087084369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06713081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067599789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068478092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067572164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081118325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067935194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068016712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068032153 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069418804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070802906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06821869 seconds)
  done (took 4.308697347 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071287571 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074963637 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08325622 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084823784 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069253419 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072563289 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07318334 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068988884 seconds)
  done (took 2.27145667 seconds)
done (took 28.387816868 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079196586 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068371912 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072524082 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081245396 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072579524 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078181095 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066492773 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07481076 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07151171 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072059315 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073859074 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066684381 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070162255 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066186351 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072801807 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066792908 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078333369 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071120225 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077635751 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07854282 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069596811 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07262766 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074389126 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078025846 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07818864 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078437711 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076910058 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072151558 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068272276 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070227334 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076356004 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083058998 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067644362 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07848604 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067190056 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067182211 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070894928 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066978536 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078549078 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076098825 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069146277 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075844483 seconds)
  done (took 4.726394701 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086848289 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092633495 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084050675 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06117553 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066256268 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065468235 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08843697 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059101513 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058255527 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087373104 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054626615 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058708481 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062516745 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052696198 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061867333 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056256028 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06121836 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054927147 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059319473 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05866293 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088193998 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052823289 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077032693 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063985203 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055110232 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060887296 seconds)
  done (took 3.405607205 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074154487 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086465359 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09037414 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129628393 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105905775 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079096947 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079834884 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094629449 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088972975 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066174218 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07071387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092324773 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091013614 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073566423 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06730281 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086293554 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083686592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068649065 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073066762 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09568415 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086855027 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086066474 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098284386 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083394137 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066001157 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069609083 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07088218 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081063433 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071571157 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076196523 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071297251 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070800441 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068975002 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07869476 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070384101 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068777617 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091572987 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076579064 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078335935 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067587834 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070769442 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06773092 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092274233 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132769053 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069414262 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075431677 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075195965 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077053269 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066679843 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087497255 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078065338 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066407592 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070156558 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065995123 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066916957 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080176616 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069454595 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069447086 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076396703 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069443006 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091347044 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071292 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082530309 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066710635 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074392502 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065827816 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067440086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06568757 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094723996 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06802097 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111379594 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067660039 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067745623 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075289761 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074602973 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072654724 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066954798 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081923737 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07685831 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069443685 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075696764 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069594372 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069059922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090565425 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068862422 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068054432 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067566982 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072289831 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069212212 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067900483 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079566722 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06654111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069301107 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08393919 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065968286 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069209463 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07231873 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071117319 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066007069 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077276901 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070675605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067301167 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075589816 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066395812 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068795888 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079216188 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07378707 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065336089 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07087508 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072461169 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066936335 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067809112 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068938137 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068639483 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075671428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073082415 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070935577 seconds)
  done (took 10.591701377 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175078578 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156605231 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070549889 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148299382 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075991338 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078321699 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148998217 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094049398 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067245863 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06730585 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067998912 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109625944 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10533686 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115129672 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078392142 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066539136 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083704093 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113829355 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152358715 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145409789 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083926239 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075927206 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069111528 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067920638 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06967971 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077408862 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084814496 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075889073 seconds)
  done (took 4.43592435 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080233166 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100084884 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073636253 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089546311 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09056242 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066798388 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069287478 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069064963 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080428363 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077616143 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066512204 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072336728 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073640323 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070338091 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06764874 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073693639 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074204134 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068567612 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070443161 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072443544 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077168444 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09108013 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070452458 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065973786 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072030423 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065795784 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06259281 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083164897 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067005807 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094202977 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064967738 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075076553 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080667394 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067708714 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066750755 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066865813 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067271156 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066470486 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068629504 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065156741 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065176757 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05609099 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067153615 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077931306 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073587035 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055346767 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071289684 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072007084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071998806 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064040484 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069943023 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06937338 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069656599 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074629283 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07177324 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072103273 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068019629 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073141877 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07594231 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066400367 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063904191 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065459171 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070980428 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064502896 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075246375 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071050112 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065522487 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06602074 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068851722 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073063467 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066337169 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06966341 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06431172 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068368989 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071433176 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068152478 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067530171 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064761272 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066527217 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067139776 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054417923 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066535308 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052584194 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069664577 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064805759 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064865619 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066232051 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071366271 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078247033 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067829361 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072561931 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067598298 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065736236 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069306835 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059131628 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069172035 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082030042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081446784 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06699086 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064540172 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081574688 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071105421 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065580076 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055052279 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074118285 seconds)
  done (took 9.096653057 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089720786 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069467455 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085651764 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093315131 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087106738 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073909399 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077178412 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068719214 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082671458 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073714354 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076581625 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067523466 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07701327 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076353432 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069070861 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077380008 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071078717 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083978861 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081782066 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068092135 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075174148 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079524047 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090165593 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081325762 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080150984 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082137101 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089726891 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071610021 seconds)
  done (took 3.919045417 seconds)
done (took 37.840087479 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.746960159 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.933707482 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.75252213 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.133634952 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.074415436 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.763665983 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.819062433 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743287879 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.832594509 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.78029851 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.988778385 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.855390203 seconds)
done (took 65.114523523 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.765968001 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.886644193 seconds)
    (2/2) benchmarking "String"...
    done (took 2.01464586 seconds)
  done (took 5.586864551 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.051505285 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.302188256 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.001035764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.742929905 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.75016747 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.090117938 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.550176554 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.276775017 seconds)
  done (took 30.400355052 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.8961042 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.979669363 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.426794331 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.455162848 seconds)
  done (took 15.493654216 seconds)
done (took 63.059811816 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.751175231 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.798793247 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.770633714 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.728305982 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.803689006 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.750434923 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.979089989 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.776136887 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.743531681 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.734678446 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74475544 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.171878408 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.749485382 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.051525483 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.742012703 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.75447296 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.759988965 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.181047652 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.900016352 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.756211901 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.74165647 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.946434311 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.755509618 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.763770277 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.802066842 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.750284063 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197559789 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.748770652 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.373322761 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.752147664 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.778901472 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.237763485 seconds)
  done (took 203.183252704 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.747385929 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.619299317 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.724420604 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760322076 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.123208701 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.932773638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.856174504 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.183477425 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.755006862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.78109381 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.918857937 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753494659 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.932082302 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.735965604 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.777925173 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.83141404 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.927380049 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.961267224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.785298645 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.876358096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.768110585 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.789731343 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.734016888 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.907295834 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.787549628 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.812233563 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.769378527 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.771245791 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.946760302 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.895717632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.770520051 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.765291704 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.931326444 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.620408219 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76194898 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.762035251 seconds)
  done (took 168.467650024 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.142169287 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.750160634 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.749025845 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750314036 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.755263104 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.749674899 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.870296391 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875751534 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.347662204 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.227300613 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.804096616 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583292823 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752449405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816649356 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.763185783 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.751712675 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.765861149 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.77481922 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750023288 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.749735454 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878549759 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.766547791 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.956816961 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757189172 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.750171677 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756198454 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.121108092 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750584731 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756222002 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.992323628 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.75154828 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750351948 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650495075 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.066887962 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.85418592 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752531227 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756616772 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.751928677 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.970636408 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75196415 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.752065957 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.754549526 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927658552 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.751566371 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.874583946 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75594924 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255356341 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.750744477 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751572878 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.910144321 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.754892123 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.418496364 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.752401285 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751823459 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.753816563 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.751668412 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751633341 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.758609139 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.77507736 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.827797129 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754458369 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.755600825 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757214421 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.75320556 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.177331368 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757403247 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.70622412 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.81283465 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.875764657 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875214204 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756574905 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819491071 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847115229 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.753716666 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.751897257 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.752088937 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752882895 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.752812271 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.835155112 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.754334863 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.875677049 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761973632 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755363914 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.803742549 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.822281631 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.754430483 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.64183717 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.757099571 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.753938544 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.064334187 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.753463933 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.821288012 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.753494561 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.753743487 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.753965171 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.874262232 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878268173 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.532779828 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.757460612 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.747910373 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.998356548 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.950608337 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.755467407 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754381738 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.064562145 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756253829 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.846936505 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760535093 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.756481903 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.755170831 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.788125457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.755688962 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.815417131 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.754559096 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.128060232 seconds)
  done (took 400.874298054 seconds)
done (took 776.40813263 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430404268 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.386870845 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.510661427 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414667751 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.383166037 seconds)
  done (took 13.821793815 seconds)
done (took 15.516640299 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.849807647 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.848034429 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780131848 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.847497084 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776537634 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.845535173 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.827205709 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.782259385 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.811747726 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.781836208 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814348116 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782341084 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769412794 seconds)
  done (took 25.213870672 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.993162964 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.003470888 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828629048 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.989719146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804739135 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991275588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924002806 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908412343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912776318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773168568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769995522 seconds)
  done (took 22.59819838 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.997227112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.001254269 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837884185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99830763 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809540309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.999127876 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.921089536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911933517 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.911835564 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774548446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770817823 seconds)
  done (took 22.632682794 seconds)
done (took 72.139847796 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.765190786 seconds)
  done (took 3.463106955 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.792155604 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.951109303 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.77160531 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.769372089 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.766136822 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.766826345 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.77007111 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.765976001 seconds)
  done (took 16.052981393 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.764852072 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762777243 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.764917333 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.762472054 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765679169 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766595232 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.763706125 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766222991 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.767467813 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.76400135 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.766705754 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764014544 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.76346222 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.767381818 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764191777 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.765018859 seconds)
  done (took 29.938914814 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.764518903 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764071365 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.764025261 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.764047153 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.764468386 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.765353201 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.764870176 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.762977277 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765273293 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764232884 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.765222964 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.764425102 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.764327906 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.764899219 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.764548116 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.764965883 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.76353477 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.763413665 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.767988519 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.765238864 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.764609915 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.763902972 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.764857123 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765289588 seconds)
  done (took 44.054609383 seconds)
done (took 95.20697013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.66661128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.160710656 seconds)
  done (took 8.528820971 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769537684 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.768133063 seconds)
  done (took 5.277128196 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.767651348 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.768166789 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.767646568 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.768032053 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768144455 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768730021 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.767731356 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.76887209 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.768405861 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.768782459 seconds)
  done (took 19.383192503 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.768062802 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.768065673 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.76681185 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.76952738 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768873849 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.767200477 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.768889329 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.769348733 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.769077559 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.767335542 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.769014464 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767304238 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.768931915 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.766800162 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.769298694 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.765725532 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.76663756 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766406179 seconds)
  done (took 33.525141726 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769861002 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769758026 seconds)
  done (took 5.24243523 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.766360103 seconds)
    (2/7) benchmarking "second"...
    done (took 1.767510743 seconds)
    (3/7) benchmarking "month"...
    done (took 1.766812895 seconds)
    (4/7) benchmarking "year"...
    done (took 1.766120376 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.767955391 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.766807294 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.767363233 seconds)
  done (took 14.071981876 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77093143 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936671382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.005232792 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.406603457 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.770466118 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.77397496 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.731852187 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.773589752 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.774481755 seconds)
  done (took 19.64671167 seconds)
done (took 107.374963779 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.611186382 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.76439775 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.111758672 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.816093925 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.824279803 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.110560163 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.777831695 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.072607371 seconds)
done (took 42.791549503 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.798916498 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.313067994 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.347362861 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.011800788 seconds)
  done (took 12.376073557 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.748614321 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.282033024 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.803379343 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.34983354 seconds)
  done (took 19.900446436 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.135378287 seconds)
    (2/2) benchmarking "read"...
    done (took 2.1125877 seconds)
  done (took 5.957036569 seconds)
done (took 46.736673009 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771333085 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.771580495 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.768964608 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.771873647 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.768731068 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.768695141 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.769107488 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.770931063 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.768009012 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.77199565 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.771488101 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.771402592 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.772093633 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772016064 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768712065 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769307407 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771765849 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.772383401 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.76914314 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769073416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770134687 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773563605 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769247561 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.76902525 seconds)
  done (took 44.196175935 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771206611 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.7696388 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771780554 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.773433242 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.769544082 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.772644001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.772902155 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769490008 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.774042803 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772533243 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769938187 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.770694475 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.773369445 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.770642022 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771912604 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.770263342 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773352312 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770264667 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772645009 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770804618 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772807093 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771354034 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.770533219 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773326126 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.77116633 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771635955 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.773475885 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.778066051 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77286881 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.771674794 seconds)
  done (took 54.864341297 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778432889 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.785823104 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.774028079 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.77409973 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774231557 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.773480317 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773469151 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.778693368 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.773753921 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.774050549 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.774529041 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774091286 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.774131555 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.77656944 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.773713705 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775029245 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.774940437 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.773846998 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.779137894 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.773813496 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.775714846 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.775420575 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.776000091 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.776445747 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.781436936 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.775256111 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.775381939 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.774599189 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.775446061 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.775743217 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778814537 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.775744592 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.775942093 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.775477606 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.776116851 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.7787099 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781212582 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.783482098 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.776367519 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.775777291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.775350375 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.781737064 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775645436 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.776059154 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.776459435 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775717604 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.781001457 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.77598737 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.775063415 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.776328772 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.776107819 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.776313059 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.778730196 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.775614274 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.776968234 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.776139757 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.776442046 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.776604278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.777793744 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.776361784 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.776728993 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.776872786 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.776511156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.778794833 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777676387 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.776803209 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.776645917 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.776772125 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.778253827 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.777716559 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.776308972 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.77753445 seconds)
  done (took 129.621719511 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.776485907 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774972275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.780673681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775424361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775354698 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.777476897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.776287863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779615317 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77472101 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.778127589 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777810425 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776944913 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775000785 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780074982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777402467 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.775712855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.778316255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77485815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.778319172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780994097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778038982 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.775542414 seconds)
  done (took 40.809325935 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779366228 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.779554818 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.774657612 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778550343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776204156 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777728831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779332141 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780458567 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778673966 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776228003 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775585591 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778672049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776295102 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776811639 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776901598 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775928919 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778988716 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777478749 seconds)
  done (took 33.709264861 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.776343071 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.777024725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.779379886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776141121 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777072601 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781550463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77660093 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.78006422 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.779490525 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.777696024 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.782723977 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780025962 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.779718315 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776802521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77956959 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.778714052 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.78266343 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776231519 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780410866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777614398 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777257687 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780617404 seconds)
  done (took 40.848358194 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779281605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781190917 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778092452 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777858005 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779397341 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78210498 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.781956556 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.778405212 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.78107723 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.781898487 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7790369 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781260071 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.779368551 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779945763 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.778917324 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778166023 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780628558 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.779457716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781427168 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778353826 seconds)
  done (took 37.315095738 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781462158 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782129985 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781493152 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782724111 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781988596 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.783567374 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782438788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781799653 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782044648 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783224284 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781463558 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782582716 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781635382 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.783737237 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782472264 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782198757 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781831839 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782446778 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782843818 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782769458 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.783108754 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782616079 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783300774 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785398924 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782863409 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783415263 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783020274 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783700372 seconds)
  done (took 51.630072662 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782784946 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782415925 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.780261097 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.781134795 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.781874939 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.781852446 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.7806295 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.781526958 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782445864 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78113952 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.78498331 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.784046281 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783186107 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.783511095 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783851828 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.78471777 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786184942 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.781373833 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781763947 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7816968 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.784320077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784565459 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.785863576 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781733664 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781207416 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.784001559 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781432253 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783492797 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784097072 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781633308 seconds)
  done (took 55.200793917 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.802810984 seconds)
    (2/2) benchmarking "in"...
    done (took 1.801804253 seconds)
  done (took 5.321806075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78187066 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7859768 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.784214137 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782166318 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.782120477 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787581302 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784514337 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782545238 seconds)
  done (took 15.989815724 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784613071 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.788879067 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.785183614 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.785412796 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.785843418 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785347125 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790546759 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.786749498 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.786511724 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.787370662 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792005481 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.79214574 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.789956554 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786347813 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.785754142 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78707152 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.786330294 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.785695289 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.78862684 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.786534788 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786335713 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788342145 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790111966 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.783585797 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.789284056 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.796753091 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.789507739 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.786426992 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78567396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.79182889 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.786534581 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.783846262 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.787419053 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.787242228 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787899306 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.790059788 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792771921 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787827043 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.793031128 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787465389 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789463859 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.783939624 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788653222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788850352 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788500454 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.788126172 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.790510753 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.784972149 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788203617 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.790259014 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791747837 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787280745 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787214754 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791154936 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.787913367 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793842886 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788064165 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.792334923 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.795969963 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.797222813 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.800668964 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794530225 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789767568 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.790223121 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797013541 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.810464646 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793652443 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785196871 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.785376961 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.787867174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.794458485 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801724377 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.797036129 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.788342502 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789247625 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.788878292 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789111701 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788911917 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79501374 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.792176575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.79238672 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789319054 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798630659 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810027974 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.789227415 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.789499105 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.789412173 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.789940914 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.790730816 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800016649 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.789975748 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.790343655 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.78895338 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789998443 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.791255223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.791012311 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.789505523 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790738358 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.788078969 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791432327 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790783265 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793113394 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.802524648 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790366142 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790713236 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.797071336 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.790096994 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790660074 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.796920209 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.790178408 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790450995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790946086 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.79682839 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790320724 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793899369 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.798660813 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.791509626 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.791736087 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.790959447 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.792752402 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799965821 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.814646644 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.79185092 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.790820217 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797573568 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.801486134 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792352108 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.793699353 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.79233894 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.789306158 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791091742 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794216533 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.792552398 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793279519 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792092856 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794601641 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.788879325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792003344 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.792151064 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.792861752 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.793864493 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792793257 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792941667 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.793907169 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791413451 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.793471502 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.79877692 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793224397 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.793424025 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793331371 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791417415 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793820751 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.794109556 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.792859114 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793000439 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793537206 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793008892 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793121502 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793166761 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.792703918 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793619876 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795433014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796605172 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.795674935 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.79792546 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.792933893 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.79080858 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793799406 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.7940994 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.793812152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.793699451 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792558744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.796536764 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.801493529 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.794447622 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.793926748 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796526815 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794026773 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793573357 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794055211 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.797884143 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.802132276 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.794635673 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.800388822 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795342395 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795592075 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.794706483 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.795230952 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.794142595 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794948483 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.797563444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.802077223 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80779106 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803477965 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.797134819 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.798590558 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.79622497 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.800484124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.799062077 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795255455 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.795999417 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795982918 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800114424 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795450438 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.795770717 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.795442322 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.794747575 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.796498248 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.796958496 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.794941105 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795911201 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.795939011 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797048756 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.794920879 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796458309 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795872999 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.795080906 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.793128184 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.794996111 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.796344212 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.795891295 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.79610338 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.802218277 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.793172485 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797936379 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798046945 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.795783777 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.795292348 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.796781355 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798479193 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.796924943 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803485504 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.797431226 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.797311262 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802466025 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.796789224 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.798130689 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.799156999 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.797326714 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794827467 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798916311 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.806168199 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.798110477 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798179638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.796864528 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797419032 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798812446 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.804796701 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.795763447 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.796983522 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.79875268 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.800187113 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.794918781 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.799347322 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.7988393 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.798727724 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799783162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797574582 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.799552253 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799079899 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.798586942 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.799596773 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.798436301 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801942992 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805883656 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.8033795 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.79897242 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.800593701 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.799662883 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.803775977 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.798876064 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799718315 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.798157819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812401323 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.80736329 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804071219 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.799889932 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.7989921 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802840135 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.799955729 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.805070012 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800266101 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799265608 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799125793 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.798908614 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.797300886 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802500738 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.799278987 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800719773 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.801321829 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.80405773 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.803496781 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.800356912 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800463128 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.800096609 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.799781412 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79959884 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.803889229 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.803011199 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801338586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.79978515 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.799764396 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809251794 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800714376 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.800947437 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.800308682 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.80210985 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.801286108 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.804684339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.801820923 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.804492801 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.808977227 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.803599242 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.812384825 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.802960152 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809862777 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.800641146 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.804374424 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.809227808 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.802106886 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.800191658 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.80081349 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.80189299 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806669672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.804128516 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.801727364 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.805196714 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801403541 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802715144 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.802569402 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.804069297 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802779162 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802703783 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810588223 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.803640284 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.807674191 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803351662 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.801171661 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.802975798 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.803188726 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.803242209 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.8085252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.803782705 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.803264393 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.80275727 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.802697304 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.803285881 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.805413098 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.802889521 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.800893785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.803031991 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809393072 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.806367674 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807004141 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.803697467 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.810308181 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804168154 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81005175 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.806709931 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.80446126 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.803688499 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.803262489 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.805651612 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.805222511 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.804361016 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.80547342 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.804649127 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.808478984 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.804890004 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.807793064 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.80422203 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.804642234 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.802897022 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813572183 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827582536 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.806765318 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808117921 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.800929456 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805084974 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.80805969 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.806289126 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803790351 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.805839321 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815647881 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812564583 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806257221 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.805434903 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804562078 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805033354 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.80451147 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.805244649 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.806323643 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.805626596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.806102522 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.804960245 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808158359 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.806572503 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.805484111 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805877887 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.806915939 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.814903678 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.805391081 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.807570152 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805363986 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.806215309 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806115976 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.805865635 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.807718098 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806692213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806008199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.80780924 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812939374 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813016702 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.808709517 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.805733354 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.80641121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.806450408 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.80728268 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80733701 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.806997127 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806606595 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.806831483 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.807183257 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.807740598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.807679621 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.806777948 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808046134 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806658769 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809214011 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.812846784 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808467878 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.80456236 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.806521266 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807417806 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.806188198 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.810023878 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.815151219 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810081257 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.817525523 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.815391955 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.81120925 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.808030009 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810904757 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.815383509 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807132074 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.809147737 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.80928609 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.809287883 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.808770137 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.810782269 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808657152 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.814791523 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.808629166 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.8080271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815581336 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.809350306 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809189552 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.809902285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.812260616 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.807759204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.805940742 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.808611681 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.808861112 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814734188 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.810059828 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.8083198 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811331893 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80792592 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.811100157 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813155327 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810327393 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.810181518 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.80759562 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.810214146 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810209173 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810413638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806448414 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808864821 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.809461925 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.814003495 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.816560906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.807856645 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811566195 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.810044721 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.810162633 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810537436 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811112559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.808286994 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.808425384 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.8100221 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810511479 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.811000492 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.812571797 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810490409 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.812485567 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.811300936 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811801018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812730129 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.822391421 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.817762034 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.80827429 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.811715451 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.811518429 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.813814801 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811207658 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.810743358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811498722 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.812395295 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.81085339 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81205133 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.810863827 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.814011452 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826600076 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.811390909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812862405 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.811789417 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815362736 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.811652927 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.809851303 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.811905652 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.812901528 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815102115 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.819609918 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.813463171 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818541636 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812633458 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.812631471 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.816496974 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.815460361 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.818873588 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.814690172 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813937473 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.811757306 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.81725123 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.829674946 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813072276 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822428611 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839907348 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.813274425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.81393059 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.813398111 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81193495 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.813378828 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.815123438 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813110456 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.814090395 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81402997 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.813877667 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.815196605 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817819599 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.813967821 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.814787418 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.813479181 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.813283839 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.815777636 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.810712155 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.81362328 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.81482364 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.814445441 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814398951 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.814570193 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.813613468 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827846398 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.823184292 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.815166933 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.814228543 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811470929 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.817800892 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.817727157 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824256975 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822047567 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.814599569 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.814129871 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.816194728 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814880913 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.811808636 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815274062 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.815588924 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814215227 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813195239 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.827766879 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824158781 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.81919444 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815560903 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816200791 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.816727509 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815967359 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81627878 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815017932 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.816824533 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.817457141 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819369326 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.815137288 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.815379754 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.818496093 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823870038 seconds)
  done (took 1075.925235601 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.814399215 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812977785 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812423683 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813627068 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813555366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814299291 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814878287 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.81306578 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.812870163 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814321431 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81345223 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813675958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81419261 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813816599 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814041903 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814976067 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813722322 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813909948 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813337249 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81365853 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814359711 seconds)
  done (took 39.838010824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.816447598 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813462056 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814478132 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.817476972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815170616 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.817010013 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815015476 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816448744 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817029871 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814357813 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818505347 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819357848 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.815736348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.815485873 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815581339 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819026324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.818035651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814876205 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.817316243 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815474913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819486516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.815968156 seconds)
  done (took 41.71125849 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81776346 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.819967567 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817867264 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.815698083 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.818495425 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.816136881 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.818663682 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.817792962 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.818757039 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.819352431 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.817081378 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.818844606 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.824765547 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.823408939 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.820809501 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.818909212 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.96248185 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.818220631 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.818612131 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.819569687 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.815949363 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.823831087 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.816180767 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.815927862 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.818696736 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.820917465 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.819908689 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.818534874 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.81943466 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.821447338 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.823879271 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.820156276 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.818772072 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822306863 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.820098832 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.820015843 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.824234831 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.819470931 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.817357708 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.81861985 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830371973 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.839309723 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.821063607 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.825224599 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.821226121 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.821054336 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.823799088 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.827691967 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817777252 seconds)
  done (took 91.097217527 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.820344875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.821251886 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.819269736 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82016202 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.821969942 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.821594296 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.82073344 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.821060418 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.818929469 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.819135643 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.821609519 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.818211301 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818510625 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821466566 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.820450069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.818270337 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.817908321 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818075931 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.818881837 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819036046 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.81847442 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821242482 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.821431095 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818601474 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822076158 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818810085 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818534785 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.820976819 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.817758561 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.819187382 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.822212668 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822248443 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.82101543 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.820070983 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819568283 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.823064399 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.822408536 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.819391719 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822298007 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818974023 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.821965341 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822946178 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.822562004 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.822244197 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818398611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.819402682 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819516618 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.819133041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.820392718 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.822097008 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.822855512 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.820666683 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82338465 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.820081548 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822949255 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.822881709 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819969351 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.821729806 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.823098991 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821066713 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.820291518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822850089 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.819391612 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.823547393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.823552275 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820893501 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.821034512 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822777369 seconds)
  done (took 125.56163066 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823354168 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.823270222 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823670593 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823436626 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824608602 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.824476976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823487839 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.823006186 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823809167 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823927138 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823656996 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824450656 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.824036461 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.823789842 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.823674458 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824741079 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824615538 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825015951 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825708714 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824909385 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.825344925 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.824870099 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.825203707 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.825086346 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825032428 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825652222 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826021751 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.825244985 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825516829 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.82556056 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.825956215 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.824923722 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826119656 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.825489787 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.826336306 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.825427691 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826198405 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827453031 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.825550267 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.826920487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826498308 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826410055 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.82658579 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.825825338 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826146688 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826301591 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826604035 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.826400716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826314106 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.825903277 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.826552776 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828043535 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82738148 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.826659165 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825984953 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.826411365 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826025739 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82621561 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82634712 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827246361 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827684406 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.826491096 seconds)
  done (took 114.938273574 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826355398 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.826097815 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.824228193 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.824736903 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827114999 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.82530755 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.827503923 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.826079042 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.827899594 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.827704686 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826427157 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824851398 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826475786 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828152948 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824600608 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826467938 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825123751 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.825926353 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82825591 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.825369484 seconds)
  done (took 38.283259942 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.825429711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827771022 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.825649549 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825926668 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.827333574 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.825318265 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828670681 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827761403 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827371892 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828443165 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828659255 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828775502 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826367961 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.826126183 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831034669 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82644783 seconds)
  done (took 30.996975153 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.827791338 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.828794842 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830596586 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829288494 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.827155911 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.826301956 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.829281122 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.826691709 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.826736367 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.829647291 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828641834 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.82906171 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.829771725 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830316693 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.826401457 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.830564478 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827942091 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.827121434 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.829285869 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83087233 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827482303 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.827123927 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.829721946 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.829932986 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.828142861 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.82775845 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.82756525 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.826643829 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.826979951 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.830535347 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829069613 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.828469083 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.826915767 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827638066 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.830162277 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.828270017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.830741962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.830714731 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.830445733 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.830957125 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.830684516 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.828600872 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831239313 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.830558886 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.828027048 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.831568671 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828183011 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.828997118 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.829178418 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.829961681 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.831979594 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.832382723 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.831762982 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.831918148 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.832426812 seconds)
  done (took 102.367919321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831505892 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832506604 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.829696953 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831806569 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832533503 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.828921426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832164988 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828829987 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82982809 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.832326288 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830130219 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831197679 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829683061 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83190452 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829418396 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832492114 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.829135353 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.83012517 seconds)
  done (took 34.718356343 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830471899 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830444898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.832406602 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.829782492 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.829997107 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.832460568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829458851 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.833524314 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833266183 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831168497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830470054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.833118882 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832859147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.832374794 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.8308371 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830489262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833248156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83238616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830927261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830727064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835323656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833616776 seconds)
  done (took 42.064041345 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.833543264 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.832177488 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.848602596 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.85266834 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.85440997 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.863593242 seconds)
  done (took 12.850922266 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831625566 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835200947 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831962119 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834257732 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83472602 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832130747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831547055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832640046 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835750249 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834405458 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831478846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834797693 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836500111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83168414 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834914712 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834639663 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832218795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831909252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83249804 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834878536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832858682 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834668835 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832661639 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832457059 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831840218 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832430743 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836755917 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833197996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834133263 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83570191 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835454936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832277234 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835560833 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833479848 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835711065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83592089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832206994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835091173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836161884 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832793219 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835688326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836810752 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837064014 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8349381 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835302515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834130627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833441237 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833939086 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833498352 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83708137 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836651511 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834095889 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836921455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837570842 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836608546 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838400152 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834096342 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834901405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836765703 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835449603 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83496559 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838026238 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834601847 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835149578 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838066873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833935521 seconds)
  done (took 122.846695988 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837524945 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835961246 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835142415 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835449551 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835293264 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836671029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834965309 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834237152 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836216359 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835972849 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839089429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835703229 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836039447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835447199 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834584849 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836051978 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835920634 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835450815 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835824909 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838164049 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836287424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83753913 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835766312 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836518482 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836064176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839299318 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836602105 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837378823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837207632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836282809 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836006366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835683465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836133635 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836586495 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837148095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836841006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837175182 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838020405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837728325 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838654729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836947638 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839388207 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838194825 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837663235 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838280117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837285142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836403465 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837541904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837399787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837722798 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838202213 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838214043 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837424742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837602071 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838998399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837743331 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837345496 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837671787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838253505 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840561557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837616591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837945416 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841347535 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837154928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83733882 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839684425 seconds)
  done (took 123.020659122 seconds)
done (took 2507.430521702 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.839959934 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.841797719 seconds)
  done (took 15.453307189 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.002015215 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.953999789 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.83822934 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.859725288 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.839214271 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.852306255 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.852983989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.840289694 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.839530816 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.839194706 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.838958048 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.026561327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.842124434 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.839806924 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.840116562 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.933487465 seconds)
  done (took 51.817476824 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.843003749 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.844258543 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.854792399 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.845732055 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.844188058 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.855810647 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.875564291 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84648394 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.876239162 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.855429663 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.911863419 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.852490563 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.84198579 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.89172476 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.854712194 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.857447191 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.933782401 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.915301916 seconds)
  done (took 35.374172566 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.919581351 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.849054447 seconds)
  done (took 10.548534316 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.852577693 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.846103305 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.869470846 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.87132319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.84662499 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.860443085 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.878986693 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.876546969 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.867113576 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.856337401 seconds)
  done (took 70.402553091 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.850598761 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.84531536 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.844330699 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.842557528 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.837363769 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.840738051 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.844590263 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.840904083 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.520950457 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.877500046 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848567629 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.849353046 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.845044445 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.844977968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.842966219 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.868093513 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.034210377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.841830611 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.842103421 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.850829907 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.844621679 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.90557997 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.856713133 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.844880869 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.875184945 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.524838811 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.851644234 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850287435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.97195638 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.842744525 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.844568787 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.845707311 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.846082533 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238417819 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.138106803 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.844389599 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.85423333 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85381039 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.842876578 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.954696924 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.845742818 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.858573539 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.718398544 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.132720202 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.960953103 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.887041448 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.210538746 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.84805981 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.846375384 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875818344 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.849157336 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846823858 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.85923013 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.352266565 seconds)
  done (took 131.314929479 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840763131 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.104244802 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99836632 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.841175563 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129929514 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047712186 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.841082571 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890987929 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842789836 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071845993 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.060441524 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950279488 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843146536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.840430941 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.843636536 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.840311494 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001358374 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.914710299 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.844088071 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839082531 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874823611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085034557 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.975958969 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844324286 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.863858495 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052462805 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.976507737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.948911999 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.292344705 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.840748221 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908495755 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842953131 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.845095639 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.841943018 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998003462 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937502793 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93155462 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.843656319 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841744965 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841316567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.516205702 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043056492 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939824893 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.98575777 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09019514 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.048113699 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.632469375 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.841651274 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.580458559 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004631486 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.075836307 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.073312852 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.967914818 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843932625 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.360740893 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842156893 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841649947 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078763587 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07296185 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946220256 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84536482 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.844484951 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843825305 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.088920688 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84638769 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.93916081 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845212423 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842012202 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94015479 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.949043068 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.07375939 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057297633 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87756981 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.162180753 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.328638666 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094061003 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913092098 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079823673 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.84579899 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842145852 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931206299 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.794323237 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043823617 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.0954315 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.09952744 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883542569 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.571880993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.844385864 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.073690777 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069339715 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.145057465 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085295866 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.996973354 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.16552367 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844298516 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.843078209 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.087356273 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982605929 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.846762255 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.204030725 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080353588 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.417151178 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875572235 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187482826 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979387832 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.848263977 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.488190803 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847515877 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.072608808 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888641886 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.847335661 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844285639 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.066190037 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.921750567 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846130625 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.464248514 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.913250366 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849349568 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083313076 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.847884102 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111821346 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848658979 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085033456 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.836878056 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879940563 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.07458291 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.085917806 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.847655663 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093303509 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093220116 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963867229 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068984671 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.47389476 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847989911 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137471439 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847812766 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.84563253 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.019161931 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.846847042 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.994886922 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851302648 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181810016 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872880813 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003397254 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849488442 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.104409128 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8843389 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900524949 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84869274 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980632013 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85006161 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.738876967 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001663471 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848059788 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846320534 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.576733673 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.846956027 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005928906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.08039137 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874057073 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.922882203 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.52234734 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848387482 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935457842 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875128807 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.195568624 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.847356461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.062882789 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.850283268 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.383195927 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.847430529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089794606 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03179934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.850116192 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847343756 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.754083736 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.848113444 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849029609 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.010541078 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.887536956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847373495 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052641787 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849913913 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990376692 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.853842741 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.923147803 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.203416982 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848552784 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.848093982 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.848702318 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.850407796 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.850124783 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.114025741 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.881112806 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.380150974 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990539257 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120663463 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.169126187 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.100970345 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896109918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853218163 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100738716 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850911872 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.91585548 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.852341603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873657872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084564128 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852938045 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062396972 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.131820598 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.774755251 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903163715 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.852221269 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850504904 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.807600889 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.008459434 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944059563 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853574654 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.850917639 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976560326 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982719089 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067763359 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.851120097 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.182099624 seconds)
  done (took 898.697260075 seconds)
done (took 1215.378224938 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.851195355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853036767 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838979016 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854703331 seconds)
  done (took 29.185949642 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.861792003 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859095837 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.859956646 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.859495617 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.860165089 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.859245334 seconds)
  done (took 12.950572012 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.878418361 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.856828166 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855644384 seconds)
  done (took 21.381637865 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927211306 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.264719995 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.969555593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.299018106 seconds)
  done (took 10.252658624 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.86242309 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.860163192 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.86058129 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.86141057 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861189982 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.863489758 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.860192976 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.861866342 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.864283174 seconds)
  done (took 18.547749214 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.326974608 seconds)
done (took 98.432531636 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.421068785 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.866011735 seconds)
    (3/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.225945986 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.879524693 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.958851689 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.208774504 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.840663759 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.514270624 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.013284294 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.078577848 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.920912626 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.855607061 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.052942417 seconds)
    (14/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.048452882 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.896138175 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.120451124 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.923004626 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.877678325 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.884296317 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.847908639 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.374584628 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.841202852 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.896868181 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.930211744 seconds)
    (25/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.103856188 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.405725889 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.257507533 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.040795013 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.546785497 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.345659352 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.977311433 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.035018157 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.633081072 seconds)
    (34/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.941110041 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.842752489 seconds)
    (36/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.181187637 seconds)
    (37/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.130918766 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.337217971 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.12797315 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491391371 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.247196463 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.142342853 seconds)
    (43/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.962066042 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.042925588 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.399794827 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.967342222 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.836257567 seconds)
    (48/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.301070467 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.216981925 seconds)
    (50/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.019660304 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926434451 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.85643916 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.05248499 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.915725879 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.999594125 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.844454741 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.746534287 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.936640238 seconds)
    (59/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.40923223 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.193776755 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.194381579 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.941853114 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858929287 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.89247024 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.926984111 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.549419032 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.180018615 seconds)
    (68/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.370764007 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.863748592 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.24092355 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.810511718 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.886091947 seconds)
    (73/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.144551114 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.89140044 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 4.823777217 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.185352424 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.167169018 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.529603584 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.032432633 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.530357287 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.495445834 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.915977588 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952988334 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.860905903 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.373636177 seconds)
    (86/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.844544855 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.88019121 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.708263717 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.194721573 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.839745594 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.237653905 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.104510098 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.762238776 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.005198917 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.538514771 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.98178555 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.961436875 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046918357 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.005595088 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.503377601 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.937360263 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.850768857 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.494390422 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.361952487 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.846768215 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.403594047 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.862677894 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.216522377 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.936695693 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.563204693 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.09405775 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.459738785 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.48887661 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.072636544 seconds)
    (115/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.333280724 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058208933 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.863037539 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.892691768 seconds)
    (119/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.139256755 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.84785599 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.950574899 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.646041067 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.866526447 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.919990898 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.794125142 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.156796946 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.065173631 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.308202251 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.882128847 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.534687211 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.867393371 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.550519309 seconds)
    (133/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.778856169 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.12684602 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877187743 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.116813124 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.86378271 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.95315176 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.945583795 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.241500225 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.892663648 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080386558 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.127118292 seconds)
    (144/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.769788257 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.893331232 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.071409487 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.504261816 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.675834995 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.8959783 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.991504768 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.947881989 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.767263742 seconds)
    (153/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.00450507 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.953968851 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.218837846 seconds)
    (156/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993652889 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.103700001 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.891370338 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880242544 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.879371149 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.930328513 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.891159164 seconds)
    (163/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.863441102 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.019491879 seconds)
    (165/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.01893647 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.199664549 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.889641573 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.342378483 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.942751442 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881597487 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.165961652 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.868930808 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.142825658 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.05722058 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.954144952 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.967905911 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.909035998 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.878733795 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.948991489 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.962543755 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.945461944 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.863709293 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.563277509 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.312612929 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.8677161 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.962072406 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.892475806 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.914205873 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.204660631 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.556316321 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.204627061 seconds)
    (192/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.99550685 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.237571553 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.970431104 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.222285086 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.42892843 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.329432657 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.897468788 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.865029749 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.904047016 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.431651302 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.342841228 seconds)
    (203/309) benchmarking ("sort", BigInt, false)...
    done (took 6.870860365 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178955079 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.983977117 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.849277724 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.274473202 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.937345951 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.1935331 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.85543514 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.122771585 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.996237717 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.92406859 seconds)
    (214/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.876445726 seconds)
    (215/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.891042616 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.927096523 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.01572689 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.031486739 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.905609936 seconds)
    (220/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.061018919 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.895208939 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.020172928 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.945321494 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.665293525 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.086985232 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.229502057 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.87632461 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.179978983 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150432075 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.887833849 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.908340912 seconds)
    (232/309) benchmarking ("sort", Float32, false)...
    done (took 5.641377738 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.871712889 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.313978643 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.171462488 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.310978646 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.754505004 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.901361988 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.811681244 seconds)
    (240/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.87418059 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.121688068 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.039488618 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.930315961 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.449202676 seconds)
    (245/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.979558204 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.947631235 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.0958372 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.126303987 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.169849826 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.977606741 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.896838378 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.870252191 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.25900518 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.8733242 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.076810592 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.956221463 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.035052959 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.875310737 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.265827512 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.870048707 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.771860872 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.986405798 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.894725843 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.86972566 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.211531012 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.239405226 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.272282566 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.113213699 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.351461588 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.191239029 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.1634668 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.862427955 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.100603642 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.018261232 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.002234499 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.85618051 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.915975333 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.951587824 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.887459947 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.27133031 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953810535 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.060983131 seconds)
    (283/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.017972665 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.383829932 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.022257918 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.620896052 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.999398143 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.867828385 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.995384636 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.255328587 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.962225712 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.905280737 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.880763819 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.234233181 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.842593145 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.338083707 seconds)
    (297/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.164212951 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.310387137 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.875345352 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.105800684 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.022757236 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.008198432 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897873993 seconds)
    (304/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.873191323 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.958062183 seconds)
    (306/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.980251823 seconds)
    (307/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102592118 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.231378264 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 5.678331291 seconds)
  done (took 1018.097442065 seconds)
done (took 1019.966853771 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.907137053 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900477665 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.882984409 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.905559779 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.996226023 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.91333424 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.894886672 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.885143715 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.930673323 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.932661155 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.882894768 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.911849286 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.885965343 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.884251976 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.883515262 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899003706 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.200215308 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.920903745 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.902501759 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.893850283 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.901363248 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.883541377 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.933959537 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.913006281 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.888069088 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.886482675 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.887738209 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.905664309 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.997412821 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.889401243 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.88787154 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.895029387 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.206893724 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.919320589 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.880306552 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.90494407 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.896594833 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.894195777 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.888709679 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.917342063 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.361199253 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.893496023 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888562027 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885988211 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.886530125 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.88956514 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.88725212 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.893488283 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898756595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899785711 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.346097518 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.908438812 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.890090091 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886844604 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.896196614 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886703828 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.893598902 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902992783 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.906889953 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901901719 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.189899355 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.924813582 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.889361737 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.904415086 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.894844466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.384364018 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.889040519 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.890315549 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351775091 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.898886958 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.383762887 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.90372403 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.889230056 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.901740242 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.919928283 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.200183356 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.918229761 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.887510767 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.89559692 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.886748707 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.897595766 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90050217 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.893149267 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.889633669 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902400373 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.916936329 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898032727 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.88870461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.897558438 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908394032 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.896601804 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.898971207 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.89231411 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.883946154 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.899166097 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.894953031 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.892552626 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.892077063 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.893398656 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.897989003 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.352775029 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.913576467 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.88569112 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.885614855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.888723404 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.903884663 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.35229692 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.896879609 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.911656207 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.937390298 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.891983522 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.191796052 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.927429506 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905340084 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.898215449 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.893675787 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.884411577 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191488936 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.384146236 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.913760099 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.891636274 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.889347984 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906473071 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.89328498 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.88728791 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.204846592 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.923074455 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905260552 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.011724339 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.901651215 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.923497439 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.888966119 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.894642593 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.920840028 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907241585 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.923312137 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.89464851 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907127651 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907112134 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.887757086 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.902012813 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.901251458 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.893949044 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.897366869 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.885259965 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.921311632 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903760009 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904718624 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.912915022 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.012379607 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.890179637 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.194126841 seconds)
done (took 297.053002691 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.961531013 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.880880174 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.987158055 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.888702537 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.973565694 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.976046871 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.885163587 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.88597816 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.886156342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.261180385 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.886054499 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.886804061 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.884664322 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.886253223 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.973027548 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.88928609 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.886543908 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.224478425 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.888980039 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.960889173 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.883824909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.88666996 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.890135119 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.260981625 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.888796572 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.8812586 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.961603577 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.889730231 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.226959947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.889843918 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.887137708 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.225950353 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981228543 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.907916144 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.899983576 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.896737659 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.973235417 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.895085684 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.972601378 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.972592237 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.990795513 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.93106559 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.889214354 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.887837695 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.895125501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.895128434 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.887692384 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.917911437 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.884325923 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.888843892 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.227764315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.902463604 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.898387563 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.889927346 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888901258 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.912935078 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.889319581 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.89186266 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.984915959 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892778117 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.955076848 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.26421617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.263347173 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.892888835 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.892087634 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888677162 seconds)
  done (took 185.648357344 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.958272084 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.963435355 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.958959614 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.896936567 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.939767656 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.959968293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.896123727 seconds)
  done (took 15.393945887 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.897755405 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.892824284 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.941131403 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.941323181 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.892300993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.041972535 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892237161 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.904069598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.8903781 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.945572332 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892755964 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892663951 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.898481051 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.894498656 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940784743 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.904375368 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.008541181 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.893860041 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.893172966 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.044367737 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891135005 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.900533627 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.947305065 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.904515977 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894166046 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.899313479 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.48269157 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893272855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890167314 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.893041577 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.89062658 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.9359531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894192955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.894493214 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891150404 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.008553436 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.893660528 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890636666 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.894637832 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.892954401 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.892638171 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.894924674 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.895070851 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.89160667 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.894920678 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.917126063 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.893344194 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.893883027 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.894930058 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89495966 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.945136454 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.894947343 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.892554496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.89137633 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.94912907 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901825941 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895088304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.891097218 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.8960944 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892878999 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.046216208 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.943028523 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.894378548 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.94252507 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895459156 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.89567416 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.896072105 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.89544743 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989893891 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.896294973 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.943226059 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.893659621 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.055339699 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.920043289 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897557188 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.89964128 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.899112819 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896699743 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.889401366 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.902125073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.892864754 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.896918133 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.901393987 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893187393 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893427154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.007469882 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.004418794 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.89383188 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.909474455 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.90462935 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.894126921 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.948690216 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.89601136 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.894696144 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950286449 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.012097295 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.952070219 seconds)
  done (took 208.260342585 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.900582736 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.904538511 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.898477396 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.913533786 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.897156922 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.895975958 seconds)
  done (took 13.23530614 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.898933215 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.898213437 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89650451 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.896163257 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.897140715 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.897763385 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.898302723 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899013286 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.900716164 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896687684 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.898422469 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.897719605 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.896898102 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.89586399 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.897561365 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.895482596 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.897552568 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891266329 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.893870518 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894119629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.044310488 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.893047362 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891628253 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.891978303 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.895893108 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.890679521 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.899598428 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.889143521 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.889483291 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.898337069 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.895027192 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.890213673 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.890298871 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.894409854 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892943795 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.889098745 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892824253 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.889503533 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884285501 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.887019617 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.887620641 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887308952 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.887708839 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.887203854 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.889836467 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.894012868 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.891665273 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895051509 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.886948361 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.886493073 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.886864404 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.885872285 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.887276187 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.887446192 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.887056681 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891096593 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.890061571 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.886487705 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.887502975 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.886316129 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.886604127 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.886538319 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.887973846 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.890022496 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.892487583 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.886461262 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.885923876 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889067723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885177231 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.885969024 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.88541908 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.881397047 seconds)
  done (took 139.16896642 seconds)
done (took 563.543821214 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.913954801 seconds)
  done (took 8.727312766 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.020372884 seconds)
  done (took 8.940247465 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.682288582 seconds)
  done (took 10.509502538 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.901882488 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.904720565 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.918311909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.892280061 seconds)
  done (took 29.455105184 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.908003986 seconds)
  done (took 8.733386508 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.908324882 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.893100552 seconds)
  done (took 15.660932181 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.954533934 seconds)
  done (took 8.784078505 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.011936002 seconds)
  done (took 8.84419925 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.911065838 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.930946521 seconds)
  done (took 15.683964023 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.876667854 seconds)
  done (took 8.703130939 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.553672299 seconds)
  done (took 11.386088552 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.902945092 seconds)
  done (took 8.744925388 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.892528875 seconds)
  done (took 8.72101791 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.192618135 seconds)
  done (took 10.020450481 seconds)
done (took 164.726319892 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.89445261 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.893852021 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894058272 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.891168704 seconds)
  done (took 29.399994569 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.927610096 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.926316964 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.927627336 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.937358394 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.928289771 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.926329189 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.918203454 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.91770819 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.936457477 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.92869632 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926525174 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.927681263 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.92679247 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.917858971 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.927452033 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.927849688 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.936201643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.927049056 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.918506443 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.928487308 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.892651126 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.936587372 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.929203481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.89289474 seconds)
  done (took 48.01387481 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.094102422 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.963757961 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.046909641 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.945437071 seconds)
  done (took 9.871081755 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.944498911 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.945752797 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.958076815 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.996254731 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.028442298 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.96310041 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.919507952 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.914857132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.900913064 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.946444886 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.021128629 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.939516441 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.030201632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.893137137 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.076510451 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.893276482 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.893755034 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.945431037 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.997668831 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.011527101 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.894456494 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.945895272 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.949862503 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.940667554 seconds)
  done (took 48.773081998 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.892109345 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.900880599 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.899784827 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.895132599 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.894465749 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.893793575 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899335189 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.89485842 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.914948335 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.894549753 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.89286629 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.893714379 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.893094522 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.893792201 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.893130816 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.906343542 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.907192585 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.894275814 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.897804381 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.900388039 seconds)
  done (took 39.776437461 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.88770074 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.742327053 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.24036623 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.144110339 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.888385968 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.892030114 seconds)
  done (took 31.618796482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907583724 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.900839062 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.894768206 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.952791432 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.035011966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.904302309 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.895322884 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.905684375 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943441557 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.962411494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.915416606 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.923759993 seconds)
  done (took 24.966520773 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.90600573 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.891295654 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.897470492 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.907185547 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.9157706 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.901333952 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.900195701 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.886826375 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.906497631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.911789803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.899647021 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.905642959 seconds)
  done (took 44.658675272 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97686033 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.77737576 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922722631 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630746657 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361017635 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099608082 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399436186 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.228115769 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.893600473 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161032681 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95925491 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00973638 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155883427 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897921535 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912692533 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.370559035 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189013369 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123166683 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918526102 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.661675166 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948958482 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.549530033 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.740656587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956700171 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1134458 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.033508856 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.161482946 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858609251 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033985503 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935987179 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911552331 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903724517 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17570882 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271797254 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005733976 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912004707 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557329694 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.621348989 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.890515888 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.697072611 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.701198428 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.023041164 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908159732 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899317469 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835011115 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498907949 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284486309 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.905286089 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.610814826 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899552649 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911199252 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987510901 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.903453719 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.715723637 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855147682 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180573961 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.897293276 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90749814 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469656277 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011364665 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.549519679 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.883468987 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.095934192 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755570533 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290608423 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048571356 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.907522521 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910130796 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835985617 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.678711475 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954651688 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049821242 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.921997345 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551894961 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211492303 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.06653301 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84878707 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188186915 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.264702053 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.888115255 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130794357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860441173 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838618884 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.771325497 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83925264 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163201173 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937101127 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.535286845 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940530484 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.235455479 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914860425 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920057005 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909417178 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126458621 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.783952229 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903498132 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.745925133 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057511027 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927164111 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23807902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840135849 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.908376865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160491018 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.117215036 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255507509 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.424442016 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060473493 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905255103 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.985503099 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.905525084 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955401822 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174120381 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961146417 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.030853181 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963355816 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.871867187 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198844951 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931205162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.071833842 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.012456782 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.034678152 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.227665312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19697386 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971282403 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906225955 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905767926 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.768971945 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458947291 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.174322376 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.90764905 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512262039 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96132512 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.907795209 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841470624 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.527416097 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018934891 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.87777784 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130792353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.906012953 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21578141 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840787523 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051688529 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.0214681 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.128364958 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.547927997 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.979487228 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162257153 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511898455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.29709982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960551333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930304746 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020618933 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925550871 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.461185776 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199972409 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905352149 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.90550988 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.725380742 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.90177288 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910206327 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.911385923 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.704486035 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18622174 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928209675 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909115131 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.795381708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.92012692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973897241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910513692 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915837905 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.457611126 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.666223907 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.91727324 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.547817011 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13477158 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916932422 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.693854258 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018367829 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.987936342 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183354476 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963641479 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.841747442 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.615783578 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.599278729 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906880979 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840592981 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905840045 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915135667 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916347833 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.286211866 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182008305 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947961788 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.766274647 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.948455862 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917991177 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.911906439 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907530586 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.505714522 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.039363859 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.560150426 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962638106 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046335187 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.928726679 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84271157 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912605112 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914136091 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911644819 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.87780027 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961926073 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.683853064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290563252 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17306619 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609851671 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931450516 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.719740792 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.967528565 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.936503518 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.780258113 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927566662 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.949215214 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92301851 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.922141262 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.741584246 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.60699099 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480233874 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222671534 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21582665 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348357694 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.527533366 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.2232218 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250263795 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150378684 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441185294 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97286832 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258646284 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855826695 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994109689 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.55346451 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262789671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926083805 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139928594 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295046248 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.844787219 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937583785 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123990008 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946957232 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.913039337 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875098302 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.119072397 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054470494 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.694328518 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115904316 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243964097 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.807733681 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.890129356 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.91211072 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.59599742 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995473152 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.626127455 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274244652 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.572913865 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.94965626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408029385 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918695258 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358854943 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260065333 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348806584 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.040689728 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85052379 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923764338 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923480465 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.91250507 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.953674379 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.786863667 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.168584435 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923560681 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148113336 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29694564 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209652453 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.814530378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.923366898 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912383388 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203960636 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.814635004 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085473334 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.477489273 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.447304036 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921619557 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849373304 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848126079 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.60684447 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920193816 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886712799 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129122378 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.094903724 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866145774 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.533252235 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155303639 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159633702 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.918884993 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175919225 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179872607 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.642747159 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934686809 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.004598252 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.641891248 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.02218035 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.183152052 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149527184 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715532827 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148185587 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.949572935 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.688756527 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.913246139 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133378244 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.183366628 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909838499 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147569087 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.636148483 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.963205151 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22654879 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969660203 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.873507462 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.0678536 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.112052209 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925656702 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999460191 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924509654 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.92581577 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925941418 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961815701 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886425075 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.04083626 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.92864078 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0041091 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.053430106 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.448498784 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.924311727 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189232989 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272496855 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243136752 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971829234 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915567694 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914058946 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847379157 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049862774 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360465243 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18700885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043526165 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.214311153 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940293397 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673617628 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416947218 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16359803 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190650098 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.81174028 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919482034 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.927199783 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.182898329 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926813001 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.126529432 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143251004 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227628636 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385337125 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.276087631 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290192011 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192288259 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.284958028 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916778369 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50614802 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.972784971 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608820643 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.954761856 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926443643 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186009743 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927959135 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299405637 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942152019 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.117917067 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.435666497 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711357322 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210989297 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.901941333 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974434264 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191231521 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310085368 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227847575 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989370893 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928840877 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.624040065 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055695708 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.818337277 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190205238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919107367 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12930874 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.628430044 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92831689 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192726829 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22468756 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.915925228 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.887922497 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928941558 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.929009359 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142754441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181465216 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172718133 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929987249 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.926959078 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.733305797 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191407572 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975915556 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854508998 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.923553281 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018890934 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167379688 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942860363 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.439977812 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.631730319 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212249251 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.835454404 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940602 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.565937808 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288366031 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239775245 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.462920582 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146991964 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477675935 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.919969834 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215285732 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.923973979 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.525453628 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236084032 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.923161443 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.637422803 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964686446 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.188507609 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239787462 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.98851059 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718817485 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.891999371 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145618303 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519017691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86966423 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92367779 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.983612717 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927250414 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053837666 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933859489 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.864055829 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929988036 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.67121958 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415282579 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.925171577 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908331054 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.706092783 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.656263966 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962489492 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066328569 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933359963 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.633577603 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.214776916 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177328012 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.64234423 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.934799258 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.927458693 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923950231 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85256181 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.122433202 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.303892019 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219050116 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.498401133 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.967960356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931022916 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.141420426 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13665752 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.922171447 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066118434 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.528804805 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970031849 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.695021916 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.605835202 seconds)
  done (took 1710.740309474 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939021495 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.961994695 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.964342143 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.978737352 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966058888 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.028543709 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.98430289 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966806312 seconds)
  done (took 57.649484569 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.925619568 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.124577446 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.932601938 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.923199811 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.931809402 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.924099415 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.097852004 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.933961 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.928890359 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.93123841 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.923586707 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.920752133 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.237051753 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.944600095 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.919537405 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.902235702 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.925562005 seconds)
  done (took 75.301394566 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.918435409 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.150623538 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.951550453 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.931870408 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.871039977 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.924606425 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.893510802 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.943571024 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.922378599 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.143834803 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.554955222 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.942607947 seconds)
  done (took 91.002359781 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.928010694 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.922161039 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.92212667 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.922372339 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.924215783 seconds)
  done (took 11.473493233 seconds)
done (took 2225.0993154 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.274261778 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145607848 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.1575934 seconds)
  done (took 6.15399545 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.063971105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.111737295 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.230923555 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.251929786 seconds)
  done (took 10.510991692 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.210252162 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.285184118 seconds)
  done (took 6.343709983 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.329269849 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.931646356 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.313489269 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.912362711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.915384293 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.918088492 seconds)
  done (took 22.599458388 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.918112898 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.921330134 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.919081385 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.921942232 seconds)
  done (took 9.529667543 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.899664761 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.584647106 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.903759722 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.915742083 seconds)
  done (took 21.152720008 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.666588106 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.351830113 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.662032737 seconds)
  done (took 9.529936505 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.411511834 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.821352448 seconds)
  done (took 9.083362677 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.194095999 seconds)
  done (took 4.057051993 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.960956711 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.203269123 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.454569662 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.449129858 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.549915216 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.808417679 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.265617365 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.192716753 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.341834261 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.377448499 seconds)
  done (took 25.466609758 seconds)
done (took 140.124818962 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.315622282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.17544624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.130372495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.282878454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.152556538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.128667027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.346794057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.267259337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.780343585 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.776907968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.280235194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.154148021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.093408195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.163153011 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.100055004 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.168769004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.14990257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332125018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.017515679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.174493981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.351691058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.907717982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.122108419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.92388822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.152283339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.082338475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.498698233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.16994707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.170986016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.511339268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.083810758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.329200799 seconds)
  done (took 175.159167867 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.827580723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931823847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932019663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931332394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.166702739 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932667691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932234551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931210762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.0606402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.044412346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.937002494 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.18723844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944652836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.932225272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.94132039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932965584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.203906522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.901243962 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.943337023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.944102249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.948495926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.060498382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.944808119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.099341077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.212683046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.945976162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.930494255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9495639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.932701401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.937207432 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.938050528 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930603465 seconds)
  done (took 209.256087825 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.929819478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930569179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930528988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930259831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.931621319 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.931154674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932311817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931453309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.600410507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.593576896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929351351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.931491091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934955094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931717315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.933374151 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932448911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.93363492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.933342114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.932370224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.93506867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936711602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.661183167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.933337619 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.669117459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.931275839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936289442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93249767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.940103078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946007343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946364674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946703854 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.933514797 seconds)
  done (took 222.554217679 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.127211345 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.938688355 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.940306012 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.874024746 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.938972026 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.938854507 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.895167131 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.128031197 seconds)
  done (took 19.671299868 seconds)
done (took 628.517230379 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.400741141 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.255945032 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.129284515 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964039498 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.209378821 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.001222928 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958257505 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.022454647 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.687388676 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.028191278 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.601315375 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.980288566 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.695264768 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985449251 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.07981917 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.017377065 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.503705287 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.593496361 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.137793054 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.028024718 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.15079094 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.920430738 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.038033823 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.712278617 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.713069559 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.966889492 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.138447746 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.507108575 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.970752826 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.12212254 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.734539974 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.352820877 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.972129473 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.958111062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.016374954 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.993083593 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.303096861 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.971292433 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.089818738 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732565717 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.030026615 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.580351219 seconds)
  done (took 106.121006656 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.928281757 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.927278682 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.926241909 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.92875126 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.928157051 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.92720413 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.926748738 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.926706235 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.927768221 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.926677554 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.927548987 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.929901669 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.926957137 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.929498456 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.92827015 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.928590428 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.928436763 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.931285593 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.927619463 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.92780858 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.929073185 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.927587172 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.942261379 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.929355344 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.928777031 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.929373176 seconds)
  done (took 52.025304231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.942628487 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.091351824 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.197808577 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962831028 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.94233871 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.946101903 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.961345425 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.948538768 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.945307779 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.945326603 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.036295019 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.949191475 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.96043226 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.197200184 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.957596838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.942118914 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.942207747 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.941962625 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.097957549 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958418906 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.962359626 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.947205336 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.961461098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.955867199 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.94402986 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942492507 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.946644137 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.420084323 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.952281537 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.036037593 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.986167996 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.967411617 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.393340633 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.207705166 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996534954 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.951334939 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.943227967 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.037736031 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949565949 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.943243462 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.962006038 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949484574 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.195360211 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.433216026 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.958438909 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.945236288 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.429280836 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.04824267 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.985574187 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956523432 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.200619325 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.959780862 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.945042842 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.944254067 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.980367586 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.954645452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.943289101 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.290226206 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.957313683 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.962629786 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.949838054 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.944043193 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.104292836 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.95331874 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.093643291 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.954290686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.951905943 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.945644612 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.202843617 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961356295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.443009547 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.959890387 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.945013498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.036297689 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.100673108 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.458936855 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.958901915 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.107751478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.412552375 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.970498908 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.953383621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.412533188 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.974580394 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.953741387 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.947268718 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.947296226 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.947017001 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.990268437 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.963262778 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.364905024 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.447785257 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.305379887 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.97455898 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.962580639 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947604261 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.292914287 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.956057826 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.946839937 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.194451145 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.452253584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.96132303 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.954751994 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.42778628 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.963394585 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966602086 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.956084186 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.203677762 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.962319614 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.991066783 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.94767745 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.953486728 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.949974077 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.966113818 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.954650137 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.948381372 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.416491012 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.058889422 seconds)
  done (took 241.159662622 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.953365706 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.941975666 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.940429374 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.942629162 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.940646626 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947341293 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.942333323 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.94122349 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.947628516 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.942603592 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.943108182 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.940402537 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.942576224 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.941426246 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.98683593 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.949626742 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.597918055 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.941328806 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.942206926 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.956152997 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.590708088 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.948825905 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.942626278 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.942332458 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.943382586 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.942299268 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.946496209 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.98252234 seconds)
  done (took 169.699067064 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.949738677 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065916272 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.967261948 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.977971721 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.957009005 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.946985623 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.97374511 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.966803845 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.954388113 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.946953816 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947060383 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.010507383 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.961913058 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.049861517 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.980958944 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.980812996 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.054649654 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.956664235 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.947140607 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.948437451 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978916189 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.9440607 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.011568091 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.077753916 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.968354999 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066067388 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.955110153 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.951301303 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.949947904 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.068284353 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.964421283 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.010819095 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.979122319 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.968796601 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.073123821 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.06880597 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.058076476 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.981008411 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.955993502 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.949175785 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.949462325 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.938899514 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067762691 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.969869946 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.952325108 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.059099327 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.969119488 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.951957741 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.960981677 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.949011215 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.96458139 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.970151534 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019000022 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.082876737 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.984422834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.97657892 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976116288 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.239352975 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.963009588 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053127213 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.94413046 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.070026185 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.971622934 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939429312 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.950670849 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.957059408 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.980818046 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.983425233 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.058063216 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.959690106 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.052743542 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.988035792 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.957761909 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.950974177 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.953517789 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.071861507 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.072594757 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.987192292 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989364263 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.983353087 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.947335538 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.95207305 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.941118979 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.969827215 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.956894452 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069873896 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.073142929 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960709869 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.955547987 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.954657765 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.955269647 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.978860524 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078379539 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.989297079 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.051132922 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.021255937 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.027849394 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.96838799 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.96555434 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956377982 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.016334387 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.968701504 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.964751748 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.287575277 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.027262163 seconds)
  done (took 211.264323587 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.424080161 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.008539023 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.010812098 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.266698993 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.377482369 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.841444599 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.003974603 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.0041845 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.026151699 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.19241353 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.078781569 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.021000705 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.990388794 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.975892416 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.00163875 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.023481531 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.011786596 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.328749445 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.1358455 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.105083649 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.98382712 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.272919694 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.319951924 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.404047773 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.038326242 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.356277106 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.6756536 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.256465325 seconds)
  done (took 64.02478526 seconds)
done (took 846.158255083 seconds)
SAVING RESULT...
DONE!
